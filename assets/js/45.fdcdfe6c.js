(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{489:function(t,s,n){"use strict";n.r(s);var a=n(2),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"接口详情"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口详情"}},[t._v("#")]),t._v(" 接口详情")]),t._v(" "),s("h2",{attrs:{id:"_1-配置文件-config-json-及插件方法调用频次"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-配置文件-config-json-及插件方法调用频次"}},[t._v("#")]),t._v(" 1. 配置文件 config.json 及插件方法调用频次")]),t._v(" "),s("h3",{attrs:{id:"_1-1-配置文件config-json属性详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-配置文件config-json属性详解"}},[t._v("#")]),t._v(" 1.1. 配置文件config.json属性详解")]),t._v(" "),s("p",[t._v("在TESSNG.exe相同路径下有一配置文件config.json，文本文件配置了一些重要信息，说明如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n\t"__netfilepath":"xxx.tess",\t\t\n\t"__simuafterload":false,\n\t"__timebycpu":false,\n\t"__writesimuresult":true,\n\t"__custsimubysteps":false\n}\n\n')])])]),s("p",[t._v('"__netfilepath"：指定TESSNG启动后加载的路网文件的全路径名；')]),t._v(" "),s("p",[t._v('"__simuafterload"：指定TESSNG加载路网文件（指定的路网文件或临时空白路网文件）后是否启动仿真；')]),t._v(" "),s("p",[t._v('"__timebycpu"：指定每个仿真周期时间计算依据，是cpu时钟确定的时长（现实时长），还是由仿真精度确定的时长。在线仿真且算力吃紧时可以尝试设置此属性为true；')]),t._v(" "),s("p",[t._v('"__writesimuresult":是否输出仿真结果，默认为true，如果设为false，仿真结束后不会将仿真结果写文件，而且在仿真过程中当车辆驰出路网一段时间后会将车辆回收到可用队列，减少内存占用。')]),t._v(" "),s("p",[t._v('"__custsimubysteps"：设置TESSNG对插件方法调用频次的依据，设为false表示每个计算周期调用一次，即不依据插件端设置的调用频次；设为true时TESSNG依据插件设置的调用频次对插件实现的CustomerSimulator方法进行调用。')]),t._v(" "),s("p",[t._v('C++二次开发环境下，绝大多数情况下"__custsimubysteps"设为false不会影响计算效率。')]),t._v(" "),s("h3",{attrs:{id:"_1-2-插件方法调用频次控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-插件方法调用频次控制"}},[t._v("#")]),t._v(" 1.2. 插件方法调用频次控制")]),t._v(" "),s("p",[t._v("TESSNG调用插件方法的频次是指对插件实现的PyCustomerSimulator接口方法调用频次。")]),t._v(" "),s("p",[t._v('当"__custsimubysteps"设置为True时，'),s("strong",[t._v("默认调用频次比较低，很多低到毫无意义，只为减少调用次数，不至于影响仿真运行效率")]),t._v("。如果某方法被实现，需要对该方法调用频次进行调整。可参见范例。")]),t._v(" "),s("p",[t._v("假设仿真精度是steps，即每秒计算steps次，各方法默认调用频次如下：")]),t._v(" "),s("p",[t._v("1）、车辆相关方法调用频次")]),t._v(" "),s("p",[t._v("计算下一位置前处理方法beforeNextPoint被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次；")]),t._v(" "),s("p",[t._v("具体车辆一个步长计算完成后的处理方法afterStep被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次；")]),t._v(" "),s("p",[t._v("确定是否停止车辆运行并移出路网方法isStopDriving调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次；")]),t._v(" "),s("p",[t._v("2）、驾驶行为相关方法调用频次")]),t._v(" "),s("p",[t._v("TESSNG调用插件方法的频次是指对插件实现的CustomerSimulator接口方法调用频次。")]),t._v(" "),s("p",[t._v("可以在CustomerSimulator::initVehicle(IVehicle *pIVehicle)方法里通过参数IVehicle设置TESSNG对不同方法调用频次。")]),t._v(" "),s("p",[t._v('当"__custsimubysteps"设置为true时，默认调用频次比较低，需要进行适当调整。')]),t._v(" "),s("p",[t._v("假设仿真精度是steps，即每秒计算steps次，默认设置如下：")]),t._v(" "),s("p",[t._v("1）、车辆相关方法调用频次")]),t._v(" "),s("p",[t._v("#是否允许对车辆重绘方法的调用")]),t._v(" "),s("p",[t._v("pIVehicle ->setIsPermitForVehicleDraw(false)")]),t._v(" "),s("p",[t._v("计算下一位置前处理方法beforeNextPoint被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。")]),t._v(" "),s("p",[t._v("计算下一位置方法nextPoint被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。")]),t._v(" "),s("p",[t._v("具体车辆一个步长计算完成后的处理方法afterStep被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。")]),t._v(" "),s("p",[t._v("确定是否停止车辆运行并移出路网方法isStopDriving调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。")]),t._v(" "),s("p",[t._v("2）、驾驶行为相关方法调用频次")]),t._v(" "),s("p",[t._v("重新设置期望速度方法reCalcdesirSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。")]),t._v(" "),s("p",[t._v("计算最大限速方法calcMaxLimitedSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。")]),t._v(" "),s("p",[t._v("计算限制车道方法calcLimitedLaneNumber被调用频次：每steps个仿真周期调用一次，即每秒调用一次。")]),t._v(" "),s("p",[t._v("计算车道限速方法calcSpeedLimitByLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。")]),t._v(" "),s("p",[t._v("计算到限速区距离方法isCalcDistToReduceArea被调用频次：每steps个仿真周期调用一次，即每秒调用一次。")]),t._v(" "),s("p",[t._v("计算安全变道方法calcChangeLaneSafeDist被调用频次：每steps个仿真周期调用一次，即每秒调用一次。")]),t._v(" "),s("p",[t._v("重新计算是否可以左强制变道方法reCalcToLeftLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。")]),t._v(" "),s("p",[t._v("重新计算是否可以右强制变道方法reCalcToRightLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。")]),t._v(" "),s("p",[t._v("重新计算是否可以左自由变道方法reCalcToLeftFreely被调用频次：每steps个仿真周期调用一次，即每秒调用一次。")]),t._v(" "),s("p",[t._v("重新计算是否可以右自由变道方法reCalcToRightFreely被调用频次：每steps个仿真周期调用一次，即每秒调用一次。")]),t._v(" "),s("p",[t._v("计算跟驰类型后处理方法afterCalcTracingType被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。")]),t._v(" "),s("p",[t._v("连接段上汇入到车道前处理方法beforeMergingToLane被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。")]),t._v(" "),s("p",[t._v("重新计算跟驰状态参数方法reSetFollowingType被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。")]),t._v(" "),s("p",[t._v("计算加速度方法calcAcce被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。")]),t._v(" "),s("p",[t._v("重新计算加速度方法reSetAcce被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次")]),t._v(" "),s("p",[t._v("重置车速方法reSetSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次")]),t._v(" "),s("p",[t._v("重新计算角度方法reCalcAngle被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次")]),t._v(" "),s("p",[t._v("计算后续道路前处理方法beforeNextRoad被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。")]),t._v(" "),s("h2",{attrs:{id:"_2-路网基本元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-路网基本元素"}},[t._v("#")]),t._v(" 2. 路网基本元素")]),t._v(" "),s("h3",{attrs:{id:"_2-1-iroadnet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-iroadnet"}},[t._v("#")]),t._v(" 2.1 IRoadNet")]),t._v(" "),s("p",[t._v("路网基本信息接口，设计此接口的目的是为了TESS NG在导入外源路网时能够保存这些路网的属性，如路网中心点坐标、路网大地坐标等。")]),t._v(" "),s("p",[t._v("接口文件：IRoadNet.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("路网ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString netName()")])]),t._v(" "),s("p",[t._v("路网名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString url()")])]),t._v(" "),s("p",[t._v("源数据路径，可以是本地文件，可以是网络地址")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString type()")])]),t._v(" "),s("p",[t._v('来源分类："TESSNG"表示TESSNG自建；"OpenDrive"表示由OpenDrive数据导入；"GeoJson"表示由geojson数据导入')]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString bkgUrl()")])]),t._v(" "),s("p",[t._v("背景路径")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QJsonObject otherAttrs()")])]),t._v(" "),s("p",[t._v("Ø 其它属性json数据"),s("strong",[t._v("QString explain()")])]),t._v(" "),s("p",[t._v("获取路网说明")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPointF centerPoint()")])]),t._v(" "),s("p",[t._v("获取路网中心点位置")]),t._v(" "),s("h3",{attrs:{id:"_2-2-isection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-isection"}},[t._v("#")]),t._v(" 2.2 ISection")]),t._v(" "),s("p",[t._v("路段与连接段的父类接口")]),t._v(" "),s("p",[t._v("接口文件：ISection.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int gtype()")])]),t._v(" "),s("p",[t._v("类型，GLinkType 或 GConnectorType。在文件Plugin/_netitemtype.h中定义了一批常量，每一个数值代表路网上一种元素类型。如：GLinkType代表路段、GConnectorType代表连接段。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isLink()")])]),t._v(" "),s("p",[t._v("是否是路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取ID，如果是Link，id是Link的ID，如果是连接段，id是连接段ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long sectionId()")])]),t._v(" "),s("p",[t._v("获取ID，如果是Link，id是Link的ID，如果是连接段，id是连接段ID+10000000，从而区分路段与连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString name()")])]),t._v(" "),s("p",[t._v("获取Section名称，路段名或连接段名")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setName(QString name)")])]),t._v(" "),s("p",[t._v("设置Section名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal v3z()")])]),t._v(" "),s("p",[t._v("获取Section高程")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal length()")])]),t._v(" "),s("p",[t._v("获取Section长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ILaneObject*> laneObjects()")])]),t._v(" "),s("p",[t._v("车道与“车道连接”的父类接口列表")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pConn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//连接段车道连接列表")]),t._v("\n\t\t\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ILaneObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lConnLaneObjs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tlConnLaneObjs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pConn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("laneObjects")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ILaneObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" pLaneObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" lConnLaneObjs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"上游车道ID"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLaneObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromLaneObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"下游车道ID"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLaneObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLaneObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("ISection* fromSection(long id)")])]),t._v(" "),s("p",[t._v("根据ID获取上游Section。如果当前是路段, id 为 0 返回空指针，否则返回上游指定ID的连接段；如果当前是连接段，id 为 0 返回上游路段，否则返回空指针。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//根据id获取路段5上游id为2的连接段")]),t._v("\nISection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pSectionLink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tISection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pSectionConnector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pSectionLink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromSection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pSectionConnector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pSectionConnector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gtype")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" NetItemType"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("GConnectorType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"路段5上游id为2的section为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pSectionConnector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("ISection* toSection(long id)")])]),t._v(" "),s("p",[t._v("根据ID获取下游 Sction。如果当前是路段, id 为 0 返回空指针，否则返回下游指定ID的连接段；如果当前是连接段，id 为 0 返回下游路段，否则返回空指针。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setOtherAttr(QJsonObject otherAttr)")])]),t._v(" "),s("p",[t._v("设置路段或连接段其它属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink* castToLink()")])]),t._v(" "),s("p",[t._v("转换成ILink，如果当前为连接段则返回空指针")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ISection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lLinksAndConnector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createExampleLinkAndConnector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"信控编辑"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLink1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lLinksAndConnector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("front")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("castToLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("IConnector* castToConnector()")])]),t._v(" "),s("p",[t._v("转换成IConnector，如果当前为路段则返回空指针")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("IConnector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pConn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lLinksAndConnector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("castToConnector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QPolygonF polygon()")])]),t._v(" "),s("p",[t._v("获取Section的多边型轮廓顶点构成的多边形")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int workerKey()")])]),t._v(" "),s("p",[t._v("Worker节点标识，在分布式环境可用")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setWorkerKey(int key)")])]),t._v(" "),s("p",[t._v("设置Worker节点，在分布式环境可用")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int fromWorkerKey()")])]),t._v(" "),s("p",[t._v("上游Worker节点标识，在分布式环境可用")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setFromWorkerKey(int key)")])]),t._v(" "),s("p",[t._v("设置上游Worker节点标识，在分布式环境可用")]),t._v(" "),s("h3",{attrs:{id:"_2-3-ilaneobject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-ilaneobject"}},[t._v("#")]),t._v(" 2.3 ILaneObject")]),t._v(" "),s("p",[t._v("车道与车道连接的父类接口")]),t._v(" "),s("p",[t._v("接口文件：ILaneObject.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int gtype()")])]),t._v(" "),s("p",[t._v("类型，GLaneType或GLaneConnectorType")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isLane()")])]),t._v(" "),s("p",[t._v("是否车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取ID，如果是Lane，id是Lane的ID， 如果是车道连接，id是“车道连接”ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal length()")])]),t._v(" "),s("p",[t._v("获取车道或“车道连接”长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISection* section()")])]),t._v(" "),s("p",[t._v("获取所属的ISection")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILaneObject* fromLaneObject(long id)")])]),t._v(" "),s("p",[t._v("根据ID获取上游 LaneObject。如果当前是车道, id 为 0 返回空指针，否则返回上游指定ID的“车道连接”；如果当前是连接段，id 为 0 返回上游车道，否则返回空指针。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILaneObject* toLaneObject(long id)")])]),t._v(" "),s("p",[t._v("根据ID获取下游 LaneObject。如果当前是车道, id 为 0 返回空指针，否则返回下游指定ID的“车道连接”；如果当前是连接段，id 为 0 返回下游车道，否则返回空指针。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> centerBreakPoints()")])]),t._v(" "),s("p",[t._v("车道或“车道连接”中心线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> leftBreakPoints()")])]),t._v(" "),s("p",[t._v("车道或“车道连接”左侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> rightBreakPoints()")])]),t._v(" "),s("p",[t._v("车道或“车道连接”右侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> centerBreakPoint3Ds()")])]),t._v(" "),s("p",[t._v("车道或“车道连接”中心线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> leftBreakPoint3Ds()")])]),t._v(" "),s("p",[t._v("车道或“车道连接”左侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> rightBreakPoint3Ds()")])]),t._v(" "),s("p",[t._v("车道或“车道连接”右侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> leftBreak3DsPartly(QPointF fromPoint, QPointF toPoint)")])]),t._v(" "),s("p",[t._v("车道或“车道连接”左侧部分断点(三维)集")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromPoint：中心线上某一点作为起点")]),t._v(" "),s("p",[t._v("[in] toPoint：中心线上某一点作为终点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> rightBreak3DsPartly(QPointF fromPoint, QPointF toPoint)")])]),t._v(" "),s("p",[t._v("车道或“车道连接”右侧部分断点(三维)集")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromPoint：中心线上某一点作为起点")]),t._v(" "),s("p",[t._v("[in] toPoint：中心线上某一点作为终点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distToStartPoint(const QPointF p)")])]),t._v(" "),s("p",[t._v("中心线上一点到起点距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distToStartPointWithSegmIndex(const QPointF p, int segmIndex, bool bOnCentLine)")])]),t._v(" "),s("p",[t._v("中心线上一点到起点距离，附加条件是该点所在车道上的分段序号")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] p：当前中心线上点或附近点的坐标")]),t._v(" "),s("p",[t._v("[in] segmIndex：参数p点所在车道上的分段序号")]),t._v(" "),s("p",[t._v("[in] bOnCentLine：参数p点是否在中心线上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool getPointAndIndexByDist(qreal dist, QPointF& outPoint, int& outIndex)")])]),t._v(" "),s("p",[t._v("求中心线起点向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回false，否则返回true")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：中心线起点向前延伸的距离")]),t._v(" "),s("p",[t._v("[out] outPoint：中心线起点向前延伸dist距离后所在点")]),t._v(" "),s("p",[t._v("[out] outIndex：中心线起点向前延伸dist距离后所在分段序号")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//路段5最左侧车道向前延伸140米后所在点及分段序号")]),t._v("\nILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tILaneObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLaneObjLeft "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pLink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("laneObjects")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tQPointF outPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" outIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tqreal dist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("140")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLaneObjLeft "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPointAndIndexByDist")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"路段5最左侧车道向前延伸140米后所在点坐标为：("')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" outPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" outPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('")，分段序号为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" outIndex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("bool getPointByDist(qreal dist, QPointF& outPoint)")])]),t._v(" "),s("p",[t._v("求中心线起点向前延伸dist距离后所在点, 如果目标点不在中心线上返回false，否则返回true")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setOtherAttr(QJsonObject attr)")])]),t._v(" "),s("p",[t._v("设置车道或“车道连接”其它属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILane* castToLane()")])]),t._v(" "),s("p",[t._v("将ILaneObject转换为ILane，如果当前ILaneObject是“车道连接”则返回空指针")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILaneConnector* castToLaneConnector()")])]),t._v(" "),s("p",[t._v("将ILaneObject转换为ILaneConnector，如果当前ILaneObject是车道则返回空指针")]),t._v(" "),s("h3",{attrs:{id:"_2-4-ilink"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-ilink"}},[t._v("#")]),t._v(" 2.4 ILink")]),t._v(" "),s("p",[t._v("路段接口")]),t._v(" "),s("p",[t._v("接口文件：ilink.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int gtype()")])]),t._v(" "),s("p",[t._v("类型，返回GLinkType")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取路段ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal length()")])]),t._v(" "),s("p",[t._v("获取路段长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal width()")])]),t._v(" "),s("p",[t._v("获取路段宽度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal z()")])]),t._v(" "),s("p",[t._v("获取路段高程")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal v3z()")])]),t._v(" "),s("p",[t._v("获取路段高程，过载ISection的方法")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString name()")])]),t._v(" "),s("p",[t._v("获取路段名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setName(QString name)")])]),t._v(" "),s("p",[t._v("设置路段名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString linkType()")])]),t._v(" "),s("p",[t._v("获取路段类型，如：城市主干道、城市次干道、人行道等")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setType(QString type)")])]),t._v(" "),s("p",[t._v("设置路段类型，路段类型有10种，分别为：高速路、城市快速路、匝道、城市主要干道、次要干道、地方街道、非机动车道、人行道、公交专用道和机非共享")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int laneCount()")])]),t._v(" "),s("p",[t._v("获取车道数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("double limitSpeed()")])]),t._v(" "),s("p",[t._v("获取路段最高限速，单位：千米/小时")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setLimitSpeed(qreal speed)")])]),t._v(" "),s("p",[t._v("设置最高限速")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] speed：最高限速，单位：千米/小时")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//以L5路段为例")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("planNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLink5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tqreal minSpeedOfLink5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pLink5"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("minSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("limitSpeed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" minSpeedOfLink5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpLink5"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setLimitSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("static_cast")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("qreal"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("limitSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("qreal minSpeed()")])]),t._v(" "),s("p",[t._v("最低限速，单位：千米/小时")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("qreal minSpeedOfLink5 = pLink5->minSpeed();\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< ILane*> lanes()")])]),t._v(" "),s("p",[t._v("车道接口列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ILaneObject*> laneObjects()")])]),t._v(" "),s("p",[t._v("车道及“车道连接”的接口列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> centerBreakPoints()")])]),t._v(" "),s("p",[t._v("路段中心线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> leftBreakPoints()")])]),t._v(" "),s("p",[t._v("路段左侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> rightBreakPoints()")])]),t._v(" "),s("p",[t._v("路段右侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> centerBreakPoint3Ds()")])]),t._v(" "),s("p",[t._v("路段中心线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> leftBreakPoint3Ds()")])]),t._v(" "),s("p",[t._v("路段左侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> rightBreakPoint3Ds()")])]),t._v(" "),s("p",[t._v("路段右侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IConnector*> fromConnectors()")])]),t._v(" "),s("p",[t._v("上游连接段列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IConnector*> toConnectors()")])]),t._v(" "),s("p",[t._v("下游连接段列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISection* fromSection(long id)")])]),t._v(" "),s("p",[t._v("根据ID获取上游Section。如果当前是路段, id 为 0 返回空指针，否则返回上游指定ID的连接段；如果当前是连接段，id 为 0 返回上游路段，否则返回空指针。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISection* toSection(long id)")])]),t._v(" "),s("p",[t._v("根据ID获取下游 Sction。如果当前是路段, id 为 0 返回空指针，否则返回下游指定ID的连接段；如果当前是连接段，id 为 0 返回下游路段，否则返回空指针。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setOtherAttr(QJsonObject otherAttr)")])]),t._v(" "),s("p",[t._v("设置路段其它属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setLaneTypes(QList< QString> lType)")])]),t._v(" "),s("p",[t._v('设置车道属性，属性类型包括："机动车道"、"机非共享"、"非机动车道"、"公交专用道"')]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setLaneOtherAtrrs(QList< QJsonObject> lAttrs)")])]),t._v(" "),s("p",[t._v("设置车道其它属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distToStartPoint(const QPointF p)")])]),t._v(" "),s("p",[t._v("中心线上一点到起点距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool getPointAndIndexByDist(qreal dist, QPointF& outPoint, int& outIndex)")])]),t._v(" "),s("p",[t._v("求中心线起点向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回false，否则返回true")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：中心线起点向前延伸的距离")]),t._v(" "),s("p",[t._v("[out] outPoint：中心线起点向前延伸dist距离后所在点")]),t._v(" "),s("p",[t._v("[out] outIndex：中心线起点向前延伸dist距离后所在分段序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool getPointByDist(qreal dist, QPointF& outPoint)")])]),t._v(" "),s("p",[t._v("求中心线起点向前延伸dist距离后所在点, 如果目标点不在中心线上返回false，否则返回true")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPolygonF polygon()")])]),t._v(" "),s("p",[t._v("获取路段的多边型轮廓顶点")]),t._v(" "),s("h3",{attrs:{id:"_2-5-ilane"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-ilane"}},[t._v("#")]),t._v(" 2.5 ILane")]),t._v(" "),s("p",[t._v("车道接口")]),t._v(" "),s("p",[t._v("接口文件：ILane.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int gtype()")])]),t._v(" "),s("p",[t._v("类型，车道类型为GLaneType")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取车道ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink *link()")])]),t._v(" "),s("p",[t._v("获取车道所在路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISection* section()")])]),t._v(" "),s("p",[t._v("获取车道所属Section")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal length()")])]),t._v(" "),s("p",[t._v("获取车道长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal width()")])]),t._v(" "),s("p",[t._v("获取车道宽度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int number()")])]),t._v(" "),s("p",[t._v("获取车道序号，从0开始（自外侧往内侧）")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString actionType()")])]),t._v(" "),s("p",[t._v("获取车道的行为类型")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILaneObject* fromLaneObject(long id)")])]),t._v(" "),s("p",[t._v("根据ID获取上游 LaneObject。id 为 0 返回空指针，否则返回上游指定ID的“车道连接")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILaneObject* toLaneObject(long id)")])]),t._v(" "),s("p",[t._v("根据ID获取下游 LaneObject。id 为 0 返回空指针，否则返回下游指定ID的“车道连接”")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> centerBreakPoints()")])]),t._v(" "),s("p",[t._v("获取车道中心点断点集，断点坐标用像素表示")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> leftBreakPoints()")])]),t._v(" "),s("p",[t._v("车道左侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> rightBreakPoints()")])]),t._v(" "),s("p",[t._v("车道右侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> centerBreakPoint3Ds()")])]),t._v(" "),s("p",[t._v("车道中心线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> leftBreakPoint3Ds()")])]),t._v(" "),s("p",[t._v("车道左侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> rightBreakPoint3Ds()")])]),t._v(" "),s("p",[t._v("车道右侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> leftBreak3DsPartly(QPointF fromPoint, QPointF toPoint)")])]),t._v(" "),s("p",[t._v("车道左侧部分断点(三维)集")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromPoint：中心线上某一点作为起点")]),t._v(" "),s("p",[t._v("[in] toPoint：中心线上某一点作为终点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> rightBreak3DsPartly(QPointF fromPoint, QPointF toPoint)")])]),t._v(" "),s("p",[t._v("车道右侧部分断点(三维)集")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromPoint：中心线上某一点作为起点")]),t._v(" "),s("p",[t._v("[in] toPoint：中心线上某一点作为终点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distToStartPoint(const QPointF p)")])]),t._v(" "),s("p",[t._v("中心线上一点到起点距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distToStartPointWithSegmIndex(const QPointF p, int segmIndex = 0, bool bOnCentLine = true)")])]),t._v(" "),s("p",[t._v("中心线上一点到起点距离，附加条件是该点所在车道上的分段序号")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] p：当前中心线上该点坐标")]),t._v(" "),s("p",[t._v("[in] segmIndex：该点所在车道上的分段序号")]),t._v(" "),s("p",[t._v("[in] bOnCentLine：是否在中心线上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool getPointAndIndexByDist(qreal dist, QPointF& outPoint, int& outIndex)")])]),t._v(" "),s("p",[t._v("求中心线起点向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回false，否则返回true")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：中心线起点向前延伸的距离")]),t._v(" "),s("p",[t._v("[out] outPoint：中心线起点向前延伸dist距离后所在点")]),t._v(" "),s("p",[t._v("[out] outIndex：中心线起点向前延伸dist距离后所在分段序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool getPointByDist(qreal dist, QPointF& outPoint)")])]),t._v(" "),s("p",[t._v("求中心线起点向前延伸dist距离后所在点, 如果目标点不在中心线上返回false，否则返回true")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setOtherAttr(QJsonObject attr)")])]),t._v(" "),s("p",[t._v("设置车道其它属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setLaneType(QString type)")])]),t._v(" "),s("p",[t._v("设置车道类型")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v('[in] type：车道类型，选下列几种类型其中一种："机动车道"、"机非共享"、"非机动车道"、"公交专用道"')]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPolygonF polygon()")])]),t._v(" "),s("p",[t._v("获取车道的多边型轮廓顶点")]),t._v(" "),s("h3",{attrs:{id:"_2-6-iconnector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-iconnector"}},[t._v("#")]),t._v(" 2.6 IConnector")]),t._v(" "),s("p",[t._v("连接段接口")]),t._v(" "),s("p",[t._v("接口文件：IConnector.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int gtype()")])]),t._v(" "),s("p",[t._v("类型，连接段类型为GConnectorType")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取连接段ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal length()")])]),t._v(" "),s("p",[t._v("获取连接段长度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal z()")])]),t._v(" "),s("p",[t._v("获取连接段高程")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal v3z()")])]),t._v(" "),s("p",[t._v("获取连接段高程，继承自ISection的方法")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString name()")])]),t._v(" "),s("p",[t._v("获取连接段名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setName(QString name)")])]),t._v(" "),s("p",[t._v("设置连接段名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("Link* fromLink()")])]),t._v(" "),s("p",[t._v("获取起始路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("Link* toLink()")])]),t._v(" "),s("p",[t._v("获取目标路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISection* fromSection(long id)")])]),t._v(" "),s("p",[t._v("根据ID获取上游Section。如果当前是路段, id 为 0 返回空指针，否则返回上游指定ID的连接段；如果当前是连接段，id 为 0 返回上游路段，否则返回空指针。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISection* toSection(long id)")])]),t._v(" "),s("p",[t._v("根据ID获取下游 Sction。如果当前是路段, id 为 0 返回空指针，否则返回下游指定ID的连接段；如果当前是连接段，id 为 0 返回下游路段，否则返回空指针。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal limitSpeed()")])]),t._v(" "),s("p",[t._v("获取最高限速，以起始路段的最高限速作为连接段的最高限速")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal minSpeed()")])]),t._v(" "),s("p",[t._v("获取最低限速，以起始路段的最低限速作为连接段的最低限速")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ILaneConnector*> laneConnectors()")])]),t._v(" "),s("p",[t._v("获取车道连接列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ILaneObject*> laneObjects()")])]),t._v(" "),s("p",[t._v("车道及“车道连接”的接口列表")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pConn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//连接段车道连接列表")]),t._v("\n\t\t\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ILaneObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lConnLaneObjs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tlConnLaneObjs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pConn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("laneObjects")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ILaneObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" pLaneObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" lConnLaneObjs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"上游车道ID"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLaneObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromLaneObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"下游车道ID"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLaneObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLaneObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void setLaneConnectorOtherAtrrs(QList< QJsonObject> lAttrs)")])]),t._v(" "),s("p",[t._v("设置包含的“车道连接”其它属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setOtherAttr(QJsonObject otherAttr)")])]),t._v(" "),s("p",[t._v("设置连接段其它属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPolygonF polygon()")])]),t._v(" "),s("p",[t._v("获取连接段的多边型轮廓顶点")]),t._v(" "),s("h3",{attrs:{id:"_2-7-ilaneconnector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-ilaneconnector"}},[t._v("#")]),t._v(" 2.7 ILaneConnector")]),t._v(" "),s("p",[t._v("“车道连接”接口")]),t._v(" "),s("p",[t._v("接口文件：ILaneConnector.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int gtype()")])]),t._v(" "),s("p",[t._v("类型，GLaneType或GLaneConnectorType，车道连接段为GLaneConnectorType")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取车道连接ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IConnector* connector()")])]),t._v(" "),s("p",[t._v("获取车道连接所在连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISection* section()")])]),t._v(" "),s("p",[t._v("获取车道所属Section")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILane *fromLane()")])]),t._v(" "),s("p",[t._v("上游车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILane *toLane()")])]),t._v(" "),s("p",[t._v("下游车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILaneObject* fromLaneObject(long id)")])]),t._v(" "),s("p",[t._v("根据ID获取上游 LaneObject。id 为 0 返回空指针，否则返回上游指定ID的“车道连接")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pConn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//连接段车道连接列表")]),t._v("\n\t\t\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ILaneObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lConnLaneObjs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tlConnLaneObjs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pConn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("laneObjects")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ILaneObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" pLaneObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" lConnLaneObjs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"上游车道ID"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLaneObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromLaneObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"下游车道ID"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLaneObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLaneObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("ILaneObject* toLaneObject(long id)")])]),t._v(" "),s("p",[t._v("根据ID获取下游 LaneObject。id 为 0 返回空指针，否则返回下游指定ID的“车道连接”")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ILaneObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" pLaneObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" lConnLaneObjs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"上游车道ID"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLaneObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromLaneObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"下游车道ID"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLaneObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLaneObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("qreal length()")])]),t._v(" "),s("p",[t._v("“车道连接”长度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> centerBreakPoints()")])]),t._v(" "),s("p",[t._v("获取“车道连接”中心线断点集，断点坐标用像素表示")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> leftBreakPoints()")])]),t._v(" "),s("p",[t._v("“车道连接”左侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> rightBreakPoints()")])]),t._v(" "),s("p",[t._v("“车道连接”右侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> centerBreakPoint3Ds()")])]),t._v(" "),s("p",[t._v("“车道连接”中心线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> leftBreakPoint3Ds()")])]),t._v(" "),s("p",[t._v("“车道连接”左侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> rightBreakPoint3Ds()")])]),t._v(" "),s("p",[t._v("“车道连接”右侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> leftBreak3DsPartly(QPointF fromPoint, QPointF toPoint)")])]),t._v(" "),s("p",[t._v("“车道连接”左侧部分断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QVector3D> rightBreak3DsPartly(QPointF fromPoint, QPointF toPoint)")])]),t._v(" "),s("p",[t._v("“车道连接”右侧部分断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distToStartPoint(const QPointF p)")])]),t._v(" "),s("p",[t._v("中心线上一点到起点距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distToStartPointWithSegmIndex(const QPointF p, int segmIndex = 0, bool bOnCentLine = true)")])]),t._v(" "),s("p",[t._v("中心线上一点到起点距离，附加条件是该点所在车道上的分段序号")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] p：当前中心线上该点坐标")]),t._v(" "),s("p",[t._v("[in] segmIndex：该点所在车道上的分段序号")]),t._v(" "),s("p",[t._v("[in] bOnCentLine：是否在中心线上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool getPointAndIndexByDist(qreal dist, QPointF& outPoint, int& outIndex)")])]),t._v(" "),s("p",[t._v("求中心线起始point向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回false，否则返回true")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：中心线起点向前延伸的距离")]),t._v(" "),s("p",[t._v("[out] outPoint：中心线起点向前延伸dist距离后所在点")]),t._v(" "),s("p",[t._v("[out] outIndex：中心线起点向前延伸dist距离后所在分段序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool getPointByDist(qreal dist, QPointF& outPoint)")])]),t._v(" "),s("p",[t._v("求中心线起始point向前延伸dist距离后所在点, 如果目标点不在中心线上返回false，否则返回true")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setOtherAttr(QJsonObject attr)")])]),t._v(" "),s("p",[t._v("设置车道连接其它属性")]),t._v(" "),s("h3",{attrs:{id:"_2-8-iconnectorarea"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-iconnectorarea"}},[t._v("#")]),t._v(" 2.8 IConnectorArea")]),t._v(" "),s("p",[t._v("面域接口")]),t._v(" "),s("p",[t._v("接口文件：IConnectorArea.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("面域ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IConnector*> allConnector()")])]),t._v(" "),s("p",[t._v("面域相关所有连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPointF centerPoint()")])]),t._v(" "),s("p",[t._v("面域中心点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int workerKey()")])]),t._v(" "),s("p",[t._v("获取Worker 标识符，分布式环境可用")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setWorkerKey(int key)")])]),t._v(" "),s("p",[t._v("设置 Worker 标识符，分布式环境可用")]),t._v(" "),s("h3",{attrs:{id:"_2-9-idispatchpoint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-idispatchpoint"}},[t._v("#")]),t._v(" 2.9 IDispatchPoint")]),t._v(" "),s("p",[t._v("发车点接口")]),t._v(" "),s("p",[t._v("接口文件：IDispatchPoint.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取发车点ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString name()")])]),t._v(" "),s("p",[t._v("获取发车名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink *link()")])]),t._v(" "),s("p",[t._v("获取发车点所在路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long addDispatchInterval(long vehiCompId, int interval, int vehiCount)")])]),t._v(" "),s("p",[t._v("为发车点增加发点间隔")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("vehicCompId：车型组成ID")]),t._v(" "),s("p",[t._v("interval：时间段，单位：秒")]),t._v(" "),s("p",[t._v("vehiCount：发车数")]),t._v(" "),s("p",[t._v("返回值：")]),t._v(" "),s("p",[t._v("返回发车间隔ID")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建发车点")]),t._v("\n\t\tIDispatchPoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pDp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDispatchPoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pDp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpDp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addDispatchInterval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//200秒400辆车")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void setDynaModified(bool bModified)")])]),t._v(" "),s("p",[t._v("设置是否被动态修改，默认情况下发车信息被动态修改后，整个文件不能保存，以免破坏原有发车设置")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPolygonF polygon()")])]),t._v(" "),s("p",[t._v("获取发车点多边型轮廓的顶点")]),t._v(" "),s("h3",{attrs:{id:"_2-10-idecisionpoint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-idecisionpoint"}},[t._v("#")]),t._v(" 2.10 IDecisionPoint")]),t._v(" "),s("p",[t._v("决策点接口")]),t._v(" "),s("p",[t._v("接口文件：IDecisionPoint.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("决策点ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString name()")])]),t._v(" "),s("p",[t._v("决策点名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink *link()")])]),t._v(" "),s("p",[t._v("决策点所在路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distance()")])]),t._v(" "),s("p",[t._v("距路段起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IRouting*> routings()")])]),t._v(" "),s("p",[t._v("相关决策路径")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setDynaModified(bool bModified)")])]),t._v(" "),s("p",[t._v("设置是否被动态修改，默认情况下发车信息被动态修改后，整个文件不能保存，以免破坏原有发车设置")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] bModified：是否被动态修改，true为被动态修改，false为未被动态修改")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPolygonF polygon()")])]),t._v(" "),s("p",[t._v("决策点多边型轮廓的顶点")]),t._v(" "),s("h3",{attrs:{id:"_2-11-irouting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-11-irouting"}},[t._v("#")]),t._v(" 2.11 IRouting")]),t._v(" "),s("p",[t._v("路径接口")]),t._v(" "),s("p",[t._v("接口文件：IRouting.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("路径ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal calcuLength()")])]),t._v(" "),s("p",[t._v("计算路径长度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ILink*> getLinks()")])]),t._v(" "),s("p",[t._v("获取路段序列")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long deciPointId()")])]),t._v(" "),s("p",[t._v("所属决策点ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool contain(ISection* pRoad)")])]),t._v(" "),s("p",[t._v("根据所给道路判断是否在当前路径上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISection* nextRoad(ISection* pRoad)")])]),t._v(" "),s("p",[t._v("根据所给道路求下一条道路")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pRoad：路段或连接段")]),t._v(" "),s("h3",{attrs:{id:"_2-12-isignallamp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-12-isignallamp"}},[t._v("#")]),t._v(" 2.12 ISignalLamp")]),t._v(" "),s("p",[t._v("信号灯接口")]),t._v(" "),s("p",[t._v("接口文件：isignallamp.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取信号灯ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setName(QString name)")])]),t._v(" "),s("p",[t._v("设置信号灯名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setLampColor(QString colorStr)")])]),t._v(" "),s("p",[t._v("设置信号灯颜色")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v('colorStr：字符串表达的颜色，有四种可选，分别是"红"、"绿"、"黄"、"灰"，，或者是"R"、"G"、"Y"、"grey"。')]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISignalGroup *signalGroup()")])]),t._v(" "),s("p",[t._v("获取信号灯组")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISignalPhase* signalPhase()")])]),t._v(" "),s("p",[t._v("获取相位")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setDistToStart(qreal dist)")])]),t._v(" "),s("p",[t._v("设置信号灯距车道起点（或“车道连接”起点）距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPolygonF polygon()")])]),t._v(" "),s("p",[t._v("获取信号灯多边型轮廓的顶点")]),t._v(" "),s("h3",{attrs:{id:"_2-13-isignalphase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-13-isignalphase"}},[t._v("#")]),t._v(" 2.13 ISignalPhase")]),t._v(" "),s("p",[t._v("信号灯相位")]),t._v(" "),s("p",[t._v("接口文件：ISignalPhase.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("相位ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int number()")])]),t._v(" "),s("p",[t._v("相位序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString phaseName()")])]),t._v(" "),s("p",[t._v("相位名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISignalGroup* signalGroup()")])]),t._v(" "),s("p",[t._v("相位所在信号灯组")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ISignalLamp*> signalLamps()")])]),t._v(" "),s("p",[t._v("相关信号灯列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::ColorInterval> listColor()")])]),t._v(" "),s("p",[t._v("相位灯色列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setColorList(QList< Online::ColorInterval> lColor)")])]),t._v(" "),s("p",[t._v("设置信号灯列表")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lColor：灯色时长信息，包含信号灯颜色和信号灯时长")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以L12路段相位直行信号灯相位为例（ID为7），由红90绿32黄3红25改为红10绿110黄3红28")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("planNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tISignalPhase"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pSignalPhase7OfL12 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findSignalPhase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tOnline"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("ColorInterval "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("redIntervalFront")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"红"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("greenInterval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"绿"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yellowInterval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"黄"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("redIntervalBack")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"红"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tpSignalPhase7OfL12"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setColorList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QList")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("ColorInterval"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" redIntervalFront "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" greenInterval "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" yellowInterval "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" redIntervalBack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void setNumber(int number)")])]),t._v(" "),s("p",[t._v("设置相位序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setPhaseName(QString name)")])]),t._v(" "),s("p",[t._v("设置相位名称")]),t._v(" "),s("h3",{attrs:{id:"_2-14-isignalgroup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-14-isignalgroup"}},[t._v("#")]),t._v(" 2.14 ISignalGroup")]),t._v(" "),s("p",[t._v("信号灯组")]),t._v(" "),s("p",[t._v("接口文件：ISignalGroup.h")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("灯组ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString groupName ()")])]),t._v(" "),s("p",[t._v("灯组名")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int periodTime()")])]),t._v(" "),s("p",[t._v("信号周期 秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long fromTime()")])]),t._v(" "),s("p",[t._v("起始时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long toTime()")])]),t._v(" "),s("p",[t._v("结束时间 单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ISignalPhase*> phases()")])]),t._v(" "),s("p",[t._v("相位列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setName(QString name)")])]),t._v(" "),s("p",[t._v("设置信号灯组名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setPeriodTime(int period)")])]),t._v(" "),s("p",[t._v("设置信号周期")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] period：信号周期，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setFromTime(long time)")])]),t._v(" "),s("p",[t._v("设置起始时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setToTime(long time)")])]),t._v(" "),s("p",[t._v("设置结束时间，单位：秒")]),t._v(" "),s("h3",{attrs:{id:"_2-15-ibusline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-15-ibusline"}},[t._v("#")]),t._v(" 2.15 IBusLine")]),t._v(" "),s("p",[t._v("公交线路接口")]),t._v(" "),s("p",[t._v("接口文件：IBusLine.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取公交线路ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString name()")])]),t._v(" "),s("p",[t._v("线路名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("double length()")])]),t._v(" "),s("p",[t._v("长度,单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int dispatchFreq()")])]),t._v(" "),s("p",[t._v("发车间隔(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int dispatchStartTime()")])]),t._v(" "),s("p",[t._v("发车开始时间(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int dispatchEndTime()")])]),t._v(" "),s("p",[t._v("发车结束时间(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal desirSpeed()")])]),t._v(" "),s("p",[t._v("期望速度(km/h)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int passCountAtStartTime()")])]),t._v(" "),s("p",[t._v("起始载客人数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ILink*> links()")])]),t._v(" "),s("p",[t._v("公交线路经过的路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IBusStation*> stations()")])]),t._v(" "),s("p",[t._v("线路所有站点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IBusStationLine*> stationLines()")])]),t._v(" "),s("p",[t._v("公交站点线路，当前线路相关站点的上下客等参数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setName(QString name)")])]),t._v(" "),s("p",[t._v("设置线路名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setDispatchFreq(int freq)")])]),t._v(" "),s("p",[t._v("设置发车间隔，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setDispatchStartTime(int startTime)")])]),t._v(" "),s("p",[t._v("设置开始发车时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setDispatchEndTime(int endTime)")])]),t._v(" "),s("p",[t._v("设置结束发车时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setDesirSpeed(qreal desirSpeed)")])]),t._v(" "),s("p",[t._v("设置线路的期望速度")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建公交线路")]),t._v("\nIBusLine"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pBusLine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBusLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QList")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLink10 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLink11"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pBusLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpBusLine"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDesirSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void setPassCountAtStartTime(int count)")])]),t._v(" "),s("p",[t._v("设置起始载客人数")]),t._v(" "),s("h3",{attrs:{id:"_2-16-ibusstation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-16-ibusstation"}},[t._v("#")]),t._v(" 2.16 IBusStation")]),t._v(" "),s("p",[t._v("公交站点接口")]),t._v(" "),s("p",[t._v("接口文件：IBusStation.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取公交站点ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString name()")])]),t._v(" "),s("p",[t._v("线路名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int laneNumber()")])]),t._v(" "),s("p",[t._v("公交站点所在车道序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal x()")])]),t._v(" "),s("p",[t._v("位置X")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal y()")])]),t._v(" "),s("p",[t._v("位置Y")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal length()")])]),t._v(" "),s("p",[t._v("长度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int stationType()")])]),t._v(" "),s("p",[t._v("站点类型 1：路边式、2：港湾式")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink* link()")])]),t._v(" "),s("p",[t._v("公交站点所在路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILane* lane()")])]),t._v(" "),s("p",[t._v("公交站点所在车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distance()")])]),t._v(" "),s("p",[t._v("公交站点的起始位置距路段起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setName(QString name)")])]),t._v(" "),s("p",[t._v("设置站点名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setDistToStart(qreal dist)")])]),t._v(" "),s("p",[t._v("设置站点起始点距车道起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：距车道起点距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setLength(qreal length)")])]),t._v(" "),s("p",[t._v("设置长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setType(int type)")])]),t._v(" "),s("p",[t._v("设置站点类型")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] type：站点类型，1 路侧式、2 港湾式")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPolygonF polygon()")])]),t._v(" "),s("p",[t._v("公交站点多边型轮廓的顶点")]),t._v(" "),s("h3",{attrs:{id:"_2-17-ibusstationline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-17-ibusstationline"}},[t._v("#")]),t._v(" 2.17 IBusStationLine")]),t._v(" "),s("p",[t._v("公交站点-线路接口，通过此接口可以获取指定线路某站点运行参数，如靠站时间、下客百分比等，还可以设置部分参数。")]),t._v(" "),s("p",[t._v("接口文件：IBusStationLine.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取公交“站点-线路”ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long stationId()")])]),t._v(" "),s("p",[t._v("公交站点ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long lineId()")])]),t._v(" "),s("p",[t._v("公交线路ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int busParkingTime()")])]),t._v(" "),s("p",[t._v("车辆停靠时间(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal getOutPercent()")])]),t._v(" "),s("p",[t._v("下客百分比")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal getOnTimePerPerson()")])]),t._v(" "),s("p",[t._v("平均每位乘客上车时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal getOutTimePerPerson()")])]),t._v(" "),s("p",[t._v("平均每位乘客下车时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setBusParkingTime(int time)")])]),t._v(" "),s("p",[t._v("设置车辆停靠时间(秒)")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" IBusStationLine"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lStationLine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pBusLine"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stationLines")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("lStationLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tIBusStationLine"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pStationLine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lStationLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("first")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置车辆停靠时间(秒)")]),t._v("\n\t\t\tpStationLine"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setBusParkingTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void setGetOutPercent(qreal percent)")])]),t._v(" "),s("p",[t._v("设置下客百分比")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setGetOnTimePerPerson(qreal time)")])]),t._v(" "),s("p",[t._v("设置平均每位乘客上车时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setGetOutTimePerPerson(qreal time)")])]),t._v(" "),s("p",[t._v("设置平均每位乘客下车时间")]),t._v(" "),s("h3",{attrs:{id:"_2-18-ivehicledrivinfocollector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-18-ivehicledrivinfocollector"}},[t._v("#")]),t._v(" 2.18  IVehicleDrivInfoCollector")]),t._v(" "),s("p",[t._v("数据采集器接口")]),t._v(" "),s("p",[t._v("接口文件：IVehicleDrivInfoCollector.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取采集器ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString collName()")])]),t._v(" "),s("p",[t._v("获取采集器名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool onLink()")])]),t._v(" "),s("p",[t._v("是否在路段上，如果true则connector()返回nullptr")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink* link()")])]),t._v(" "),s("p",[t._v("采集器所在路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IConnector* connector()")])]),t._v(" "),s("p",[t._v("采集器所在连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILane* lane()")])]),t._v(" "),s("p",[t._v("如果采集器在路段上则lane()返回所在车道，laneConnector()返回nullptr")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILaneConnector* laneConnector()")])]),t._v(" "),s("p",[t._v("如果采集器在连接段上则laneConnector返回“车道连接”,lane()返回nullptr")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distToStart()")])]),t._v(" "),s("p",[t._v("采集器距离起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPointF point()")])]),t._v(" "),s("p",[t._v("采集器所在点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long fromTime()")])]),t._v(" "),s("p",[t._v("采集器工作起始时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long toTime()")])]),t._v(" "),s("p",[t._v("采集器工作停止时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long aggregateInterval()")])]),t._v(" "),s("p",[t._v("集计数据时间间隔，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setName(QString name)")])]),t._v(" "),s("p",[t._v("设置采集器名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setDistToStart(qreal dist)")])]),t._v(" "),s("p",[t._v("设置采集器距车道起点（或“车道连接”起点）距离")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：采集器距离车道起点（或“车道连接”起点）的距离，默认单位：像素")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("IVehicleDrivInfoCollector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pCollector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createVehiCollectorOnLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLeftLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将采集器设置到距路段起点400米处")]),t._v("\npCollector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDistToStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void setFromTime(long time)")])]),t._v(" "),s("p",[t._v("设置工作起始时间(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setToTime(long time)")])]),t._v(" "),s("p",[t._v("设置工作结束时间(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setAggregateInterval(int interval)")])]),t._v(" "),s("p",[t._v("设置集计数据时间间隔(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPolygonF polygon()")])]),t._v(" "),s("p",[t._v("获取采集器的多边型轮廓顶点")]),t._v(" "),s("h3",{attrs:{id:"_2-19-ivehiclequeuecounter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-19-ivehiclequeuecounter"}},[t._v("#")]),t._v(" 2.19  IVehicleQueueCounter")]),t._v(" "),s("p",[t._v("排队计数器接口")]),t._v(" "),s("p",[t._v("接口文件：IVehicleQueueCounter.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取计数器ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString counterName()")])]),t._v(" "),s("p",[t._v("获取计数器名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool onLink()")])]),t._v(" "),s("p",[t._v("是否在路段上，如果true则connector()返回nullptr")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink* link()")])]),t._v(" "),s("p",[t._v("计数器所在路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IConnector* connector()")])]),t._v(" "),s("p",[t._v("计数器所在连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILane* lane()")])]),t._v(" "),s("p",[t._v("如果计数器在路段上则lane()返回所在车道，laneConnector()返回nullptr")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILaneConnector* laneConnector()")])]),t._v(" "),s("p",[t._v("如果计数器在连接段上则laneConnector返回“车道连接”,lane()返回nullptr")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distToStart()")])]),t._v(" "),s("p",[t._v("计数器距离起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPointF point()")])]),t._v(" "),s("p",[t._v("计数器所在点")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在路段9最左侧车道100米处创建排队计数器")]),t._v("\nIVehicleQueueCounter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pCounter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createVehiQueueCounterOnLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLeftLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"计数器所在点坐标为：("')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pCounter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("point")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pCounter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("point")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("long fromTime()")])]),t._v(" "),s("p",[t._v("计数器工作起始时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long toTime()")])]),t._v(" "),s("p",[t._v("计数器工作停止时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long aggregateInterval()")])]),t._v(" "),s("p",[t._v("计数集计数据时间间隔，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setName(QString name)")])]),t._v(" "),s("p",[t._v("设置计数器名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setDistToStart(qreal dist)")])]),t._v(" "),s("p",[t._v("设置计数器距车道起点（或“车道连接”起点）距离")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：计数器距离车道起点（或“车道连接”起点）的距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setFromTime(long time)")])]),t._v(" "),s("p",[t._v("设置工作起始时间(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setToTime(long time)")])]),t._v(" "),s("p",[t._v("设置工作结束时间(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setAggregateInterval(int interval)")])]),t._v(" "),s("p",[t._v("设置集计数据时间间隔(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPolygonF polygon()")])]),t._v(" "),s("p",[t._v("获取计数器的多边型轮廓顶点")]),t._v(" "),s("h3",{attrs:{id:"_2-20-ivehicletraveldetector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-20-ivehicletraveldetector"}},[t._v("#")]),t._v(" 2.20  IVehicleTravelDetector")]),t._v(" "),s("p",[t._v("行程时间检测器接口")]),t._v(" "),s("p",[t._v("接口文件：IVehicleTravelDetector.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取检测器ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString detectorName()")])]),t._v(" "),s("p",[t._v("获取检测器名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isStartDetector()")])]),t._v(" "),s("p",[t._v("是否检测器起始点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isOnLink_startDetector()")])]),t._v(" "),s("p",[t._v("检测器起点是否在路段上，如果否，则起点在连接段上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isOnLink_endDetector()")])]),t._v(" "),s("p",[t._v("检测器终点是否在路段上，如果否，则终点在连接段上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink* link_startDetector()")])]),t._v(" "),s("p",[t._v("如果检测器起点在路段上则link_startDetector()返回起点所在路段，laneConnector_startDetector()返回nullptr")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILaneConnector* laneConnector_startDetector()")])]),t._v(" "),s("p",[t._v("如果检测器起点在连接段上则laneConnector_startDetector()返回起点“车道连接”,link_startDetector()返回nullptr")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink* link_endDetector()")])]),t._v(" "),s("p",[t._v("如果检测器终点在路段上则link_endDetector()返回终点所在路段，laneConnector_endDetector()返回nullptr")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILaneConnector* laneConnector_endDetector()")])]),t._v(" "),s("p",[t._v("如果检测器终点在连接段上则laneConnector_endDetector()返回终点“车道连接”,link_endDetector()返回nullptr")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distance_startDetector()")])]),t._v(" "),s("p",[t._v("检测器起点距离所在车道起点或“车道连接”起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distance_endDetector()")])]),t._v(" "),s("p",[t._v("检测器终点距离所在车道起点或“车道连接”起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPointF point_startDetector()")])]),t._v(" "),s("p",[t._v("检测器起点位置")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPointF point_endDetector()")])]),t._v(" "),s("p",[t._v("检测器终点位置")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long fromTime()")])]),t._v(" "),s("p",[t._v("检测器工作起始时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long toTime()")])]),t._v(" "),s("p",[t._v("检测器工作停止时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long aggregateInterval()")])]),t._v(" "),s("p",[t._v("集计数据时间间隔，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setName(QString name)")])]),t._v(" "),s("p",[t._v("设置检测器名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setDistance_startDetector(qreal dist)")])]),t._v(" "),s("p",[t._v("设置检测器起点距车道起点（或“车道连接”起点）距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setDistance_endDetector(qreal dist)")])]),t._v(" "),s("p",[t._v("设置检测器终点距车道起点（或“车道连接”起点）距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setFromTime(long time)")])]),t._v(" "),s("p",[t._v("设置工作起始时间，单位：秒")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" IVehicleTravelDetector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lVehicleTravelDetector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createVehicleTravelDetector_link2link")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("550")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("lVehicleTravelDetector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicleTravelDetector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" detector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" lVehicleTravelDetector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tdetector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setFromTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tdetector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setToTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void setToTime(long time)")])]),t._v(" "),s("p",[t._v("设置工作结束时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setAggregateInterval(int interval)")])]),t._v(" "),s("p",[t._v("设置集计数据时间间隔，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPolygonF polygon_startDetector()")])]),t._v(" "),s("p",[t._v("获取行程时间检测器起始点多边型轮廓的顶点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPolygonF polygon_endDetector()")])]),t._v(" "),s("p",[t._v("获取行程时间检测器终止点多边型轮廓的顶点")]),t._v(" "),s("h3",{attrs:{id:"_2-21-iguidarrow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-21-iguidarrow"}},[t._v("#")]),t._v(" 2.21  IGuidArrow")]),t._v(" "),s("p",[t._v("导向箭头接口")]),t._v(" "),s("p",[t._v("接口文件：IGuidArrow.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取导向箭头ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILane* lane()")])]),t._v(" "),s("p",[t._v("获取导向箭头所在的车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal length()")])]),t._v(" "),s("p",[t._v("获取导向箭头的长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distToTerminal()")])]),t._v(" "),s("p",[t._v("获取导向箭头到的终点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("Online::GuideArrowType arrowType()")])]),t._v(" "),s("p",[t._v("获取导向箭头的类型，导向箭头的类型分为：直行、左转、右转、直行或左转、直行或右转、直行左转或右转、左转或右转、掉头、直行或掉头和左转或掉头")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("IGuidArrow"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pGuideArrow "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGuidArrow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pRightLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" distToTerminal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arrowType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"导向箭头类型为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pGuideArrow"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arrowType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QPolygonF polygon()")])]),t._v(" "),s("p",[t._v("获取导向箭头的多边型轮廓的顶点")]),t._v(" "),s("h3",{attrs:{id:"_2-22-iaccidentzone"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-22-iaccidentzone"}},[t._v("#")]),t._v(" 2.22 IAccidentZone")]),t._v(" "),s("p",[t._v("事故区接口")]),t._v(" "),s("p",[t._v("接口文件：IAccidentZone.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取事故区ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString name()")])]),t._v(" "),s("p",[t._v("获取事故区名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal location()")])]),t._v(" "),s("p",[t._v("获取事故区距所在路段起点的距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal zoneLength()")])]),t._v(" "),s("p",[t._v("获取事故区长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISection* section()")])]),t._v(" "),s("p",[t._v("获取事故区所在的路段或连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long roadId()")])]),t._v(" "),s("p",[t._v("获取事故区所在路段的ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString roadType()")])]),t._v(" "),s("p",[t._v("获取事故区所在的道路类型(路段或连接段)")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取事故区所在的道路类型")]),t._v("\nIAccidentZone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pAccidentZone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createAccidentZone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("accidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pAccidentZone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< ILaneObject*> laneObjects()")])]),t._v(" "),s("p",[t._v("获取事故区占用的车道列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int level()")])]),t._v(" "),s("p",[t._v("事故等级，分4级，默认为未定等级(0级)持续时间未定，事故区不会自动移除，一般事故(1级)持续时间10分钟，普通事故(2)级持续时间1小时，重大事故(3级)持续时间3小时")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long duration()")])]),t._v(" "),s("p",[t._v("事故持续时间，单位：秒。如果值为0，事故持续时间由事故等级决定，大于0则由此值决定")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int needRescue()")])]),t._v(" "),s("p",[t._v("是否需要救援，如果为-1，由事故等级决定，重大事故需要求援，如为0不需救援，如果为1需要救援")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long waitTimeBeforeRescue()")])]),t._v(" "),s("p",[t._v("救援车辆发车时间距事故产生的时间，默认单位：秒，默认60秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int rescueTime()")])]),t._v(" "),s("p",[t._v("救援时间，默认60秒，即救援车辆停靠在事故区旁的时间，单位秒")]),t._v(" "),s("h3",{attrs:{id:"_2-23-iroadworkzone"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-23-iroadworkzone"}},[t._v("#")]),t._v(" 2.23 IRoadWorkZone")]),t._v(" "),s("p",[t._v("施工区接口")]),t._v(" "),s("p",[t._v("接口文件：IRoadWorkZone.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("获取施工区ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString name()")])]),t._v(" "),s("p",[t._v("获取施工区名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal location()")])]),t._v(" "),s("p",[t._v("获取施工区距所在路段起点的距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal zoneLength()")])]),t._v(" "),s("p",[t._v("获取施工区长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal limitSpeed()")])]),t._v(" "),s("p",[t._v("施工区限速（最大车速:像素/秒）")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long sectionId()")])]),t._v(" "),s("p",[t._v("获取施工区所在路段或连接段的ID")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取路段9上施工区所在路段的ID")]),t._v("\nIRoadWorkZone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pWorkZone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRoadWorkZone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"施工区所在路段或连接段ID为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pWorkZone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sectionId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QString sectionName()")])]),t._v(" "),s("p",[t._v("获取施工区所在路段或连接段的名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString sectionType()")])]),t._v(" "),s("p",[t._v("获取施工区所在道路的道路类型，link:路段, connector:连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ILaneObject*> laneObjects()")])]),t._v(" "),s("p",[t._v("获取施工区所占的车道列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long duration()")])]),t._v(" "),s("p",[t._v("施工持续时间，单位：秒。自仿真过程创建后，持续时间大于此值，则移除")]),t._v(" "),s("h2",{attrs:{id:"_3-车辆及驾驶行为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-车辆及驾驶行为"}},[t._v("#")]),t._v(" 3   车辆及驾驶行为")]),t._v(" "),s("h3",{attrs:{id:"_2-1-ivehicle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-ivehicle"}},[t._v("#")]),t._v(" 2.1 IVehicle")]),t._v(" "),s("p",[t._v("车辆接口，用于访问、控制车辆。通过此接口可以读取车辆属性，初始化时设置车辆部分属性，仿真过程读取当前道路情况、车辆前后左右相邻车辆及与它们的距离，可以在车辆未驰出路网时停止车辆运行等。")]),t._v(" "),s("p",[t._v("接口文件：ivehicle.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long id()")])]),t._v(" "),s("p",[t._v("车辆ID，车辆ID的组成方式为 x * 100000 + y，每个发车点的x值不一样，从1开始递增，y是每个发车点所发车辆序号，从1开始递增。第一个发车点所发车辆ID从100001开始递增，第二个发车点所发车辆ID从200001开始递增。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink *startLink()")])]),t._v(" "),s("p",[t._v("车辆进入路网时起始路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long startSimuTime()")])]),t._v(" "),s("p",[t._v("车辆进入路网时起始时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long roadId()")])]),t._v(" "),s("p",[t._v("车辆所在路段或连接段ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void *road()")])]),t._v(" "),s("p",[t._v("道路，如果在路段上返回ILink, 如果在连接段上返回IConnector")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISection* section()")])]),t._v(" "),s("p",[t._v("车辆所在的Section，即路段或连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILaneObject* laneObj()")])]),t._v(" "),s("p",[t._v("Ø 车辆所在的车道或“车道连接”"),s("strong",[t._v("int segmIndex()")])]),t._v(" "),s("p",[t._v("车辆在当前LaneObject上分段序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool roadIsLink()")])]),t._v(" "),s("p",[t._v("车辆所在道路是否路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString roadName()")])]),t._v(" "),s("p",[t._v("道路名")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal initSpeed(qreal speed = -1)")])]),t._v(" "),s("p",[t._v("初始化车速")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] speed：车速，如果大于0，车辆以指定的速度从发车点出发，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void initLane(int laneNumber, qreal dist = -1, qreal speed = -1)")])]),t._v(" "),s("p",[t._v("初始化车辆, laneNumber:车道序号，从0开始；dist，距起点距离，单位像素；speed：车速，像素/秒")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] laneNumber：车道序号，从0开始")]),t._v(" "),s("p",[t._v("[in] dist：距离路段起点距离，单位：像素")]),t._v(" "),s("p",[t._v("[in] speed：起动时的速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化飞机位置")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVehiType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void initLaneConnector(int laneNumber, int toLaneNumber, qreal dist = -1, qreal speed = -1)")])]),t._v(" "),s("p",[t._v("初始化车辆, laneNumber: “车道连接”起始车道在所在路段的序号，从0开始自右往左；"),s("strong",[t._v("toLaneNumber")]),t._v(":“车道连接”目标车道在所在路段的序号，从0开始自右往左， dist，距起点距离，单位像素；speed：车速，像素/秒")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] laneNumber：车道序号，从0开始自右侧至左侧")]),t._v(" "),s("p",[t._v("[in] toLaneNumber：车道序号，从0开始自右侧至左侧")]),t._v(" "),s("p",[t._v("[in] dist：距离路段起点距离，单位：像素")]),t._v(" "),s("p",[t._v("Ø [in] speed：起动时的速度，单位：像素/秒"),s("strong",[t._v("void setVehiType(int code)")])]),t._v(" "),s("p",[t._v("设置车辆类型，车辆被创建时已确定了类型，通过此方法可以改变车辆类型")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] code：车辆类型编码")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setColor(QString color)")])]),t._v(" "),s("p",[t._v("设置车辆颜色")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v('[in] color：颜色RGB，如："#EE0000"')]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal length()")])]),t._v(" "),s("p",[t._v("车辆长度，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setLength(qreal len , bool bRestWidth = false)")])]),t._v(" "),s("p",[t._v("设置车辆长度")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] len：车辆长度，单位：像素")]),t._v(" "),s("p",[t._v("[in] bRestWidth：是否同比例约束宽度，默认为false")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long laneId()")])]),t._v(" "),s("p",[t._v("如果toLaneId() 小于等于0，那么laneId()获取的是当前所在车道ID，如果toLaneId()大于0，则车辆在“车道连接”上，laneId()获取的是上游车道ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long toLaneId()")])]),t._v(" "),s("p",[t._v("下游车道ID。如果小于等于0，车辆在路段的车道上，否则车辆在连接段的“车道连接”上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILane *lane()")])]),t._v(" "),s("p",[t._v("获取当前车道，如果车辆在“车道连接”上，获取的是“车道连接”的上游车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILane *toLane()")])]),t._v(" "),s("p",[t._v("如果车辆在“车道连接”上，返回“车道连接”的下游车道，如果当前不在“车道连接”上，返回空指针")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILaneConnector* laneConnector()")])]),t._v(" "),s("p",[t._v("获取当前“车道连接”，如果在车道上，返回空指针")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long currBatchNumber()")])]),t._v(" "),s("p",[t._v("当前仿真计算批次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int roadType()")])]),t._v(" "),s("p",[t._v("车辆所在道路类型。在文件Plugin/_netitemtype.h中定义了一批常量，每一个数值代表路网上一种元素类型。如：GLinkType代表路段、GConnectorType代表连接段。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal limitMaxSpeed()")])]),t._v(" "),s("p",[t._v("车辆所在路段或连接段最大限速，兼顾到车辆的期望速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal limitMinSpeed()")])]),t._v(" "),s("p",[t._v("车辆所在路段或连接段最小限速，兼顾到车辆的期望速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long vehicleTypeCode()")])]),t._v(" "),s("p",[t._v("车辆类型编码。打开TESSNG，通过菜单“车辆”->“车辆类型”打开车辆类型编辑窗体，可以看到不同类型车辆的编码")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString vehicleTypeName()")])]),t._v(" "),s("p",[t._v("获取车辆类型名，如“小客车”")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString name()")])]),t._v(" "),s("p",[t._v("获取车辆名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IVehicleDriving* vehicleDriving()")])]),t._v(" "),s("p",[t._v("获取车辆驾驶行为接口")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void driving()")])]),t._v(" "),s("p",[t._v("驱动车辆。在每个运算周期，每个在运行的车辆被调用一次该方法")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPointF pos()")])]),t._v(" "),s("p",[t._v("当前位置，横纵坐标单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("float zValue()")])]),t._v(" "),s("p",[t._v("当前高程，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal acce()")])]),t._v(" "),s("p",[t._v("当前加速度，单位：像素/秒^2")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal currSpeed()")])]),t._v(" "),s("p",[t._v("当前速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal angle()")])]),t._v(" "),s("p",[t._v("当前角度，北向0度顺时针")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isStarted()")])]),t._v(" "),s("p",[t._v("是否在运行，如果返回false，表明车辆已驰出路网或尚未上路")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IVehicle *vehicleFront()")])]),t._v(" "),s("p",[t._v("前车")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IVehicle *vehicleRear()")])]),t._v(" "),s("p",[t._v("后车")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IVehicle *vehicleLFront(")])]),t._v(" "),s("p",[t._v("左前车")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IVehicle *vehicleLRear()")])]),t._v(" "),s("p",[t._v("左后车")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IVehicle *vehicleRFront()")])]),t._v(" "),s("p",[t._v("右前车")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IVehicle *vehicleRRear()")])]),t._v(" "),s("p",[t._v("右后车")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal vehiDistFront()")])]),t._v(" "),s("p",[t._v("前车间距，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal vehiSpeedFront()")])]),t._v(" "),s("p",[t._v("前车速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal vehiHeadwayFront()")])]),t._v(" "),s("p",[t._v("距前车时距")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal vehiDistRear()")])]),t._v(" "),s("p",[t._v("后车间距，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal vehiSpeedRear()")])]),t._v(" "),s("p",[t._v("后车速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal vehiHeadwaytoRear()")])]),t._v(" "),s("p",[t._v("距后车时距")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal vehiDistLLaneFront()")])]),t._v(" "),s("p",[t._v("相邻左车道前车间距，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal vehiSpeedLLaneFront()")])]),t._v(" "),s("p",[t._v("相邻左车道前车速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal vehiDistLLaneRear()")])]),t._v(" "),s("p",[t._v("相邻左车道后车间距，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal vehiSpeedLLaneRear(")])]),t._v(" "),s("p",[t._v("相邻左车道后车速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal vehiDistRLaneFront()")])]),t._v(" "),s("p",[t._v("相邻右车道前车间距，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal vehiSpeedRLaneFront()")])]),t._v(" "),s("p",[t._v("相邻右车道前车速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal vehiDistRLaneRear()")])]),t._v(" "),s("p",[t._v("相邻右车道后车间距，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal vehiSpeedRLaneRear()")])]),t._v(" "),s("p",[t._v("相邻右车道后车速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setDynaInfo(void *pDynaInfo)")])]),t._v(" "),s("p",[t._v("设置动态信息")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void *dynaInfo()")])]),t._v(" "),s("p",[t._v("获取动态信息")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> lLaneObjectVertex()")])]),t._v(" "),s("p",[t._v("车道或车道连接中心线内点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IRouting *routing()")])]),t._v(" "),s("p",[t._v("当前路径")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("Vehicle *vehicle()")])]),t._v(" "),s("p",[t._v("车辆")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPicture picture()")])]),t._v(" "),s("p",[t._v("获取车辆图片")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QPolygonF boundingPolygon()")])]),t._v(" "),s("p",[t._v("获取车辆由方向和长度决定的四个拐角构成的多边型")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setTag(long tag)")])]),t._v(" "),s("p",[t._v("设置标签表示的状态")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long tag()")])]),t._v(" "),s("p",[t._v("获取标签表示的状态")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setTextTag(QString text)")])]),t._v(" "),s("p",[t._v("设置文本信息，用于在运行过程保存临时信息，方便开发")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString textTag()")])]),t._v(" "),s("p",[t._v("文本信息，运行过程临时保存的信息，方便开发")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setJsonInfo(QJsonObject info)")])]),t._v(" "),s("p",[t._v("设置json格式数据")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QJsonObject jsonInfo()")])]),t._v(" "),s("p",[t._v("返回json格式数据")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QVariant jsonProperty(QString propName)")])]),t._v(" "),s("p",[t._v("返回json字段值")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setJsonProperty(QString key, QVariant value)")])]),t._v(" "),s("p",[t._v("设置json数据属性")]),t._v(" "),s("h3",{attrs:{id:"_2-2-ivehicledriving"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-ivehicledriving"}},[t._v("#")]),t._v(" 2.2 IVehicleDriving")]),t._v(" "),s("p",[t._v("驾驶行为接口，通过此接口可以控制车辆的左右变道、设置车辆角度，对车辆速度、坐标位置等进行控制，可以在路网中间停止车辆运行，将车辆移出路网，等等。")]),t._v(" "),s("p",[t._v("接口文件：ivehicledriving.h")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IVehicle *vehicle()")])]),t._v(" "),s("p",[t._v("当前驾驶车辆")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long getRandomNumber()")])]),t._v(" "),s("p",[t._v("获取随机数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool nextPoint()")])]),t._v(" "),s("p",[t._v("计算下一点位置，过程包括计算车辆邻车关系、公交车是否进站是否出站、是否变道、加速度、车速、移动距离、跟驰类型、轨迹类型等")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long zeroSpeedInterval()")])]),t._v(" "),s("p",[t._v("当前车速为零持续时间(毫秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isHavingDeciPointOnLink()")])]),t._v(" "),s("p",[t._v("当前是否在路段上且有决策点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int followingType()")])]),t._v(" "),s("p",[t._v("跟驰车辆的类型，即当前车辆前车的类型，分为：0：停车，1: 正常，5：急减速，6：急加速，7：汇入， 8：穿越，9：协作减速，10：协作加速，11：减速待转，12：加速待转")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isOnRouting()")])]),t._v(" "),s("p",[t._v("当前是否在路径上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void stopVehicle()")])]),t._v(" "),s("p",[t._v("停止运行，将车辆移出路网")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal angle()")])]),t._v(" "),s("p",[t._v("旋转角，北向0度顺时针")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setAngle(qreal angle)")])]),t._v(" "),s("p",[t._v("设置车辆旋转角")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] angle：旋转角，一周360度")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//9. 修改车辆航向角，以L5路段为例")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpSecondDevCasesObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mActionControlMethodNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vehicleDriving")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAngle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("45")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QVector3D euler(bool bPositive = false)")])]),t._v(" "),s("p",[t._v("返回车辆欧拉角")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] bPositive：车头方向是否正向计算，如果bPosiDire为false则反向计算")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal desirSpeed()")])]),t._v(" "),s("p",[t._v("当前期望速度，与车辆自身期望速度和道路限速有关，不大于道路限速，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISection* getCurrRoad()")])]),t._v(" "),s("p",[t._v("返回当前所在路段或连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISection* getNextRoad()")])]),t._v(" "),s("p",[t._v("下一路段或连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int differToTargetLaneNumber()")])]),t._v(" "),s("p",[t._v("与目标车道序号的差值，不等于0表示有强制变道意图，大于0有左变道意图，小于0有右变道意图，绝对值大于0表示需要强制变道次数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void toLeftLane("),s("strong",[s("strong",[t._v("bool")]),t._v(" "),s("strong",[t._v("bFource")]),t._v(" "),s("strong",[t._v("=")]),t._v(" "),s("strong",[t._v("false")])]),t._v(")")])]),t._v(" "),s("p",[t._v("左变道")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] bFource：是否强制変道，默认为false")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void toRightLane("),s("strong",[s("strong",[t._v("bool")]),t._v(" "),s("strong",[t._v("bFource")]),t._v(" "),s("strong",[t._v("=")]),t._v(" "),s("strong",[t._v("false")])]),t._v(")")])]),t._v(" "),s("p",[t._v("右变道")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] bFource：是否强制変道，默认为false")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int laneNumber()")])]),t._v(" "),s("p",[t._v("当前车道序号，最右侧序号为0")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void initTrace()")])]),t._v(" "),s("p",[t._v("初始化轨迹")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setTrace(QList< QPointF> &lPoint)")])]),t._v(" "),s("p",[t._v("设置轨迹")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lPoint：轨迹点坐标集合")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void calcTraceLength()")])]),t._v(" "),s("p",[t._v("计算轨迹长度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int tracingType()")])]),t._v(" "),s("p",[t._v("返回轨迹类型，分为：0：跟驰，1：左变道，2：右变道，3：左虚拟変道，4：右虚拟变道，5：左转待转，6：右转待转，7：入湾，8：出湾")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setTracingType(int type)")])]),t._v(" "),s("p",[t._v("设置轨迹类型")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setLaneNumber(int number)")])]),t._v(" "),s("p",[t._v("设置当前车道序号")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] number：车道序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal currDistanceInRoad()")])]),t._v(" "),s("p",[t._v("当前路段或连接段上已行驶距离，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setCurrDistanceInRoad(qreal dist)")])]),t._v(" "),s("p",[t._v("设置当前路段或连接段已行驶距离")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：距离，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setVehiDrivDistance(qreal dist)")])]),t._v(" "),s("p",[t._v("设置当前已行驶总里程")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("Ø [in] dist：总里程，单位：像素"),s("strong",[t._v("qreal getVehiDrivDistance()")])]),t._v(" "),s("p",[t._v("已行驶总里程")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal currDistanceInSegment()")])]),t._v(" "),s("p",[t._v("当前分段已行驶距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setCurrDistanceInSegment(qreal dist)")])]),t._v(" "),s("p",[t._v("设置当前分段已行驶的距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setSegmentIndex(int index)")])]),t._v(" "),s("p",[t._v("设置分段序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setCurrDistanceInTrace(qreal dist)")])]),t._v(" "),s("p",[t._v("设置曲化轨迹上行驶的距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setIndexOfSegmInTrace(int index)")])]),t._v(" "),s("p",[t._v("设置曲化轨迹上的分段序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setChangingTracingType(bool b)")])]),t._v(" "),s("p",[t._v("设置是否改变轨迹，当设为true时会对轨迹初始化，如设轨迹分段序号为0，等")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal currDistance()")])]),t._v(" "),s("p",[t._v("当前时间段移动距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("setX(qreal posX)")])]),t._v(" "),s("p",[t._v("设置横坐标")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] posX：横坐标：单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("setY(qreal posY)")])]),t._v(" "),s("p",[t._v("设置纵坐标")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] posY：纵坐标：单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setV3z(qreal v3z)")])]),t._v(" "),s("p",[t._v("设置高程坐标")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] v3z：高程坐标：单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> changingTrace()")])]),t._v(" "),s("p",[t._v("变轨点集，车辆不在车道中心线或“车道连接”中心线上时的轨迹，如变道过程的轨迹点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal changingTraceLength()")])]),t._v(" "),s("p",[t._v("变轨长度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distToStartPoint(bool fromVehiHead = false, bool bOnCentLine = true)")])]),t._v(" "),s("p",[t._v("在车道或车道连接上到起点距离")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromVehiHead：是否从车头计算，如果为false，从车辆中心点计算，默认值为false")]),t._v(" "),s("p",[t._v("[in] bOnCentLine：当前是否在中心线上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal distToEndpoint(bool fromVehiHead = false)")])]),t._v(" "),s("p",[t._v("在车道或“车道连接”上车辆到终端距离")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromVehiHead：是否从车头计算，如果为false，从车辆中心点计算，默认值为false")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool setRouting(IRouting *pRouting)")])]),t._v(" "),s("p",[t._v("设置路径，外界设置的路径不一定有决策点，可能是临时创建的，如果车辆不在此路径上则设置不成功并返回false")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改车辆路径，将L1路段所有车辆修改为右转路径")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpSecondDevCasesObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mActionControlMethodNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" vehi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" lAllVehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" IDecisionPoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lDecisionPoint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decisionPoints")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tIDecisionPoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pDecisionPointInLink1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IDecisionPoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" pDecisionPoint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" lDecisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pDecisionPoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\tpDecisionPointInLink1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pDecisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" IRouting"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lRoutingsOfDecisionPointInLink1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pDecisionPointInLink1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\tlRoutingsOfDecisionPointInLink1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pDecisionPointInLink1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("routings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("lRoutingsOfDecisionPointInLink1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("routing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" lRoutingsOfDecisionPointInLink1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vehicleDriving")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRouting")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lRoutingsOfDecisionPointInLink1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t\tmRunInfo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"L1路段所有车辆路径修改为右转！"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forRunInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mRunInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("IRouting* routing()")])]),t._v(" "),s("p",[t._v("当前路径")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool moveToLane(ILane* pLane, const qreal dist)")])]),t._v(" "),s("p",[t._v("将车辆移到另一条车道上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLane：目标车道")]),t._v(" "),s("p",[t._v("[in] dist：到目标车道起点距离，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool moveToLaneConnector(ILaneConnector* pLaneConnector, const qreal dist)")])]),t._v(" "),s("p",[t._v("将车辆移到另一条车道连接上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLaneConnector：目标车道")]),t._v(" "),s("p",[t._v("[in] dist：到目标车道起点距离，单位：像素")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//20秒时，移动飞机")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("simuTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//查找飞机和id为1的车道")]),t._v("\n\t\tIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pPlane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVehicle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tILane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pPlane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vehicleDriving")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("moveToLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"移动飞机成功"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("bool move(ILaneObject* pILaneObject, const qreal dist)")])]),t._v(" "),s("p",[t._v("移动车辆到到另一条车道或“车道连接”")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pILaneObject：目标车道或“车道连接”")]),t._v(" "),s("p",[t._v("[in] dist：到目标车道起点距离，单位：像素")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 车辆移动测试时，将L5路段车辆移动过路口的各个车道")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpSecondDevCasesObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mActionControlMethodNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" lAllVehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lAllVehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" nextLink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ILaneObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lNextLinkLaneObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nextLink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("laneObjects")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lAllVehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vehicleDriving")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("move")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lNextLinkLaneObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" lNextLinkLaneObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("static_cast")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\tmRunInfo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"L5路段车辆转移成功！"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forRunInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mRunInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tmpSecondDevCasesObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mActionControlMethodNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_4-tessinterface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-tessinterface"}},[t._v("#")]),t._v(" 4  TessInterface")]),t._v(" "),s("p",[t._v("TessInterface 是TESSN对外暴露的顶级接口，下面有三个子接口：NetInterface、SimuInterface、GuiInterface，分别用于访问或控制路网、仿真过程和用户交互界面。")]),t._v(" "),s("p",[t._v("下面是几个接口方法的说明：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QJsonObject config()")])]),t._v(" "),s("p",[t._v("获取json对象，其中保存了config.json配置文件中的信息。")]),t._v(" "),s("p",[t._v("每次加载路网时会重新加载配置信息，上次通过setConfigProperty()方法设置的属性会在重新加载路网后丢失。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setConfigProperty(QString key, QVariant value)")])]),t._v(" "),s("p",[t._v("设置配置属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void releasePlugins()")])]),t._v(" "),s("p",[t._v("卸载并释放插件")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("NetInterface *netInterface()")])]),t._v(" "),s("p",[t._v("返回用于访问控制路网的接口NetInterface")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("SimuInterface *simuInterface()")])]),t._v(" "),s("p",[t._v("返回用于控制仿真过程的接口SimuInterface")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("GuiInterface *guiInterface()")])]),t._v(" "),s("p",[t._v("返回用于访问控制用户介面的接口GuiInterface")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("Bool loadPluginFromMem()")])]),t._v(" "),s("p",[t._v("从内存加载插件，此方法便于用户基于API进行二次开发。")]),t._v(" "),s("p",[t._v("下面对三个子接口进行详解：")]),t._v(" "),s("h3",{attrs:{id:"_4-1-netinterface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-netinterface"}},[t._v("#")]),t._v(" 4.1 NetInterface")]),t._v(" "),s("p",[t._v("接口文件：netinterface.h")]),t._v(" "),s("p",[t._v("NetInterface是TessInterface的子接口，用于访问、控制路网的接口，通过这个接口可以从文件加载路网、创建路段、连接段、发车点等。")]),t._v(" "),s("p",[t._v("下面对NetInterface接口方法作详细解释。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void openNetFle(QString filePath)")])]),t._v(" "),s("p",[t._v("打开保存在文件中的路网")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] filePath：路网文件全路径名")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("openNetFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QString")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromLocal8Bit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C:/TESSNG/Example/杭州武林门区域路网公交优先方案.tess"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void openNetByNetId(long netId)")])]),t._v(" "),s("p",[t._v("从专业数据库加载路网")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void saveRoadNet()")])]),t._v(" "),s("p",[t._v("保存路网")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString netFilePath()")])]),t._v(" "),s("p",[t._v("获取路网文件全路径名，如果是专业数据保存的路网，返回的是路网ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IRoadNet* roadNet()")])]),t._v(" "),s("p",[t._v("获取路网对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IRoadNet* netAttrs()")])]),t._v(" "),s("p",[t._v("获取路网对象，如果路网是从opendrive导入的，此路网对象可能保存了路网中心点所在的经纬度坐标，以及大地坐标等信息")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v('IRoadNet* setNetAttrs (QString name, QString sourceType = QString("TESSNG"), QPointF centerPoint = QPointF(), QString backgroundUrl = QString(), QJsonObject otherAttrsJson = QJsonObject())')])]),t._v(" "),s("p",[t._v("设置路网基本信息")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] name:路网名称")]),t._v(" "),s("p",[t._v("[in] centerPoint:中心点坐标所在路网，默认为(0,0)，用户也可以将中心点坐标保存到otherAttrsJson字段里")]),t._v(" "),s("p",[t._v("[in] sourceType:数据来源分类，默认为 “TESSNG”，表示路网由TESSNG软件直接创建。取值“OPENDRIVE”，表示路网是经过opendrive路网导入而来")]),t._v(" "),s("p",[t._v("[in] backgroundUrl：底图路径")]),t._v(" "),s("p",[t._v("[in] otherAttrsJson:保存在json对象中的其它属性，如大地坐标等信息。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QGraphicsScene* graphicsScene()")])]),t._v(" "),s("p",[t._v("获取场景对象指针")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QGraphicsView* graphicsView()")])]),t._v(" "),s("p",[t._v("获取视图对象指针")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal sceneScale()")])]),t._v(" "),s("p",[t._v("场景中的像素比，单位：米/像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setSceneSize(qreal w, qreal h)")])]),t._v(" "),s("p",[t._v("设置场景大小，参数w及h分别是场景宽度和高度，单位：米")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal sceneWidth()")])]),t._v(" "),s("p",[t._v("场景宽度，单位：米")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal sceneHeigth()")])]),t._v(" "),s("p",[t._v("场景高度，单位：米")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QByteArray backgroundMap()")])]),t._v(" "),s("p",[t._v("背景图")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ISection*> sections()")])]),t._v(" "),s("p",[t._v("所有Section")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< long> linkIds()")])]),t._v(" "),s("p",[t._v("路段ID集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int linkCount()")])]),t._v(" "),s("p",[t._v("路段数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int QList< ILink*> links()")])]),t._v(" "),s("p",[t._v("路段集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink *findLink(long id)")])]),t._v(" "),s("p",[t._v("根据路段ID查找路段")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据路段ID获取路段")]),t._v("\n\t\tILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLink3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLink10 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLink6 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLink7 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLink8 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("ILane* findLane(long id)")])]),t._v(" "),s("p",[t._v("根据车道ID查找车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILaneConnector* findLaneConnector(long id)")])]),t._v(" "),s("p",[t._v("根据“车道连接”ID查找“车道连接”")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< long> connectorIds()")])]),t._v(" "),s("p",[t._v("连接段ID集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int connectorCount()")])]),t._v(" "),s("p",[t._v("连接段数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IConnector*> connectors()")])]),t._v(" "),s("p",[t._v("连接段集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IConnector *findConnector(long id)")])]),t._v(" "),s("p",[t._v("根据连接段ID查找连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IConnectorArea* findConnectorArea(long id)")])]),t._v(" "),s("p",[t._v("根据面域ID查找面域")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IConnector* findConnectorByLinkIds(long fromLinkId, long toLinkId)")])]),t._v(" "),s("p",[t._v("根据起始路段ID及目标路段ID查找连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILaneConnector * findLaneConnector(long fromLaneId, long toLaneId)")])]),t._v(" "),s("p",[t._v("根据起始车道ID及目标车道ID查找“车道连接”")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int guidArrowCount()")])]),t._v(" "),s("p",[t._v("导向箭头数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< long> guidArrowIds()")])]),t._v(" "),s("p",[t._v("导向箭头ID集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IGuidArrow*> guidArrows()")])]),t._v(" "),s("p",[t._v("导向箭头集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IGuidArrow* findGuidArrow(long id)")])]),t._v(" "),s("p",[t._v("根据ID查询导向箭头")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("int signalLampCount()")])]),t._v(" "),s("p",[t._v("信号灯数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< long> signalLampIds()")])]),t._v(" "),s("p",[t._v("信号灯ID集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ISignalLamp*> signalLamps()")])]),t._v(" "),s("p",[t._v("信号灯集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISignalLamp* findSignalLamp(long id)")])]),t._v(" "),s("p",[t._v("根据信号灯ID查找信号灯")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISignalPhase* findSignalPhase(long id)")])]),t._v(" "),s("p",[t._v("根据信号相位ID查找信号相位")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("ISignalPhase"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  pSignalPhase7OfL12 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findSignalPhase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("int signalGroupCount()")])]),t._v(" "),s("p",[t._v("信号灯组数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< long> signalGroupIds()")])]),t._v(" "),s("p",[t._v("信号灯组ID集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ISignalGroup*> signalGroups()")])]),t._v(" "),s("p",[t._v("信号灯组集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISignalGroup* findSignalGroup(long id)")])]),t._v(" "),s("p",[t._v("根据信号灯组ID查找信号灯组")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IDispatchPoint*> dispatchPoints()")])]),t._v(" "),s("p",[t._v("发车点集。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IDispatchPoint* findDispatchPoint(long id)")])]),t._v(" "),s("p",[t._v("根据发车点ID查找发车点")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] id：发车点ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IBusLine*> buslines()")])]),t._v(" "),s("p",[t._v("公交线路集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IBusLine *findBusline(long buslineId)")])]),t._v(" "),s("p",[t._v("根据公交线路ID查找公交线路")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] buslineId：公交线路ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IBusLine *findBuslineByFirstLinkId(long linkId)")])]),t._v(" "),s("p",[t._v("根据公交线路起始路段ID查找公交线路")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] linkId：公交线路起始段ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IBusStation*> busStations()")])]),t._v(" "),s("p",[t._v("公交站点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IBusStation* findBusStation(long stationId)")])]),t._v(" "),s("p",[t._v("根据公交站点ID查询公交站点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IBusStationLine*> findBusStationLineByStationId(long stationId)")])]),t._v(" "),s("p",[t._v("根据公交站点ID查询相关BusLineStation")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IConnectorArea*> allConnectorArea()")])]),t._v(" "),s("p",[t._v("面域集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> laneCenterPoints(long laneId)")])]),t._v(" "),s("p",[s("strong",[t._v("指定车道中心线断点集")])]),t._v(" "),s("p",[t._v("参数：­")]),t._v(" "),s("p",[t._v("[in]laneId：指定车道ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< QPointF> linkCenterPoints(long linkId)")])]),t._v(" "),s("p",[t._v("指定路段中心线断点集")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in]linkId：指定路段ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool judgeLinkToCross(long linkId)")])]),t._v(" "),s("p",[t._v("判断路段去向是否进入交叉口，以面域是否存在多连接段以及当前路段与后续路段之间的角度为依据")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long getIDByItemName(QString name)")])]),t._v(" "),s("p",[t._v("根据路网元素名获取自增ID")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] name：路网元素名。路网元素名的定义在文件plugin/_netitem.h中定义")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink* createLink(QList< QPointF> lCenterPoint, int laneCount, QString linkName = QString(), bool bAddToScene = true)")])]),t._v(" "),s("p",[t._v("创建路段")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lCenterPoint：路段中心线断点集")]),t._v(" "),s("p",[t._v("[in] laneCount：车道数")]),t._v(" "),s("p",[t._v("[in] linkName：路段名，默认为空，将以路段ID作为路段名")]),t._v(" "),s("p",[t._v("[in] bAddToScene：创建后是否放入路网场景，默认为true")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建两条路段")]),t._v("\n\tQPointF startPoint1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QPointF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Posy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//m2p(数字)后的坐标可以对上原点在中心的坐标，TESSNG中的坐标始终是像素")]),t._v("\n\tQPointF endPoint1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QPointF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Posy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" QPointF"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lPoint1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tlPoint1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" startPoint1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endPoint1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLink1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lPoint1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LinkName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"路段1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tQPointF startPoint2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QPointF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Posy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//m2p(数字)后的坐标可以对上原点在中心的坐标，TESSNG中的坐标始终是像素")]),t._v("\n\tQPointF endPoint2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QPointF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Posy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" QPointF"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lPoint2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tlPoint2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" startPoint2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endPoint2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLink2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lPoint2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LinkName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"路段2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("返回：路段对象指针。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink* createLink3D(QList< QVector3D> lCenterV3, int laneCount, QString linkName = QString(), bool bAddToScene = true)")])]),t._v(" "),s("p",[t._v("创建路段")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lCenterV3：路段中心线断点序列，每个断点都是三维空间的点")]),t._v(" "),s("p",[t._v("[in] laneCount：车道数")]),t._v(" "),s("p",[t._v("[in] linkName：路段名")]),t._v(" "),s("p",[t._v("返回：路段对象指针。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink* createLinkWithLaneWidth(QList< QPointF> lCenterPoint, QList< qreal> lLaneWidth, QString linkName = QString(), bool bAddToScene = true)")])]),t._v(" "),s("p",[t._v("创建路段")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lCenterPoint：路段中心线断点序列")]),t._v(" "),s("p",[t._v("[in] lLaneWidth：车道宽度列表")]),t._v(" "),s("p",[t._v("[in] linkName：路段名")]),t._v(" "),s("p",[t._v("[in] bAddToScene：是否加入场景，默认为true")]),t._v(" "),s("p",[t._v("返回：路段对象指针。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink* createLink3DWithLaneWidth(QList< QVector3D> lCenterV3, QList< qreal> lLaneWidth, QString linkName = QString(), bool bAddToScene = true)")])]),t._v(" "),s("p",[t._v("创建路段")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lCenterV3：路段中心线断点序列，每个断点都是三维空间的点")]),t._v(" "),s("p",[t._v("[in] lLaneWidth：车道宽度列表")]),t._v(" "),s("p",[t._v("[in] linkName：路段名")]),t._v(" "),s("p",[t._v("[in] bAddToScene：是否加入场景，默认为true")]),t._v(" "),s("p",[t._v("返回：路段对象指针。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink* createLink3DWithLanePoints(QList< QVector3D> lCenterLineV3, QList< QMap<QString, QList< QVector3D>>> lanesWithPoints, QString linkName = QString(), bool bAddToScene = true)")])]),t._v(" "),s("p",[t._v("创建路段")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lCenterLineV3：路段中心点集(对应TESSNG路段中心点)，每个[in\\点都是三维空间的")]),t._v(" "),s("p",[t._v("[in] lanesWithPoints：车道数据集合，每个成员是QMap<QString, QList< QVector3D>>类型数据，有三个key，分别是“left”、“center”、“right”、分别表示一条车道左、中、右侧断点序列。")]),t._v(" "),s("p",[t._v("[in] linkName：路段名，默认为路段ID")]),t._v(" "),s("p",[t._v("[in] bAddToScene：是否加入路网，默认true表示加入")]),t._v(" "),s("p",[t._v("返回：路段对象指针")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IConnector* createConnector(long fromLinkId, long toLinkId, QList< int> lFromLaneNumber, QList< int> lToLaneNumber, QString connName = QString(), bool bAddToScene = true)")])]),t._v(" "),s("p",[t._v("创建连接段")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromLinkId：起始路段ID")]),t._v(" "),s("p",[t._v("[in] toLinkId：目标路段ID")]),t._v(" "),s("p",[t._v("[in] lFromLaneNumber：连接段起始车道序号集")]),t._v(" "),s("p",[t._v("[in] LToLaneNumber：连接段目标车道序号集")]),t._v(" "),s("p",[t._v("[in] connName：连接段名，默认为空，将以两条路段的ID连接起来作为名称")]),t._v(" "),s("p",[t._v("[in] bAddToScene：创建后是否放入路网场景，默认为true")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建连接段")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" pLink2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lFromLaneNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QList")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lToLaneNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QList")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tpConn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createConnector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pLink2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lFromLaneNumber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lToLaneNumber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LinkName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"连接段"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("IConnector* createConnector3DWithPoints(long fromLinkId, long toLinkId, QList< int> lFromLaneNumber, QList< int> lToLaneNumber, QList< QMap<QString, QList< QVector3D>>> laneConnectorWithPoints, QString connName = QString(), bool bAddToScene = true);")])]),t._v(" "),s("p",[t._v("创建连接段，创建连接段后将“车道连接”中自动计算的断点集用参数laneConnectorWithPoints断点替换")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromLinkId：起始路段ID")]),t._v(" "),s("p",[t._v("[in] toLinkId：目标路段ID")]),t._v(" "),s("p",[t._v("[in] lFromLaneNumber：起始路段参于连接的车道序号")]),t._v(" "),s("p",[t._v("[in] lToLaneNumber：目标路段参于连接的车道序号")]),t._v(" "),s("p",[t._v("[in] laneConnectorWithPoints：“车道连接”数据列表，成员是QMap<QString, QList< QVector3D>>类型数据，有三种key，分别是“left”、“center”、“right”，表示一条“车道连接”左、中、右侧断点序列")]),t._v(" "),s("p",[t._v("[in] connName：连接段名，默认将起始路段ID和目标路段ID用“_”连接表示连接段名，如“100_101”。")]),t._v(" "),s("p",[t._v("[in] bAddToScene：是否加入到场景，默认为true")]),t._v(" "),s("p",[t._v("返回：连接段对象指针")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IDispatchPoint* createDispatchPoint(ILink *pLink, QString dpName = QString(), bool bAddToScene = true)")])]),t._v(" "),s("p",[t._v("创建发车点")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLink：路段，在其上创建发车点")]),t._v(" "),s("p",[t._v("[in] dpName：发车点名称，默认为空，将以发车点ID作为名称")]),t._v(" "),s("p",[t._v("[in] bAddToScene：创建后是否放入路网场景，默认为true")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建发车点")]),t._v("\n\t\tIDispatchPoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pDp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDispatchPoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pDp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpDp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addDispatchInterval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//200秒400辆车")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("long createVehicleComposition(QString name, QList< Online::VehicleComposition> lVehiComp)")])]),t._v(" "),s("p",[t._v("创建车型组成，如果车型组成名已存在或相关车型编码不存在或相关车型占比小于0则返回-1，否则新建车型组成，并返回车型组成编码")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] name：车型组成名")]),t._v(" "),s("p",[t._v("[in] lVehiComp：不同车型占比列表")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建车辆组成及指定车辆类型")]),t._v("\n\t\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("VehiComposition"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lVehiTypeProportion"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 车型组成：小客车0.3，大客车0.2，公交车0.1，货车0.4")]),t._v("\n\t\tlVehiTypeProportion"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push_back")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Online")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("VehiComposition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tlVehiTypeProportion"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push_back")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Online")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("VehiComposition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tlVehiTypeProportion"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push_back")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Online")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("VehiComposition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tlVehiTypeProportion"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push_back")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Online")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("VehiComposition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" vehiCompositionID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createVehicleComposition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"动态创建车型组成"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lVehiTypeProportion"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehiCompositionID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"车型组成创建成功，id为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" vehiCompositionID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 新建发车点,车型组成ID为动态创建的，600秒发300辆车")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tIDispatchPoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" dp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDispatchPoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\tdp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addDispatchInterval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehiCompositionID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\tbVehiCompositionFlag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("IRouting *shortestRouting(ILink* pFromLink, ILink* pToLink)")])]),t._v(" "),s("p",[t._v("计算最短路径")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pFromLink：起始路段")]),t._v(" "),s("p",[t._v("[in] pToLink：目标路段")]),t._v(" "),s("p",[t._v("返回：最短路径对象，包含经过的路段对象序列")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IRouting *createRouting(QList< ILink*> lILink)")])]),t._v(" "),s("p",[t._v("用连续通达的路段序列创建路径")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lILink：路段对象序列")]),t._v(" "),s("p",[t._v("返回：路径对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IDecisionPoint*> decisionPoints()")])]),t._v(" "),s("p",[t._v("决策点列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IDecisionPoint* findDecisionPoint(long id)")])]),t._v(" "),s("p",[t._v("根据ID查找决策点")]),t._v(" "),s("p",[t._v("[in] id：决策点ID")]),t._v(" "),s("p",[t._v("返回：决策点对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IVehicleDrivInfoCollector*> vehiInfoCollectors()")])]),t._v(" "),s("p",[t._v("所有车辆检测器")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IVehicleDrivInfoCollector* findVehiInfoCollector(long id)")])]),t._v(" "),s("p",[t._v("根据ID查询车辆检测器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] id：车辆检测器ID")]),t._v(" "),s("p",[t._v("返回：车辆检测器对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IVehicleQueueCounter*> vehiQueueCounters()")])]),t._v(" "),s("p",[t._v("所有排队计数器")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IVehicleQueueCounter* findVehiQueueCounter(long id)")])]),t._v(" "),s("p",[t._v("根据ID查询车辆排队计数器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] id：排队计数器ID")]),t._v(" "),s("p",[t._v("返回：排队计数器对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IVehicleTravelDetector*> vehiTravelDetectors()")])]),t._v(" "),s("p",[t._v("所有车辆行程时间检测器，返回列表中的每一个元素是一对行程时间检测器的起始检测器")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IVehicleTravelDetector* findVehiTravelDetector(long id)")])]),t._v(" "),s("p",[t._v("根据ID查询车辆行程时间检测器，返回一对行程时间检测器中起始检测器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] id：行程时间检测器ID")]),t._v(" "),s("p",[t._v("返回：行程时间检测器对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IRouting* findRouting(long id)")])]),t._v(" "),s("p",[t._v("根据路径ID查找路径")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::CrossPoint> crossPoints(ILaneConnector* pLaneConnector)")])]),t._v(" "),s("p",[t._v("当前“车道连接”穿过其它“车道连接”形成的交叉点列表")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLaneConnector：“车道连接”对象")]),t._v(" "),s("p",[t._v("返回：交叉点列表")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前“车道连接”穿过其它“车道连接”形成的交叉点列表")]),t._v("\nILaneConnector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLaneConnector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findConnector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("laneConnectors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("CrossPoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" crossPoints "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("crossPoints")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLaneConnector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("CrossPoint crossPoint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" crossPoints"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"主车道连接，即被交叉的“车道连接”："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" crossPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mpLaneConnector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"交叉点坐标为：("')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" crossPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mCrossPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" crossPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mCrossPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("bool createEmptyNetFile(QString filePath, long dbver = 5)")])]),t._v(" "),s("p",[t._v("创建空白路网")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] filePath：空白路网全路径名")]),t._v(" "),s("p",[t._v("[in] dbver:：数据库版本")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink* createLink3DWithLanePointsAndAttrs(QList< QVector3D> lCenterLineV3, QList< QMap<QString, QList< QVector3D>>> lanesWithPoints, QList< QString> lLaneType, QList< QJsonObject> lAttr = QList< QJsonObject>(), QString linkName = QString(), bool bAddToScene = true)")])]),t._v(" "),s("p",[t._v("创建路段")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lCenterLineV3：路段中心点集(对应TESSNG路段中心点)")]),t._v(" "),s("p",[t._v("[in] lanesWithPoints：车道点集的集合")]),t._v(" "),s("p",[t._v("[in] lLaneType:车道类型集")]),t._v(" "),s("p",[t._v("[in] lAttr:车道附加属性集")]),t._v(" "),s("p",[t._v("[in] linkName：路段名，默认为路段ID,")]),t._v(" "),s("p",[t._v("[in] bAddToScene：是否加入路网，默认true表示加入")]),t._v(" "),s("p",[t._v("返回：路段对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void removeLink(ILink* pLink)")])]),t._v(" "),s("p",[t._v("移除路段，从场景中移除pLink，但不从文件中删除，保存路网后才会从路网文件中删除")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLink：将要移除的路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILink* updateLink(_Link link, QList< _Lane> lLane = QList< _Lane>(), QList< QPointF> lPoint = QList< QPointF>())")])]),t._v(" "),s("p",[t._v("更新路段，更新后返回路段对象")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] link：更新的路段数据")]),t._v(" "),s("p",[t._v("[in] lLink：更新的车道列表数据")]),t._v(" "),s("p",[t._v("[in] lPoint：更新的断点集合")]),t._v(" "),s("p",[t._v("返回：更新后的路段对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void removeConnector(IConnector* pConnector)")])]),t._v(" "),s("p",[t._v("移除连接段，从场景中移除pLink，但不从文件中删除，保存路网后才会从路网文件中删除")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pConnector：连接段对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IConnector* updateConnector(_Connector connector)")])]),t._v(" "),s("p",[t._v("更新连接段，更新后返回连接段对象")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] connector：连接段数据")]),t._v(" "),s("p",[t._v("返回：更新后的连接段对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IGuidArrow* createGuidArrow(ILane* pLane, qreal length, qreal distToTerminal, Online::GuideArrowType arrowType)")])]),t._v(" "),s("p",[t._v("创建导向箭头")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLane:车道")]),t._v(" "),s("p",[t._v("[in] length:长度，默认单位：像素")]),t._v(" "),s("p",[t._v("[in] distToTerminal：到车道终点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("[in] arrowType：箭头类型")]),t._v(" "),s("p",[t._v("返回：导向箭头对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在路段4的最右侧车道上添加直行或右转箭头,导向箭头距离路段起终点不能小于9米")]),t._v("\n\tILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tILane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pRightLane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pLink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lanes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("front")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tqreal length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tqreal distToTerminal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tOnline"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("GuideArrowType arrowType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("GuideArrowType"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("StraightRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pRightLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nIGuidArrow"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pGuideArrow "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGuidArrow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pRightLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" distToTerminal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arrowType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"创建箭头成功，箭头所在车道为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pGuideArrow"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void removeGuidArrow(IGuidArrow *pArrow)")])]),t._v(" "),s("p",[t._v("移除导向箭头")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pArrow：导向箭头对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool removeDispatchPoint(IDispatchPoint* pDispPoint)")])]),t._v(" "),s("p",[t._v("移除发车点")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pDispPoint：发车点对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool createVehicleType(VehicleType _vt)")])]),t._v(" "),s("p",[t._v("创建车型，如果创建成功，会将新创建的车辆类型存放到全局数据里供使用")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] vt：车辆类型数据")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool removeVehicleComposition(long vehiCompId)")])]),t._v(" "),s("p",[t._v("移除车型组成")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] vehiCompId：车型组成ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IDecisionPoint* createDecisionPoint(ILink* pLink, qreal distance, QString name = QString())")])]),t._v(" "),s("p",[t._v("创建决策点")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLink：决策点所在的路段")]),t._v(" "),s("p",[t._v("[in] distance：决策点距离路段起点的距离，默认单位：像素")]),t._v(" "),s("p",[t._v("[in] name：决策点的名称")]),t._v(" "),s("p",[t._v("返回：决策点对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建决策点")]),t._v("\n\t\tmpDecisionPoint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDecisionPoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("IRouting* createDeciRouting(IDecisionPoint *pDeciPoint, QList< ILink*> lILink)")])]),t._v(" "),s("p",[t._v("创建决策路径")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pDeciPoint：决策点")]),t._v(" "),s("p",[t._v("[in] lILink：决策路径所包含的路段集合")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建路径(左，直，右)")]),t._v("\n\t\tIRouting"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" decisionRoutingLeft "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDeciRouting")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpDecisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QList")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLink3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLink10 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLink6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tIRouting"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" decisionRoutingStraight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDeciRouting")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpDecisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QList")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLink3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLink10 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLink8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tIRouting"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" decisionRoutingRight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDeciRouting")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpDecisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QList")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLink3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLink10 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLink7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("bool removeDeciRouting(IDecisionPoint* pDeciPoint, IRouting* pRouting)")])]),t._v(" "),s("p",[t._v("删除决策路径")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pDeciPoint：决策点")]),t._v(" "),s("p",[t._v("[in] pRouting：将要删除的路径")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeDeciRouting")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpDecisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mpDecisionPoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("routings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tbPlanNumberFlag2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"删除右转路径成功"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("IDecisionPoint* updateDecipointPoint(_DecisionPoint deciPoint, QList< _RoutingFLowRatio> lFlowRatio = QList< _RoutingFLowRatio>())")])]),t._v(" "),s("p",[t._v("更新决策点及其各路径不同时间段流量比")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] deciPoint：决策点数据")]),t._v(" "),s("p",[t._v("[in] lFlowRatio：各路径按时间段流量比的数据集合")]),t._v(" "),s("p",[t._v("返回：更新后的决策点")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//分配左直右流量比")]),t._v("\n\t\t_RoutingFLowRatio _flowRatioLeft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _flowRatioStraight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _flowRatioRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_flowRatioLeft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RoutingFLowRatioID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_flowRatioLeft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("routingID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decisionRoutingLeft"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_flowRatioLeft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startDateTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_flowRatioLeft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endDateTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_flowRatioLeft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ratio "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_flowRatioStraight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RoutingFLowRatioID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_flowRatioStraight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("routingID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decisionRoutingStraight"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_flowRatioStraight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startDateTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_flowRatioStraight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endDateTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_flowRatioStraight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ratio "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_flowRatioRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RoutingFLowRatioID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_flowRatioRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("routingID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decisionRoutingRight"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_flowRatioRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startDateTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_flowRatioRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endDateTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_flowRatioRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ratio "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 决策点数据")]),t._v("\n\t\t_DecisionPoint _decisionPointData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_decisionPointData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deciPointID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mpDecisionPoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t_decisionPointData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deciPointName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mpDecisionPoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tQPointF decisionPointPos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpDecisionPoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPointByDist")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpDecisionPoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("distance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" decisionPointPos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t_decisionPointData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("X "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decisionPointPos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t_decisionPointData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decisionPointPos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t_decisionPointData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mpDecisionPoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("link")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("z")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//更新决策点及其各路径不同时间段流量比")]),t._v("\n\t\tmpDecisionPoint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateDecipointPoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_decisionPointData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QList")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" _RoutingFLowRatio"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" _flowRatioLeft "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" _flowRatioStraight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" _flowRatioRight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("IVehicleDrivInfoCollector* createVehiCollectorOnLink(ILane* pLane, qreal dist)")])]),t._v(" "),s("p",[t._v("在路段的车道上创建车辆采集器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLane：车道对象")]),t._v(" "),s("p",[t._v("[in] dist：路车道起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("返回：车辆采集器")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在路段9最左侧车道100米处创建车辆采集器")]),t._v("\nILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tILane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLeftLane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pLink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lanes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tqreal dist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tIVehicleDrivInfoCollector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pCollector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createVehiCollectorOnLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLeftLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("IVehicleDrivInfoCollector* createVehiCollectorOnConnector(ILaneConnector* pLaneConnector, qreal dist)")])]),t._v(" "),s("p",[t._v("在连接段的“车道连接”上创建采集器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLaneConnector：“车道连接”对象")]),t._v(" "),s("p",[t._v("[in] dist：距“车道连接”起点距离，单位像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool removeVehiCollector(IVehicleDrivInfoCollector* pCollector)")])]),t._v(" "),s("p",[t._v("移除车辆信息采集器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pCollector：车辆信息采集器")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IVehicleQueueCounter* createVehiQueueCounterOnLink(ILane* pLane, qreal dist)")])]),t._v(" "),s("p",[t._v("在路段的车道上创建车辆排队计数器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLane：车道对象")]),t._v(" "),s("p",[t._v("[in] dist：默认单位：像素")]),t._v(" "),s("p",[t._v("返回：排队计数器对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在路段9最左侧车道100米处创建排队计数器")]),t._v("\nILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tILane"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLeftLane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pLink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lanes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tqreal dist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tIVehicleQueueCounter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pCounter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createVehiQueueCounterOnLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLeftLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("IVehicleQueueCounter* createVehiQueueCounterOnConnector(ILaneConnector* pLaneConnector, qreal dist)")])]),t._v(" "),s("p",[t._v("在连接段的车道连接上创建车辆排队计数器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLaneConnector：“车道连接”对象")]),t._v(" "),s("p",[t._v("[in] dist：距“车道连接”起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("返回：排队计数器对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IVehicleTravelDetector*> createVehicleTravelDetector_link2link(ILink* pStartLink, ILink* pEndLink, qreal dist1, qreal dist2)")])]),t._v(" "),s("p",[t._v("创建行程时间检测器，起点和终点都在路段上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist1：检测器起点距所在路段起始点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("[in] dist2：检测器终点距所在路段起始点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在路段9 50-550米处创建行程检测器")]),t._v("\nILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pLink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" IVehicleTravelDetector"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" pDetector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createVehicleTravelDetector_link2link")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("550")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< IVehicleTravelDetector*> createVehicleTravelDetector_link2conn(ILink* pStartLink, ILaneConnector* pEndLaneConnector, qreal dist1, qreal dist2)")])]),t._v(" "),s("p",[t._v("创建行程时间检测器，起点在路段上，终点都在连接段的“车道连接”上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pStartLink：检测器起点所在路段对象")]),t._v(" "),s("p",[t._v("[in] pEndLaneConnector：检测器终点所在“车道连接”对象")]),t._v(" "),s("p",[t._v("[in] dist1：检测器起点距所在路段起始点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("[in] dist2：检测器终点距所在“车道连接”起始点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("返回：行程时间检测器对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IVehicleTravelDetector*> createVehicleTravelDetector_conn2link(ILaneConnector* pStartLaneConnector, ILink* pEndLink, qreal dist1, qreal dist2)")])]),t._v(" "),s("p",[t._v("创建行程时间检测器，起点在连接段的“车道连接”上，终点在路段上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pStartLaneConnector：检测器起点所在“车道连接”对象")]),t._v(" "),s("p",[t._v("[in] pEndLink：检测器终点所在路段对象")]),t._v(" "),s("p",[t._v('[in] dist1：检测器起点距所在"车道连接”起始点距离，默认单位：像素')]),t._v(" "),s("p",[t._v("[in] dist2：检测器终点距所在路段起始点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("返回：行程时间检测器对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IVehicleTravelDetector*> createVehicleTravelDetector_conn2conn(ILaneConnector* pStartLaneConnector, ILaneConnector* pEndLaneConnector, qreal dist1, qreal dist2)")])]),t._v(" "),s("p",[t._v("创建行程时间检测器，起点和终点都在连接段的“车道连接”上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pStartLaneConnector：检测器起点所在“车道连接”对象")]),t._v(" "),s("p",[t._v("[in] pEndLaneConnector：检测器终点所在“车道连接”对象")]),t._v(" "),s("p",[t._v('[in] dist1：检测器起点距所在"车道连接”起始点距离，默认单位：像素')]),t._v(" "),s("p",[t._v("[in] dist2：检测器终点距所在“车道连接”起始点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("返回：行程时间检测器对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISignalGroup* createSignalGroup(QString name, int period, long fromTime, long toTime)")])]),t._v(" "),s("p",[t._v("创建信号灯组")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] name：灯组名称")]),t._v(" "),s("p",[t._v("[in] period：周期，默认单位：秒")]),t._v(" "),s("p",[t._v("[in] fromTime：起始时间，默认单位：秒")]),t._v(" "),s("p",[t._v("[in] toTime:结束时间,默认单位：秒")]),t._v(" "),s("p",[t._v("返回：信号灯组对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建信号灯组")]),t._v("\n\tISignalGroup"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pSignalGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createSignalGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QObject")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"信号灯组1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("ISignalPhase* createSignalPhase(ISignalGroup* pGroup, QString name, QList< Online::ColorInterval> lColor)")])]),t._v(" "),s("p",[t._v("创建相位")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pGroup：信号灯组")]),t._v(" "),s("p",[t._v("[in] name：相位名称")]),t._v(" "),s("p",[t._v("[in] lColor：相位灯色序列，新建相位排在已有相位序列的最后")]),t._v(" "),s("p",[t._v("返回：信号相位对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建相位,40秒绿灯，黄灯3秒，全红3秒")]),t._v("\n\tOnline"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("ColorInterval "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("green")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"绿"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yellow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"黄"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("red")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"红"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tISignalPhase"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pSignalPhase "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createSignalPhase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pSignalGroup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QObject")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"信号灯组1相位1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QList")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("ColorInterval"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" green "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" yellow "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void removeSignalPhase(ISignalGroup* pGroup, long phaseId)")])]),t._v(" "),s("p",[t._v("移除已有相位，相位移除后，原相位序列自动重排,")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pGroup：信号灯组对象")]),t._v(" "),s("p",[t._v("[in] phaseId：将要移除的相位ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ISignalLamp* createSignalLamp(ISignalPhase* pPhase, QString name, long laneId, long toLaneId, qreal distance)")])]),t._v(" "),s("p",[t._v("创建信号灯")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pPhase：相位对象")]),t._v(" "),s("p",[t._v("[in] name：信号灯名称")]),t._v(" "),s("p",[t._v("[in] laneId：信号灯所在车道ID，或所在“车道连接”上游车道ID")]),t._v(" "),s("p",[t._v("[in] toLaneId：信号灯所在“车道连接”下游车道ID")]),t._v(" "),s("p",[t._v("[in] distance：信号灯距车道或“车道连接”起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("返回：信号灯对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建信号灯")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lConnLaneObjs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tISignalLamp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pSignalLamp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createSignalLamp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pSignalPhase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QObject")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"信号灯%1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lConnLaneObjs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromLaneObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  lConnLaneObjs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLaneObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("IBusLine* createBusLine(QList< ILink*> lLink)")])]),t._v(" "),s("p",[t._v("创建公交线路，lLink列表中相邻两路段可以是路网上相邻两路段，也可以不相邻，如果不相邻，TESSNG会在它们之间创建一条最短路径。如果lLink列表中相邻路段在路网上不相邻并且二者之间不存在最短路径，则相邻的第二条路段及后续路段无效。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lLink，公交线路经过的路段对象集")]),t._v(" "),s("p",[t._v("返回：公交线路对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建公交线路")]),t._v("\nIBusLine"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pBusLine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBusLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QList")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLink10 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLink11"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pBusLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpBusLine"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDesirSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("bool removeBusLine(IBusLine* pBusLine)")])]),t._v(" "),s("p",[t._v("移除公交线路")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pBusLine：将要移除的公交线路对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IBusStation* createBusStation(ILane* pLane, qreal length, qreal dist, QString name = QString())")])]),t._v(" "),s("p",[t._v("创建公交站点")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLane：车道")]),t._v(" "),s("p",[t._v("[in] length:站点长度(单位像素)")]),t._v(" "),s("p",[t._v("[in] dist:站点起始点距车道起点距离(单位像素)")]),t._v(" "),s("p",[t._v("返回：公交站点对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建公交线路")]),t._v("\nIBusLine"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pBusLine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBusLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QList")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ILink"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLink10 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pLink11"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pBusLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpBusLine"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDesirSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tIBusStation"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pBusStation1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBusStation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink10"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lanes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"公交站1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tIBusStation"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pBusStation2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBusStation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pLink11"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lanes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"公交站2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("bool removeBusStation(IBusStation* pStation)")])]),t._v(" "),s("p",[t._v("移除公交站点")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pStation：公交站点对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool addBusStationToLine(IBusLine* pBusLine, IBusStation* pStation)")])]),t._v(" "),s("p",[t._v("将公交站点关联到公交线路上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pBusLine：公交线路")]),t._v(" "),s("p",[t._v("[in] pStation：公交站点")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建公交线路")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pBusStation1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addBusStationToLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pBusLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pBusStation1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tpBusStation1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"公交站1已关联到公交线路"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pBusStation2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addBusStationToLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pBusLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pBusStation2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"公交站2已关联到公交线路"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("bool removeBusStationFromLine(IBusLine* pBusLine, IBusStation* pStation)")])]),t._v(" "),s("p",[t._v("将公交站点与公交线路的关联关系解除")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pBusLine：公交线路")]),t._v(" "),s("p",[t._v("[in] pStation：公交站点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool initSequence(QString schemaName = QString())")])]),t._v(" "),s("p",[t._v("初始化数据库序列，对保存路网的专业数据库序列进行初始化，目前支持PostgreSql")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] schemaName：数据库的schema名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void addCustomerItem(CustomerGraphicsObject* pCustObj)")])]),t._v(" "),s("p",[t._v("将客户路网元素添加到场景")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pCustObj：客户定义的路网元素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void removeCustomerItem(CustomerGraphicsObject* pCustObj)")])]),t._v(" "),s("p",[t._v("从场景移除客户路网元素")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pCustObj：将要移除的路网元素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void buildNetGrid(qreal width = 25)")])]),t._v(" "),s("p",[t._v("路网的网格化")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] width：单元格宽度，默认单位：米")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ISection*> findSectionOn1Cell(QPointF point)")])]),t._v(" "),s("p",[t._v("根据point查询所在单元格所有经过的ISection")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] point：路网场景中的点")]),t._v(" "),s("p",[t._v("返回：ISection列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ISection*> findSectionOn4Cell(QPointF point)")])]),t._v(" "),s("p",[t._v("根据point查询最近4个单元格所有经过的ISection")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] point：路网场景中的一个点")]),t._v(" "),s("p",[t._v("返回：ISection列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ISection*> findSectionOn9Cell(QPointF point)")])]),t._v(" "),s("p",[t._v("根据point查询最近9个单元格所有经过的ISection")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] point：路网场景中的一个点")]),t._v(" "),s("p",[t._v("返回：ISection列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::Location> locateOnSections(QPointF point, QList< ISection*> lSection, qreal referDistance = 0)")])]),t._v(" "),s("p",[t._v("根据point对lSection列表中每一个Section所有LaneObject求最短距离，返回Location列表，列表按最短距离排序，从小到大")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] point：路网场景中的一个点")]),t._v(" "),s("p",[t._v("[in] lSection：section列表")]),t._v(" "),s("p",[t._v("[in] referDistance：LaneObject上与point最近的点到LaneObject起点距离，默认单位：像素，是大约数，只为提高计算效率，默认值为0")]),t._v(" "),s("p",[t._v("返回：Online::Location列表")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//根据point对lSection列表中每一个Section所有LaneObject求最短距离")]),t._v("\nQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" ISection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lSections "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sections")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tQPointF "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("point")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Location"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" locations "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("locateOnSections")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lSections"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Location"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" locations"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"相关车道或“车道连接”为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pLaneObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pLaneObject上的最近点为：("')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"到最近点的最短距离为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("leastDist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"最近点到起点的里程："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("distToStart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"最近点所在分段序号："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("segmIndex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::Location> locateOnCrid(QPointF point, int cellCount = 1)")])]),t._v(" "),s("p",[t._v("point周围若干个单元格里查询LaneObject")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] point：路网场景中的一个点")]),t._v(" "),s("p",[t._v("[in] cellCount：单元格数，小于1时默认为1，大于1小于4时默认为4，大于4时默认为9")]),t._v(" "),s("p",[t._v("返回：Online::Location列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QRectF boundingRect()")])]),t._v(" "),s("p",[t._v("路网外围Rect，用以获取路网边界")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IRoadWorkZone* createRoadWorkZone(Online::DynaRoadWorkZoneParam param)")])]),t._v(" "),s("p",[t._v("创建施工区")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] param：动态施工区信息，数据类型在文件 Plugin/_datastruct.h中定义")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("DynaRoadWorkZoneParam workZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//道路ID")]),t._v("\nworkZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//施工区名称")]),t._v("\nworkZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"施工区，限速60"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//位置，距路段或连接段起点距离，单位米")]),t._v("\nworkZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//施工区长度，单位米")]),t._v("\nworkZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//车辆经过施工区的最大车速，单位千米/小时")]),t._v("\nworkZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("limitSpeed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//施工区施工时长，单位秒")]),t._v("\nworkZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("duration "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//施工区起始车道")]),t._v("\nworkZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mlFromLaneNumber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建施工区")]),t._v("\nIRoadWorkZone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pZone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRoadWorkZone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void removeRoadWorkZone(IRoadWorkZone* pIRoadWorkZone)")])]),t._v(" "),s("p",[t._v("移除施工区")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("Ø [in] pIRoadWorkZone：将要移除的施工区对象"),s("strong",[t._v("QList< IRoadWorkZone*> roadWorkZones()")])]),t._v(" "),s("p",[t._v("Ø 获取所有施工区"),s("strong",[t._v("IRoadWorkZone* findRoadWorkZone(long roadWorkZoneId)")])]),t._v(" "),s("p",[t._v("根据ID查询施工区")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] roadWorkZoneId：施工区ID")]),t._v(" "),s("p",[t._v("返回：施工区对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IAccidentZone* createAccidentZone(Online::DynaAccidentZoneParam param)")])]),t._v(" "),s("p",[t._v("创建事故区")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] param：动态事故区信息，数据类型在文件 Plugin/_datastruct.h中定义")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("DynaAccidentZoneParam accidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//道路ID")]),t._v("\n\taccidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//事故区名称")]),t._v("\n\taccidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"最左侧车道发生事故"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//位置，距路段或连接段起点距离，单位米")]),t._v("\n\taccidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//事故区长度，单位米")]),t._v("\n\taccidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//事故区起始车道序号列表")]),t._v("\n\taccidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mlFromLaneNumber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//事故等级")]),t._v("\n\taccidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("level "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建事故区")]),t._v("\n\tIAccidentZone"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pZone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createAccidentZone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("accidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void removeAccidentZone(IAccidentZone* pIAccidentZone)")])]),t._v(" "),s("p",[t._v("移除事故区")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IAccidentZone*> accidentZones()")])]),t._v(" "),s("p",[t._v("获取所有事故区")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IAccidentZone* findAccidentZone(long accidentZoneId)")])]),t._v(" "),s("p",[t._v("根据ID查询事故区")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] accidentZoneId：事故区ID")]),t._v(" "),s("h3",{attrs:{id:"_4-2-simuinterface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-simuinterface"}},[t._v("#")]),t._v(" 4.2 SimuInterface")]),t._v(" "),s("p",[t._v("接口文件： simuinterface.h")]),t._v(" "),s("p",[t._v("SimuInterface是TessInterface的子接口， 通过此接口可以启动、暂停、停止仿真，可以设置仿真精度，获取仿真过程车辆对象、车辆状态（包括位置信息），获取几种检测器检测的样本数据和集计数据，等等。")]),t._v(" "),s("p",[t._v("下面对SimuInterface接口方法作详细解释。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool byCpuTime()")])]),t._v(" "),s("p",[t._v("仿真时间是否由现实时间确定。")]),t._v(" "),s("p",[t._v("一个计算周期存在两种时间，一种是现实经历的时间，另一种是由仿真精度决定的仿真时间，如果仿真精度为每秒20次，仿真一次相当于仿真了50毫秒。默认情况下，一个计算周期的仿真时间是由仿真精度决定的。在线仿真时如果算力不够，按仿真精度确定的仿真时间会与现实时间存在时差。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setByCpuTime(bool bByCpuTime)")])]),t._v(" "),s("p",[t._v("设置是否由现实时间确定仿真时间，如果设为true，每个仿真周期现实经历的时间作为仿真时间，这样仿真时间与现实时间相吻合。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] bByCpuTime：是否由现实时间确定仿真时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void startSimu()")])]),t._v(" "),s("p",[t._v("启动仿真")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n\t'''1. 启动、暂停、恢复、停止仿真'''\n\t*/")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("planNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tgpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("startSimu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("planNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tgpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pauseSimu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("planNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tgpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopSimu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("planNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tgpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pauseSimuOrNot")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void pauseSimu()")])]),t._v(" "),s("p",[t._v("暂停仿真")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void stopSimu()")])]),t._v(" "),s("p",[t._v("停止仿真运行")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void pauseSimuOrNot()")])]),t._v(" "),s("p",[t._v("暂停或恢复仿真。如果当前处于仿真运行状态，此方法暂停仿真，如果当前处于暂停状态，此方法继续仿真")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isRunning()")])]),t._v(" "),s("p",[t._v("仿真是否在进行")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isPausing()")])]),t._v(" "),s("p",[t._v("仿真是否处于暂停状态")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isRecordTrace()")])]),t._v(" "),s("p",[t._v("仿真是否记录车辆轨迹")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setIsRecordTrace(bool bRecord)")])]),t._v(" "),s("p",[t._v("设置是否记录车辆轨迹")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] bRecord：是否记录车辆轨迹")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long simuIntervalScheming()")])]),t._v(" "),s("p",[t._v("预期仿真时长，即仿真设置窗口设置的仿真时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setSimuIntervalScheming(long interval)")])]),t._v(" "),s("p",[t._v("设置预期仿真时长")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] interval：预期仿真时长，默认单位：秒")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSimuIntervalScheming")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("int simuAccuracy()")])]),t._v(" "),s("p",[t._v("获取仿真精度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setSimuAccuracy(int accuracy)")])]),t._v(" "),s("p",[t._v("设置仿真精度，即每秒计算次数")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] accuracy：每秒计算次数")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("  gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSimuAccuracy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("int acceMultiples()")])]),t._v(" "),s("p",[t._v("获取加速倍数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void setAcceMultiples(int multiples)")])]),t._v(" "),s("p",[t._v("设置加速倍数")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] multiples 加速倍数")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("  gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAcceMultiples")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void setThreadCount(int count)")])]),t._v(" "),s("p",[t._v("设置工作线程数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long batchNumber()")])]),t._v(" "),s("p",[t._v("当前仿真批次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qreal batchIntervalReally()")])]),t._v(" "),s("p",[t._v("当前批次实际时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qint64 startMSecsSinceEpoch()")])]),t._v(" "),s("p",[t._v("获取仿真开始的现实时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("qint64 stopMSecsSinceEpoch()")])]),t._v(" "),s("p",[t._v("仿真结束的现实时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long simuTimeIntervalWithAcceMutiples()")])]),t._v(" "),s("p",[t._v("获取当前已仿真时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long vehiCountTotal()")])]),t._v(" "),s("p",[t._v("车辆总数，包括已创建尚未进入路网的车辆、正在运行的车辆、已驶出路网的车辆")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("long vehiCountRunning()")])]),t._v(" "),s("p",[t._v("正在运行车辆数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("IVehicle* getVehicle(long vehiId)")])]),t._v(" "),s("p",[t._v("根据车辆ID获取车辆对象")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] vehiId：车辆ID")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.3 根据车辆id获取具体的车辆信息,以id为300001的车辆为例")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("planNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" vehi300001 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVehicle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi300001"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tQString runInfoOfVehi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%0车辆信息为:\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi300001"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\trunInfoOfVehi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"所在路段ID:%0\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi300001"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\trunInfoOfVehi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"所在车道序号:%0\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi300001"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\trunInfoOfVehi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前车速:%0\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi300001"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\trunInfoOfVehi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前加速度:%0\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi300001"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("acce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\trunInfoOfVehi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前角度:%0\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi300001"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("angle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\trunInfoOfVehi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前位置:(%1,%2)\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi300001"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi300001"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\trunInfoOfVehi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"其它：......\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showDynaInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("runInfoOfVehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< IVehicle*> allVehiStarted()")])]),t._v(" "),s("p",[t._v("所有正在运行车辆")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("planNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//所有在运行车辆")]),t._v("\n\t\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" IVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lAllVehi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("allVehiStarted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tQString runInfo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"路网在途车辆共%0辆，ID为:\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lAllVehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" vehi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" lAllVehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\trunInfo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"车辆%0,当前坐标(%1,%2)\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showDynaInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("runInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< IVehicle*> allVehicle()")])]),t._v(" "),s("p",[t._v("所有车辆")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::VehicleStatus> getVehisStatus()")])]),t._v(" "),s("p",[t._v("获取所有正在运行的车辆状态，包括轨迹")]),t._v(" "),s("p",[t._v("返回：车辆状态列表，包括轨迹。数据结构“Online::VehicleStatus”在文件 Plugin/_datastruct.h中定义")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("VehicleStatus"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lVehiStatus "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVehisStatus")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::VehiclePosition> getVehiTrace(long vehiId)")])]),t._v(" "),s("p",[t._v("获取指定车辆运行轨迹")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] vehiId：车辆ID")]),t._v(" "),s("p",[t._v("返回：车辆运行轨迹。数据结构Online::VehiclePosition在文件Plugin/ _datastruct.h中定义")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("VehiclePosition"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  lVp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVehiTrace")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::SignalPhaseColor> getSignalPhasesColor()")])]),t._v(" "),s("p",[t._v("获取当前所有信号灯组相位颜色")]),t._v(" "),s("p",[t._v("返回:当前相位颜色列表，包括各相位当前颜色设置的时间和已持续时间，数据结构Online::SignalPhaseColor在文件Plugin/ _datastruct.h中定义")]),t._v(" "),s("p",[t._v("为了实现动态信号控制，可以在插件接口实现的方法bool CustomerSimulator::calcDynaSignalContralParameters()中通过getSignalPhasesColor方法获取当前信号灯相位颜色及持续时间，再根据当前交通状态重新计算信号控制参数，并返回计算后的信号控制参数。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::VehiInfoCollected> getVehisInfoCollected()")])]),t._v(" "),s("p",[t._v("获取当前完成穿越车辆数据采集器的所有车辆信息")]),t._v(" "),s("p",[t._v("返回：采集的车辆信息列表。数据结构Online::VehiInfoCollected在文件Plugin/_datastruct.h中定义。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v(" QList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("VehiInfoCollected"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lVehiInfo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVehisInfoCollected")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::VehiInfoAggregated> getVehisInfoAggregated()")])]),t._v(" "),s("p",[t._v("获取最近集计时间段内采集器采集的所有车辆集计信息")]),t._v(" "),s("p",[t._v("返回：采集器集计数据列表。数据结构Online:: VehiInfoAggregated在文件Plugin/_datastruct.h中定义；")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("VehiInfoAggregated"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lVInfo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVehisInfoAggregated")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::VehiQueueCounted> getVehisQueueCounted()")])]),t._v(" "),s("p",[t._v("获取当前排队计数器计数的车辆排队信息")]),t._v(" "),s("p",[t._v("返回：车辆排队信息。数据结构Online::VehiQueueCounted在文件Plugin/_datastruct.h中定义；")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("VehiQueueCounted"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lVehiQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVehisQueueCounted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::VehiQueueAggregated> getVehisQueueAggregated()")])]),t._v(" "),s("p",[t._v("获取最近集计时间段内排队计数器集计数据")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("返回：排队计数器集计数据列表")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("VehiQueueAggregated"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lVqa "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVehisQueueAggregated")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::VehiTravelDetected > getVehisTravelDetected()")])]),t._v(" "),s("p",[t._v("​    获取当前行程时间检测器完成的行程时间检测信息")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("返回：行程时间检测器数据")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("VehiTravelDetected"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lVTravel "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVehisTravelDetected")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::VehiInfoAggregated> getVehisInfoAggregated()")])]),t._v(" "),s("p",[t._v("获取最近集计时间段内行程时间检测器集计数据")]),t._v(" "),s("p",[t._v("返回：行程时间集计数据列表")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v(" QList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("VehiTravelAggregated"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lVT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVehisTravelAggregated")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("IVehicle* createGVehicle(Online::DynaVehiParam dynaVehi)")])]),t._v(" "),s("p",[t._v("动态创建车辆")]),t._v(" "),s("p",[s("strong",[t._v("参数")]),t._v("**😗*")]),t._v(" "),s("p",[t._v("[in]: dynaVehi：动态车辆信息，数据类型在文件 Plugin/_datastruct.h中定义举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("DynaVehiParam dvpLane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dvpLane1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dvpLane2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在指定车道和位置动态加载车辆(示例：在0,1,2车道不同位置动态加载车辆)")]),t._v("\n\t\t\tdvpLane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehiTypeCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehiTypeCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehiTypeCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pLink3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pLink3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pLink3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("laneNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("laneNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("laneNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#FF0000"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#008000"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tdvpLane2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#0000FF"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" vehi_lane0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGVehicle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dvpLane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" vehi_lane1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGVehicle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dvpLane1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" vehi_lane2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createGVehicle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dvpLane2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("IVehicle* createBus(IBusLine* pBusLine, qreal startSimuDateTime)")])]),t._v(" "),s("p",[t._v("动态创建公交车")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pBusLine：公交线路")]),t._v(" "),s("p",[t._v("[in] startSimuDateTime：发车时间，单位毫秒")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 动态创建公交车  ")]),t._v("\nIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pBus "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pBusLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QString catchSnapshotAsString()")])]),t._v(" "),s("p",[t._v("创建快照，需要分布式组件支持")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool loadSnapshotFromString(QString data)")])]),t._v(" "),s("p",[t._v("加载快照，需要分布式组件支持")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] data：快照数据")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void stopVehicleDriving(IVehicle *pVehicle)")])]),t._v(" "),s("p",[t._v("停止指定车辆的仿真运行，车辆被移出路网")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pVehicle：车辆对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IVehicle*> vehisInLink(long linkId)")])]),t._v(" "),s("p",[t._v("指定ID路段上的车辆")]),t._v(" "),s("p",[t._v("参数")]),t._v(" "),s("p",[t._v("[in] linkId：路段ID")]),t._v(" "),s("p",[t._v("返回：车辆列表")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.2 根据路段|车道获取车辆list,以L5路段，lane20车道为例。")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("planNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" IVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lVehiOnLink5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vehisInLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tQString runInfoOfLinkAndLane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"L5路段车辆共%0辆，ID为:\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lVehiOnLink5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" vehi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" lVehiOnLink5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\trunInfoOfLinkAndLane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"车辆%0,当前坐标(%1,%2)\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" IVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lVehiOnLane20 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vehisInLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\trunInfoOfLinkAndLane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Lane20车道车辆共%0辆，ID为:\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lVehiOnLane20"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" vehi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" lVehiOnLane20"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\trunInfoOfLinkAndLane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"车辆%0,当前坐标(%1,%2)\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("arg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("y")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showDynaInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("runInfoOfLinkAndLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< IVehicle*> vehisInLane(long laneId)")])]),t._v(" "),s("p",[t._v("指定ID车道上的车辆")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] laneId：车道ID")]),t._v(" "),s("p",[t._v("返回：车辆列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IVehicle*> vehisInConnector(long connectorId)")])]),t._v(" "),s("p",[t._v("指定ID连接段上的车辆")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] connectorId：连接段ID")]),t._v(" "),s("p",[t._v("返回：车辆列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< IVehicle*> vehisInLaneConnector(long connectorId, long fromLaneId, long toLaneId)")])]),t._v(" "),s("p",[t._v("指定连接段ID及上游车道ID和下游车道ID相关“车道连接”上的车辆")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] connectorId: 连接段ID")]),t._v(" "),s("p",[t._v("[in] fromLaneId：上游车道ID")]),t._v(" "),s("p",[t._v("[in] toLaneId：下游车道ID")]),t._v(" "),s("p",[t._v("返回：车辆列表")]),t._v(" "),s("h3",{attrs:{id:"_4-3-guiinterface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-guiinterface"}},[t._v("#")]),t._v(" 4.3 GuiInterface")]),t._v(" "),s("p",[t._v("接口文件：guiinterface.h")]),t._v(" "),s("p",[t._v("GuiInterface是TessInterface的子接口， 通过此接口可以访问控制TESSNG主窗体，在主窗体上创建菜单、自定义窗体等。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QMainWindow *mainWindow()")])]),t._v(" "),s("p",[t._v("TESSNG主窗体")]),t._v(" "),s("h2",{attrs:{id:"_1-4-tessplugin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-tessplugin"}},[t._v("#")]),t._v(" 1.4   TessPlugin")]),t._v(" "),s("p",[t._v("TessPlugin是用户开发的插件顶级接口，下面有三个子接口：CustomerNet、CustomerSimulator、CustomerGui。TESS NG通过这三个子接口分别在路网、仿真过程、窗体这三个方面与用户插件进行交互。")]),t._v(" "),s("p",[t._v("虽然用户可以通过接口TessInterface下的三个子接口仿真控制TESS NG的路网、仿真过程及窗体，但用户只能调用接口方法，不能深入接口方法内部改变运行逻辑。通过实现接口TessPlugin子接口的方法，用户可以在TESS NG的方法内部施加影响，改变运行逻辑。")]),t._v(" "),s("p",[t._v("TessPlugin下的子接口CustomerNet、CustomerSimulator可以让用户较多地参于加载路网及仿真过程，改变TESSNG内部运行逻辑。比如，通过实现CustomerNet、CustomerSimulator接口方法可以让用户加载路网后进行必要的处理，点击仿真按钮后根据需要确定是否继续仿真或者放弃，还可以在仿真过程对部分或全部车辆的速度施加影响，主动干预车辆的自由变道，等等。")]),t._v(" "),s("p",[t._v("插件的三个子接口CustomerNet、CustomerSimulator、CustomerGui的所有方法都有默认实现，用户可以根据需要实现其中部分方法或全部方法，这些方法都由TESSNG在加载并初化插件、打开路网前后、仿真前、仿真过程中、仿真结束后进行调用，正是通过TESS NG对这些接口方法的调用达到控制或影响TESS NG运行的目的。")]),t._v(" "),s("p",[t._v("由于插件接口方法调用的场景、目的都不一样，为了统一对插件接口方法理解，很多方法采用如下结构形式：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("outParam"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("TESS NG在调用这些方法时作以下理解：如果返加值为false，视为用户没有反应，忽略。如果返回值为true，表明用户有反应，这时再视参数outParam值进行处理。举范例中的一个例子，曹安路上的车辆排成方正，飞机后的车辆速度重新设置，保持与飞机相同的速度。CustomerSimulator的子类MySimulator实现了reSetSpeed方法如下：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySimulator")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reSetSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qreal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("inOutSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   QString roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QString")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromLocal8Bit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"曹安路"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n            mrSpeedOfPlane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mrSpeedOfPlane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n            inOutSpeed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mrSpeedOfPlane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n\n       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("TESS NG在计算车辆的速度后会调用插件的reSetSpeed方法，如果该方法返回true，视插件对此方法作出响应，这时再用outSpeed值取代原先计算的车速。TESS NG调用插件reSetSpeed方法的过程如下：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gpTessPlugin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" gpTessPlugin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("customerSimulator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n   qreal outSpeed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mrCurrSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gpTessPlugin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("customerSimulator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reSetSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpGVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n       mrCurrSpeed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" outSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("下面对CustomerNet、CustomerSimulator两个子接口进行详解")]),t._v(" "),s("h3",{attrs:{id:"_1-4-1-customernet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-customernet"}},[t._v("#")]),t._v(" 1.4.1 CustomerNet")]),t._v(" "),s("p",[t._v("接口文件：Plugin/ customernet.h")]),t._v(" "),s("p",[t._v("CustomerNet是TessPlugin子接口，用户实现这个接口，TESSNG在加载路网前后会调用用户实现的接口方法。范例在加载临时路网后创建路段、连接段和发车点。TESSNG在绘制部分路网元素时也会调用CustomerNet实现类相关方法。范例通过实现方法labelNameAndFont让部分路段和连接段用路段名（默认为ID）绘制标签。")]),t._v(" "),s("p",[t._v("下面对NetInterface接口方法作详细解释。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool netFileSuffix(QString &suffix)")])]),t._v(" "),s("p",[t._v("路网文件后缀，由用户通过参数suffix设置")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[out] suffix：路网文件后缀名")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QMap<QString, QString> customerTableDDL()")])]),t._v(" "),s("p",[t._v("添加用户设计的表")]),t._v(" "),s("p",[t._v("返回：用户数据库的表定义map，key为表名，value为表的定义")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void insertCustomerData()")])]),t._v(" "),s("p",[t._v("插入用户插件创建的表数据")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void deleteCustomerData()")])]),t._v(" "),s("p",[t._v("删除用户插件创建的表数据")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void beforeLoadNet()")])]),t._v(" "),s("p",[t._v("打开路网前调用，用户可以通过此方法在加载路网前作必要的初始化准备工作")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void afterLoadNet()")])]),t._v(" "),s("p",[t._v("加载路网后调用。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("范例加载路网后读路段数，如果路段数为"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("创建路段、连接段和发车点，创建完成后启动仿真。\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyNet")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterLoadNet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//读路段数")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("netInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("linkCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建路网")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createNet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//启动仿真")]),t._v("\n\tgpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("startSimu")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("bool removeItemFromScene(CustomerGraphicsObject *pItem)")])]),t._v(" "),s("p",[t._v("从场景中移除插件创建的对象")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pItem：将表移除的路网对象，由二次开发创建")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool linkType(QList< QString> &lType)")])]),t._v(" "),s("p",[t._v("路段类型")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[out] lType：用户定义的路段类型列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool laneType(QList< QString> &lType)")])]),t._v(" "),s("p",[t._v("车道类型")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[out] lType：用户定义的车道类型列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool linkBuildGLanes(ILink *pILink)")])]),t._v(" "),s("p",[t._v("创建车道")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pILink：路段对象")]),t._v(" "),s("p",[t._v("返回：如果返回true，表示用户已创建了车道，TESSNG不再创建")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isPermitForCustDraw()")])]),t._v(" "),s("p",[t._v("Ø 默认为true，是否允许调用客户绘制，默认为true。本方法的目的是在python环境减少不必要的对python代码调用，消除对运行效率的负面影响，在C++环境可以不考虑实现此方法。"),s("strong",[t._v("bool linkBrushColor(long linkId, QColor& color)")])]),t._v(" "),s("p",[t._v("路段笔刷颜色")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] linkId：路段ID")]),t._v(" "),s("p",[t._v("[out] color：笔刷颜色")]),t._v(" "),s("p",[t._v("返回：如果返回false，TESSNG会忽略，否则用color颜色绘制路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool paint(int itemType, long itemId, QPainter *painter)")])]),t._v(" "),s("p",[t._v("绘制路网元素")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] itemType：路网元素类型，在plugin/_netitemtype.h文件中定义")]),t._v(" "),s("p",[t._v("[in] itemId：路网元素ID")]),t._v(" "),s("p",[t._v("[in] painter：QPainter指针")]),t._v(" "),s("p",[t._v("返回：如果返回true，TESSNG认为插件已绘制，TESSNG不再绘制，否则TESSNG进行绘制。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool paintLaneObject(ILaneObject* pILaneObj, QPainter* painter)")])]),t._v(" "),s("p",[t._v("绘制车道或车道连接")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pILaneObj：车道或车道连接")]),t._v(" "),s("p",[t._v("[in] painter：QPainter指针")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool laneBrushAndPen(long laneId, QBrush &brush, QPen &pen)")])]),t._v(" "),s("p",[t._v("根据指定车道ID设置绘制车道的笔刷")]),t._v(" "),s("p",[t._v("[in] laneId：车道ID")]),t._v(" "),s("p",[t._v("[out] brush：绘刷")]),t._v(" "),s("p",[t._v("[out] pen：绘笔")]),t._v(" "),s("p",[t._v("返回：false 忽略，true 用brush及pen参数绘制ID等于laneId的车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool connectorAreaBrushColor(long connAreaId, QColor& color)")])]),t._v(" "),s("p",[t._v("面域笔刷颜色")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] connAreaId：面域ID")]),t._v(" "),s("p",[t._v("[out] color：笔刷颜色")]),t._v(" "),s("p",[t._v("返回：false：忽略，true：TESSNG用color绘制面域")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool labelNameAndFont(int itemType, long itemId, GraphicsItemPropName &outPropName, qreal &outFontSize)")])]),t._v(" "),s("p",[t._v("根据路网元素类型及ID确定用标签用ID或名称作为绘制内容。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] itemType：路段元素类型，类型常量在文件Plugin/_netitemtype.h中定义；")]),t._v(" "),s("p",[t._v("[in] itemId：路网元素ID；")]),t._v(" "),s("p",[t._v("[out] outPropName：枚举值，在文件Plugin/_netitem.h中定义，如果赋值GraphicsItemPropName::Id，则用ID作为绘制内容，如果赋值GraphicsItemPropName::Name，则用路网元素名作为绘制内容；")]),t._v(" "),s("p",[t._v("[out] outFontSize：字体大小，单位：米。假设车道宽度是3米，如果赋给outFontSize的值是6，绘出的文字将占用两个车道的宽度。")]),t._v(" "),s("p",[t._v("返回：false 忽略，true 则根据设定的outPropName 值确定用ID或名称绘制标签，并且用指定大小绘制。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 范例中的路段和连接段的标签内容部分是名称，部分是ID。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyNet")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("labelNameAndFont")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" itemType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" itemId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GraphicsItemPropName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("outPropName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qreal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("outFontSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("itemType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" GConnectorType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\toutPropName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GraphicsItemPropName"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\toutFontSize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("itemType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" GLinkType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("itemId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" itemId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" itemId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\toutPropName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GraphicsItemPropName"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("Name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\toutFontSize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("bool isDrawLinkCenterLine(long linkId)")])]),t._v(" "),s("p",[t._v("是否绘制路段中心线")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] linkId：路段ID；")]),t._v(" "),s("p",[t._v("返回值：true绘制，false不绘制。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isDrawLinkCorner(long linkId)")])]),t._v(" "),s("p",[t._v("是否绘制路段四个拐角的圆形和正方型。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] linkId：路段ID；")]),t._v(" "),s("p",[t._v("返回值：true绘制，false不绘制。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isDrawLaneCenterLine(long laneId)")])]),t._v(" "),s("p",[t._v("是否绘制车道中心线。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] laneId：车道ID；")]),t._v(" "),s("p",[t._v("返回值：true绘制，false不绘制。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void afterViewKeyReleaseEvent(QKeyEvent *event)")])]),t._v(" "),s("p",[t._v("QGraphicsView的keyReleaseEvent事件后行为，用户可以根据自己的需要接入键盘事件，实现自身业务逻辑。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void afterViewMouseDoubleClickEvent(QMouseEvent * event)")])]),t._v(" "),s("p",[t._v("QGraphicsView的mouseDoubleClickEvent事件后的行为，用户可以根据自己的需要编写鼠标双击事件响应代码。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void afterViewMouseMoveEvent(QMouseEvent *event)")])]),t._v(" "),s("p",[t._v("QGraphicsView的mouseMoveEvent事件后的行为，用户可以根据自己的需要编写鼠标移动事件响应代码。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void afterViewMousePressEvent(QMouseEvent *event)")])]),t._v(" "),s("p",[t._v("QGraphicsView的mousePressEvent事件后的行为，用户可以根据自己的需要编写鼠标点击事件响应代码。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void afterViewMouseReleaseEvent(QMouseEvent *event)")])]),t._v(" "),s("p",[t._v("QGraphicsView的mouseReleaseEvent事件后的行为，用户可以根据自己的需要编写鼠标释放事件响应代码。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void afterViewResizeEvent(QResizeEvent *event)")])]),t._v(" "),s("p",[t._v("QGraphicsView的resizeEvent事件后的行为，用户可以根据自己的需要编写屏幕缩放事件响应代码。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void afterViewWheelEvent(QWheelEvent *event)")])]),t._v(" "),s("p",[t._v("QGraphicsView的鼠标滚动事件后的行为，用户可以根据自己的需要编写鼠标滚动事件后响应代码。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void afterViewScrollContentsBy(int dx, int dy)")])]),t._v(" "),s("p",[t._v("QGraphicsView滚动条移动事件后的行为，用户可以根据自己的需要实现视窗滚动条移动后响应代码。")]),t._v(" "),s("h3",{attrs:{id:"_1-4-2-customersimulator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-customersimulator"}},[t._v("#")]),t._v(" 1.4.2 CustomerSimulator")]),t._v(" "),s("p",[t._v("接口文件：Plugin/customersimulator.h")]),t._v(" "),s("p",[t._v("CustomerSimulator是TessPlugin子接口，用户实现这个接口。TESS NG在仿真前后以及仿真过程中调用这个接口实现的方法，达到与插件交互的目的，用户可以通过这个接口的实现在仿真前后以及仿真运算过程中对TESS NG的仿真进行干预，大到可以控制仿真是否进行，小到干预某一车辆的驾驶行为。")]),t._v(" "),s("p",[t._v("用户对车辆驾驶行为的干预主要通过车速和变道来实现。对车速的干预主要有以下几个方法：")]),t._v(" "),s("p",[t._v("1）重新计算车速；")]),t._v(" "),s("p",[t._v("2）修改路段限速；")]),t._v(" "),s("p",[t._v("3）重新计算加速度；")]),t._v(" "),s("p",[t._v("4）修改跟驰安全距离和安全时距、重新设置前车距")]),t._v(" "),s("p",[t._v("以上几个方法的优先级依次降低。在没有插件干预的情况下，车辆行驶的最高速度受到道路的最高速度限制；在有插件的干预下，如果直接修改了车速，则不受道路最高限速的限制。")]),t._v(" "),s("p",[t._v("下面对CustomerSimulator接口方法作详细解释。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void beforeStart(bool &keepOn)")])]),t._v(" "),s("p",[t._v("仿真前的准备。如果需要，用户可通过设置keepOn为false来放弃仿真。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[out] keepOn：是否继续，默认为true；")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void afterStart()")])]),t._v(" "),s("p",[t._v("启动仿真后的操作。这个方法的处理时间尽量短，否则影响仿真时长的计算，因为调用这个方法的过程仿真已经计时。仿真前的操作尽可能放到beforeStart方法中处理。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void afterStop()")])]),t._v(" "),s("p",[t._v("仿真结束后的操作，如果需要，用户可以在此方法释放资源。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool calcSimuConfig(Online::SimuConfig& config)")])]),t._v(" "),s("p",[t._v("计算仿真参数")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[out] config：仿真参数信息。数据结构Online::SimuConfig 在文件Plugin/_datastruct.h中定义。")]),t._v(" "),s("p",[t._v("返回：false：忽略，true：用config中的参数更新仿真参数，如果仿真已启动，仿真精度及线程数不能更新，仿真时长及加速倍数可以更新")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::DispatchInterval> calcDynaDispatchParameters()")])]),t._v(" "),s("p",[t._v("计算动态发车信息，用来修改发车点相关参数，此方法可以用来实现实时动态仿真。")]),t._v(" "),s("p",[t._v("返回：动态发车信息列表。数据结构Online::DispatchInterval在文件Plugin/_datastruct.h中定义。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("DispatchInterval"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySimulator")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("calcDynaDispatchParameters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("DispatchInterval"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lDispatchInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpSecondDevCasesObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mActionControlMethodNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tQTime t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QTime")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" currSecs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hour")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("minute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("second")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tOnline"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("DispatchInterval di "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Online")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("DispatchInterval")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dispatchId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fromTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" currSecs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" di"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fromTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehiCount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tdi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mlVehicleConsDetail "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Online")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("VehiComposition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Online")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("VehiComposition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tlDispatchInterval "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" di"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tmpSecondDevCasesObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mActionControlMethodNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" lDispatchInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::DecipointFlowRatioByInterval> calcDynaFlowRatioParameters()")])]),t._v(" "),s("p",[t._v("一个或一次数据来源里保存的所有决策点在一个时间间隔的路径流量分配信息，此方法可以用来实现实时动态仿真。")]),t._v(" "),s("p",[t._v("返回：决策点流量分配信息，数据结构Online::DecipointFlowRatioByInterval在文件Plugin/_datastruct.h中定义。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::SignalContralParam> calcDynaSignalContralParameters()")])]),t._v(" "),s("p",[t._v("一个或一次数据来源里保存的所有信号灯组的信号控制信息。")]),t._v(" "),s("p",[t._v("返回：信号灯组控制信息列表，数据结构Online::SignalContralParam在文件Plugin/_datastruct.h中定义。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void initVehicle(IVehicle *pIVehicle)")])]),t._v(" "),s("p",[t._v("初始化车辆，此方法在车辆起动加入路网时被调用，用户可以在这个方法里调用IVehicle的setVehiType方法重新设置类型，调用initLane或initLaneConnector方法对车辆的车道序号、起始位置、车辆大小进行初始化。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySimulator")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initVehicle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tQString roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QString")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromLocal8Bit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"曹安路"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//飞机")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVehiType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//工程车")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVehiType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//消防车")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVehiType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//救护车")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVehiType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//最后两队列小车")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVehiType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVehiType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVehiType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVehiType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVehiType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setVehiType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setLength")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void beforeCreateGVehiclesForBusLine(IBusLine* pBusLine, bool& keepOn)")])]),t._v(" "),s("p",[t._v("创建公交车辆前的预处理")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pBusLine：公交线路")]),t._v(" "),s("p",[t._v("[in、out] keepOn：是否继续执行创建公交车辆，如果KeepOn被赋值为false，TESSNG不再创建公交车辆")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool beforeCalcLampColor(bool& keepOn)")])]),t._v(" "),s("p",[t._v("计算信号灯色前的预处理。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in、out] 是否断续计算")]),t._v(" "),s("p",[t._v("返回：如果返回 true，且keepOn等于false，TESSNG不再计算信号灯色。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool calcLampColor(ISignalLamp *pSignalLamp)")])]),t._v(" "),s("p",[t._v("计算信号灯的灯色。ISignalLamp有设置信号灯颜色方法。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pSignalLamp：信号灯对象；")]),t._v(" "),s("p",[t._v("返回值：")]),t._v(" "),s("p",[t._v("如果返回true，表明用户已修改了信号灯颜色，TESS NG不再计算灯色。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySimulator")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("calcLampColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ISignalLamp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pSignalLamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpSecondDevCasesObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mContorlMeasureMethodNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将所有信号灯变为绿色")]),t._v("\n\t\tpSignalLamp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setLampColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"绿"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("bool reCalcToLeftLane(IVehicle *pIVehicle)")])]),t._v(" "),s("p",[t._v("计算是否要左强制变道，TESS NG在移动车辆时计算强制左变道的条件，当条件不足时让插件计算，如果返回值为true，强制左变道。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象。")]),t._v(" "),s("p",[t._v("返回：false：忽略，true：强制左变道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool reCalcToRightLane(IVehicle *pIVehicle)")])]),t._v(" "),s("p",[t._v("计算是否要右强制变道，TESS NG在移动车辆时计算强制右变道的条件，当条件不足时让插件计算，如果返回值为true，强制右变道。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("返回：false：忽略，true：强制右变道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void beforeToLeftFreely(IVehicle* pIVehicle, bool &bKeepOn)")])]),t._v(" "),s("p",[t._v("自由左变道前处理，如果bKeepOn被赋值为false，TESSNG不再计算是否自由左变道")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("[in、out] bKeepOn：是否继续，如果设为false，不再计算是否可以左自由变道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void beforeToRightFreely(IVehicle* pIVehicle, bool& bKeepOn)")])]),t._v(" "),s("p",[t._v("自由右变道前处理，如果bKeepOn被赋值为false，TESSNG不再计算是否自由右变道")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("[in、out] bKeepOn：是否继续，如果设为false，不再计算是否可以右自由变道")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自由左变道前处理")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySimulator")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeToLeftFreely")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" bKeepOn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#0000FF"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//自由右变道前处理")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySimulator")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeToRightFreely")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" bKeepOn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setColor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#EE0000"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("bool reCalcToLeftFreely(IVehicle *pIVehicle)")])]),t._v(" "),s("p",[t._v("重新计算是否要自由左变道。TESS NG在移动车辆时计算自由左变道条件，当条件不足时让插件计算，如果返回值为true，自由左变道。")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("返回：false：忽略，true：左自由変道，但在一些特殊场景也会放弃变道，如危险")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool reCalcToRightFreely(IVehicle *pIVehicle)")])]),t._v(" "),s("p",[t._v("重新计算是否要自由右变道。TESS NG在移动车辆时计算自由右变道条件，当条件不足时让插件计算，如果返回值为true，自由右变道。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("返回：false：忽略，true：右自由変道，但在一些特殊场景也会放弃变道，如危险")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool reCalcDismissChangeLane(IVehicle* pIVehicle)")])]),t._v(" "),s("p",[t._v("重新计算是否撤销变道，通过pIVehicle获取到自身条件数据及当前周边环境条件数据，判断是否要撤销正在进行的变道。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("返回：true 如果当前变道完成度不超过三分之一，则撤销当前变道行为；false 忽略。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySimulator")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reCalcDismissChangeLane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//强制车辆不变道，禁止L2路段所有车辆右变道")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpSecondDevCasesObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mActionControlMethodNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpSecondDevCasesObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("judgeVehicleLaneChangeDirection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"right"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//强制L5路段中间车道向右变道")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpSecondDevCasesObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mActionControlMethodNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lane")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpSecondDevCasesObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("judgeVehicleLaneChangeDirection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QStringLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"left"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("bool reCalcdesirSpeed(IVehicle *pIVehicle, qreal &inOutDesirSpeed)")])]),t._v(" "),s("p",[t._v("重新计算期望速度，TESS NG调用此方法时将车辆当前期望速度赋给inOutDesirSpeed，如果需要，用户可在此方法重新计算期望速度，并赋给inOutDesirSpeed。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("[in、out] inOutDesirSpeed：重新设置前后的车辆期望速度，单位：像素/秒；")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 范例中飞机的期望速度被重新计算，仿真前5秒期望速度为0，飞机处于静止状态，5至10秒飞机的期望速度是20km/h，10秒后期望速度是40km/h。这段代码展示如何通过重新设置期望速度来控制车速。代码如下 */")]),t._v("：\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySimulator")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reCalcdesirSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qreal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("inOutDesirSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tQString roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QString")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromLocal8Bit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"曹安路"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" mrSquareVehiCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前已仿真时间")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" simuTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuTimeIntervalWithAcceMutiples")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("simuTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tinOutDesirSpeed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("simuTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tinOutDesirSpeed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tinOutDesirSpeed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("bool reSetFollowingType(IVehicle* pIVehicle, int& outTypeValue)")])]),t._v(" "),s("p",[t._v("重新设置跟驰类型，在计算加速度的过程中被调用")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[out] outTypeValue：跟驰类型，0：停车，1: 正常，5：急减速，6：急加速，7：汇入, 8：穿越，9：协作减速，10：协作加速，11：减速待转，12：加速待转")]),t._v(" "),s("p",[t._v("返回：false：忽略，true：用outTypeValue设置车辆驾驶行为的跟驰类型")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool reSetFollowingParam(IVehicle *pIVehicle, qreal &inOutSafeInterval, qreal &inOutSafeDistance)")])]),t._v(" "),s("p",[t._v("重新设置跟驰模型的安全间距和安全时距。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("[in、out] inOutSafeInterval：安全时距，单位：秒；")]),t._v(" "),s("p",[t._v("[in、out] inOutSafeDistance：安全间距：单位：像素；")]),t._v(" "),s("p",[t._v("返回：false：忽略，true：用inOutSafeInterval设置安全时距，用inOutSafeDistance设置安全间距")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("范例将第二条连接段上的车辆跟车安全间距设为"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("米。代码如下：\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySimulator")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reSetFollowingParams")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qreal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("inOutSi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qreal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("inOutSd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tQString roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QString")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromLocal8Bit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"连接段2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tinOutSd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("QList< Online::FollowingModelParam> reSetFollowingParams()")])]),t._v(" "),s("p",[t._v("重新设置跟驰模型参数，影响所有车辆。此方法被TESSNG调用，用得到跟驰模型数据取代当前仿真正在采用的跟驰模型。")]),t._v(" "),s("p",[t._v("返回：跟驰参数列表，可对机动车和非机车的跟驰参数重新设置，设置以后会一直被采用，直到被新的参数所代替。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool reSetDistanceFront(IVehicle* pIVehicle, qreal& distance, qreal& s0)")])]),t._v(" "),s("p",[t._v("重新设置前车距及安全跟车距离")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[in、out] distance：当前车辆与前车的距离，默认单位：像素")]),t._v(" "),s("p",[t._v("[in、out] s0：安全跟车距离，默认单位：像素")]),t._v(" "),s("p",[t._v("返回：false：忽略，true：用distance设置前车距，用s0设置安全跟车距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool reSetSpeed(IVehicle *pIVehicle, qreal &inOutSpeed)")])]),t._v(" "),s("p",[t._v("重新设置车速。TESS NG调用此方法时将当前计算所得车速赋给inOutSpeed，如果需要，用户可以在此方法重新计算车速并赋给inOutSpeed。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("[in、out] inOutSpeed：重新计算前后的车速，单位：像素/秒。")]),t._v(" "),s("p",[t._v("返回：false：忽略，true：用inOutSpeed设置车辆当前速度")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//重新设置速度")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySimulator")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reSetSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qreal"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" inOutSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 修改车辆速度，将L5路段车辆修改为0")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpSecondDevCasesObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mActionControlMethodNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tinOutSpeed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 7.强制车辆闯红灯,让L12等待的车辆强制闯红灯")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpSecondDevCasesObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mActionControlMethodNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tqreal vehiCurrSpeed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tqreal vehiCurrentDistToEnd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vehicleDriving")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("distToEndpoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehiCurrSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("p2m")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehiCurrentDistToEnd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成一个随机浮点数，范围在 [0.0, 1.0)")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" randomNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QRandomGenerator")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("global")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("generateDouble")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("randomNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\tinOutSpeed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void beforeMergingToLane(IVehicle *pIVehicle, bool &keepOn)")])]),t._v(" "),s("p",[t._v("在“车道连接”上汇入车道前的计算，可以让TESS NG放弃汇入计算，以便于用户实现自己的汇入逻辑。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("[out] keepOn：是否放弃，默认为true。赋值keepOn为false，TESSNG则放弃汇入。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void afterOneStep ()")])]),t._v(" "),s("p",[t._v("一个计算批次后的计算，这个时候所有车辆都完成同一个批次的计算。通常在这个方法中获取车辆轨迹、检测器数据、进行必要的小计等。在这个方法中进行的计算基本不影响仿真结果的一致性，但效率不高，如果计算量大对仿真效率会有影响。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 范例中在这个方法中获取车辆对象和轨迹等信息。代码如下：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySimulator")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterOneStep")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前仿真计算批次")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" batchNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("batchNumber")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前已仿真时间，单位：毫秒")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" simuTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuTimeIntervalWithAcceMutiples")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ID为1的路段上所有已启动车辆")]),t._v("\n\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" IVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lVehi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vehisInLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//车辆轨迹")]),t._v("\n\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("VehicleStatus"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lVehiStatus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tgpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAllVehicleStatus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lVehiStatus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//车辆数据采集信息")]),t._v("\n\tQList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("VehiInfoCollected"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lOutVehiInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tgpTessInterface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("simuInterface")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVehisInfoCollected")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("simuTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lOutVehiInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void duringOneStep()")])]),t._v(" "),s("p",[t._v("该方法在各个工作线程进行同一批次的计算过程中调用，这时存在部分车辆计算完成，部分车辆仍在计算过程中。这个方法中的计算不够安全，但效率较高。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void beforeNextRoad(IVehicle* pIVehicle, QGraphicsItem*& pRoad, bool& keepOn)")])]),t._v(" "),s("p",[t._v("计算下一道路前的处理")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("[in] pRoad：暂不使用")]),t._v(" "),s("p",[t._v("[in、out] keepOn：是否继续计算，false：TESSNG不再计算后续道路，true：继续计算")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< ILaneConnector*> candidateLaneConnectors(IVehicle* pIVehicle, QList< ILaneConnector*> lInLC)")])]),t._v(" "),s("p",[t._v("计算当车辆离开路段时后续可经过的“车道连接”, lLaneConnector是已计算出的当前车道可达的所有“车道连接”，用户可以从中筛选或重新计算。如果车辆有路径，则忽略")]),t._v(" "),s("p",[t._v("返回：后续可达的“车道连接”列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("ILaneConnector* candidateLaneConnector(IVehicle* pIVehicle, ILaneConnector* pCurrLaneConnector)")])]),t._v(" "),s("p",[t._v("计算车辆后续“车道连接”，此时车辆正跨出当前路段，将驶到pCurrLaneConnector。此方法可以改变后续“车道连接”。如果返回的“车道连接”为空，TESSNG会忽略此方法的调用。如果返回的“车道连接”不在原有路径上，或者此方法设置了新路径且新路径不经过返回的“车道连接”，TESSNG调用此方法后会将路径设为空。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void beforeNextPoint(IVehicle *pIVehicle, bool &keepOn)")])]),t._v(" "),s("p",[t._v("计算车辆移动到下一点前的操作，用户可以通过此方法让TESSNG放弃对指定车辆到下一点的计算。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("[out] keepOn：是否继续, 默认为true，如果keepOn赋值为false，TESSNG放弃移动到下一点的计算，但不移出路网。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QList< int> calcLimitedLaneNumber(IVehicle* pIVehicle)")])]),t._v(" "),s("p",[t._v("计算限制车道序号：如管制、危险等，最右侧编号为0。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("返回：车道序号集，保存车辆不可以驰入的车道序号。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool calcSpeedLimitByLane(ILink* pILink, int laneNumber, qreal& outSpeed)")])]),t._v(" "),s("p",[t._v("由车道确定的限制车速（最高速度, 公里/小时）")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pILink：路段")]),t._v(" "),s("p",[t._v("[in] laneNumber：,laneNumber:车道序号，最右侧编号为0")]),t._v(" "),s("p",[t._v("[in、out] outSpeed：限制速度，公里/小时")]),t._v(" "),s("p",[t._v("返回：false：忽略，true：用outSpeed限制指定车道速度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool calcMaxLimitedSpeed(IVehicle *pIVehicle, qreal &inOutLimitedSpeed)")])]),t._v(" "),s("p",[t._v("重新计算车辆当前最大限速，不受道路限速的影响。在没有插件干预的情况下，车辆速度大于道路限度时按道路最大限速行驶，在此方法的干预下，可以提高限速，让车辆大于道路限速行驶。")]),t._v(" "),s("p",[t._v("TESS NG调用此方法时将当前最高限速赋给inOutLimitedSpeed，如果需要，用户可以在方法里重新设置inOutLimitedSpeed值。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("[in、out] inOutLimitedSpeed：计算前后的最大限速，单位：像素/秒。")]),t._v(" "),s("p",[t._v("返回结果：")]),t._v(" "),s("p",[t._v("​    如果返回false则忽略，否则取inOutLimitedSpeed为当前道路最大限速：")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//下面代码，如果车辆pIVehicle所处当前道路最高限速小于50km/h，则将最高限速设为50km/h。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySimulator")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("calcMaxLimitedSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qreal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("inOutLimitedSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inOutLimitedSpeed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tinOutLimitedSpeed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("bool calcDistToEventObj(IVehicle* pIVehicle, qreal& dist)")])]),t._v(" "),s("p",[t._v("计算到事件对象距离，如到事故区、施工区的距离")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("[in、out] dist：车辆中心点距事件对象距离，单位像素")]),t._v(" "),s("p",[t._v("返回：false：忽略，true：用dist计算安全变道距离等")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool calcChangeLaneSafeDist(IVehicle* pIVehicle, qreal& dist)")])]),t._v(" "),s("p",[t._v("计算安全变道距离。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆，计算该车辆安全变道距离。")]),t._v(" "),s("p",[t._v("[in、out] dist：安全变道距离，保存了TESSNG已算得的值，用户可以在此方法重新计算。")]),t._v(" "),s("p",[t._v("返回：false 忽略，true TESSNG取dist作为安全变道距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void busArriving(IVehicle* pIVehicle, IBusStationLine* pStationLine, int alightingCount, int alightingTime, int boardingCount, int boardingTime)")])]),t._v(" "),s("p",[t._v("公交到站")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[in] pStationLine：站点线路")]),t._v(" "),s("p",[t._v("[in] alightingCount：下客人数")]),t._v(" "),s("p",[t._v("[in] alightingTime：下客所需总时间，默认单位：秒")]),t._v(" "),s("p",[t._v("[in] boardingCount：上客人数")]),t._v(" "),s("p",[t._v("[in] boardingTime：上客所需总时间，默认单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void afterStep (IVehicle *pIVehicle)")])]),t._v(" "),s("p",[t._v("完成车辆pIVehicle“一个批次计算”后的处理。可以在此获取车辆当前信息，如当前道路、位置、方向角、速度、期望速度、前后左右车辆等。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool calcAcce(IVehicle *pIVehicle, qreal &acce)")])]),t._v(" "),s("p",[t._v("计算加速度")]),t._v(" "),s("p",[t._v("[in] pIVehicle：待计算加速度的车辆")]),t._v(" "),s("p",[t._v("[out] acce：计算结果")]),t._v(" "),s("p",[t._v("返回：false 忽略，true 则TESNG用调用此方法后所得acce作为当前车辆的加速度。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isCalcVehicleVector3D()")])]),t._v(" "),s("p",[t._v("是否计算车辆3D属性，如欧拉角等")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QVector3D calcVehicleEuler(IVehicle* pIVehicle, bool bPosiDire = true)")])]),t._v(" "),s("p",[t._v("计算欧拉角")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[in] bPosiDire：车头方向是否正向计算，如果bPosiDire为false则反向计算")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool reSetAcce(IVehicle *pIVehicle, qreal &inOutAcce)")])]),t._v(" "),s("p",[t._v("重新计算加速度。TESS NG调用此方法时将当前计算所得加速度赋给inOutAcce，如果需要，用户可以在此方法中重新计算加速度并赋给inOutAcce。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("[in、out] inOutAcce：重新计算前后的加速度，单位：像素/秒^2；")]),t._v(" "),s("p",[t._v("返回结果：")]),t._v(" "),s("p",[t._v("如果返回false则忽略，如果返回true，则将inOutAcce作为当前加速度。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 范例中车辆在第一条连接段上的加速度被重新计算。代码如下：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySimulator")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reSetAcce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" qreal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("inOutAcce"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tQString roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QString")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromLocal8Bit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"连接段1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果车速大于20km/h，加速度设为-5m/s/s")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tinOutAcce "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果车速大于10km/h，加速度设为-1m/s/s")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tinOutAcce "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("void afterCalcTracingType(IVehicle* pIVehicle)")])]),t._v(" "),s("p",[t._v("计算跟驰类型后处理")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool travelOnChangingTrace(IVehicle* pIVehicle)")])]),t._v(" "),s("p",[t._v("是否在变轨迹上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool boundingRect(IVehicle* pIVehicle, QRectF& outRect) const")])]),t._v(" "),s("p",[t._v("获取车辆边界矩形")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[out] outRect：车辆边界矩形")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool shape(IVehicle* pIVehicle, QPainterPath& outShape) const")])]),t._v(" "),s("p",[t._v("获取车辆图形路径")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[out] outShape：车辆形状路径")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool paintVehicle(IVehicle* pIVehicle, QPainter* painter)")])]),t._v(" "),s("p",[t._v("绘制车辆")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[in] painter：笔刷")]),t._v(" "),s("p",[t._v("返回：true，TESSNG不再绘制车辆，false，TESSNG认为用户没有绘制，继续绘制")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool paintVehicleWithRotation(IVehicle* pIVehicle, QPainter* painter, qreal& inOutRotation)")])]),t._v(" "),s("p",[t._v("绘制车辆，绘制前将车辆对象旋转指定角度")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[in] painter：QPainter指针")]),t._v(" "),s("p",[t._v("[in] inOutRotation：旋转的角度")]),t._v(" "),s("p",[t._v("返回：true，TESSNG不再绘制车辆，false，TESSNG认为用户没有绘制，继续绘制")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void rePaintVehicle(IVehicle* pIVehicle, QPainter* painter)")])]),t._v(" "),s("p",[t._v("绘制车辆后的再绘制，客户可在此方法增加绘制内容")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle，要重绘制的车辆")]),t._v(" "),s("p",[t._v("[in] painter，QPainter对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool reCalcAngle(IVehicle *pIVehicle, qreal &inOutAngle)")])]),t._v(" "),s("p",[t._v("重新计算角度。TESS NG调用此方法时将当前算得的角度赋给inOutAngle，如果需要，用户可在此方法中重新计算车辆角度，并将算得的角度赋给inOutAngle。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("[in、out] inOutAngle：重新计算前后角度，北向0度顺时针；")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isStopDriving(IVehicle *pIVehicle)")])]),t._v(" "),s("p",[t._v("是否停车运行，TESS NG在计算下一点位置后调用，判断是否要停止车辆pIVehicle的运行。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("返回结果：")]),t._v(" "),s("p",[t._v("如果返回true，则停止该车辆运行，移出路网。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("bool isPassbyEventZone(IVehicle* pIVehicle)")])]),t._v(" "),s("p",[t._v("是否正在经过事件区（如：施工区、限速区等）")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void beforeStopVehicle(IVehicle *pIVehicle)")])]),t._v(" "),s("p",[t._v("车辆停止运行前的处理。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("void afterStopVehicle(IVehicle *pIVehicle)")])]),t._v(" "),s("p",[t._v("车辆停止运行后的处理")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//8. 强制清除车辆,以L5路段为例，清除所有小客车")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mpSecondDevCasesObj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("mActionControlMethodNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" pIVehicle "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" lAllVehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("roadId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vehicleTypeCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tpIVehicle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vehicleDriving")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopVehicle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("bool recoveredSnapshot()")])]),t._v(" "),s("p",[t._v("用快照恢复仿真场景，分布式环境可用")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("QString vehiRunInfo(IVehicle* pIVehicle)")])]),t._v(" "),s("p",[t._v("车辆运行信息。在仿真过程中如果某辆车被单选，按ctrl+i 会弹出被单选车辆运行状态，其中文本框中的“其它信息”就是当前方法返回的，开发者可以借此对实现的业务逻辑进行了解，用户可以了解仿真过程中具体车辆的一些特殊信息。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/%E6%8E%A5%E5%8F%A3%E8%AF%A6%E6%83%85_%E5%9B%BE1%E8%BD%A6%E8%BE%86%E8%BF%90%E8%A1%8C%E8%BF%87%E7%A8%8B%E5%B1%9E%E6%80%A7%E7%AA%97%E5%8F%A3.png",alt:"车辆运行过程属性窗口"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);