(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{500:function(t,s,n){"use strict";n.r(s);var e=n(2),a=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"接口详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口详解"}},[t._v("#")]),t._v(" 接口详解")]),t._v(" "),s("h2",{attrs:{id:"_1-全局配置参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-全局配置参数"}},[t._v("#")]),t._v(" 1. 全局配置参数")]),t._v(" "),s("h3",{attrs:{id:"_1-1-main-py文件中config属性说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-main-py文件中config属性说明"}},[t._v("#")]),t._v(" 1.1. main.py文件中config属性说明")]),t._v(" "),s("p",[t._v("在创建TESS NG工厂类实例前创建字典config，config配置了一些重要信息，说明如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n   "__workspace"xxxxxx",\n\t"__netfilepath":"xxx.tess",\n\t"__simuafterload":False,\n\t"__timebycpu":False,\n\t"__custsimubysteps":False\n}\n\n')])])]),s("p",[t._v('"workspace"：指定“当前工作路径”，TESS NG会在“当前工作路径”的Cert子文件夹下读取认证文件，在”SimuResult”子文件夹下保存仿真结果，等。')]),t._v(" "),s("p",[t._v('"netfilepath"：指定TESSNG启动后加载的路网文件全路径名；')]),t._v(" "),s("p",[t._v('"simuafterload"：指定TESSNG加载路网文件（指定的路网文件或临时空白路网文件）后是否启动仿真；')]),t._v(" "),s("p",[t._v('"timebycpu"：指定每个仿真周期时间计算依据，是cpu时钟确定的时长（现实时长），还是由仿真精度确定的时长。在线仿真且算力吃紧时可以尝试设置此属性为True；')]),t._v(" "),s("p",[t._v('"custsimubysteps"：设置TESSNG对插件方法调用频次的依据，设为False表示每个计算周期都会调用一次插件实现的方法，即不依据插件端设置的调用频次；设为True时TESSNG依据插件设置的调用频次对插件实现的PyCustomerSimulator方法进行调用。')]),t._v(" "),s("p",[t._v('python二次开发环境下，如果运行车辆不多，可以将"custsimubysteps"设为False。如果运行车辆较多，可以将"__custsimubysteps"设为True，再设定实现的方法调用频次，使对仿真效率的负面影响最小化。')]),t._v(" "),s("h3",{attrs:{id:"_1-2-插件方法调用频次控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-插件方法调用频次控制"}},[t._v("#")]),t._v(" 1.2. 插件方法调用频次控制")]),t._v(" "),s("p",[t._v("TESSNG调用插件方法的频次是指对插件实现的PyCustomerSimulator接口方法调用频次。")]),t._v(" "),s("p",[t._v('当"__custsimubysteps"设置为True时，'),s("strong",[t._v("默认调用频次比较低，很多低到毫无意义，只为减少调用次数，不至于影响仿真运行效率")]),t._v("。如果某方法被实现，需要对该方法调用频次进行调整。可参见范例。")]),t._v(" "),s("p",[t._v("假设仿真精度是steps，即每秒计算steps次，各方法默认调用频次如下：")]),t._v(" "),s("p",[t._v("1）、车辆相关方法调用频次")]),t._v(" "),s("p",[t._v("计算下一位置前处理方法beforeNextPoint被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次；")]),t._v(" "),s("p",[t._v("具体车辆一个步长计算完成后的处理方法afterStep被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次；")]),t._v(" "),s("p",[t._v("确定是否停止车辆运行并移出路网方法isStopDriving调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次；")]),t._v(" "),s("p",[t._v("2）、驾驶行为相关方法调用频次")]),t._v(" "),s("p",[t._v("重新设置期望速度方法reCalcdesirSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次，如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。")]),t._v(" "),s("p",[t._v("计算最大限速方法calcMaxLimitedSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。")]),t._v(" "),s("p",[t._v("计算限制车道方法calcLimitedLaneNumber被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。")]),t._v(" "),s("p",[t._v("计算车道限速方法calcSpeedLimitByLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。")]),t._v(" "),s("p",[t._v("计算安全变道方法calcChangeLaneSafeDist被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。")]),t._v(" "),s("p",[t._v("重新计算是否可以左强制变道方法reCalcToLeftLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。")]),t._v(" "),s("p",[t._v("重新计算是否可以右强制变道方法reCalcToRightLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。")]),t._v(" "),s("p",[t._v("重新计算是否可以左自由变道方法reCalcToLeftFreely被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。")]),t._v(" "),s("p",[t._v("重新计算是否可以右自由变道方法reCalcToRightFreely被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。")]),t._v(" "),s("p",[t._v("计算跟驰类型后处理方法afterCalcTracingType被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。")]),t._v(" "),s("p",[t._v("连接段上汇入到车道前处理方法beforeMergingToLane被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。")]),t._v(" "),s("p",[t._v("重新计算跟驰状态参数方法reSetFollowingType被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。")]),t._v(" "),s("p",[t._v("计算加速度方法calcAcce被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。")]),t._v(" "),s("p",[t._v("重新计算加速度方法reSetAcce被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。")]),t._v(" "),s("p",[t._v("重置车速方法reSetSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。")]),t._v(" "),s("p",[t._v("重新计算角度方法reCalcAngle被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。")]),t._v(" "),s("p",[t._v("计算后续道路前处理方法beforeNextRoad被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。")]),t._v(" "),s("h3",{attrs:{id:"_1-3-仿真过程中gui界面车辆重绘控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-仿真过程中gui界面车辆重绘控制"}},[t._v("#")]),t._v(" 1.3. 仿真过程中gui界面车辆重绘控制")]),t._v(" "),s("p",[t._v("可以在PyCustomerSimulator的initVehicle(self, pIVehicle:Tessng.IVehicle)方法里通过pIVehicle设置TESSNG对PyCustomerSimulator不同方法调用频次及是否允许插件重绘车辆。")]),t._v(" "),s("p",[t._v("是否允许对车辆重绘方法的调用：默认为False，如果允许，可以传入True，如：pIVehicle.setIsPermitForVehicleDraw(True)。可以通过pIVehicle得到该车辆类型及ID等信息来确定是否允许对该车辆重绘。")]),t._v(" "),s("h2",{attrs:{id:"_2-路网基本元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-路网基本元素"}},[t._v("#")]),t._v(" 2. 路网基本元素")]),t._v(" "),s("h3",{attrs:{id:"_2-1-iroadnet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-iroadnet"}},[t._v("#")]),t._v(" 2.1. IRoadNet")]),t._v(" "),s("p",[t._v("路网基本信息接口，设计此接口的目的是为了TESS NG在导入外源路网时能够保存这些路网的属性，如路网中心点坐标、空间参考等。")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("路网ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def netName(self) -> str: ...")])]),t._v(" "),s("p",[t._v("路网名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def url(self) -> str: ..")])]),t._v(" "),s("p",[t._v("源数据路径，可以是本地文件，可以是网络地址")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def type(self) -> str: ...")])]),t._v(" "),s("p",[t._v('来源分类："TESSNG"表示TESSNG自建；"OpenDrive"表示由OpenDrive数据导入；"GeoJson"表示由geojson数据导入')]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def bkgUrl(self) -> str: ...")])]),t._v(" "),s("p",[t._v("背景路径")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def otherAttrs(self) -> typing.Dict: ...")])]),t._v(" "),s("p",[t._v("其它属性字曲数据")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def explain(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取路网说明")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def centerPoint(self) -> PySide2.QtCore.QPointF: ...")])]),t._v(" "),s("p",[t._v("获取路网中心点位置")]),t._v(" "),s("h3",{attrs:{id:"_2-2-isection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-isection"}},[t._v("#")]),t._v(" 2.2. ISection")]),t._v(" "),s("p",[t._v("路段与连接段的父类接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def gtype(self) -> int: ...")])]),t._v(" "),s("p",[t._v("类型，GLinkType 或 GConnectorType。在Tessng.pyi / NetItemType类中定义了一批常量，每一个数值代表路网上一种元素类型。如：GLinkType代表路段、GConnectorType代表连接段。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isLink(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("是否是路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取ID，如果是Link，id是Link的ID，如果是连接段，id是连接段ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def sectionId(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取ID，如果是Link，id是Link的ID，如果是连接段，id是连接段ID+10000000，从而区分路段与连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def name(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取Section名称，路段名或连接段名")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setName(self, name:str) -> None: ...")])]),t._v(" "),s("p",[t._v("设置Section名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def v3z(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取Section高程")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def length(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取Section长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneObjects(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道与“车道连接”的父类接口列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def fromSection(self, id:int=...) -> Tessng.ISection: ...")])]),t._v(" "),s("p",[t._v("根据ID获取上游Section。如果当前是路段, id 为 0 返回空，否则返回上游指定ID的连接段；如果当前是连接段，id 为 0 返回上游路段，否则返回空。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 根据id获取路段5上游id为2的连接段")]),t._v("\nsectionLink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    sectionConnector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sectionLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fromSection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" sectionConnector "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" sectionConnector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gtype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" NetItemType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GConnectorType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"路段5上游id为2的section为："')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sectionConnector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def toSection(self, id:int=...) -> Tessng.ISection: ...")])]),t._v(" "),s("p",[t._v("根据ID获取下游 Sction。如果当前是路段, id 为 0 返回空，否则返回下游指定ID的连接段；如果当前是连接段，id 为 0 返回下游路段，否则返回空。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setOtherAttr(self, otherAttr:typing.Dict) -> None: ...")])]),t._v(" "),s("p",[t._v("设置路段或连接段其它属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def castToLink(self) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("转换成ILink，如果当前为连接段则返回空")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def castToConnector(self) -> Tessng.IConnector: ...")])]),t._v(" "),s("p",[t._v("转换成IConnector，如果当前为路段则返回空")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def polygon(self) -> PySide2.QtGui.QPolygonF: ...")])]),t._v(" "),s("p",[t._v("获取Section的多边型轮廓顶点构成的多边形")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def workerKey(self) -> int: ...")])]),t._v(" "),s("p",[t._v("Worker节点标识，在分布式环境可用")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setWorkerKey(self, key:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置Worker节点，在分布式环境可用")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def fromWorkerKey(self) -> int: ...")])]),t._v(" "),s("p",[t._v("上游Worker节点标识，在分布式环境可用")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setFromWorkerKey(self, key:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置上游Worker节点标识，在分布式环境可用")]),t._v(" "),s("h3",{attrs:{id:"_2-3-ilaneobject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-ilaneobject"}},[t._v("#")]),t._v(" 2.3 ILaneObject")]),t._v(" "),s("p",[t._v("车道与车道连接的父类接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def gtype(self) -> int: ...")])]),t._v(" "),s("p",[t._v("类型，GLaneType或GLaneConnectorType")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isLane(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("是否车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取ID，如果是Lane，id是Lane的ID， 如果是车道连接，id是“车道连接”ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def length(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取车道或“车道连接”长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def section(self) -> Tessng.ISection: ...")])]),t._v(" "),s("p",[t._v("获取所属的ISection")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def fromLaneObject(self, id:int=...) -> Tessng.ILaneObject: ...")])]),t._v(" "),s("p",[t._v("根据ID获取上游 LaneObject。如果当前是车道, id 为 0 返回空，否则返回上游指定ID的“车道连接”；如果当前是连接段，id 为 0 返回上游车道，否则返回空。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toLaneObject(self, id:int=...) -> Tessng.ILaneObject: ...")])]),t._v(" "),s("p",[t._v("根据ID获取下游 LaneObject。如果当前是车道, id 为 0 返回空，否则返回下游指定ID的“车道连接”；如果当前是连接段，id 为 0 返回下游车道，否则返回空。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def centerBreakPoints(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道或“车道连接”中心线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def leftBreakPoints(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道或“车道连接”左侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def rightBreakPoints(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道或“车道连接”右侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def centerBreakPoint3Ds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道或“车道连接”中心线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def leftBreakPoint3Ds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道或“车道连接”左侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def rightBreakPoint3Ds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道或“车道连接”右侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def leftBreak3DsPartly(self, fromPoint:PySide2.QtCore.QPointF, toPoint:PySide2.QtCore.QPointF) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道或“车道连接”左侧部分断点(三维)集")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromPoint：中心线上某一点作为起点")]),t._v(" "),s("p",[t._v("[in] toPoint：中心线上某一点作为终点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def rightBreak3DsPartly(self, fromPoint:PySide2.QtCore.QPointF, toPoint:PySide2.QtCore.QPointF) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道或“车道连接”右侧部分断点(三维)集")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromPoint：中心线上某一点作为起点")]),t._v(" "),s("p",[t._v("[in] toPoint：中心线上某一点作为终点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distToStartPoint(self, p:PySide2.QtCore.QPointF) -> float: ...")])]),t._v(" "),s("p",[t._v("中心线上一点到起点距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distToStartPointWithSegmIndex(self, p:PySide2.QtCore.QPointF, segmIndex:int=..., bOnCentLine:bool=...) -> float: ...")])]),t._v(" "),s("p",[t._v("中心线上一点到起点距离，附加条件是该点所在车道上的分段序号")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] p：当前中心线上点或附近点的坐标")]),t._v(" "),s("p",[t._v("[in] segmIndex：参数p点所在车道上的分段序号")]),t._v(" "),s("p",[t._v("[in] bOnCentLine：参数p点是否在中心线上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getPointAndIndexByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF, outIndex:int) -> bool: ...")])]),t._v(" "),s("p",[t._v("求中心线起点向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回False，否则返回True")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：中心线起点向前延伸的距离")]),t._v(" "),s("p",[t._v("[out] outPoint：中心线起点向前延伸dist距离后所在点")]),t._v(" "),s("p",[t._v("[out] outIndex：中心线起点向前延伸dist距离后所在分段序号")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 路段5最左侧车道向前延伸140米后所在点及分段序号")]),t._v("\n        link "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        laneObjLeft "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("laneObjects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n        outPoint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QPointF"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        outIndex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n        dist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("140")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" laneObjLeft"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getPointAndIndexByDist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"路段5最左侧车道向前延伸140米后所在点坐标为：({}, {})，分段序号为：{}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("outPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def getPointByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF) -> bool: ...")])]),t._v(" "),s("p",[t._v("求中心线起点向前延伸dist距离后所在点, 如果目标点不在中心线上返回False，否则返回True")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setOtherAttr(self, attr:typing.Dict) -> None: ...")])]),t._v(" "),s("p",[t._v("设置车道或“车道连接”其它属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def castToLane(self) -> Tessng.ILane: ...")])]),t._v(" "),s("p",[t._v("将ILaneObject转换为ILane，如果当前ILaneObject是“车道连接”则返回空")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def castToLaneConnector(self) -> Tessng.ILaneConnector: ...")])]),t._v(" "),s("p",[t._v("将ILaneObject转换为ILaneConnector，如果当前ILaneObject是车道则返回空")]),t._v(" "),s("h3",{attrs:{id:"_2-4-ilink"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-ilink"}},[t._v("#")]),t._v(" 2.4. ILink")]),t._v(" "),s("p",[t._v("路段接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def gtype(self) -> int: ...")])]),t._v(" "),s("p",[t._v("类型，返回GLinkType")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取路段ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def length(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取路段长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def width(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取路段宽度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def z(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取路段高程")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def v3z(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取路段高程，过载ISection的方法")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def name(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取路段名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setName(self, name:str) -> None: ...")])]),t._v(" "),s("p",[t._v("设置路段名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def linkType(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取路段类型，如：城市主干道、城市次干道、人行道等")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setType(self, type:str) -> None: ...")])]),t._v(" "),s("p",[t._v("设置路段类型，路段类型有10种，分别为：高速路、城市快速路、匝道、城市主要干道、次要干道、地方街道、非机动车道、人行道、公交专用道和机非共享")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneCount(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取车道数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def limitSpeed(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取路段最高限速，单位：千米/小时")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setLimitSpeed(self, speed:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置最高限速")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] speed：最高限速，单位：千米/小时")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("link "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建路段省略")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" link "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置路段限速30km/h")]),t._v("\nlink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setLimitSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def minSpeed(self) -> float: ...")])]),t._v(" "),s("p",[t._v("最低限速，单位：千米/小时")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def lanes(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道接口列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneObjects(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道及“车道连接”的接口列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def centerBreakPoints(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("路段中心线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def leftBreakPoints(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("路段左侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def rightBreakPoints(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("路段右侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def centerBreakPoint3Ds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("路段中心线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def leftBreakPoint3Ds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("路段左侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def rightBreakPoint3Ds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("路段右侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def fromConnectors(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("上游连接段列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toConnectors(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("下游连接段列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def fromSection(self, id:int=...) -> Tessng.ISection: ...")])]),t._v(" "),s("p",[t._v("根据ID获取上游Section。如果当前是路段, id 为 0 返回空，否则返回上游指定ID的连接段；如果当前是连接段，id 为 0 返回上游路段，否则返回空。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toSection(self, id:int=...) -> Tessng.ISection: ...")])]),t._v(" "),s("p",[t._v("根据ID获取下游 Sction。如果当前是路段, id 为 0 返回空，否则返回下游指定ID的连接段；如果当前是连接段，id 为 0 返回下游路段，否则返回空。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setOtherAttr(self, otherAttr:typing.Dict) -> None: ...")])]),t._v(" "),s("p",[t._v("设置路段其它属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setLaneTypes(self, lType:typing.Sequence) -> None: ...")])]),t._v(" "),s("p",[t._v('设置车道属性，属性类型包括："机动车道"、"机非共享"、"非机动车道"、"公交专用道"')]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setLaneOtherAtrrs(self, lAttrs:typing.Sequence) -> None: ...")])]),t._v(" "),s("p",[t._v("设置车道其它属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distToStartPoint(self, p:PySide2.QtCore.QPointF) -> float: ...")])]),t._v(" "),s("p",[t._v("中心线上一点到起点距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getPointAndIndexByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF, outIndex:int) -> bool: ...")])]),t._v(" "),s("p",[t._v("求中心线起点向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回False，否则返回True")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：中心线起点向前延伸的距离")]),t._v(" "),s("p",[t._v("[out] outPoint：中心线起点向前延伸dist距离后所在点")]),t._v(" "),s("p",[t._v("[out] outIndex：中心线起点向前延伸dist距离后所在分段序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getPointByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF) -> bool: ...")])]),t._v(" "),s("p",[t._v("求中心线起点向前延伸dist距离后所在点, 如果目标点不在中心线上返回False，否则返回True")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def polygon(self) -> PySide2.QtGui.QPolygonF: ...")])]),t._v(" "),s("p",[t._v("获取路段的多边型轮廓顶点")]),t._v(" "),s("h3",{attrs:{id:"_2-5-ilane"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-ilane"}},[t._v("#")]),t._v(" 2.5. ILane")]),t._v(" "),s("p",[t._v("车道接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def gtype(self) -> int: ...")])]),t._v(" "),s("p",[t._v("类型，车道类型为GLaneType")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取车道ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def link(self) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("获取车道所在路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def section(self) -> Tessng.ISection: ...")])]),t._v(" "),s("p",[t._v("获取车道所属Section")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def length(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取车道长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def width(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取车道宽度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def number(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取车道序号，从0开始（自外侧往内侧）")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def actionType(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取车道的行为类型")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def fromLaneObject(self, id:int=...) -> Tessng.ILaneObject: ...")])]),t._v(" "),s("p",[t._v("根据ID获取上游 LaneObject。id 为 0 返回空，否则返回上游指定ID的“车道连接")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toLaneObject(self, id:int=...) -> Tessng.ILaneObject: ...")])]),t._v(" "),s("p",[t._v("根据ID获取下游 LaneObject。id 为 0 返回空，否则返回下游指定ID的“车道连接”")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def centerBreakPoints(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取车道中心点断点集，断点坐标用像素表示")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def leftBreakPoints(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道左侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def rightBreakPoints(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道右侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def centerBreakPoint3Ds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道中心线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def leftBreakPoint3Ds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道左侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def rightBreakPoint3Ds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道右侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def leftBreak3DsPartly(self, fromPoint:PySide2.QtCore.QPointF, toPoint:PySide2.QtCore.QPointF) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道左侧部分断点(三维)集")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromPoint：中心线上某一点作为起点")]),t._v(" "),s("p",[t._v("[in] toPoint：中心线上某一点作为终点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def rightBreak3DsPartly(self, fromPoint:PySide2.QtCore.QPointF, toPoint:PySide2.QtCore.QPointF) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道右侧部分断点(三维)集")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromPoint：中心线上某一点作为起点")]),t._v(" "),s("p",[t._v("[in] toPoint：中心线上某一点作为终点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distToStartPoint(self, p:PySide2.QtCore.QPointF) -> float: ...")])]),t._v(" "),s("p",[t._v("中心线上一点到起点距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distToStartPointWithSegmIndex(self, p:PySide2.QtCore.QPointF, segmIndex:int=..., bOnCentLine:bool=...) -> float: ...")])]),t._v(" "),s("p",[t._v("中心线上一点到起点距离，附加条件是该点所在车道上的分段序号")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] p：当前中心线上该点坐标")]),t._v(" "),s("p",[t._v("[in] segmIndex：该点所在车道上的分段序号")]),t._v(" "),s("p",[t._v("[in] bOnCentLine：是否在中心线上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getPointAndIndexByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF, outIndex:int) -> bool: ...")])]),t._v(" "),s("p",[t._v("求中心线起点向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回False，否则返回True")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：中心线起点向前延伸的距离")]),t._v(" "),s("p",[t._v("[out] outPoint：中心线起点向前延伸dist距离后所在点")]),t._v(" "),s("p",[t._v("[out] outIndex：中心线起点向前延伸dist距离后所在分段序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getPointByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF) -> bool: ...")])]),t._v(" "),s("p",[t._v("求中心线起点向前延伸dist距离后所在点, 如果目标点不在中心线上返回False，否则返回True")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setOtherAttr(self, attr:typing.Dict) -> None: ...")])]),t._v(" "),s("p",[t._v("设置车道其它属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setLaneType(self, type:str) -> None: ...")])]),t._v(" "),s("p",[t._v("设置车道类型")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v('[in] type：车道类型，选下列几种类型其中一种："机动车道"、"机非共享"、"非机动车道"、 "公交专用道"')]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def polygon(self) -> PySide2.QtGui.QPolygonF: ...")])]),t._v(" "),s("p",[t._v("获取车道的多边型轮廓顶点")]),t._v(" "),s("h3",{attrs:{id:"_2-6-iconnector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-iconnector"}},[t._v("#")]),t._v(" 2.6. IConnector")]),t._v(" "),s("p",[t._v("连接段接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def gtype(self) -> int: ...")])]),t._v(" "),s("p",[t._v("类型，连接段类型为GConnectorType")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取连接段ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def length(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取连接段长度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def z(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取连接段高程")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def v3z(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取连接段高程，过载自ISection的方法")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def name(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取连接段名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setName(self, name:str) -> None: ...")])]),t._v(" "),s("p",[t._v("设置连接段名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def fromLink(self) -> Tessng.ILink: …")])]),t._v(" "),s("p",[t._v("获取起始路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toLink(self) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("获取目标路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def fromSection(self, id:int=...) -> Tessng.ISection: ...")])]),t._v(" "),s("p",[t._v("根据ID获取上游Section。如果当前是路段, id 为 0 返回空，否则返回上游指定ID的连接段；如果当前是连接段，id 为 0 返回上游路段，否则返回空。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toSection(self, id:int=...) -> Tessng.ISection: ...")])]),t._v(" "),s("p",[t._v("根据ID获取下游 Sction。如果当前是路段, id 为 0 返回空，否则返回下游指定ID的连接段；如果当前是连接段，id 为 0 返回下游路段，否则返回空。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def limitSpeed(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取最高限速，以起始路段的最高限速作为连接段的最高限速")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def minSpeed(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取最低限速，以起始路段的最低限速作为连接段的最低限速")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneConnectors(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取“车道连接”列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneObjects(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道及“车道连接”的接口列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setLaneConnectorOtherAtrrs(self, lAttrs:typing.Sequence) -> None: ...")])]),t._v(" "),s("p",[t._v("设置包含的“车道连接”其它属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setOtherAttr(self, otherAttr:typing.Dict) -> None: ...")])]),t._v(" "),s("p",[t._v("设置连接段其它属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def polygon(self) -> PySide2.QtGui.QPolygonF: ...")])]),t._v(" "),s("p",[t._v("获取连接段的多边型轮廓顶点")]),t._v(" "),s("h3",{attrs:{id:"_2-7-ilaneconnector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-ilaneconnector"}},[t._v("#")]),t._v(" 2.7. ILaneConnector")]),t._v(" "),s("p",[t._v("“车道连接”接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def gtype(self) -> int: ...")])]),t._v(" "),s("p",[t._v("类型，GLaneType或GLaneConnectorType，车道连接段为GLaneConnectorType")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取车道连接ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def connector(self) -> Tessng.IConnector: ...")])]),t._v(" "),s("p",[t._v("获取车道连接所在连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def section(self) -> Tessng.ISection: ...")])]),t._v(" "),s("p",[t._v("获取车道所属Section")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def fromLane(self) -> Tessng.ILane: ...")])]),t._v(" "),s("p",[t._v("上游车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toLane(self) -> Tessng.ILane: ...")])]),t._v(" "),s("p",[t._v("下游车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def fromLaneObject(self, id:int=...) -> Tessng.ILaneObject: ...")])]),t._v(" "),s("p",[t._v("根据ID获取上游 LaneObject。id 为 0 返回空，否则返回上游指定ID的“车道连接")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toLaneObject(self, id:int=...) -> Tessng.ILaneObject: ...")])]),t._v(" "),s("p",[t._v("根据ID获取下游 LaneObject。id 为 0 返回空，否则返回下游指定ID的“车道连接”")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def length(self) -> float: ...")])]),t._v(" "),s("p",[t._v("“车道连接”长度，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def centerBreakPoints(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取“车道连接”中心线断点集，断点坐标用像素表示")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def leftBreakPoints(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("“车道连接”左侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def rightBreakPoints(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("“车道连接”右侧线断点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def centerBreakPoint3Ds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("“车道连接”中心线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def leftBreakPoint3Ds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("“车道连接”左侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def rightBreakPoint3Ds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("“车道连接”右侧线断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def leftBreak3DsPartly(self, fromPoint:PySide2.QtCore.QPointF, toPoint:PySide2.QtCore.QPointF) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("“车道连接”左侧部分断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def rightBreak3DsPartly(self, fromPoint:PySide2.QtCore.QPointF, toPoint:PySide2.QtCore.QPointF) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("“车道连接”右侧部分断点(三维)集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distToStartPoint(self, p:PySide2.QtCore.QPointF) -> float: ...")])]),t._v(" "),s("p",[t._v("中心线上一点到起点距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distToStartPointWithSegmIndex(self, p:PySide2.QtCore.QPointF, segmIndex:int=..., bOnCentLine:bool=...) -> float: ...")])]),t._v(" "),s("p",[t._v("中心线上一点到起点距离，附加条件是该点所在车道上的分段序号")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] p：当前中心线上该点坐标")]),t._v(" "),s("p",[t._v("[in] segmIndex：该点所在车道上的分段序号")]),t._v(" "),s("p",[t._v("[in] bOnCentLine：是否在中心线上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getPointAndIndexByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF, outIndex:int) -> bool: ...")])]),t._v(" "),s("p",[t._v("求中心线起始point向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回False，否则返回True")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：中心线起点向前延伸的距离")]),t._v(" "),s("p",[t._v("[out] outPoint：中心线起点向前延伸dist距离后所在点")]),t._v(" "),s("p",[t._v("[out] outIndex：中心线起点向前延伸dist距离后所在分段序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getPointByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF) -> bool: ...")])]),t._v(" "),s("p",[t._v("求中心线起始point向前延伸dist距离后所在点, 如果目标点不在中心线上返回False，否则返回True")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setOtherAttr(self, attr:typing.Dict) -> None: ...")])]),t._v(" "),s("p",[t._v("设置车道连接其它属性")]),t._v(" "),s("h3",{attrs:{id:"_2-8-iconnectorarea"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-iconnectorarea"}},[t._v("#")]),t._v(" 2.8. IConnectorArea")]),t._v(" "),s("p",[t._v("面域接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("面域ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def allConnector(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("面域相关所有连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def centerPoint(self) -> PySide2.QtCore.QPointF: ...")])]),t._v(" "),s("p",[t._v("面域中心点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def workerKey(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取Worker 标识符，分布式环境可用")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setWorkerKey(self, key:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置 Worker 标识符，分布式环境可用")]),t._v(" "),s("h3",{attrs:{id:"_2-9-idispatchpoint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-9-idispatchpoint"}},[t._v("#")]),t._v(" 2.9. IDispatchPoint")]),t._v(" "),s("p",[t._v("发车点接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取发车点ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def name(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取发车名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def link(self) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("获取发车点所在路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def addDispatchInterval(self, vehiCompId:int, interval:int, vehiCount:int) -> int: ...")])]),t._v(" "),s("p",[t._v("为发车点增加发点间隔")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("vehicCompId：车型组成ID")]),t._v(" "),s("p",[t._v("interval：时间段，单位：秒")]),t._v(" "),s("p",[t._v("vehiCount：发车数")]),t._v(" "),s("p",[t._v("返回值：")]),t._v(" "),s("p",[t._v("返回发车间隔ID")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 新建发车点,车型组成ID为动态创建的，600秒发300辆车")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" link1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    dp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createDispatchPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("link1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" dp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        dp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addDispatchInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehiCompositionID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def setDynaModified(self, bModified:bool) -> None: ...")])]),t._v(" "),s("p",[t._v("设置是否被动态修改，默认情况下发车信息被动态修改后，整个文件不能保存，以免破坏原有发车设置")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def polygon(self) -> PySide2.QtGui.QPolygonF: ...")])]),t._v(" "),s("p",[t._v("获取发车点多边型轮廓的顶点")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-10-idecisionpoint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-10-idecisionpoint"}},[t._v("#")]),t._v(" 2.10. IDecisionPoint")]),t._v(" "),s("p",[t._v("决策点接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("决策点ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def name(self) -> str: ...")])]),t._v(" "),s("p",[t._v("决策点名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def link(self) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("决策点所在路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distance(self) -> float: ...")])]),t._v(" "),s("p",[t._v("距路段起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def routings(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("相关决策路径")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setDynaModified(self, bModified:bool) -> None: ...")])]),t._v(" "),s("p",[t._v("设置是否被动态修改，默认情况下发车信息被动态修改后，整个文件不能保存，以免破坏原有发车设置")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] bModified：是否被动态修改，True为被动态修改，False为未被动态修改")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def polygon(self) -> PySide2.QtGui.QPolygonF: ...")])]),t._v(" "),s("p",[t._v("决策点多边型轮廓")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-11-irouting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-11-irouting"}},[t._v("#")]),t._v(" 2.11. IRouting")]),t._v(" "),s("p",[t._v("路径接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("路径ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def calcuLength(self) -> float: ...")])]),t._v(" "),s("p",[t._v("计算路径长度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getLinks(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取路段序列")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def deciPointId(self) -> int: ...")])]),t._v(" "),s("p",[t._v("所属决策点ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def contain(self, pRoad:Tessng.ISection) -> bool: ...")])]),t._v(" "),s("p",[t._v("根据所给道路判断是否在当前路径上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def nextRoad(self, pRoad:Tessng.ISection) -> Tessng.ISection: ...")])]),t._v(" "),s("p",[t._v("根据所给道路求下一条道路")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pRoad：路段或连接段")]),t._v(" "),s("h3",{attrs:{id:"_2-12-isignallamp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-12-isignallamp"}},[t._v("#")]),t._v(" 2.12. ISignalLamp")]),t._v(" "),s("p",[t._v("信号灯接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取信号灯ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setName(self, name:str) -> None: ...")])]),t._v(" "),s("p",[t._v("设置信号灯名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setLampColor(self, colorStr:str) -> None: ...")])]),t._v(" "),s("p",[t._v("设置信号灯颜色")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v('[in] colorStr：字符串表达的颜色，有四种可选，分别是"红"、"绿"、"黄"、"灰"，或者是"R"、"G"、"Y"、"grey"。')]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def signalPhase(self) -> Tessng.ISignalPhase: ...")])]),t._v(" "),s("p",[t._v("获取信号灯所在相位")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def signalGroup(self) -> Tessng.ISignalGroup: ...")])]),t._v(" "),s("p",[t._v("获取信号灯所在灯组")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setDistToStart(self, dist:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置信号灯距车道起点（或“车道连接”起点）距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def polygon(self) -> PySide2.QtGui.QPolygonF: ...")])]),t._v(" "),s("p",[t._v("获取信号灯多边型轮廓")]),t._v(" "),s("h3",{attrs:{id:"_2-13-isignalphase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-13-isignalphase"}},[t._v("#")]),t._v(" 2.13. ISignalPhase")]),t._v(" "),s("p",[t._v("信号相位，接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("相位ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def number(self) -> int: ...")])]),t._v(" "),s("p",[t._v("相位序号，从1开始")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def phaseName(self) -> str: ...")])]),t._v(" "),s("p",[t._v("相位名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def signalGroup(self) -> Tessng.ISignalGroup: ...")])]),t._v(" "),s("p",[t._v("相位所在信号灯组对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def signalLamps(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("本相位下的信号灯列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def listColor(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("相位灯色列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setColorList(self, lColor:typing.Sequence) -> None: ...")])]),t._v(" "),s("p",[t._v("设置信号灯列表")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lColor：灯色时长信息，包含信号灯颜色和信号灯时长")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以L12路段相位直行信号灯相位为例（ID为7），由红90绿32黄3红25改为红10绿110黄3红28")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" method_number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    signalPhase_L12_7 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findSignalPhase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    color_list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 按照红灯、绿灯、黄灯、红灯顺序计算")]),t._v("\n    color_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ColorInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'红'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    color_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ColorInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'绿'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    color_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ColorInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'黄'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    color_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ColorInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'红'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    signalPhase_L12_7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setColorList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("color_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def setNumber(self, number:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置相位序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setPhaseName(self, name:str) -> None: ...")])]),t._v(" "),s("p",[t._v("设置相位名称")]),t._v(" "),s("h3",{attrs:{id:"_2-14-isignalgroup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-14-isignalgroup"}},[t._v("#")]),t._v(" 2.14. ISignalGroup")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("信号灯组ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def groupName(self) -> str: ..")])]),t._v(" "),s("p",[t._v("信号灯组名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def periodTime(self) -> int: ...")])]),t._v(" "),s("p",[t._v("信号周期：单位秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def fromTime(self) -> int: ...")])]),t._v(" "),s("p",[t._v("信号灯组工作的起始时间，自仿真开始计算，单位秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toTime(self) -> int: ...")])]),t._v(" "),s("p",[t._v("信号灯组工作的终止时间，自仿真开始计算，单位秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def phases(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("当前信号灯组下的相位列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setName(self, name:str) -> None: ...")])]),t._v(" "),s("p",[t._v("设置信号灯组名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setPeriodTime(self, period:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置信号周期")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] period：信号周期，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setFromTime(self, time:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置起始时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setToTime(self, time:int) -> None: ...")])]),t._v(" "),s("h3",{attrs:{id:"_2-15-ibusline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-15-ibusline"}},[t._v("#")]),t._v(" 2.15. IBusLine")]),t._v(" "),s("p",[t._v("公交线路接口，接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取公交线路ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def name(self) -> str: ...")])]),t._v(" "),s("p",[t._v("线路名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def length(self) -> float: ...")])]),t._v(" "),s("p",[t._v("长度,单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def dispatchFreq(self) -> int: ...")])]),t._v(" "),s("p",[t._v("发车间隔(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def dispatchStartTime(self) -> int: ...")])]),t._v(" "),s("p",[t._v("发车开始时间(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def dispatchEndTime(self) -> int: ...")])]),t._v(" "),s("p",[t._v("发车结束时间(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def desirSpeed(self) -> float: ...")])]),t._v(" "),s("p",[t._v("期望速度(km/h)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def passCountAtStartTime(self) -> int: ...")])]),t._v(" "),s("p",[t._v("起始载客人数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def links(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("公交线路经过的路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def stations(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("线路所有站点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def stationLines(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("公交站点线路，当前线路相关站点的上下客等参数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setName(self, name:str) -> None: ...")])]),t._v(" "),s("p",[t._v("设置线路名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setDispatchFreq(self, freq:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置发车间隔，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setDispatchStartTime(self, startTime:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置开始发车时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setDispatchEndTime(self, endTime:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置结束发车时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setDesirSpeed(self, desirSpeed:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置线路的期望速度")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建公交线路")]),t._v("\nbusLine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createBusLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("link10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link11"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" busLine "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    busLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setDesirSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def setPassCountAtStartTime(self, count:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置起始载客人数")]),t._v(" "),s("h3",{attrs:{id:"_2-16-ibusstation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-16-ibusstation"}},[t._v("#")]),t._v(" 2.16. IBusStation")]),t._v(" "),s("p",[t._v("公交站点接口，接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取公交站点ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def name(self) -> str: ...")])]),t._v(" "),s("p",[t._v("线路名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneNumber(self) -> int: ...")])]),t._v(" "),s("p",[t._v("公交站点所在车道序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def x(self) -> float: ...")])]),t._v(" "),s("p",[t._v("位置X")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def y(self) -> float: ...")])]),t._v(" "),s("p",[t._v("位置Y")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def length(self) -> float: ...")])]),t._v(" "),s("p",[t._v("长度，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def stationType(self) -> int: ...")])]),t._v(" "),s("p",[t._v("站点类型 1：路边式、2：港湾式")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def link(self) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("公交站点所在路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def lane(self) -> Tessng.ILane: ...")])]),t._v(" "),s("p",[t._v("公交站点所在车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distance(self) -> float: ...")])]),t._v(" "),s("p",[t._v("公交站点的起始位置距路段起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setName(self, name:str) -> None: ...")])]),t._v(" "),s("p",[t._v("设置站点名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setDistToStart(self, dist:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置站点起始点距车道起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：距车道起点距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setLength(self, length:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setType(self, type:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置站点类型")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] type：站点类型，1 路侧式、2 港湾式")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def polygon(self) -> PySide2.QtGui.QPolygonF: ...")])]),t._v(" "),s("p",[t._v("公交站点多边型轮廓的顶点")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-17-ibusstationline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-17-ibusstationline"}},[t._v("#")]),t._v(" 2.17. IBusStationLine")]),t._v(" "),s("p",[t._v("公交站点-线路接口，通过此接口可以获取指定线路某站点运行参数，如靠站时间、下客百分比等，还可以设置这些参数。")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取公交“站点-线路”ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def stationId(self) -> int: ...")])]),t._v(" "),s("p",[t._v("公交站点ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def lineId(self) -> int: ...")])]),t._v(" "),s("p",[t._v("公交线路ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def busParkingTime(self) -> int: ...")])]),t._v(" "),s("p",[t._v("公交车辆停靠时间(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getOutPercent(self) -> float: ...")])]),t._v(" "),s("p",[t._v("下客百分比")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getOnTimePerPerson(self) -> float: ...")])]),t._v(" "),s("p",[t._v("平均每位乘客上车时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getOutTimePerPerson(self) -> float: ...")])]),t._v(" "),s("p",[t._v("平均每位乘客下车时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setBusParkingTime(self, time:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置车辆停靠时间(秒)")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("lStationLine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" busLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stationLines"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lStationLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\nstationLine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lStationLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置车辆停靠时间(秒)")]),t._v("\nstationLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setBusParkingTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def setGetOutPercent(self, percent:float) -> None: ..")])]),t._v(" "),s("p",[t._v("设置下客百分比")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setGetOnTimePerPerson(self, time:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置平均每位乘客上车时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setGetOutTimePerPerson(self, time:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置平均每位乘客下车时间")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-18-ivehicledrivinfocollector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-18-ivehicledrivinfocollector"}},[t._v("#")]),t._v(" 2.18. IVehicleDrivInfoCollector")]),t._v(" "),s("p",[t._v("数据采集器接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取采集器ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def collName(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取采集器名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def onLink(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("是否在路段上，如果True则connector()返回None")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def link(self) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("采集器所在路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def connector(self) -> Tessng.IConnector: ...")])]),t._v(" "),s("p",[t._v("采集器所在连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def lane(self) -> Tessng.ILane: ...")])]),t._v(" "),s("p",[t._v("如果采集器在路段上则lane()返回所在车道，laneConnector()返回None")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneConnector(self) -> Tessng.ILaneConnector: ...")])]),t._v(" "),s("p",[t._v("如果采集器在连接段上则laneConnector返回“车道连接”,lane()返回None")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distToStart(self) -> float: ...")])]),t._v(" "),s("p",[t._v("采集器距离起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def point(self) -> PySide2.QtCore.QPointF: ...")])]),t._v(" "),s("p",[t._v("采集器所在点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def fromTime(self) -> int: ...")])]),t._v(" "),s("p",[t._v("采集器工作起始时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toTime(self) -> int: ...")])]),t._v(" "),s("p",[t._v("采集器工作停止时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def aggregateInterval(self) -> int: ...")])]),t._v(" "),s("p",[t._v("集计数据时间间隔，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setName(self, name:str) -> None: ...")])]),t._v(" "),s("p",[t._v("设置采集器名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setDistToStart(self, dist:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置采集器距车道起点（或“车道连接”起点）距离")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：采集器距离车道起点（或“车道连接”起点）的距离，默认单位：像素")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("collector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createVehiCollectorOnLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leftLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将采集器设置到距路段起点400米处")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" collector "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    collector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setDistToStart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def setFromTime(self, time:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置工作起始时间(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setToTime(self, time:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置工作结束时间(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setAggregateInterval(self, interval:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置集计数据时间间隔(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def polygon(self) -> PySide2.QtGui.QPolygonF: ...")])]),t._v(" "),s("p",[t._v("获取采集器的多边型轮廓顶点")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-19-ivehiclequeuecounter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-19-ivehiclequeuecounter"}},[t._v("#")]),t._v(" 2.19. IVehicleQueueCounter")]),t._v(" "),s("p",[t._v("排队计数器接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取计数器ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def counterName(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取计数器名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def onLink(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("是否在路段上，如果True则connector()返回None")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def link(self) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("计数器所在路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def connector(self) -> Tessng.IConnector: ...")])]),t._v(" "),s("p",[t._v("计数器所在连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def lane(self) -> Tessng.ILane: ...")])]),t._v(" "),s("p",[t._v("如果计数器在路段上则lane()返回所在车道，laneConnector()返回None")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneConnector(self) -> Tessng.ILaneConnector: ...")])]),t._v(" "),s("p",[t._v("如果计数器在连接段上则laneConnector返回“车道连接”,lane()返回None")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distToStart(self) -> float: ...")])]),t._v(" "),s("p",[t._v("计数器距离起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def point(self) -> PySide2.QtCore.QPointF: ...")])]),t._v(" "),s("p",[t._v("计数器所在点")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在路段9最左侧车道100米处创建排队计数器")]),t._v("\ncounter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createVehiQueueCounterOnLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leftLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"计数器所在点坐标为: (')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(", ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(')"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def fromTime(self) -> int: ...")])]),t._v(" "),s("p",[t._v("计数器工作起始时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toTime(self) -> int: ...")])]),t._v(" "),s("p",[t._v("计数器工作停止时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def aggregateInterval(self) -> int: ...")])]),t._v(" "),s("p",[t._v("计数集计数据时间间隔，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setName(self, name:str) -> None: ...")])]),t._v(" "),s("p",[t._v("设置计数器名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setDistToStart(self, dist:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置计数器距车道起点（或“车道连接”起点）距离")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：计数器距离车道起点（或“车道连接”起点）的距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setFromTime(self, time:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置工作起始时间(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setToTime(self, time:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置工作结束时间(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setAggregateInterval(self, interval:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置集计数据时间间隔(秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def polygon(self) -> PySide2.QtGui.QPolygonF: ...")])]),t._v(" "),s("p",[t._v("获取计数器的多边型轮廓顶点")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-20-ivehicletraveldetector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-20-ivehicletraveldetector"}},[t._v("#")]),t._v(" 2.20. IVehicleTravelDetector")]),t._v(" "),s("p",[t._v("行程时间检测器接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取检测器ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def detectorName(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取检测器名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isStartDetector(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("是否检测器起始点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isOnLink_startDetector(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("检测器起点是否在路段上，如果否，则起点在连接段上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isOnLink_endDetector(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("检测器终点是否在路段上，如果否，则终点在连接段上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def link_startDetector(self) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("如果检测器起点在路段上则link_startDetector()返回起点所在路段，laneConnector_startDetector()返回None")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneConnector_startDetector(self) -> Tessng.ILaneConnector: ...")])]),t._v(" "),s("p",[t._v("如果检测器起点在连接段上则laneConnector_startDetector()返回起点“车道连接”,link_startDetector()返回None")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def link_endDetector(self) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("如果检测器终点在路段上则link_endDetector()返回终点所在路段，laneConnector_endDetector()返回None")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneConnector_endDetector(self) -> Tessng.ILaneConnector: ...")])]),t._v(" "),s("p",[t._v("如果检测器终点在连接段上则laneConnector_endDetector()返回终点“车道连接”,link_endDetector()返回None")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distance_startDetector(self) -> float: ...")])]),t._v(" "),s("p",[t._v("检测器起点距离所在车道起点或“车道连接”起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distance_endDetector(self) -> float: ...")])]),t._v(" "),s("p",[t._v("检测器终点距离所在车道起点或“车道连接”起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def point_startDetector(self) -> PySide2.QtCore.QPointF: ...")])]),t._v(" "),s("p",[t._v("检测器起点位置")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def point_endDetector(self) -> PySide2.QtCore.QPointF: ...")])]),t._v(" "),s("p",[t._v("检测器终点位置")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def fromTime(self) -> int: ...")])]),t._v(" "),s("p",[t._v("检测器工作起始时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toTime(self) -> int: ...")])]),t._v(" "),s("p",[t._v("检测器工作停止时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def aggregateInterval(self) -> int: ...")])]),t._v(" "),s("p",[t._v("集计数据时间间隔，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setName(self, name:str) -> None: ...")])]),t._v(" "),s("p",[t._v("设置检测器名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setDistance_startDetector(self, dist:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置检测器起点距车道起点（或“车道连接”起点）距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setDistance_endDetector(self, dist:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置检测器终点距车道起点（或“车道连接”起点）距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setFromTime(self, time:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置工作起始时间，单位：秒")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("lVehicleTravelDetector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createVehicleTravelDetector_link2link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("550")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" lVehicleTravelDetector "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" detector "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" lVehicleTravelDetector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          detector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setFromTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          detector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setToTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def setToTime(self, time:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置工作结束时间，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def aggregateInterval(self) -> int: ...")])]),t._v(" "),s("p",[t._v("设置集计数据时间间隔，单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def polygon_startDetector(self) -> PySide2.QtGui.QPolygonF: ...")])]),t._v(" "),s("p",[t._v("获取行程时间检测器起始点多边型轮廓的顶点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def polygon_endDetector(self) -> PySide2.QtGui.QPolygonF: ...")])]),t._v(" "),s("p",[t._v("获取行程时间检测器终止点多边型轮廓的顶点")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-21-iguidarrow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-21-iguidarrow"}},[t._v("#")]),t._v(" 2.21. IGuidArrow")]),t._v(" "),s("p",[t._v("导向箭头接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取导向箭头ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def lane(self) -> Tessng.ILane: ...")])]),t._v(" "),s("p",[t._v("获取导向箭头所在的车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def length(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取导向箭头的长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distToTerminal(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取导向箭头到的终点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def polygon(self) -> PySide2.QtGui.QPolygonF: ...")])]),t._v(" "),s("p",[t._v("获取导向箭头的多边型轮廓的顶点")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-22-iaccidentzone"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-22-iaccidentzone"}},[t._v("#")]),t._v(" 2.22. IAccidentZone")]),t._v(" "),s("p",[t._v("事故区接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取事故区ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def name(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取事故区名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def location(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取事故区距所在路段起点的距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def zoneLength(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取事故区长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def section(self) -> Tessng.ISection: ...")])]),t._v(" "),s("p",[t._v("获取事故区所在的路段或连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def roadId(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取事故区所在路段的ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def roadType(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取事故区所在的道路类型(路段或连接段)")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取事故区所在的道路类型")]),t._v("\nzone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createAccidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("accidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def laneObjects(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取事故区占用的车道列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def level(self) -> int: ...")])]),t._v(" "),s("p",[t._v("事故等级，分4级，默认为未定等级(0级)持续时间未定，事故区不会自动移除，一般事故(1级)持续时间10分钟，普通事故(2)级持续时间1小时，重大事故(3级)持续时间3小时")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def duration(self) -> int: ...")])]),t._v(" "),s("p",[t._v("事故持续时间，单位：秒。如果值为0，事故持续时间由事故等级决定，大于0则由此值决定")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def needRescue(self) -> int: ...")])]),t._v(" "),s("p",[t._v("是否需要救援，如果为-1，由事故等级决定，重大事故需要求援，如为0不需救援，如果为1需要救援")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def waitTimeBeforeRescue(self) -> int: ...")])]),t._v(" "),s("p",[t._v("救援车辆发车时间距事故产生的时间，默认单位：秒，默认60秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def rescueTime(self) -> int: ...")])]),t._v(" "),s("p",[t._v("救援时间，默认60秒，即救援车辆停靠在事故区旁的时间，单位秒")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_2-23-iroadworkzone"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-23-iroadworkzone"}},[t._v("#")]),t._v(" 2.23. IRoadWorkZone")]),t._v(" "),s("p",[t._v("施工区接口，方法如下：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取施工区ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def name(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取施工区名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def location(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取施工区距所在路段起点的距离，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def zoneLength(self) -> float: ...")])]),t._v(" "),s("p",[t._v("获取施工区长度，默认单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def limitSpeed(self) -> float: ...")])]),t._v(" "),s("p",[t._v("施工区限速（最大车速:像素/秒）")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def sectionId(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取施工区所在路段或连接段的ID")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取路段9上施工区所在路段的ID")]),t._v("\nzone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createRoadWorkZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"施工区所在路段或连接段ID为:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" zone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sectionId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def sectionName(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取施工区所在路段或连接段的名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def sectionType(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取施工区所在道路的道路类型，link:路段, connector:连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneObjects(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取施工区所占的车道列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def duration(self) -> int: ...")])]),t._v(" "),s("p",[t._v("施工持续时间，单位：秒。自仿真过程创建后，持续时间大于此值，则移除")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_3-车辆及驾驶行为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-车辆及驾驶行为"}},[t._v("#")]),t._v(" 3. 车辆及驾驶行为")]),t._v(" "),s("h3",{attrs:{id:"_3-1-ivehicle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-ivehicle"}},[t._v("#")]),t._v(" 3.1. IVehicle")]),t._v(" "),s("p",[t._v("车辆接口，用于访问、控制车辆。通过此接口可以读取车辆属性，初始化时设置车辆部分属性，仿真过程读取当前道路情况、车辆前后左右相邻车辆及与它们的距离，可以在车辆未驰出路网时停止车辆运行等。")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def id(self) -> int: ...")])]),t._v(" "),s("p",[t._v("车辆ID，车辆ID的组成方式为 x * 100000 + y，每个发车点的x值不一样，从1开始递增，y是每个发车点所发车辆序号，从1开始递增。第一个发车点所发车辆ID从100001开始递增，第二个发车点所发车辆ID从200001开始递增。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def startLink(self) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("车辆进入路网时起始路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def startSimuTime(self) -> int: ...")])]),t._v(" "),s("p",[t._v("车辆进入路网时起始时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def roadId(self) -> int: ...")])]),t._v(" "),s("p",[t._v("车辆所在路段或连接段ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def road(self) -> int: ...")])]),t._v(" "),s("p",[t._v("道路，如果在路段上返回ILink, 如果在连接段上返回IConnector")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def section(self) -> Tessng.ISection: ...")])]),t._v(" "),s("p",[t._v("车辆所在的Section，即路段或连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneObj(self) -> Tessng.ILaneObject: ...")])]),t._v(" "),s("p",[t._v("车辆所在的车道或“车道连接”")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def segmIndex(self) -> int: ...")])]),t._v(" "),s("p",[t._v("车辆在当前LaneObject上分段序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def roadIsLink(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("车辆所在道路是否路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def roadName(self) -> str: ...")])]),t._v(" "),s("p",[t._v("道路名")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def initSpeed(self, speed:float=...) -> float: ...")])]),t._v(" "),s("p",[t._v("初始化车速")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] speed：车速，如果大于0，车辆以指定的速度从发车点出发，单位：像素/秒")]),t._v(" "),s("p",[t._v("返回：初始化车速，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def initLane(self, laneNumber:int, dist:float=..., speed:float=...) -> None: ...")])]),t._v(" "),s("p",[t._v("初始化车辆, laneNumber:车道序号，从0开始；dist，距起点距离，单位像素；speed：车速，像素/秒")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] laneNumber：车道序号，从0开始")]),t._v(" "),s("p",[t._v("[in] dist：距离路段起点距离，单位：像素")]),t._v(" "),s("p",[t._v("[in] speed：起动时的速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化飞机位置")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    IVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setVehiType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    IVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("initLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def initLaneConnector(self, laneNumber:int, toLaneNumber:int, dist:float=..., speed:float=...) -> None: ...")])]),t._v(" "),s("p",[t._v("初始化车辆, laneNumber: “车道连接”起始车道在所在路段的序号，从0开始自右往左；toLaneNumber:“车道连接”目标车道在所在路段的序号，从0开始自右往左， dist，距起点距离，单位像素；speed：车速，像素/秒")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] laneNumber：车道序号，从0开始自右侧至左侧")]),t._v(" "),s("p",[t._v("[in] toLaneNumber：车道序号，从0开始自右侧至左侧")]),t._v(" "),s("p",[t._v("[in] dist：距离路段起点距离，单位：像素")]),t._v(" "),s("p",[t._v("[in] speed：起动时的速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setVehiType(self, code:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置车辆类型，车辆被创建时已确定了类型，通过此方法可以改变车辆类型")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] code：车辆类型编码")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def length(self) -> float: ...")])]),t._v(" "),s("p",[t._v("路段或连接段长度，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setLength(self, len:float, bRestWidth:bool=...) -> None: ...")])]),t._v(" "),s("p",[t._v("设置车辆长度")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] len：车辆长度，单位：像素")]),t._v(" "),s("p",[t._v("[in] bRestWidth：是否同比例约束宽度，默认为False")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneId(self) -> int: ...")])]),t._v(" "),s("p",[t._v("如果toLaneId() 小于等于0，那么laneId()获取的是当前所在车道ID，如果toLaneId()大于0，则车辆在“车道连接”上，laneId()获取的是上游车道ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toLaneId(self) -> int: ...")])]),t._v(" "),s("p",[t._v("下游车道ID。如果小于等于0，车辆在路段的车道上，否则车辆在连接段的“车道连接”上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def lane(self) -> Tessng.ILane: ...")])]),t._v(" "),s("p",[t._v("获取当前车道，如果车辆在“车道连接”上，获取的是“车道连接”的上游车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toLane(self) -> Tessng.ILane: ...")])]),t._v(" "),s("p",[t._v("如果车辆在“车道连接”上，返回“车道连接”的下游车道，如果当前不在“车道连接”上，返回对象为空")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneConnector(self) -> Tessng.ILaneConnector: ...")])]),t._v(" "),s("p",[t._v("获取当前“车道连接”，如果在车道上，返回空")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def currBatchNumber(self) -> int: ...")])]),t._v(" "),s("p",[t._v("当前仿真计算批次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def roadType(self) -> int: ...")])]),t._v(" "),s("p",[t._v("车辆所在道路类型。包NetItemType中定义了一批常量，每一个数值代表路网上一种元素类型。如：GLinkType代表路段、GConnectorType代表连接段。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def limitMaxSpeed(self) -> float: ...")])]),t._v(" "),s("p",[t._v("车辆所在路段或连接段最大限速，兼顾到车辆的期望速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def limitMinSpeed(self) -> float: ...")])]),t._v(" "),s("p",[t._v("车辆所在路段或连接段最小限速，兼顾到车辆的期望速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehicleTypeCode(self) -> int: ...")])]),t._v(" "),s("p",[t._v("车辆类型编码。打开TESSNG，通过菜单“车辆”->“车辆类型”打开车辆类型编辑窗体，可以看到不同类型车辆的编码")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehicleTypeName(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取车辆类型名，如“小客车”")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def name(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取车辆名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehicleDriving(self) -> Tessng.IVehicleDriving: ...")])]),t._v(" "),s("p",[t._v("获取车辆驾驶行为接口")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def driving(self) -> None: ...")])]),t._v(" "),s("p",[t._v("驱动车辆。在每个运算周期，每个在运行的车辆被调用一次该方法")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def pos(self) -> PySide2.QtCore.QPointF: ...")])]),t._v(" "),s("p",[t._v("当前位置，横纵坐标单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def zValue(self) -> float: ...")])]),t._v(" "),s("p",[t._v("当前高程，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def acce(self) -> float: ...")])]),t._v(" "),s("p",[t._v("当前加速度，单位：像素/秒^2")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def currSpeed(self) -> float: ...")])]),t._v(" "),s("p",[t._v("当前速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def angle(self) -> float: ...")])]),t._v(" "),s("p",[t._v("当前角度，北向0度顺时针")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isStarted(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("是否在运行，如果返回False，表明车辆已驰出路网或尚未上路")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehicleFront(self) -> Tessng.IVehicle: ...")])]),t._v(" "),s("p",[t._v("前车")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehicleRear(self) -> Tessng.IVehicle: ...")])]),t._v(" "),s("p",[t._v("后车")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehicleLFront(self) -> Tessng.IVehicle: ...")])]),t._v(" "),s("p",[t._v("左前车")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehicleLRear(self) -> Tessng.IVehicle: ...")])]),t._v(" "),s("p",[t._v("左后车")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehicleRFront(self) -> Tessng.IVehicle: ...")])]),t._v(" "),s("p",[t._v("右前车")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehicleRRear(self) -> Tessng.IVehicle: ...")])]),t._v(" "),s("p",[t._v("右后车")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiDistFront(self) -> float: ...")])]),t._v(" "),s("p",[t._v("前车间距，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiSpeedFront(self) -> float: ...")])]),t._v(" "),s("p",[t._v("前车速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiHeadwayFront(self) -> float: ...")])]),t._v(" "),s("p",[t._v("距前车时距")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiDistRear(self) -> float: ...")])]),t._v(" "),s("p",[t._v("后车间距，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiSpeedRear(self) -> float: ...")])]),t._v(" "),s("p",[t._v("后车速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiHeadwaytoRear(self) -> float: ...")])]),t._v(" "),s("p",[t._v("距后车时距")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiDistLLaneFront(self) -> float: ...")])]),t._v(" "),s("p",[t._v("相邻左车道前车间距，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiSpeedLLaneFront(self) -> float: ...")])]),t._v(" "),s("p",[t._v("相邻左车道前车速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiDistLLaneRear(self) -> float: ...")])]),t._v(" "),s("p",[t._v("相邻左车道后车间距，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiSpeedLLaneRear(self) -> float: ...")])]),t._v(" "),s("p",[t._v("相邻左车道后车速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiDistRLaneFront(self) -> float: ...")])]),t._v(" "),s("p",[t._v("相邻右车道前车间距，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiSpeedRLaneFront(self) -> float: ...")])]),t._v(" "),s("p",[t._v("相邻右车道前车速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiDistRLaneRear(self) -> float: ...")])]),t._v(" "),s("p",[t._v("相邻右车道后车间距，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiSpeedRLaneRear(self) -> float: ...")])]),t._v(" "),s("p",[t._v("相邻右车道后车速度，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setIsPermitForVehicleDraw(self, bDraw:bool) -> None: ...")])]),t._v(" "),s("p",[t._v("设置是否允许插件绘制车辆")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def lLaneObjectVertex(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("车道或车道连接中心线内点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def routing(self) -> Tessng.IRouting: ...")])]),t._v(" "),s("p",[t._v("当前路径")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def picture(self) -> PySide2.QtGui.QPicture: ...")])]),t._v(" "),s("p",[t._v("获取车辆图片")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def boundingPolygon(self) -> PySide2.QtGui.QPolygonF: ...")])]),t._v(" "),s("p",[t._v("获取车辆由方向和长度决定的四个拐角构成的多边型")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setTag(self, tag:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置标签表示的状态")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def tag(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取标签表示的状态")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setTextTag(self, text:str) -> None: ...")])]),t._v(" "),s("p",[t._v("设置文本信息，用于在运行过程保存临时信息，方便开发")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def textTag(self) -> str: ...")])]),t._v(" "),s("p",[t._v("文本信息，运行过程临时保存的信息，方便开发")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setJsonInfo(self, info:typing.Dict) -> None: ...")])]),t._v(" "),s("p",[t._v("设置json格式数据")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def jsonInfo(self) -> typing.Dict: ...")])]),t._v(" "),s("p",[t._v("返回json格式数据")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def jsonProperty(self, propName:str) -> typing.Any: ...")])]),t._v(" "),s("p",[t._v("返回json字段值")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setJsonProperty(self, key:str, value:typing.Any) -> None: ...")])]),t._v(" "),s("p",[t._v("设置json数据属性")]),t._v(" "),s("p",[s("strong",[t._v("以下方法设置"),s("strong",[s("strong",[t._v("TESS NG")])]),t._v("调用与车辆及驾驶行为相关方法时的调用频次")])]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_afterCalcTracingType(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置计算跟驰类型后处理方法afterCalcTracing被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_afterStep(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置车辆一个计算周期后的处理方法afterStep被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_beforeMergingToLane(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置车辆在连接段汇入前处理方法beforeMergingToLane被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_beforeNextRoad(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置计算后续道路前处理方法beforeNextRoad被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_calcAcce(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置计算加速度方法calcAcce被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_calcChangeLaneSafeDist(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置计算安全变道距离方法calcChangeLaneSafeDist被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_calcDistToEventObj(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置计算到事件对象距离方法calcDistToEventObj被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_calcLimitedLaneNumber(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置计算限行车道方法calcLinitedLaneNumber被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_calcMaxLimitedSpeed(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置计算最大限速方法calcMaxLinitedSpeed被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_calcSpeedLimitByLane(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置计算车道限速方法calcSpeedLimitByLane被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_isStopDriving(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置是否停止运行方法isStopDriving被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_reCalcAngle(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置重新计算角度方法reCalcAngle被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_reCalcToLeftFreely(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置计算左自由变道方法reCalcToLeftFreely被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_reCalcToLeftLane(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置计算左强制变道方法reCalcToLeftLane被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_reCalcToRightFreely(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置计算右自由变道方法reCalcToRightFreely被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_reCalcToRightLane(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置计算右强制变道方法reCalcToRightLane被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_reCalcdesirSpeed(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置重新计算期望速度方法reCalcdesirSpeed被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_reSetAcce(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置重新计算加速度方法reSetAcce被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_reSetFollowingType(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置重新计算跟驰类型方法reSetFollowingType被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSteps_reSetSpeed(self, steps:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置重新计算车速方法reSetSpeed被调用频次，即steps个计算周期调用1次")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_3-2-ivehicledriving"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-ivehicledriving"}},[t._v("#")]),t._v(" 3.2. IVehicleDriving")]),t._v(" "),s("p",[t._v("驾驶行为接口，通过此接口可以控制车辆的左右变道、设置车辆角度，对车辆速度、坐标位置等进行控制，可以在路网中间停止车辆运行，将车辆移出路网，等等。")]),t._v(" "),s("p",[t._v("接口方法：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehicle(self) -> Tessng.IVehicle: ...")])]),t._v(" "),s("p",[t._v("当前驾驶车辆")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getRandomNumber(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取随机数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def nextPoint(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("计算下一点位置，过程包括计算车辆邻车关系、公交车是否进站是否出站、是否变道、加速度、车速、移动距离、跟驰类型、轨迹类型等")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def zeroSpeedInterval(self) -> int: ...")])]),t._v(" "),s("p",[t._v("当前车速为零持续时间(毫秒)")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isHavingDeciPointOnLink(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("当前是否在路段上且有决策点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def followingType(self) -> int: ...")])]),t._v(" "),s("p",[t._v("跟驰车辆的类型，即当前车辆前车的类型，分为：0：停车，1: 正常，5：急减速，6：急加速，7：汇入， 8：穿越，9：协作减速，10：协作加速，11：减速待转，12：加速待转")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isOnRouting(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("当前是否在路径上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def stopVehicle(self) -> None: ...")])]),t._v(" "),s("p",[t._v("停止运行，车辆移出路网")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def angle(self) -> float: ...")])]),t._v(" "),s("p",[t._v("旋转角，北向0度顺时针")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setAngle(self, angle:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置车辆旋转角")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] angle：旋转角，一周360度")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("  vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("         \n    vehi_currentDistToEnd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehicleDriving"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("distToEndpoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("  p2m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi_currentDistToEnd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("            \n        vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehicleDriving"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setAngle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("angle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("45.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def euler(self, bPositive:bool=...) -> PySide2.QtGui.QVector3D: ...")])]),t._v(" "),s("p",[t._v("返回车辆欧拉角")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] bPositive：车头方向是否正向计算，如果bPosiDire为False则反向计算")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def desirSpeed(self) -> float: ...")])]),t._v(" "),s("p",[t._v("当前期望速度，与车辆自身期望速度和道路限速有关，不大于道路限速，单位：像素/秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getCurrRoad(self) -> Tessng.ISection: ...")])]),t._v(" "),s("p",[t._v("返回当前所在路段或连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getNextRoad(self) -> Tessng.ISection: ...")])]),t._v(" "),s("p",[t._v("下一路段或连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def differToTargetLaneNumber(self) -> int: ...")])]),t._v(" "),s("p",[t._v("与目标车道序号的差值，不等于0表示有强制变道意图，大于0有左变道意图，小于0有右变道意图，绝对值大于0表示需要强制变道次数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toLeftLane(self) -> None: ...")])]),t._v(" "),s("p",[t._v("左变道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def toRightLane(self) -> None: ...")])]),t._v(" "),s("p",[t._v("右变道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneNumber(self) -> int: ...")])]),t._v(" "),s("p",[t._v("当前车道序号，最右侧序号为0")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def initTrace(self) -> None: ...")])]),t._v(" "),s("p",[t._v("初始化轨迹")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setTrace(self, lPoint:typing.Sequence) -> None: ...")])]),t._v(" "),s("p",[t._v("设置轨迹")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lPoint：轨迹点坐标集合")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def calcTraceLength(self) -> None: ...")])]),t._v(" "),s("p",[t._v("计算轨迹长度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def tracingType(self) -> int: ...")])]),t._v(" "),s("p",[t._v("返回轨迹类型，分为：0：跟驰，1：左变道，2：右变道，3：左虚拟変道，4：右虚拟变道，5：左转待转，6：右转待转，7：入湾，8：出湾")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setTracingType(self, type:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置轨迹类型")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setLaneNumber(self, number:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置当前车道序号")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] number：车道序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def currDistance(self) -> float: ...")])]),t._v(" "),s("p",[t._v("当前计算周期移动距离，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def currDistanceInRoad(self) -> float: ...")])]),t._v(" "),s("p",[t._v("当前路段或连接上已行驶距离，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setCurrDistanceInRoad(self, dist:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置当前路段已行驶距离")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：距离，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setVehiDrivDistance(self, dist:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置当前已行驶总里程")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist：总里程，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getVehiDrivDistance(self) -> float: ...")])]),t._v(" "),s("p",[t._v("已行驶总里程")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def currDistanceInSegment(self) -> float: ...")])]),t._v(" "),s("p",[t._v("当前分段已行驶距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setCurrDistanceInSegment(self, dist:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置当前分段已行驶的距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSegmentIndex(self, index:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置分段序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setCurrDistanceInTrace(self, dist:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置曲化轨迹上行驶的距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setIndexOfSegmInTrace(self, index:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置曲化轨迹上的分段序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setChangingTracingType(self, b:bool) -> None: ...")])]),t._v(" "),s("p",[t._v("设置是否改变轨迹，当设为True时会对轨迹初始化，如设轨迹分段序号为0，等")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def currDistance(self) -> float: ...")])]),t._v(" "),s("p",[t._v("当前时间段移动距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setRouting(self, pRouting:Tessng.IRouting) -> bool: ...")])]),t._v(" "),s("p",[t._v("设置路径，外界设置的路径不一定有决策点，可能是临时创建的，如果车辆不在此路径上则设置不成功并返回False")]),t._v(" "),s("p",[t._v("[in] pRouting：路径")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改路径（L1所有车辆均修改为右转路径）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" vehi "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" allVehiStarted_lst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改车辆路径")]),t._v("\n        decisionPoints_lst "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decisionPoints"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        decisionPoint_link1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" decisionPoint "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" decisionPoints_lst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" decisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                decisionPoint_link1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decisionPoint\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n        decisionPoint_link1_routings_lst "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" decisionPoint_link1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            decisionPoint_link1_routings_lst "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decisionPoint_link1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("routings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decisionPoint_link1_routings_lst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("routing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" decisionPoint_link1_routings_lst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehicleDriving"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setRouting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decisionPoint_link1_routings_lst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{}车辆修改路径成功。"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def setSegmentIndex(self, index:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置分段序号")]),t._v(" "),s("p",[t._v("[in] index：分段序号")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def currDistanceInSegment(self) -> float: ...")])]),t._v(" "),s("p",[t._v("当前在分段上已行驶距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setCurrDistanceInSegment(self, dist:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置在分段上已行驶距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setX(self, posX:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置横坐标")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] posX：横坐标：单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setY(self, posY:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置纵坐标")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] posY：纵坐标：单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setV3z(self, v3z:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置高程坐标")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] v3z：高程坐标：单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def changingTrace(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("变轨点集，车辆不在车道中心线或“车道连接”中心线上时的轨迹，如变道过程的轨迹点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def changingTraceLength(self) -> float: ...")])]),t._v(" "),s("p",[t._v("变轨长度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distToStartPoint(self, fromVehiHead:bool=..., bOnCentLine:bool=...) -> float: ...")])]),t._v(" "),s("p",[t._v("在车道或车道连接上到起点距离")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromVehiHead：是否从车头计算，如果为False，从车辆中心点计算，默认值为False")]),t._v(" "),s("p",[t._v("[in] bOnCentLine：当前是否在中心线上")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def distToEndpoint(self, fromVehiHead:bool=...) -> float: ...")])]),t._v(" "),s("p",[t._v("在车道或“车道连接”上车辆到终端距离")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromVehiHead：是否从车头计算，如果为False，从车辆中心点计算，默认值为False")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setRouting(self, pRouting:Tessng.IRouting) -> bool: ...")])]),t._v(" "),s("p",[t._v("设置路径，外界设置的路径不一定有决策点，可能是临时创建的，如果车辆不在此路径上则设置不成功并返回False")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def routing(self) -> Tessng.IRouting: ...")])]),t._v(" "),s("p",[t._v("当前路径")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def moveToLane(self, pLane:Tessng.ILane, dist:float) -> bool: ...")])]),t._v(" "),s("p",[t._v("将车辆移到另一条车道上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLane：目标车道")]),t._v(" "),s("p",[t._v("[in] dist：到目标车道起点距离，单位：像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def moveToLaneConnector(self, pLaneConnector:Tessng.ILaneConnector, dist:float) -> bool: ...")])]),t._v(" "),s("p",[t._v("将车辆移到另一条车道连接上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLaneConnector：目标车道")]),t._v(" "),s("p",[t._v("[in] dist：到目标车道起点距离，单位：像素")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 20秒时，移动飞机")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" simuTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查找飞机和id为1的车道")]),t._v("\n    plane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("simuInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100001")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    lane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" plane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehicleDriving"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("moveToLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"移动飞机成功"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def move(self, pILaneObject:Tessng.ILaneObject, dist:float) -> bool: ...")])]),t._v(" "),s("p",[t._v("移动车辆到到另一条车道或“车道连接”")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pILaneObject：目标车道或“车道连接”")]),t._v(" "),s("p",[t._v("[in] dist：到目标车道起点距离，单位：像素")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 车辆位置移动（以L5路段上的车辆为例，在3秒时直接将该车移动过路口）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" simuTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vehi "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("enumerate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allVehiStarted_lst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            next_link "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            laneObjs_next_link_lst "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next_link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("laneObjects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehicleDriving"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("move"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("laneObjs_next_link_lst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("laneObjs_next_link_lst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                           "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{}车辆移动成功。"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def changingTrace(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("变轨点集，如变道轨迹、公交车进入港湾式站点轨迹。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def changingTraceLength(self) -> float: ...")])]),t._v(" "),s("p",[t._v("变轨长度，如变道轨迹长度、公交车进入港湾式站点轨迹长度，单位：像素。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def calcTraceLength(self) -> None: ...")])]),t._v(" "),s("p",[t._v("计算变轨长度，如计算变道轨迹长度等。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setTrace(self, lPoint:typing.Sequence) -> None: ...")])]),t._v(" "),s("p",[t._v("设置变轨轨迹")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setTracingType(self, type:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置轨迹类型")]),t._v(" "),s("p",[t._v("[in] type：轨迹类型 0：跟驰，1：左变道，2：右变道，3：左虚拟変道, 4：右虚拟变道，5：左转待转，6：右转待转, 7：入湾，8：出湾")]),t._v(" "),s("p",[t._v("？？？缺失 V3.1版本的冲突参数修改，优先级修改API ？？")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_4-自定义窗口组件tessinterface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-自定义窗口组件tessinterface"}},[t._v("#")]),t._v(" 4. 自定义窗口组件TessInterface")]),t._v(" "),s("p",[t._v("TessInterface 是TESSN对外暴露的顶级接口，下面有三个子接口：NetInterface、SimuInterface、GuiInterface，分别用于访问或控制路网、仿真过程和用户交互界面。")]),t._v(" "),s("p",[t._v("获取顶层接口的方法是：tessngIFace()。")]),t._v(" "),s("p",[t._v("下面是几个接口方法的说明：")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def config(self) -> typing.Dict: ...")])]),t._v(" "),s("p",[t._v("获取json对象，其中保存了config.json配置文件中的信息。")]),t._v(" "),s("p",[t._v("每次加载路网时会重新加载配置信息，上次通过setConfigProperty()方法设置的属性会在重新加载路网后丢失。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setConfigProperty(self, key:str, value:typing.Any) -> None: ...")])]),t._v(" "),s("p",[t._v("设置配置属性")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def releasePlugins(self) -> None: ...")])]),t._v(" "),s("p",[t._v("卸载并释放插件")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def netInterface(self) -> Tessng.NetInterface: ...")])]),t._v(" "),s("p",[t._v("返回用于访问控制路网的接口NetInterface")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def simuInterface(self) -> Tessng.SimuInterface: ...")])]),t._v(" "),s("p",[t._v("返回用于控制仿真过程的接口SimuInterface")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def guiInterface(self) -> Tessng.GuiInterface: ...")])]),t._v(" "),s("p",[t._v("返回用于访问控制用户介面的接口GuiInterface")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def loadPluginFromMem(self, pPlugin:Tessng.TessPlugin) -> bool: ...")])]),t._v(" "),s("p",[t._v("从内存加载插件，此方法便于用户基于API进行二次开发。")]),t._v(" "),s("p",[t._v("下面对三个子接口进行详解：")]),t._v(" "),s("h3",{attrs:{id:"_4-1-netinterface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-netinterface"}},[t._v("#")]),t._v(" 4.1. NetInterface")]),t._v(" "),s("p",[t._v("NetInterface是TessInterface的子接口，用于访问、控制路网的接口，通过这个接口可以从文件加载路网、创建路段、连接段、发车点等。")]),t._v(" "),s("p",[t._v("下面对NetInterface接口方法作详细解释。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def openNetFle(self, filePath:str) -> None: ...")])]),t._v(" "),s("p",[t._v("打开保存在文件中的路网")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] filePath：路网文件全路径名")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("openNetFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C:/TESSNG/Example/杭州武林门区域路网公交优先方案.tess"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def openNetByNetId(self, netId:int) -> None: ...")])]),t._v(" "),s("p",[t._v("从专业数据库加载路网")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def saveRoadNet(self) -> None: ...")])]),t._v(" "),s("p",[t._v("保存路网")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def netFilePath(self) -> str: ...")])]),t._v(" "),s("p",[t._v("获取路网文件全路径名，如果是专业数据保存的路网，返回的是路网ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def roadNet(self) -> Tessng.IRoadNet: ...")])]),t._v(" "),s("p",[t._v("获取路网对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def netAttrs (self) -> Tessng.IRoadNet: ...")])]),t._v(" "),s("p",[t._v("获取路网对象，如果路网是从opendrive导入的，此路网对象可能保存了路网中心点所在的经纬度坐标，以及大地坐标等信息")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setNetAttrs(self, name:str, sourceType:str=..., centerPoint:PySide2.QtCore.QPointF=..., backgroundUrl:str=..., otherAttrsJson:typing.Dict=...) -> Tessng.IRoadNet: ...")])]),t._v(" "),s("p",[t._v("设置路网基本信息")]),t._v(" "),s("p",[s("strong",[t._v("参数：")])]),t._v(" "),s("p",[t._v("[in] name:路网名称")]),t._v(" "),s("p",[t._v("[in] centerPoint:中心点坐标所在路网，默认为(0,0) ，用户也可以将中心点坐标保存到otherAttrsJson字段里")]),t._v(" "),s("p",[t._v("[in] sourceType:数据来源分类，默认为 “TESSNG”，表示路网由TESSNG软件直接创建。取值“OPENDRIVE”，表示路网是经过opendrive路网导入而来")]),t._v(" "),s("p",[t._v("[in] backgroundUrl：底图路径")]),t._v(" "),s("p",[t._v("[in] otherAttrsJson:保存在json对象中的其它属性，如大地坐标等信息。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def graphicsScene(self) -> PySide2.QtWidgets.QGraphicsScene: ...")])]),t._v(" "),s("p",[t._v("获取场景对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def graphicsView(self) -> PySide2.QtWidgets.QGraphicsView: ...")])]),t._v(" "),s("p",[t._v("获取视图对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def sceneScale(self) -> float: ...")])]),t._v(" "),s("p",[t._v("场景中的像素比，单位：米/像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSceneSize(self, w:float, h:float) -> None: ...")])]),t._v(" "),s("p",[t._v("设置场景大小，参数w及h分别是场景宽度和高度，单位：米")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def sceneWidth(self) -> float: ...")])]),t._v(" "),s("p",[t._v("场景宽度，单位：米")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def sceneHeight(self) -> float: ...")])]),t._v(" "),s("p",[t._v("场景高度，单位：米")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def backgroundMap(self) -> PySide2.QtCore.QByteArray: ...")])]),t._v(" "),s("p",[t._v("背景图")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def sections(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("所有Section")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def linkIds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("路段ID集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def linkCount(self) -> int: ...")])]),t._v(" "),s("p",[t._v("路段数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def links(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("路段集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findLink(self, id:int) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("根据路段ID查找路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findLane(self, id:int) -> Tessng.ILane: ...")])]),t._v(" "),s("p",[t._v("根据车道ID查找车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findLaneConnector(self, fromLaneId:int, toLaneId:int) -> Tessng.ILaneConnector: ...")])]),t._v(" "),s("p",[t._v("根据“车道连接”ID查找“车道连接”")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def connectorIds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("连接段ID集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def connectorCount(self) -> int: ...")])]),t._v(" "),s("p",[t._v("连接段数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def connectors(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("连接段集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findConnector(self, id:int) -> Tessng.IConnector: ...")])]),t._v(" "),s("p",[t._v("根据连接段ID查找连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findConnectorArea(self, id:int) -> Tessng.IConnectorArea: ...")])]),t._v(" "),s("p",[t._v("根据面域ID查找面域")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findConnectorByLinkIds(self, fromLinkId:int, toLinkId:int) -> Tessng.IConnector: ...")])]),t._v(" "),s("p",[t._v("根据起始路段ID及目标路段ID查找连接段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findLaneConnector(self, fromLaneId:int, toLaneId:int) -> Tessng.ILaneConnector: ...")])]),t._v(" "),s("p",[t._v("根据起始车道ID及目标车道ID查找“车道连接”")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def guidArrowCount(self) -> int: ...")])]),t._v(" "),s("p",[t._v("导向箭头数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def guidArrowIds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("导向箭头ID集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def signalLampCount(self) -> int: ...")])]),t._v(" "),s("p",[t._v("信号灯数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def signalLampIds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("信号灯ID集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def signalLamps(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("信号灯集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findSignalLamp(self, id:int) -> Tessng.ISignalLamp: ...")])]),t._v(" "),s("p",[t._v("根据信号灯ID查找信号灯")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findSignalPhase(self, id:int) -> Tessng.ISignalPhase: ...")])]),t._v(" "),s("p",[t._v("根据信号相位ID查找信号相位")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findSignalPhase(self, id:int) -> Tessng.ISignalPhase: ...")])]),t._v(" "),s("p",[t._v("信号灯组数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def signalGroupIds(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("信号灯组ID集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def signalGroups(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("信号灯组集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findSignalGroup(self, id:int) -> Tessng.ISignalGroup: ...")])]),t._v(" "),s("p",[t._v("根据信号灯组ID查找信号灯组")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def dispatchPoints(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("发车点集。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findDispatchPoint(self, id:int) -> Tessng.IDispatchPoint: ...")])]),t._v(" "),s("p",[t._v("根据发车点ID查找发车点")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] id：发车点ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def buslines(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("公交线路集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findBusline(self, buslineId:int) -> Tessng.IBusLine: ...")])]),t._v(" "),s("p",[t._v("根据公交线路ID查找公交线路")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] buslineId：公交线路ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findBuslineByFirstLinkId(self, linkId:int) -> Tessng.IBusLine: ...")])]),t._v(" "),s("p",[t._v("根据公交线路起始路段ID查找公交线路")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] linkId：公交线路起始段ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def busStations(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("公交站点集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findBusStation(self, stationId:int) -> Tessng.IBusStation: ...")])]),t._v(" "),s("p",[t._v("根据公交站点ID查询公交站点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findBusStationLineByStationId(self, stationId:int) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("根据公交站点ID查询相关BusLineStation")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def allConnectorArea(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("面域集")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneCenterPoints(self, laneId:int) -> typing.List: ...")])]),t._v(" "),s("p",[s("strong",[t._v("指定车道中心线断点集")])]),t._v(" "),s("p",[t._v("参数：­")]),t._v(" "),s("p",[t._v("[in]laneId：指定车道ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def linkCenterPoints(self, linkId:int) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("指定路段中心线断点集")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in]linkId：指定路段ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def judgeLinkToCross(self, linkId:int) -> bool: ...")])]),t._v(" "),s("p",[t._v("判断路段去向是否进入交叉口， 以面域是否存在多连接段以及当前路段与后续路段之间的角度为依据")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getIDByItemName(self, name:str) -> int: ...")])]),t._v(" "),s("p",[t._v("根据路网元素名获取自增ID")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] name：路网元素名。路网元素名的定义在文件plugin/_netitem.h中定义")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createLink(self, lCenterPoint:typing.Sequence, laneCount:int, linkName:str=..., bAddToScene:bool=...) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("创建路段")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lCenterPoint：路段中心线断点集")]),t._v(" "),s("p",[t._v("[in] laneCount：车道数")]),t._v(" "),s("p",[t._v("[in] linkName：路段名，默认为空，将以路段ID作为路段名")]),t._v(" "),s("p",[t._v("[in] bAddToScene：创建后是否放入路网场景，默认为True")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("startPoint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QPointF"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nendPoint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QPointF"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlPoint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("startPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" endPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nlink1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"曹安公路"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("返回：路段对象。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createLink3D(self, lCenterV3:typing.Sequence, laneCount:int, linkName:str=..., bAddToScene:bool=...) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("创建路段")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lCenterV3：路段中心线断点序列，每个断点都是三维空间的点")]),t._v(" "),s("p",[t._v("[in] laneCount：车道数")]),t._v(" "),s("p",[t._v("[in] linkName：路段名")]),t._v(" "),s("p",[t._v("返回：路段对象。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createLinkWithLaneWidth(self, lCenterPoint:typing.Sequence, lLaneWidth:typing.Sequence, linkName:str=..., bAddToScene:bool=...) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("创建路段")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lCenterPoint：路段中心线断点序列")]),t._v(" "),s("p",[t._v("[in] lLaneWidth：车道宽度列表")]),t._v(" "),s("p",[t._v("[in] linkName：路段名")]),t._v(" "),s("p",[t._v("[in] bAddToScene：是否加入场景，默认为True")]),t._v(" "),s("p",[t._v("返回：路段对象。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createLink3DWithLaneWidth(self, lCenterV3:typing.Sequence, lLaneWidth:typing.Sequence, linkName:str=..., bAddToScene:bool=...) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("创建路段")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lCenterV3：路段中心线断点序列，每个断点都是三维空间的点")]),t._v(" "),s("p",[t._v("[in] lLaneWidth：车道宽度列表")]),t._v(" "),s("p",[t._v("[in] linkName：路段名")]),t._v(" "),s("p",[t._v("[in] bAddToScene：是否加入场景，默认为True")]),t._v(" "),s("p",[t._v("返回：路段对象。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createLink3DWithLanePoints(self, lCenterLineV3:typing.Sequence, lanesWithPoints:typing.Sequence, linkName:str=..., bAddToScene:bool=...) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("创建路段")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lCenterLineV3：路段中心点集(对应TESSNG路段中心点)，每个点都是三维空间的")]),t._v(" "),s("p",[t._v("[in] lanesWithPoints：车道数据集合，每个成员是QMap< QString, QList< QVector3D>>类型数据，有三个key，分别是“left”、“center”、“right”、分别表示一条车道左、中、右侧断点序列。")]),t._v(" "),s("p",[t._v("[in] linkName：路段名，默认为路段ID")]),t._v(" "),s("p",[t._v("[in] bAddToScene：是否加入路网，默认True表示加入")]),t._v(" "),s("p",[t._v("返回：路段对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createConnector(self, fromLinkId:int, toLinkId:int, lFromLaneNumber:typing.Sequence, lToLaneNumber:typing.Sequence, connName:str=..., bAddToScene:bool=...) -> Tessng.IConnector: ...")])]),t._v(" "),s("p",[t._v("创建连接段")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromLinkId：起始路段ID")]),t._v(" "),s("p",[t._v("[in] toLinkId：目标路段ID")]),t._v(" "),s("p",[t._v("[in] lFromLaneNumber：连接段起始车道序号集")]),t._v(" "),s("p",[t._v("[in] LToLaneNumber：连接段目标车道序号集")]),t._v(" "),s("p",[t._v("[in] connName：连接段名，默认为空，以两条路段的ID连接起来作为名称")]),t._v(" "),s("p",[t._v("[in] bAddToScene：创建后是否放入路网场景，默认为True")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createConnector3DWithPoints(self, fromLinkId:int, toLinkId:int, lFromLaneNumber:typing.Sequence, lToLaneNumber:typing.Sequence, laneConnectorWithPoints:typing.Sequence, connName:str=..., bAddToScene:bool=...) -> Tessng.IConnector: ...")])]),t._v(" "),s("p",[t._v("创建连接段，创建连接段后将“车道连接”中自动计算的断点集用参数laneConnectorWithPoints断点替换")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] fromLinkId：起始路段ID")]),t._v(" "),s("p",[t._v("[in] toLinkId：目标路段ID")]),t._v(" "),s("p",[t._v("[in] lFromLaneNumber：起始路段参于连接的车道序号")]),t._v(" "),s("p",[t._v("[in] lToLaneNumber：目标路段参于连接的车道序号")]),t._v(" "),s("p",[t._v("[in] laneConnectorWithPoints：“车道连接”数据列表，成员是QMap< QString, QList< QVector3D>>类型数据，有三种key，分别是“left”、“center”、“right”，表示一条“车道连接”左、中、右侧断点序列")]),t._v(" "),s("p",[t._v("[in] connName：连接段名，默认将起始路段ID和目标路段ID用“_”连接表示连接段名，如“100_101”。")]),t._v(" "),s("p",[t._v("[in] bAddToScene：是否加入到场景，默认为True")]),t._v(" "),s("p",[t._v("返回：连接段对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createDispatchPoint(self, pLink:Tessng.ILink, dpName:str=..., bAddToScene:bool=...) -> Tessng.IDispatchPoint: ...")])]),t._v(" "),s("p",[t._v("创建发车点")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLink：路段，在其上创建发车点")]),t._v(" "),s("p",[t._v("[in] dpName：发车点名称，默认为空，将以发车点ID作为名称")]),t._v(" "),s("p",[t._v("[in] bAddToScene：创建后是否放入路网场景，默认为True")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createVehicleComposition(self, name:str, lVehiComp:typing.Sequence) -> int: ...")])]),t._v(" "),s("p",[t._v("创建车型组成，如果车型组成名已存在或相关车型编码不存在或相关车型占比小于0则返回-1，否则新建车型组成，并返回车型组成编码")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] name：车型组成名")]),t._v(" "),s("p",[t._v("[in] lVehiComp：不同车型占比列表")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建车辆组成及指定车辆类型")]),t._v("\nvehiType_proportion_lst "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 车型组成：小客车0.3，大客车0.2，公交车0.1，货车0.4")]),t._v("\nvehiType_proportion_lst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("VehiComposition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvehiType_proportion_lst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("VehiComposition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvehiType_proportion_lst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("VehiComposition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvehiType_proportion_lst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("VehiComposition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvehiCompositionID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createVehicleComposition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"动态创建车型组成"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vehiType_proportion_lst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def shortestRouting(self, pFromLink:Tessng.ILink, pToLink:Tessng.ILink) -> Tessng.IRouting: ...")])]),t._v(" "),s("p",[t._v("计算最短路径")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pFromLink：起始路段")]),t._v(" "),s("p",[t._v("[in] pToLink：目标路段")]),t._v(" "),s("p",[t._v("返回：最短路径对象，包含经过的路段对象序列")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createRouting(self, lILink:typing.Sequence) -> Tessng.IRouting: ...")])]),t._v(" "),s("p",[t._v("用连续通达的路段序列创建路径")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lILink：路段对象序列")]),t._v(" "),s("p",[t._v("返回：路径对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def decisionPoints(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("决策点列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findDecisionPoint(self, id:int) -> Tessng.IDecisionPoint: ...")])]),t._v(" "),s("p",[t._v("根据ID查找决策点")]),t._v(" "),s("p",[t._v("[in] id：决策点ID")]),t._v(" "),s("p",[t._v("返回：决策点对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiInfoCollectors(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("所有车辆检测器")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findVehiInfoCollector(self, id:int) -> Tessng.IVehicleDrivInfoCollector: ...")])]),t._v(" "),s("p",[t._v("根据ID查询车辆检测器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] id：车辆检测器ID")]),t._v(" "),s("p",[t._v("返回：车辆检测器对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiQueueCounters(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("所有排队计数器")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findVehiQueueCounter(self, id:int) -> Tessng.IVehicleQueueCounter: ...")])]),t._v(" "),s("p",[t._v("根据ID查询车辆排队计数器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] id：排队计数器ID")]),t._v(" "),s("p",[t._v("返回：排队计数器对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findVehiQueueCounter(self, id:int) -> Tessng.IVehicleQueueCounter: ...")])]),t._v(" "),s("p",[t._v("所有车辆行程时间检测器，返回列表中的每一个元素是一对行程时间检测器的起始检测器")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findVehiTravelDetector(self, id:int) -> Tessng.IVehicleTravelDetector: ...")])]),t._v(" "),s("p",[t._v("根据ID查询车辆行程时间检测器，返回一对行程时间检测器中起始检测器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] id：行程时间检测器ID")]),t._v(" "),s("p",[t._v("返回：行程时间检测器对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findRouting(self, id:int) -> Tessng.IRouting: ...")])]),t._v(" "),s("p",[t._v("根据路径ID查找路径")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def crossPoints(self, pLaneConnector:Tessng.ILaneConnector) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("当前“车道连接”穿过其它“车道连接”形成的交叉点列表")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLaneConnector：“车道连接”对象")]),t._v(" "),s("p",[t._v("返回：交叉点列表")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前“车道连接”穿过其它“车道连接”形成的交叉点列表")]),t._v("\nlaneConnectors "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findConnector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("laneConnectors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" laneConnector "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" laneConnectors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    crossPoints "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("crossPoints"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("laneConnector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" crossPoint "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" crossPoints"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"主车道连接，即被交叉的“车道连接”："')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" crossPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mpLaneConnector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"交叉点坐标为：("')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" crossPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mCrossPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" crossPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mCrossPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def createEmptyNetFile(self, filePath:str, dbver:int=...) -> bool: ...")])]),t._v(" "),s("p",[t._v("创建空白路网")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] filePath：空白路网全路径名")]),t._v(" "),s("p",[t._v("[in] dbver:：数据库版本")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createLink3DWithLanePointsAndAttrs(self, lCenterLineV3:typing.Sequence, lanesWithPoints:typing.Sequence, lLaneType:typing.Sequence, lAttr:typing.Sequence=..., linkName:str=..., bAddToScene:bool=...) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("创建路段")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lCenterLineV3：路段中心点集(对应TESSNG路段中心点)")]),t._v(" "),s("p",[t._v("[in] lanesWithPoints：车道点集的集合")]),t._v(" "),s("p",[t._v("[in] lLaneType:车道类型集")]),t._v(" "),s("p",[t._v("[in] lAttr:车道附加属性集")]),t._v(" "),s("p",[t._v("[in] linkName：路段名，默认为路段ID,")]),t._v(" "),s("p",[t._v("[in] bAddToScene：是否加入路网，默认True表示加入")]),t._v(" "),s("p",[t._v("返回：路段对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def removeLink(self, pLink:Tessng.ILink) -> None: ...")])]),t._v(" "),s("p",[t._v("移除路段，从场景中移除pLink，但不从文件中删除，保存路网后才会从路网文件中删除")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLink：将要移除的路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def updateLink(self, link:Tessng._Link, lLane:typing.Sequence=..., lPoint:typing.Sequence=...) -> Tessng.ILink: ...")])]),t._v(" "),s("p",[t._v("更新路段，更新后返回路段对象")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] link：更新的路段数据")]),t._v(" "),s("p",[t._v("[in] lLink：更新的车道列表数据")]),t._v(" "),s("p",[t._v("[in] lPoint：更新的断点集合")]),t._v(" "),s("p",[t._v("返回：更新后的路段对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def removeConnector(self, pConnector:Tessng.IConnector) -> None: ...")])]),t._v(" "),s("p",[t._v("移除连接段，从场景中移除pLink，但不从文件中删除，保存路网后才会从路网文件中删除")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pConnector：连接段对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def updateConnector(self, connector:Tessng._Connector) -> Tessng.IConnector: ...")])]),t._v(" "),s("p",[t._v("更新连接段，更新后返回连接段对象")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] connector：连接段数据")]),t._v(" "),s("p",[t._v("返回：更新后的连接段对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def removeDispatchPoint(self, pDispPoint:Tessng.IDispatchPoint) -> bool: ...")])]),t._v(" "),s("p",[t._v("移除发车点")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pDispPoint：发车点对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createVehicleType(self, _vt:Tessng._VehicleType) -> bool: ...")])]),t._v(" "),s("p",[t._v("创建车型，如果创建成功，会将新创建的车辆类型存放到全局数据里供使用")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] vt：车辆类型数据")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def removeVehicleComposition(self, vehiCompId:int) -> bool: ...")])]),t._v(" "),s("p",[t._v("移除车型组成")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] vehiCompId：车型组成ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createDecisionPoint(self, pLink:Tessng.ILink, distance:float, name:str=...) -> Tessng.IDecisionPoint: ...")])]),t._v(" "),s("p",[t._v("创建决策点")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLink：决策点所在的路段")]),t._v(" "),s("p",[t._v("[in] distance：决策点距离路段起点的距离，默认单位：像素")]),t._v(" "),s("p",[t._v("[in] name：决策点的名称")]),t._v(" "),s("p",[t._v("返回：决策点对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建决策点")]),t._v("\ndecisionPoint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createDecisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("link3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def createDeciRouting(self, pDeciPoint:Tessng.IDecisionPoint, lILink:typing.Sequence) -> Tessng.IRouting: ...")])]),t._v(" "),s("p",[t._v("创建决策路径")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pDeciPoint：决策点")]),t._v(" "),s("p",[t._v("[in] lILink：决策路径所包含的路段集合")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建路径(左，直，右)")]),t._v("\ndecisionRouting1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createDeciRouting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("link3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndecisionRouting2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createDeciRouting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("link3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndecisionRouting3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createDeciRouting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("link3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def removeDeciRouting(self, pDeciPoint:Tessng.IDecisionPoint, pRouting:Tessng.IRouting) -> bool: ...")])]),t._v(" "),s("p",[t._v("删除决策路径")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pDeciPoint：决策点")]),t._v(" "),s("p",[t._v("[in] pRouting：将要删除的路径")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除右转路径")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("netiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("removeDeciRouting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" decisionRouting3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"删除右转路径成功。"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def updateDecipointPoint(self, deciPoint:Tessng._DecisionPoint, lFlowRatio:typing.Sequence=...) -> Tessng.IDecisionPoint: ...")])]),t._v(" "),s("p",[t._v("更新决策点及其各路径不同时间段流量比")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] deciPoint：决策点数据")]),t._v(" "),s("p",[t._v("[in] lFlowRatio：各路径按时间段流量比的数据集合")]),t._v(" "),s("p",[t._v("返回：更新后的决策点")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 分配左、直、右流量比")]),t._v("\nflowRatio_left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _RoutingFLowRatio"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nflowRatio_left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RoutingFLowRatioID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nflowRatio_left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("routingID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decisionRouting1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nflowRatio_left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startDateTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nflowRatio_left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endDateTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999999")]),t._v("\nflowRatio_left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ratio "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v("\nflowRatio_straight "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _RoutingFLowRatio"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nflowRatio_straight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RoutingFLowRatioID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\nflowRatio_straight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("routingID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decisionRouting2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nflowRatio_straight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startDateTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nflowRatio_straight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endDateTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999999")]),t._v("\nflowRatio_straight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ratio "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),t._v("\nflowRatio_right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _RoutingFLowRatio"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nflowRatio_right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RoutingFLowRatioID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nflowRatio_right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("routingID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decisionRouting3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nflowRatio_right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startDateTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nflowRatio_right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endDateTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999999")]),t._v("\nflowRatio_right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ratio "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 决策点数据")]),t._v("\ndecisionPointData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _DecisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndecisionPointData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deciPointID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndecisionPointData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deciPointName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndecisionPointPos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QPointF"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" decisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getPointByDist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("distance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" decisionPointPos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    decisionPointData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("X "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decisionPointPos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    decisionPointData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decisionPointPos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    decisionPointData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decisionPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新决策点及其各路径不同时间段流量比")]),t._v("\nupdated_decision_point "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("updateDecipointPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    decisionPointData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flowRatio_left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" flowRatio_straight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" flowRatio_right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def createVehiCollectorOnLink(self, pLane:Tessng.ILane, dist:float) -> Tessng.IVehicleDrivInfoCollector: ...")])]),t._v(" "),s("p",[t._v("在路段的车道上创建车辆采集器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLane：车道对象")]),t._v(" "),s("p",[t._v("[in] dist：路车道起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("返回：车辆采集器")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在路段9最左侧车道100米处创建车辆采集器")]),t._v("\nlink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" link "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    leftLane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    dist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    collector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createVehiCollectorOnLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leftLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将采集器设置到距路段起点400米处")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" collector "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        collector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setDistToStart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def createVehiCollectorOnConnector(self, pLaneConnector:Tessng.ILaneConnector, dist:float) -> Tessng.IVehicleDrivInfoCollector: ...")])]),t._v(" "),s("p",[t._v("在连接段的“车道连接”上创建采集器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLaneConnector：“车道连接”对象")]),t._v(" "),s("p",[t._v("[in] dist：距“车道连接”起点距离，单位像素")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def removeVehiCollector(self, pCollector:Tessng.IVehicleDrivInfoCollector) -> bool: ...")])]),t._v(" "),s("p",[t._v("移除车辆信息采集器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pCollector：车辆信息采集器")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createVehiQueueCounterOnLink(self, pLane:Tessng.ILane, dist:float) -> Tessng.IVehicleQueueCounter: ...")])]),t._v(" "),s("p",[t._v("在路段的车道上创建车辆排队计数器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLane：车道对象")]),t._v(" "),s("p",[t._v("[in] dist：默认单位：像素")]),t._v(" "),s("p",[t._v("返回：排队计数器对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在路段9最左侧车道100米处创建排队计数器")]),t._v("\nlink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" link "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  leftLane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  dist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createVehiQueueCounterOnLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leftLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"计数器所在点坐标为: (')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(", ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(')"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def createVehiQueueCounterOnConnector(self, pLaneConnector:Tessng.ILaneConnector, dist:float) -> Tessng.IVehicleQueueCounter: ...")])]),t._v(" "),s("p",[t._v("在连接段的车道连接上创建车辆排队计数器")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLaneConnector：“车道连接”对象")]),t._v(" "),s("p",[t._v("[in] dist：距“车道连接”起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("返回：排队计数器对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createVehicleTravelDetector_link2link(self, pStartLink:Tessng.ILink, pEndLink:Tessng.ILink, dist1:float, dist2:float) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("创建行程时间检测器，起点和终点都在路段上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] dist1：检测器起点距所在路段起始点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("[in] dist2：检测器终点距所在路段起始点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在路段9 50-550米处创建行程检测器")]),t._v("\nlVehicleTravelDetector "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createVehicleTravelDetector_link2link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("550")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" lVehicleTravelDetector "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" detector "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" lVehicleTravelDetector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\ndetector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setFromTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndetector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setToTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def createVehicleTravelDetector_link2conn(self, pStartLink:Tessng.ILink, pEndLaneConnector:Tessng.ILaneConnector, dist1:float, dist2:float) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("创建行程时间检测器，起点在路段上，终点都在连接段的“车道连接”上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pStartLink：检测器起点所在路段对象")]),t._v(" "),s("p",[t._v("[in] pEndLaneConnector：检测器终点所在“车道连接”对象")]),t._v(" "),s("p",[t._v("[in] dist1：检测器起点距所在路段起始点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("[in] dist2：检测器终点距所在“车道连接”起始点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("返回：行程时间检测器对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createVehicleTravelDetector_conn2link(self, pStartLaneConnector:Tessng.ILaneConnector, pEndLink:Tessng.ILink, dist1:float, dist2:float) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("创建行程时间检测器，起点在连接段的“车道连接”上，终点在路段上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pStartLaneConnector：检测器起点所在“车道连接”对象")]),t._v(" "),s("p",[t._v("[in] pEndLink：检测器终点所在路段对象")]),t._v(" "),s("p",[t._v('[in] dist1：检测器起点距所在"车道连接”起始点距离，默认单位：像素')]),t._v(" "),s("p",[t._v("[in] dist2：检测器终点距所在路段起始点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("返回：行程时间检测器对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createVehicleTravelDetector_conn2conn(self, pStartLaneConnector:Tessng.ILaneConnector, pEndLaneConnector:Tessng.ILaneConnector, dist1:float, dist2:float) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("创建行程时间检测器，起点和终点都在连接段的“车道连接”上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pStartLaneConnector：检测器起点所在“车道连接”对象")]),t._v(" "),s("p",[t._v("[in] pEndLaneConnector：检测器终点所在“车道连接”对象")]),t._v(" "),s("p",[t._v('[in] dist1：检测器起点距所在"车道连接”起始点距离，默认单位：像素')]),t._v(" "),s("p",[t._v("[in] dist2：检测器终点距所在“车道连接”起始点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("返回：行程时间检测器对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createSignalGroup(self, name:str, period:int, fromTime:int, toTime:int) -> Tessng.ISignalGroup: ...")])]),t._v(" "),s("p",[t._v("创建信号灯组")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] name：灯组名称")]),t._v(" "),s("p",[t._v("[in] period：周期，默认单位：秒")]),t._v(" "),s("p",[t._v("[in] fromTime：起始时间，默认单位：秒")]),t._v(" "),s("p",[t._v("[in] toTime:结束时间,默认单位：秒")]),t._v(" "),s("p",[t._v("返回：信号灯组对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建信号灯组")]),t._v("\nsignalGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createSignalGroup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"信号灯组1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def createSignalPhase(self, pGroup:Tessng.ISignalGroup, name:str, lColor:typing.Sequence) -> Tessng.ISignalPhase: ...")])]),t._v(" "),s("p",[t._v("创建相位")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pGroup：信号灯组")]),t._v(" "),s("p",[t._v("[in] name：相位名称")]),t._v(" "),s("p",[t._v("[in] lColor：相位灯色序列，新建相位排在已有相位序列的最后")]),t._v(" "),s("p",[t._v("返回：信号相位对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建相位,40秒绿灯，黄灯3秒，全红3秒")]),t._v("\nred "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ColorInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"G"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngreen "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ColorInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Y"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nyellow "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ColorInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"R"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsignalPhase "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createSignalPhase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signalGroup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"信号灯组1相位1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("green"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" yellow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def removeSignalPhase(self, pGroup:Tessng.ISignalGroup, phaseId:int) -> None: ...")])]),t._v(" "),s("p",[t._v("移除已有相位，相位移除后，原相位序列自动重排,")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pGroup：信号灯组对象")]),t._v(" "),s("p",[t._v("[in] phaseId：将要移除的相位ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createSignalLamp(self, pPhase:Tessng.ISignalPhase, name:str, laneId:int, toLaneId:int, distance:float) -> Tessng.ISignalLamp: ...")])]),t._v(" "),s("p",[t._v("创建信号灯")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pPhase：相位对象")]),t._v(" "),s("p",[t._v("[in] name：信号灯名称")]),t._v(" "),s("p",[t._v("[in] laneId：信号灯所在车道ID，或所在“车道连接”上游车道ID")]),t._v(" "),s("p",[t._v("[in] toLaneId：信号灯所在“车道连接”下游车道ID")]),t._v(" "),s("p",[t._v("[in] distance：信号灯距车道或“车道连接”起点距离，默认单位：像素")]),t._v(" "),s("p",[t._v("返回：信号灯对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建信号灯")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" laneObj "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("enumerate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lLaneObjects"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    signalLamp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createSignalLamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signalPhase"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"信号灯{}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" laneObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fromLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("laneObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def createBusLine(self, lLink:typing.Sequence) -> Tessng.IBusLine: ...")])]),t._v(" "),s("p",[t._v("创建公交线路，lLink列表中相邻两路段可以是路网上相邻两路段，也可以不相邻，如果不相邻，TESSNG会在它们之间创建一条最短路径。如果lLink列表中相邻路段在路网上不相邻并且二者之间不存在最短路径，则相邻的第二条路段及后续路段无效。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] lLink，公交线路经过的路段对象集")]),t._v(" "),s("p",[t._v("返回：公交线路对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建公交线路")]),t._v("\nbusLine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createBusLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("link10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link11"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" busLine "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   busLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setDesirSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def removeBusLine(self, pBusLine:Tessng.IBusLine) -> bool: ...")])]),t._v(" "),s("p",[t._v("移除公交线路")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pBusLine：将要移除的公交线路对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createBusStation(self, pLane:Tessng.ILane, length:float, dist:float, name:str=...) -> Tessng.IBusStation: ...")])]),t._v(" "),s("p",[t._v("创建公交站点")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pLane：车道")]),t._v(" "),s("p",[t._v("[in] length:站点长度(单位像素)")]),t._v(" "),s("p",[t._v("[in] dist:站点起始点距车道起点距离(单位像素)")]),t._v(" "),s("p",[t._v("返回：公交站点对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建公交线路")]),t._v("\nbusLine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createBusLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("link10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link11"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" busLine "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   busLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setDesirSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   busStation1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createBusStation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("link10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"公交站1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   busStation2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createBusStation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("link11"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lanes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"公交站2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def removeBusStation(self, pStation:Tessng.IBusStation) -> bool: ...")])]),t._v(" "),s("p",[t._v("移除公交站点")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pStation：公交站点对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def addBusStationToLine(self, pBusLine:Tessng.IBusLine, pStation:Tessng.IBusStation) -> bool: ...")])]),t._v(" "),s("p",[t._v("将公交站点关联到公交线路上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pBusLine：公交线路")]),t._v(" "),s("p",[t._v("[in] pStation：公交站点")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建公交线路")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" busStation1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addBusStationToLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("busLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" busStation1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  \tbusStation1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"公交站1已关联到公交线路"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" busStation2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addBusStationToLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("busLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" busStation2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"公交站2已关联到公交线路"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def removeBusStationFromLine(self, pBusLine:Tessng.IBusLine, pStation:Tessng.IBusStation) -> bool: ...")])]),t._v(" "),s("p",[t._v("将公交站点与公交线路的关联关系解除")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pBusLine：公交线路")]),t._v(" "),s("p",[t._v("[in] pStation：公交站点")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def initSequence(self, schemaName:str=...) -> bool: ...")])]),t._v(" "),s("p",[t._v("初始化数据库序列，对保存路网的专业数据库序列进行初始化，目前支持PostgreSql")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] schemaName：数据库的schema名称")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def buildNetGrid(self, width:float=...) -> None: ...")])]),t._v(" "),s("p",[t._v("路网的网格化")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] width：单元格宽度，默认单位：米")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findSectionOn1Cell(self, point:PySide2.QtCore.QPointF) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("根据point查询所在单元格所有经过的ISection")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] point：路网场景中的点")]),t._v(" "),s("p",[t._v("返回：ISection列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findSectionOn4Cell(self, point:PySide2.QtCore.QPointF) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("根据point查询最近4个单元格所有经过的ISection")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] point：路网场景中的一个点")]),t._v(" "),s("p",[t._v("返回：ISection列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findSectionOn9Cell(self, point:PySide2.QtCore.QPointF) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("根据point查询最近9个单元格所有经过的ISection")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] point：路网场景中的一个点")]),t._v(" "),s("p",[t._v("返回：ISection列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def locateOnSections(self, point:PySide2.QtCore.QPointF, lSection:typing.Sequence, referDistance:float=...) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("根据point对lSection列表中每一个Section所有LaneObject求最短距离，返回Location列表，列表按最短距离排序，从小到大")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] point：路网场景中的一个点")]),t._v(" "),s("p",[t._v("[in] lSection：section列表")]),t._v(" "),s("p",[t._v("[in] referDistance：LaneObject上与point最近的点到LaneObject起点距离，默认单位：像素，是大约数，只为提高计算效率，默认值为0")]),t._v(" "),s("p",[t._v("返回：Online::Location列表")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 根据point对lSection列表中每一个Section所有LaneObject求最短距离")]),t._v("\nsections "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sections"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个点对象")]),t._v("\npoint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" QPointF"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在分段上定位点并获取位置信息")]),t._v("\nlocations "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("locateOnSections"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sections"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 遍历位置信息列表")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" location "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" locations"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出相关车道或车道连接的ID")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"相关车道或车道连接为:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pLaneObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出最近点的坐标")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"最近点坐标: ({}, {})"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出到最近点的最短距离")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"到最近点的最短距离:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("leastDist"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出最近点到起点的里程")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"最近点到起点的里程:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("distToStart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出最近点所在分段序号")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"最近点所在分段序号:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("segmIndex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 换行以分隔不同的位置信息")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def locateOnCrid(self, point:PySide2.QtCore.QPointF, cellCount:int=...) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("point周围若干个单元格里查询LaneObject")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] point：路网场景中的一个点")]),t._v(" "),s("p",[t._v("[in] cellCount：单元格数，小于1时默认为1，大于1小于4时默认为4，大于4时默认为9")]),t._v(" "),s("p",[t._v("返回：Online::Location列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def boundingRect(self, pIVehicle:Tessng.IVehicle, outRect:PySide2.QtCore.QRectF) -> bool: ...")])]),t._v(" "),s("p",[t._v("路网外围Rect，用以获取路网边界")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createRoadWorkZone(self, param:Tessng.Online.DynaRoadWorkZoneParam) -> Tessng.IRoadWorkZone: ...")])]),t._v(" "),s("p",[t._v("创建施工区")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] param：动态施工区信息，数据类型在文件 Plugin/_datastruct.h中定义")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建施工区和删除施工区示例,施工区和事故区的删除有两种方式，duration结束后自动删除以及主动删除(removeRoadWorkZone)，此处初始化前者")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createworkZone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('""" 创建施工区\n    :param :\n    :return:\n    """')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建施工区")]),t._v("\n    workZone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DynaRoadWorkZoneParam"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 道路ID")]),t._v("\n    workZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 施工区名称")]),t._v("\n    workZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"施工区，限速40,持续20秒"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 位置，距离路段或连接段起点距离，单位米")]),t._v("\n    workZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 施工区长度，单位米")]),t._v("\n    workZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 车辆经过施工区的最大车速，单位千米/小时")]),t._v("\n    workZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("limitSpeed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 施工区施工时长，单位秒")]),t._v("\n    workZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("duration "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 施工区起始车道")]),t._v("\n    workZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mlFromLaneNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建施工区")]),t._v("\n    zone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createRoadWorkZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("workZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def removeRoadWorkZone(self, pIRoadWorkZone:Tessng.IRoadWorkZone) -> None: ...")])]),t._v(" "),s("p",[t._v("移除施工区")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIRoadWorkZone：将要移除的施工区对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def roadWorkZones(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取所有施工区")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findRoadWorkZone(self, roadWorkZoneId:int) -> Tessng.IRoadWorkZone: ...")])]),t._v(" "),s("p",[t._v("根据ID查询施工区")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] roadWorkZoneId：施工区ID")]),t._v(" "),s("p",[t._v("返回：施工区对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createAccidentZone(self, param:Tessng.Online.DynaAccidentZoneParam) -> Tessng.IAccidentZone: ...")])]),t._v(" "),s("p",[t._v("创建事故区")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] param：动态事故区信息，数据类型在文件 Plugin/_datastruct.h中定义")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建事故区")]),t._v("\naccidentZone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DynaAccidentZoneParam"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 道路ID")]),t._v("\naccidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 事故区名称")]),t._v("\naccidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"最左侧车道发生事故"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 位置，距离路段或连接段起点距离，单位米")]),t._v("\naccidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 事故区长度，单位米")]),t._v("\naccidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 事故区起始车道序号列表")]),t._v("\naccidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mlFromLaneNumber"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 事故等级")]),t._v("\naccidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("level "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建事故区")]),t._v("\nzone "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createAccidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("accidentZone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def removeAccidentZone(self, pIAccidentZone:Tessng.IAccidentZone) -> None: ...")])]),t._v(" "),s("p",[t._v("移除事故区")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def accidentZones(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取所有事故区")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def findAccidentZone(self, accidentZoneId:int) -> Tessng.IAccidentZone: ...")])]),t._v(" "),s("p",[t._v("根据ID查询事故区")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] accidentZoneId：事故区ID")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_4-2-simuinterface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-simuinterface"}},[t._v("#")]),t._v(" 4.2. SimuInterface")]),t._v(" "),s("p",[t._v("SimuInterface是TessInterface的子接口， 通过此接口可以启动、暂停、停止仿真，可以设置仿真精度，获取仿真过程车辆对象、车辆状态（包括位置信息），获取几种检测器检测的样本数据和集计数据，等等。")]),t._v(" "),s("p",[t._v("下面对SimuInterface接口方法作详细解释。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def byCpuTime(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("仿真时间是否由现实时间确定。")]),t._v(" "),s("p",[t._v("一个计算周期存在两种时间，一种是现实经历的时间，另一种是由仿真精度决定的仿真时间，如果仿真精度为每秒20次，仿真一次相当于仿真了50毫秒。默认情况下，一个计算周期的仿真时间是由仿真精度决定的。在线仿真时如果算力不够，按仿真精度确定的仿真时间会与现实时间存在时差。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setByCpuTime(self, bByCpuTime:bool) -> bool: ...")])]),t._v(" "),s("p",[t._v("设置是否由现实时间确定仿真时间，如果设为True，每个仿真周期现实经历的时间作为仿真时间，这样仿真时间与现实时间相吻合。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] bByCpuTime：是否由现实时间确定仿真时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def startSimu(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("启动仿真")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TESSNG 顶层接口")]),t._v("\niface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TESSNG 仿真子接口")]),t._v("\nsimuiface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("simuInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsimuiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startSimu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def pauseSimu(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("暂停仿真")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("simuiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pauseSimu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def stopSimu(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("停止仿真运行")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v(" simuiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stopSimu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def pauseSimuOrNot(self) -> None: ...")])]),t._v(" "),s("p",[t._v("暂停或恢复仿真。如果当前处于仿真运行状态，此方法暂停仿真，如果当前处于暂停状态，此方法继续仿真")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v(" simuiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pauseSimuOrNot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def isRunning(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("仿真是否在进行")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isPausing(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("仿真是否处于暂停状态")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isRecordTrace(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("仿真是否记录车辆轨迹")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setIsRecordTrace(self, bRecord:bool) -> None: ...")])]),t._v(" "),s("p",[t._v("设置是否记录车辆轨迹")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] bRecord：是否记录车辆轨迹")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def simuIntervalScheming(self) -> int: ...")])]),t._v(" "),s("p",[t._v("预期仿真时长，即仿真设置窗口设置的仿真时间")]),t._v(" "),s("p",[s("img",{attrs:{src:"%E4%BB%BF%E7%9C%9F%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE.png",alt:"仿真参数配置"}})]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSimuIntervalScheming(self, interval:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置预期仿真时长")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] interval：预期仿真时长，默认单位：秒")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def simuAccuracy(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取仿真精度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setSimuAccuracy(self, accuracy:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置仿真精度，即每秒计算次数")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] accuracy：每秒计算次数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def acceMultiples(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取加速倍数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setAcceMultiples(self, multiples:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置加速倍数")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] multiples 加速倍数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def setThreadCount(self, count:int) -> None: ...")])]),t._v(" "),s("p",[t._v("设置工作线程数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def batchNumber(self) -> int: ...")])]),t._v(" "),s("p",[t._v("当前仿真批次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def batchIntervalReally(self) -> float: ...")])]),t._v(" "),s("p",[t._v("当前批次实际时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def batchNumber(self) -> int: ...")])]),t._v(" "),s("p",[t._v("当前批次")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def startMSecsSinceEpoch(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取仿真开始的现实时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def stopMSecsSinceEpoch(self) -> int: ...")])]),t._v(" "),s("p",[t._v("仿真结束的现实时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def simuTimeIntervalWithAcceMutiples(self) -> int: ...")])]),t._v(" "),s("p",[t._v("获取当前已仿真时间")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def delayTimeOnBatchNumber(self, batchNumber:int) -> int: ...")])]),t._v(" "),s("p",[t._v("仿真到指定批次时总延误，单位：毫秒；")]),t._v(" "),s("p",[t._v("在算力不足的情况下，存在仿真计算每一个周期所需时间大于设置周期时间的情况，造成延误。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] batchNumber：仿真批次")]),t._v(" "),s("p",[t._v("返回值：仿真到batchNumber批次时的总延误")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiCountTotal(self) -> int: ...")])]),t._v(" "),s("p",[t._v("车辆总数，包括已创建尚未进入路网的车辆、正在运行的车辆、已驶出路网的车辆")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiCountRunning(self) -> int: ...")])]),t._v(" "),s("p",[t._v("正在运行车辆数")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getVehicle(self, vehiId:int) -> Tessng.IVehicle: ...")])]),t._v(" "),s("p",[t._v("根据车辆ID获取车辆对象")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] vehiId：车辆ID")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def allVehiStarted(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("所有正在运行车辆")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def allVehicle(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("所有车辆，包括已创建尚未进入路网的车辆、正在运行的车辆、已驶出路网的车辆")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getVehisStatus(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取所有正在运行的车辆状态，包括轨迹")]),t._v(" "),s("p",[t._v("返回：车辆状态（包括轨迹）Online.VehicleStatus列表")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TESSNG 顶层接口")]),t._v("\niface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TESSNG 仿真子接口")]),t._v("\nsimuiface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("simuInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前正在运行车辆列表")]),t._v("\nvehis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" simuiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("allVehiStarted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def getVehiTrace(self, vehiId:int) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取指定车辆运行轨迹")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] vehiId：车辆ID")]),t._v(" "),s("p",[t._v("返回：车辆运行轨迹，即Online.VehiclePosition列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getSignalPhasesColor(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取当前所有信号灯组相位颜色")]),t._v(" "),s("p",[t._v("返回:当前相位颜色Online.SignalPhaseColo列表，包括各相位当前颜色设置的时间和已持续时间。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getVehisInfoCollected(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取当前完成穿越车辆数据采集器的所有车辆信息")]),t._v(" "),s("p",[t._v("返回：采集的车辆信息列表。数据结构Online::VehiInfoCollected在文件Plugin/_datastruct.h中定义。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TESSNG 顶层接口")]),t._v("\niface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TESSNG 仿真子接口")]),t._v("\nsimuiface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("simuInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取当前仿真时间完成穿越采集器的所有车辆信息")]),t._v("\nlVehiInfo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" simuiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getVehisInfoCollected"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def getVehisInfoAggregated(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取最近集计时间段内采集器采集的所有车辆集计信息")]),t._v(" "),s("p",[t._v("返回：采集器集计数据Online.VehiInfoAggregated列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getVehisQueueCounted(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取当前排队计数器计数的车辆排队信息")]),t._v(" "),s("p",[t._v("返回：车辆排队信息Online.VehiQueueCounted列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getVehisQueueAggregated(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取最近集计时间段内排队计数器集计数据")]),t._v(" "),s("p",[t._v("返回：排队计数器集计数据Online.VehiQueueAggregated列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getVehisTravelDetected(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("​    获取当前行程时间检测器完成的行程时间检测信息")]),t._v(" "),s("p",[t._v("返回：行程时间检测器数据Online.VehiTravelDetected列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def getVehisTravelAggregated(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("获取最近集计时间段内行程时间检测器集计数据")]),t._v(" "),s("p",[t._v("返回：行程时间集计数据Online.VehiTravelAggregated列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def createGVehicle(self, dynaVehi:Tessng.Online.DynaVehiParam) -> Tessng.IVehicle: ...")])]),t._v(" "),s("p",[t._v("动态创建车辆")]),t._v(" "),s("p",[t._v("参数:")]),t._v(" "),s("p",[t._v("[in]: dynaVehi：动态车辆信息")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在指定车道和位置动态加载车辆(示例：在0,1,2车道不同位置动态加载车辆)")]),t._v("\ndvp_lane0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DynaVehiParam"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndvp_lane1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DynaVehiParam"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndvp_lane2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DynaVehiParam"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndvp_lane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehiTypeCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\ndvp_lane1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehiTypeCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\ndvp_lane2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehiTypeCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\ndvp_lane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" link3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndvp_lane1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" link3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndvp_lane2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" link4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndvp_lane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("laneNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\ndvp_lane1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("laneNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\ndvp_lane2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("laneNumber "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\ndvp_lane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndvp_lane1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndvp_lane2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dist "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndvp_lane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\ndvp_lane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\ndvp_lane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("speed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v("\ndvp_lane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#FF0000"')]),t._v("\ndvp_lane1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#008000"')]),t._v("\ndvp_lane2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#0000FF"')]),t._v("\nvehi_lane0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" simuiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createGVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dvp_lane0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvehi_lane1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" simuiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createGVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dvp_lane1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvehi_lane2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" simuiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createGVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dvp_lane2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def createBus(self, pBusLine:Tessng.IBusLine, startSimuDateTime:float) -> Tessng.IVehicle: ...")])]),t._v(" "),s("p",[t._v("动态创建公交车")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pBusLine：公交线路")]),t._v(" "),s("p",[t._v("[in] startSimuDateTime：发车时间，单位毫秒")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  动态创建公交车")]),t._v("\nbus "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("simuInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createBus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("busLine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def catchSnapshotAsString(self) -> str: ...")])]),t._v(" "),s("p",[t._v("创建快照，需要分布式组件支持")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def loadSnapshotFromString(self, data:str) -> bool: ...")])]),t._v(" "),s("p",[t._v("加载快照，需要分布式组件支持")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] data：快照数据")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def stopVehicleDriving(self, pVehicle:Tessng.IVehicle) -> None: ...")])]),t._v(" "),s("p",[t._v("停止指定车辆的仿真运行，车辆被移出路网")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pVehicle：车辆对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# L5路段车辆行驶至离路段终点50m处被移出路网")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    vehi_currentDistToEnd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehicleDriving"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("distToEndpoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" p2m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi_currentDistToEnd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        simuiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stopVehicleDriving"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def vehisInLink(self, linkId:int) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("指定ID路段上的车辆")]),t._v(" "),s("p",[t._v("参数")]),t._v(" "),s("p",[t._v("[in] linkId：路段ID")]),t._v(" "),s("p",[t._v("返回：车辆列表")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IVehicle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#。。。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vehisInLink")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" linkid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TESSNG 顶层接口")]),t._v("\n    iface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TESSNG 仿真子接口")]),t._v("\n    simuiface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("simuInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ID等于1路段上车辆")]),t._v("\n    vehis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("simuInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehisInLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def vehisInLane(self, laneId:int) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("指定ID车道上的车辆")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] laneId：车道ID")]),t._v(" "),s("p",[t._v("返回：车辆列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehisInConnector(self, connectorId:int) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("指定ID连接段上的车辆")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] connectorId：连接段ID")]),t._v(" "),s("p",[t._v("返回：车辆列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehisInLaneConnector(self, connectorId:int, fromLaneId:int, toLaneId:int) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("指定连接段ID及上游车道ID和下游车道ID相关“车道连接”上的车辆")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] connectorId: 连接段ID")]),t._v(" "),s("p",[t._v("[in] fromLaneId：上游车道ID")]),t._v(" "),s("p",[t._v("[in] toLaneId：下游车道ID")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_4-3-guiinterface"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-guiinterface"}},[t._v("#")]),t._v(" 4.3.  GuiInterface")]),t._v(" "),s("p",[t._v("GuiInterface是TessInterface的子接口， 通过此接口可以访问控制TESSNG主窗体，在主窗体上创建菜单、自定义窗体等。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def mainWindow(self) -> PySide2.QtWidgets.QMainWindow: ...")])]),t._v(" "),s("p",[t._v("获取TESS NG主窗体")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"_5-自定义插件tessplugin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-自定义插件tessplugin"}},[t._v("#")]),t._v(" 5. 自定义插件TessPlugin")]),t._v(" "),s("p",[t._v("TessPlugin是用户开发的插件顶级接口，下面有三个子接口：PyCustomerNet、PyCustomerSimulator、CustomerGui。TESS NG通过这三个子接口分别在路网、仿真过程、窗体这三个方面与用户插件进行交互。")]),t._v(" "),s("p",[t._v("获取插件顶层接口的方法：tessngPlugin()。")]),t._v(" "),s("p",[t._v("虽然用户可以通过接口TessInterface下的三个子接口访问控制TESS NG的路网、仿真过程及窗体，但用户只能调用TESS NG接口方法，不能深入接口方法内部改变运行逻辑。通过实现接口TessPlugin子接口的方法，用户可以在TESS NG的方法内部施加影响，改变运行逻辑。")]),t._v(" "),s("p",[t._v("TessPlugin下的子接口PyCustomerNet、PyCustomerSimulator可以让用户较多地参于加载路网及仿真过程，改变TESSNG内部运行逻辑。比如，通过实现PyCustomerNet、PyCustomerSimulator接口方法可以让用户加载路网后进行必要的处理，点击仿真按钮后根据需要确定是否继续仿真或者放弃，还可以在仿真过程对部分或全部车辆的速度施加影响，主动干预车辆的自由变道，等等。")]),t._v(" "),s("p",[t._v("插件的三个子接口PyCustomerNet、PyCustomerSimulator、CustomerGui的所有方法都有默认实现，用户可以根据需要实现其中部分方法或全部方法，这些方法都由TESSNG在加载并初始化插件、打开路网前后、仿真前、仿真过程中、仿真结束后进行调用，正是通过TESS NG对这些接口方法的调用达到控制或影响TESS NG运行的目的。")]),t._v(" "),s("p",[t._v("由于插件接口方法调用的场景、目的都不一样，为了尽可尽可能统一对插件接口方法理解，很多方法采用如下结构形式：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outParam"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("\n")])])]),s("p",[t._v("TESS NG在调用这些方法时作以下理解：如果返加值为False，视为用户没有反应，忽略。如果返回值为True，表明用户有反应，这时再视参数outParam值进行处理。举范例中的一个例子，曹安路上的车辆排成方正，飞机后的车辆速度重新设置，保持与飞机相同的速度。PyCustomerSimulator的子类MySimulator实现了reSetSpeed方法如下：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref_reSetSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref_inOutSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),t._v("\n    roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"曹安公路"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mrSpeedOfPlane "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mrSquareVehiCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            ref_inOutSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mrSpeedOfPlane\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n\n")])])]),s("p",[t._v("TESS NG在计算车辆的速度后会调用插件的reSetSpeed方法，如果该方法返回True，视插件对此方法作出响应，这时再用outSpeed值取代原先计算的车速。")]),t._v(" "),s("p",[t._v("下面对PyCustomerNet、PyCustomerSimulator两个子接口进行说明")]),t._v(" "),s("h3",{attrs:{id:"_5-1-pycustomernet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-pycustomernet"}},[t._v("#")]),t._v(" 5.1. PyCustomerNet")]),t._v(" "),s("p",[t._v("PyCustomerNet是TessPlugin子接口，用户实现这个接口，TESSNG在加载路网前后会调用用户实现的接口方法。范例在加载临时路网后创建路段、连接段和发车点。TESSNG在绘制部分路网元素时也会调用PyCustomerNet实现类相关方法。范例通过实现方法labelNameAndFont让部分路段和连接段用路段名（默认为ID）绘制标签。")]),t._v(" "),s("p",[t._v("下面对PyCustomerNet接口方法作详细解释。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_netFileSuffix(self, ref_suffix:Tessng.objstring) -> bool: ...")])]),t._v(" "),s("p",[t._v("路网文件后缀，由用户通过参数suffix设置")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[out] suffix：路网文件后缀名")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def customerTableDDL(self) -> typing.Dict: ...")])]),t._v(" "),s("p",[t._v("添加用户设计的表")]),t._v(" "),s("p",[t._v("返回：用户数据库的表定义map，key为表名，value为表的定义")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def insertCustomerData(self) -> None: ...")])]),t._v(" "),s("p",[t._v("插入用户插件创建的表数据")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def deleteCustomerData(self) -> None: ...")])]),t._v(" "),s("p",[t._v("删除用户插件创建的表数据")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def beforeLoadNet(self) -> None: ...")])]),t._v(" "),s("p",[t._v("打开路网前调用，用户可以通过此方法在加载路网前作必要的初始化准备工作")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def afterLoadNet(self) -> None: ...")])]),t._v(" "),s("p",[t._v("加载路网后调用。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("p",[t._v("​    范例加载路网后读路段数，如果路段数为0创建路段、连接段和发车点，创建完成后根据参数'__simuafterload'值决定是否启动仿真：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterLoadNet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代表TESS NG的接口")]),t._v("\n    iface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代表TESS NG的路网子接口")]),t._v("\n    netiface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取路段数")]),t._v("\n    count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" netiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("linkCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createNet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" \n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def linkType(self, lType:typing.Sequence) -> bool: ...")])]),t._v(" "),s("p",[t._v("路段类型")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[out] lType：用户定义的路段类型列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneType(self, lType:typing.Sequence) -> bool: ...")])]),t._v(" "),s("p",[t._v("车道类型")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[out] lType：用户定义的车道类型列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def linkBuildGLanes(self, pILink:Tessng.ILink) -> bool: ...")])]),t._v(" "),s("p",[t._v("创建车道")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pILink：路段对象")]),t._v(" "),s("p",[t._v("返回：如果返回True，表示用户已创建了车道，TESSNG不再创建")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isPermitForCustDraw(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("在绘制路网过程中是否允许调用客户绘制逻辑，默认为False。本方法的目的是在python环境减少不必要的对python代码调用，消除对运行效率的负面影响。可参数范例。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def linkBrushColor(self, linkId:int, color:PySide2.QtGui.QColor) -> bool: ...")])]),t._v(" "),s("p",[t._v("路段笔刷颜色")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] linkId：路段ID")]),t._v(" "),s("p",[t._v("[out] color：笔刷颜色")]),t._v(" "),s("p",[t._v("返回：如果返回False，TESSNG会忽略，否则用color颜色绘制路段")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def paint(self, itemType:int, itemId:int, painter:PySide2.QtGui.QPainter) -> bool: ...")])]),t._v(" "),s("p",[t._v("绘制路网元素")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] itemType：路网元素类型，在包NetItemType中定义")]),t._v(" "),s("p",[t._v("[in] itemId：路网元素ID")]),t._v(" "),s("p",[t._v("[in] painter：QPainter对象")]),t._v(" "),s("p",[t._v("返回：如果返回True，TESS NG认为插件已绘制，TESS NG不再绘制，否则TESS NG进行绘制。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def linkBrushAndPen(self, linkId:int, brush:PySide2.QtGui.QBrush, pen:PySide2.QtGui.QPen) -> bool: ...")])]),t._v(" "),s("p",[t._v("根据指定ID设置绘制路段的笔刷。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] linkId：路段ID")]),t._v(" "),s("p",[t._v("[out] brush：绘刷")]),t._v(" "),s("p",[t._v("[out] pen：绘笔")]),t._v(" "),s("p",[t._v("返回：False 忽略，True 用brush及pen参数绘制ID等于linkId的路段。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def laneBrushAndPen(self, laneId:int, brush:PySide2.QtGui.QBrush, pen:PySide2.QtGui.QPen) -> bool: ...")])]),t._v(" "),s("p",[t._v("根据指定车道ID设置绘制车道的笔刷。")]),t._v(" "),s("p",[t._v("[in] laneId：车道ID")]),t._v(" "),s("p",[t._v("[out] brush：绘刷")]),t._v(" "),s("p",[t._v("[out] pen：绘笔")]),t._v(" "),s("p",[t._v("返回：False 忽略，True 用brush及pen参数绘制ID等于laneId的车道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def connectorAreaBrushColor(self, connAreaId:int, color:PySide2.QtGui.QColor) -> bool: ...")])]),t._v(" "),s("p",[t._v("面域笔刷颜色")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] connAreaId：面域ID")]),t._v(" "),s("p",[t._v("[out] color：笔刷颜色")]),t._v(" "),s("p",[t._v("返回：False：忽略，True：TESSNG用color绘制面域")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def connectorAreaBrushAndPen(self, connAreaId:int, brush:PySide2.QtGui.QBrush, pen:PySide2.QtGui.QPen) -> bool: ...")])]),t._v(" "),s("p",[t._v("根据指定面域ID设置绘制面域的笔刷。")]),t._v(" "),s("p",[t._v("[in] connAreaId：面域ID")]),t._v(" "),s("p",[t._v("[out] brush：绘刷")]),t._v(" "),s("p",[t._v("[out] pen：绘笔")]),t._v(" "),s("p",[t._v("返回：False 忽略，True 用brush及pen参数绘制ID等于connAreaId的面域")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_labelNameAndFont(self, itemType:int, itemId:int, ref_outPropName:Tessng.objint, ref_outFontSize:Tessng.objreal) -> None: ...")])]),t._v(" "),s("p",[t._v("根据路网元素类型及ID确定用标签用ID或名称作为绘制内容。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] itemType：路段元素类型，类型常量在文件Plugin/_netitemtype.h中定义；")]),t._v(" "),s("p",[t._v("[in] itemId：路网元素ID；")]),t._v(" "),s("p",[t._v("[out] outPropName：枚举值，在文件Plugin/_netitem.h中定义，如果赋值GraphicsItemPropName::Id，则用ID作为绘制内容，如果赋值GraphicsItemPropName::Name，则用路网元素名作为绘制内容；")]),t._v(" "),s("p",[t._v("[out] outFontSize：字体大小，单位：米。假设车道宽度是3米，如果赋给outFontSize的值是6，绘出的文字将占用两个车道的宽度。")]),t._v(" "),s("p",[t._v("返回：False 忽略，True 则根据设定的outPropName 值确定用ID或名称绘制标签，并且用指定大小绘制。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("p",[t._v("范例中的路段和连接段的标签内容部分是名称，部分是ID。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref_labelNameAndFont")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" itemType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" itemId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref_outPropName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref_outFontSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代表TESS NG的接口")]),t._v("\n    iface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代表TESS NG仿真子接口")]),t._v("\n    simuiface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("simuInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果仿真正在进行，设置ref_outPropName.value等于GraphicsItemPropName.None_，路段和车道都不绘制标签")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" simuiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isRunning"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        ref_outPropName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GraphicsItemPropName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("None_\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认绘制ID")]),t._v("\n    ref_outPropName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GraphicsItemPropName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Id\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 标签大小为6米")]),t._v("\n    ref_outFontSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果是连接段一律绘制名称")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" itemType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" NetItemType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GConnectorType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        ref_outPropName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GraphicsItemPropName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" itemType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" NetItemType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GLinkType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" itemId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" itemId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" itemId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            ref_outPropName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GraphicsItemPropName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def isDrawLinkCenterLine(self, linkId:int) -> bool: ...")])]),t._v(" "),s("p",[t._v("是否绘制路段中心线")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] linkId：路段ID；")]),t._v(" "),s("p",[t._v("返回值：True绘制，False不绘制。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isDrawLinkCorner(self, linkId:int) -> bool: ...")])]),t._v(" "),s("p",[t._v("是否绘制路段四个拐角的圆形和正方型。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] linkId：路段ID；")]),t._v(" "),s("p",[t._v("返回值：True绘制，False不绘制。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isDrawLaneCenterLine(self, laneId:int) -> bool: ...")])]),t._v(" "),s("p",[t._v("是否绘制车道中心线。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] laneId：车道ID；")]),t._v(" "),s("p",[t._v("返回值：True绘制，False不绘制。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def afterViewKeyReleaseEvent(self, event:PySide2.QtGui.QKeyEvent) -> None: ...")])]),t._v(" "),s("p",[t._v("QGraphicsView的keyReleaseEvent事件后行为，用户可以根据自己的需要接入键盘事件，实现自身业务逻辑。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def afterViewMouseDoubleClickEvent(self, event:PySide2.QtGui.QMouseEvent) -> None: ...")])]),t._v(" "),s("p",[t._v("QGraphicsView的mouseDoubleClickEvent事件后的行为，用户可以根据自己的需要编写鼠标双击事件响应代码。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def afterViewMouseMoveEvent(self, event:PySide2.QtGui.QMouseEvent) -> None: ...")])]),t._v(" "),s("p",[t._v("QGraphicsView的mouseMoveEvent事件后的行为，用户可以根据自己的需要编写鼠标移动事件响应代码。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def afterViewMousePressEvent(self, event:PySide2.QtGui.QMouseEvent) -> None: ...")])]),t._v(" "),s("p",[t._v("QGraphicsView的mousePressEvent事件后的行为，用户可以根据自己的需要编写鼠标点击事件响应代码。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def afterViewMouseReleaseEvent(self, event:PySide2.QtGui.QMouseEvent) -> None: ...")])]),t._v(" "),s("p",[t._v("QGraphicsView的mouseReleaseEvent事件后的行为，用户可以根据自己的需要编写鼠标释放事件响应代码。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def afterViewResizeEvent(self, event:PySide2.QtGui.QResizeEvent) -> None: ...")])]),t._v(" "),s("p",[t._v("QGraphicsView的resizeEvent事件后的行为，用户可以根据自己的需要编写屏幕缩放事件响应代码。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def afterViewWheelEvent(self, event:PySide2.QtGui.QWheelEvent) -> None: ...")])]),t._v(" "),s("p",[t._v("QGraphicsView的鼠标滚动事件后的行为，用户可以根据自己的需要编写鼠标滚动事件后响应代码。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def afterViewScrollContentsBy(self, dx:int, dy:int) -> None: ...")])]),t._v(" "),s("p",[t._v("QGraphicsView滚动条移动事件后的行为，用户可以根据自己的需要实现视窗滚动条移动后响应代码。")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"_5-2-pycustomersimulator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-pycustomersimulator"}},[t._v("#")]),t._v(" 5.2. PyCustomerSimulator")]),t._v(" "),s("p",[t._v("PyCustomerSimulator是TessPlugin子接口，用户实现这个接口。TESS NG在仿真前后以及仿真过程中调用这个接口实现的方法，达到与插件交互的目的，用户可以通过这个接口的实现在仿真前后以及仿真运算过程中对TESS NG的仿真进行干预，大到可以控制仿真是否进行，小到干预某一车辆的驾驶行为。")]),t._v(" "),s("p",[t._v("用户对车辆驾驶行为的干预主要通过车速和变道来实现。对车速的干预主要有以下几个方法：")]),t._v(" "),s("p",[t._v("1）重新计算车速；")]),t._v(" "),s("p",[t._v("2）修改路段限速；")]),t._v(" "),s("p",[t._v("3）重新计算加速度；")]),t._v(" "),s("p",[t._v("4）修改跟驰安全距离和安全时距、重新设置前车距")]),t._v(" "),s("p",[t._v("以上几个方法的优先级依次降低。在没有插件干预的情况下，车辆行驶的最高速度受到道路的最高速度限制；在有插件的干预下，如果直接修改了车速，则不受道路最高限速的限制。")]),t._v(" "),s("p",[t._v("下面对PyCustomerSimulator接口方法作详细解释。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_beforeStart(self, ref_keepOn:Tessng.objbool) -> None: ...")])]),t._v(" "),s("p",[t._v("仿真前的准备。如果需要，用户可通过设置keepOn为False来放弃仿真。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[out] ref_keepOn：是否继续，默认为True；")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def afterStart(self) -> None: ...")])]),t._v(" "),s("p",[t._v("启动仿真后的操作。这个方法的处理时间尽量短，否则影响仿真时长的计算，因为调用这个方法的过程仿真已经计时。仿真前的操作尽可能放到beforeStart方法中处理。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def afterStop(self) -> None: ...")])]),t._v(" "),s("p",[t._v("Ø 仿真结束后的操作，如果需要，用户可以在此方法释放资源。"),s("strong",[t._v("def calcDynaDispatchParameters(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("计算动态发车信息，用来修改发车点相关参数，此方法可以用来实现实时动态仿真。")]),t._v(" "),s("p",[t._v("返回：动态发车信息Online.DispatchInterval列表。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("calcDynaDispatchParameters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TESSNG 顶层接口")]),t._v("\n        iface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        currSimuTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("simuInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("simuTimeIntervalWithAcceMutiples"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" currSimuTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" currSimuTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ID等于5路段上车辆")]),t._v("\n            lVehi "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("simuInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehisInLink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" currSimuTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lVehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                now "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datetime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前时间秒")]),t._v("\n                currSecs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hour "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3600")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("minute "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" now"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("second\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仿真10秒后且ID等于1的路段上车辆数为0，则为ID等于1的发车点增加发车间隔")]),t._v("\n                di "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DispatchInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 动作控制案例-机动车交叉口L5路段发车点ID为11")]),t._v("\n                di"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dispatchId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v("\n                di"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fromTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" currSecs\n                di"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" di"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fromTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n                di"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehiCount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("\n                di"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mlVehicleConsDetail "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("VehiComposition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Online"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("VehiComposition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"流量修改完成，当前时间为{}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("format")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currSimuTime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("di"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def calcDynaFlowRatioParameters(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("一个或一次数据来源里保存的所有决策点在一个时间间隔的路径流量分配信息，此方法可以用来实现实时动态仿真。")]),t._v(" "),s("p",[t._v("返回：决策点流量分配信息Online.DecipointFlowRatioByInterval列表。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def calcDynaSignalContralParameters(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("一个或一次数据来源里保存的所有信号灯组的信号控制信息。")]),t._v(" "),s("p",[t._v("返回：信号灯组控制参数Online.SignalContralParam列表。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def initVehicle(self, pIVehicle:Tessng.IVehicle) -> None: ...")])]),t._v(" "),s("p",[t._v("初始化车辆，此方法在车辆起动加入路网时被调用，用户可以在这个方法里调用IVehicle的setVehiType方法重新设置类型，调用initLane或initLaneConnector方法对车辆的车道序号、起始位置、车辆大小进行初始化。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("initVehicle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 车辆所在路段名或连接段名")]),t._v("\n        roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 车辆所在路段ID或连接段ID")]),t._v("\n        roadId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'曹安公路'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#飞机")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setVehiType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("initLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("105")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#工程车")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setVehiType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("initLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#消防车")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setVehiType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("initLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#消防车")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setVehiType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("initLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#最后两队列小车")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setVehiType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("initLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setVehiType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("initLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("35")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setVehiType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("initLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setVehiType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("initLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setVehiType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("initLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setVehiType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("initLane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最后两列小车的长度设为一样长，这个很重要，如果车长不一样长，导致的前车距就不一样，会使它们变道轨迹长度不一样，就会步调不一致。")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" tmpId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setLength"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此处宽度设置为True，表示车身宽度也等比例变化，如果为False，则车身宽度不变")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def ref_beforeCreateGVehiclesForBusLine(self, pBusLine:Tessng.IBusLine, ref_keepOn:Tessng.objbool) -> None: ...")])]),t._v(" "),s("p",[t._v("创建公交车辆前的预处理")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pBusLine：公交线路")]),t._v(" "),s("p",[t._v("[in、out] keepOn：是否继续执行创建公交车辆，如果KeepOn被赋值为False，TESSNG不再创建公交车辆")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def shape(self, pIVehicle:Tessng.IVehicle, outShape:PySide2.QtGui.QPainterPath) -> bool: ...")])]),t._v(" "),s("p",[t._v("车辆外型，用户可以用此方法改变车辆外观")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[in、out] outShape：车辆外形")]),t._v(" "),s("p",[t._v("返回：如果返回False，则忽略")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_beforeCalcLampColor(self, ref_keepOn:Tessng.objbool) -> bool: ...")])]),t._v(" "),s("p",[t._v("计算信号灯色前的预处理。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in、out] 是否断续计算")]),t._v(" "),s("p",[t._v("返回：如果返回 True，且keepOn等于False，TESS NG不再计算信号灯色。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def calcLampColor(self, pSignalLamp:Tessng.ISignalLamp) -> bool: ...")])]),t._v(" "),s("p",[t._v("计算信号灯的灯色。ISignalLamp有设置信号灯颜色方法。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pSignalLamp：信号灯对象；")]),t._v(" "),s("p",[t._v("返回值：")]),t._v(" "),s("p",[t._v("如果返回True，表明用户已修改了信号灯颜色，TESS NG不再计算灯色。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def reCalcToLeftLane(self, pIVehicle:Tessng.IVehicle) -> bool: ...")])]),t._v(" "),s("p",[t._v("计算是否要左强制变道，TESS NG在移动车辆时计算强制左变道的条件，当条件不足时让插件计算，如果返回值为True，强制左变道。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象。")]),t._v(" "),s("p",[t._v("返回：False：忽略，True：强制左变道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def reCalcToRightLane(self, pIVehicle:Tessng.IVehicle) -> bool: ...")])]),t._v(" "),s("p",[t._v("计算是否要右强制变道，TESS NG在先移动车辆时计算强制右变道的条件，当条件不足时让插件计算，如果返回值为True，强制右变道。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("返回：False：忽略，True：强制右变道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_beforeToLeftFreely(self, pIVehicle:Tessng.IVehicle, ref_keepOn:Tessng.objbool) -> None: ...")])]),t._v(" "),s("p",[t._v("自由左变道前处理，如果bKeepOn被赋值为False，TESSNG不再计算是否自由左变道")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("[in、out] bKeepOn：是否继续，如果设为False，不再计算是否可以左自由变道")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_beforeToRightFreely(self, pIVehicle:Tessng.IVehicle, ref_keepOn:Tessng.objbool) -> None: ...")])]),t._v(" "),s("p",[t._v("自由右变道前处理，如果bKeepOn被赋值为False，TESSNG不再计算是否自由右变道")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("[in、out] bKeepOn：是否继续，如果设为False，不再计算是否可以右自由变道")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自由左变道前预处理")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref_beforeToLeftFreely")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref_keepOn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n       pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setColor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#0000FF"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自由右变道前预处理")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref_beforeToRightFreely")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref_keepOn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        pIVehicle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setColor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#EE0000"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def reCalcToLeftFreely(self, pIVehicle:Tessng.IVehicle) -> bool: ...")])]),t._v(" "),s("p",[t._v("重新计算是否要自由左变道。TESS NG在移动车辆时计算自由左变道条件，当条件不足时让插件计算，如果返回值为True，自由左变道。")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("返回：False：忽略，True：左自由変道，但在一些特殊场景也会放弃变道，如危险")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def reCalcToRightFreely(self, pIVehicle:Tessng.IVehicle) -> bool: ...")])]),t._v(" "),s("p",[t._v("重新计算是否要自由右变道。TESS NG在移动车辆时计算自由右变道条件，当条件不足时让插件计算，如果返回值为True，自由右变道。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("返回：False：忽略，True：右自由変道，但在一些特殊场景也会放弃变道，如危险")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def reCalcDismissChangeLane(self, pIVehicle:Tessng.IVehicle) -> bool: ...")])]),t._v(" "),s("p",[t._v("重新计算是否撤销变道，通过pIVehicle获取到自身条件数据及当前周边环境条件数据，判断是否要撤销正在进行的变道。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("返回：True 如果当前变道完成度不超过三分之一，则撤销当前变道行为；False 忽略。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_reCalcdesirSpeed(self, pIVehicle:Tessng.IVehicle, ref_desirSpeed:Tessng.objreal) -> bool: ...")])]),t._v(" "),s("p",[t._v("重新计算期望速度，TESS NG调用此方法时将车辆当前期望速度赋给inOutDesirSpeed，如果需要，用户可在此方法重新计算期望速度，并赋给inOutDesirSpeed。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("[in、out] inOutDesirSpeed：重新设置前后的车辆期望速度，单位：像素/秒；")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref_reCalcdesirSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref_desirSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前已仿真时间，单位：毫秒")]),t._v("\n        iface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        currSimuTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("simuInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("simuTimeIntervalWithAcceMutiples"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("currSimuTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n        roadId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以动作控制案例 - 机动车交叉口路网的L5路段为例")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" roadId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# L5离路段起点50-150m处为减速区")]),t._v("\n            distToStart "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehicleDriving"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("distToStartPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" distToStart "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lane"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehicleTypeCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    ref_desirSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"的小客车进入减速区，减速为10，当前速度为"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehicleTypeCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"的大客车进入减速区，减速为5，当前速度为"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    ref_desirSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def ref_reSetFollowingType(self, pIVehicle:Tessng.IVehicle, ref_outTypeValue:Tessng.objint) -> bool: ...")])]),t._v(" "),s("p",[t._v("重新设置跟驰类型，在计算加速度的过程中被调用")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[out] outTypeValue：跟驰类型，0：停车，1: 正常，5：急减速，6：急加速，7：汇入, 8：穿越，9：协作减速，10：协作加速，11：减速待转，12：加速待转")]),t._v(" "),s("p",[t._v("返回：False：忽略，True：用outTypeValue设置车辆驾驶行为的跟驰类型")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_reSetFollowingParam(self, pIVehicle:Tessng.IVehicle, ref_inOutSafeInterval:Tessng.objreal, ref_inOutSafeDistance:Tessng.objreal) -> bool: ...")])]),t._v(" "),s("p",[t._v("重新设置跟驰模型的安全间距和安全时距。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("[in、out] inOutSafeInterval：安全时距，单位：秒；")]),t._v(" "),s("p",[t._v("[in、out] inOutSafeDistance：安全间距：单位：像素；")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("范例将第二条连接段上的车辆跟车安全间距设为"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("米。代码如下：\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref_reSetFollowingParam")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref_inOutSi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref_inOutSd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"连接段2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        ref_inOutSd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def reSetFollowingParams(self) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("重新设置跟驰模型参数，影响所有车辆。此方法被TESS NG调用，用返回的跟驰模型取代当前仿真正在采用的跟驰模型。")]),t._v(" "),s("p",[t._v("返回：跟驰参数列表，可对机动车和非机车的跟驰参数重新设置，设置以后会被采用，直到被新的参数所代替。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_reSetDistanceFront(self, pIVehicle:Tessng.IVehicle, distance:Tessng.objreal, s0:Tessng.objreal) -> bool: ...")])]),t._v(" "),s("p",[t._v("重新设置前车距及安全跟车距离")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[in、out] distance：当前车辆与前车的距离，默认单位：像素")]),t._v(" "),s("p",[t._v("[in、out] s0：安全跟车距离，默认单位：像素")]),t._v(" "),s("p",[t._v("返回：False：忽略，True：用distance设置前车距，用s0设置安全跟车距离")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_reSetSpeed(self, pIVehicle:Tessng.IVehicle, ref_inOutSpeed:Tessng.objreal) -> bool: ...")])]),t._v(" "),s("p",[t._v("重新设置车速。TESS NG调用此方法时将当前计算所得车速赋给"),s("strong",[t._v("ref_inOutSpeed.value")]),t._v("，如果需要，用户可以在此方法重新计算车速并赋给ref_inOutSpeed.value。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("[in、out] inOutSpeed：重新计算前后的车速，单位：像素/秒。")]),t._v(" "),s("p",[t._v("返回：False：忽略，True：用inOutSpeed设置车辆当前速度")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref_reSetSpeed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ref_inOutSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 尝试让L12等待的车辆强制闯红灯")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        vehi_currentSpeed "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        vehi_currentDistToEnd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehicleDriving"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("distToEndpoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi_currentSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" p2m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi_currentDistToEnd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            random_number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" random"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("random"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" random_number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                ref_inOutSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制L5路段车辆在距路段终点50m处停车")]),t._v("\n    vehi_currentDistToEnd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehicleDriving"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("distToEndpoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" p2m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vehi_currentDistToEnd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            ref_inOutSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def ref_beforeMergingToLane(self, pIVehicle:Tessng.IVehicle, ref_keepOn:Tessng.objbool) -> None: ...")])]),t._v(" "),s("p",[t._v("在“车道连接”上汇入车道前的计算，可以让TESS NG放弃汇入计算，以便于用户实现自己的汇入逻辑。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("[out] "),s("strong",[t._v("ref_keepOn")]),t._v("：是否放弃，默认为True。赋值"),s("strong",[t._v("ref_keepOn.value")]),t._v("为False，TESSNG则放弃汇入。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def afterOneStep(self) -> None: ...")])]),t._v(" "),s("p",[t._v("一个计算批次后的计算，这个时候所有车辆都完成同一个批次的计算。通常在这个方法中获取所有车辆轨迹、检测器数据、进行必要的小计等。在这个方法中进行的计算基本不影响仿真结果的一致性，但效率不高，如果计算量大对仿真效率会有影响。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("范例中在这个方法中获取车辆对象和轨迹等信息。代码如下：\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterOneStep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#= == == == == == =以下是获取一些仿真过程数据的方法 == == == == == ==")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TESSNG 顶层接口")]),t._v("\n    iface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tessngIFace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TESSNG 仿真子接口")]),t._v("\n    simuiface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("simuInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TESSNG 路网子接口")]),t._v("\n    netiface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("netInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前仿真计算批次")]),t._v("\n    batchNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" simuiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("batchNumber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前已仿真时间，单位：毫秒")]),t._v("\n    simuTime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" simuiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("simuTimeIntervalWithAcceMutiples"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开始仿真的现实时间")]),t._v("\n    startRealtime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" simuiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("startMSecsSinceEpoch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当前正在运行车辆列表")]),t._v("\n    vehis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" simuiface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("allVehiStarted"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def duringOneStep(self) -> None: ...")])]),t._v(" "),s("p",[t._v("该方法在各个线程进行同一批次的计算过程中调用，这时存在部分车辆计算完成，部分车辆仍在计算过程中。这个方法中的计算不够安全，但效率较高。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_beforeNextRoad(self, pIVehicle:Tessng.IVehicle, pRoad:PySide2.QtWidgets.QGraphicsItem, ref_keepOn:Tessng.objbool) -> None: ...")])]),t._v(" "),s("p",[t._v("计算下一道路前的处理")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("[in] pRoad：暂不使用")]),t._v(" "),s("p",[t._v("[in、out] keepOn：是否继续计算，False：TESSNG不再计算后续道路，True：继续计算")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def candidateLaneConnectors(self, pIVehicle:Tessng.IVehicle, lInLC:typing.Sequence) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("计算当车辆离开路段时后续可经过的“车道连接”, lInLC是已计算出的当前车道可达的所有“车道连接”，用户可以从中筛选或重新计算。如果车辆有路径，则忽略")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle 当前车辆")]),t._v(" "),s("p",[t._v("[in] lInLC：TESS NG计算出的后续可达“车道连接”列表")]),t._v(" "),s("p",[t._v("返回：用户确定的后续可达“车道连接”列表")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def candidateLaneConnectors(self, pIVehicle:Tessng.IVehicle, lInLC:typing.Sequence) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("计算车辆后续“车道连接”，此时车辆正跨出当前路段，将驶到pCurrLaneConnector。此方法可以改变后续“车道连接”。如果返回的“车道连接”为空，TESSNG会忽略此方法的调用。如果返回的“车道连接”不在原有路径上，或者此方法设置了新路径且新路径不经过返回的“车道连接”，TESSNG调用此方法后会将路径设为空。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_beforeNextPoint(self, pIVehicle:Tessng.IVehicle, ref_keepOn:Tessng.objbool) -> None: ...")])]),t._v(" "),s("p",[t._v("计算车辆移动到下一点前的操作，用户可以通过此方法让TESSNG放弃对指定车辆到下一点的计算。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("[out] keepOn：是否继续, 默认为True，如果keepOn赋值为False，TESSNG放弃移动到下一点的计算，但不移出路网。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def calcLimitedLaneNumber(self, pIVehicle:Tessng.IVehicle) -> typing.List: ...")])]),t._v(" "),s("p",[t._v("计算限制车道序号：如管制、危险等，最右侧编号为0。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("返回：车道序号集，保存车辆不可以驰入的车道序号。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_calcSpeedLimitByLane(self, pILink:Tessng.ILink, laneNumber:int, ref_outSpeed:Tessng.objreal) -> bool: ...")])]),t._v(" "),s("p",[t._v("由车道确定的限制车速（最高速度, 公里/小时）")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pILink：路段")]),t._v(" "),s("p",[t._v("[in] laneNumber：,laneNumber:车道序号，最右侧编号为0")]),t._v(" "),s("p",[t._v("[in、out] outSpeed：限制速度，公里/小时")]),t._v(" "),s("p",[t._v("返回：False：忽略，True：用outSpeed限制指定车道速度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_calcMaxLimitedSpeed(self, pIVehicle:Tessng.IVehicle, ref_inOutLimitedSpeed:Tessng.objreal) -> bool: ...")])]),t._v(" "),s("p",[t._v("重新计算车辆当前最大限速，不受道路限速的影响。在没有插件干预的情况下，车辆速度大于道路限度时按道路最大限速行驶，在此方法的干预下，可以提高限速，让车辆大于道路限速行驶。")]),t._v(" "),s("p",[t._v("TESS NG调用此方法时将当前最高限速赋给inOutLimitedSpeed，如果需要，用户可以在方法里重新设置inOutLimitedSpeed值。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("[in、out] inOutLimitedSpeed：计算前后的最大限速，单位：像素/秒。")]),t._v(" "),s("p",[t._v("返回结果：")]),t._v(" "),s("p",[t._v("​    如果返回False则忽略，否则取inOutLimitedSpeed为当前道路最大限速。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_calcDistToEventObj(self, pIVehicle:Tessng.IVehicle, ref_dist:Tessng.objreal) -> bool: ...")])]),t._v(" "),s("p",[t._v("计算到事件对象距离，如到事故区、施工区的距离")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("[in、out] dist：车辆中心点距事件对象距离，单位像素")]),t._v(" "),s("p",[t._v("返回：False：忽略，True：用dist计算安全变道距离等")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_calcChangeLaneSafeDist(self, pIVehicle:Tessng.IVehicle, ref_dist:Tessng.objreal) -> bool: ...")])]),t._v(" "),s("p",[t._v("计算安全变道距离。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆，计算该车辆安全变道距离。")]),t._v(" "),s("p",[t._v("[in、out] dist：安全变道距离，dist.value保存了TESSNG已算得的安全变道距离，用户可以在此方法重新计算。")]),t._v(" "),s("p",[t._v("Ø 返回：False 忽略，True TESS NG取dist.value作为安全变道距离"),s("strong",[t._v("def afterStep(self, pIVehicle:Tessng.IVehicle) -> None: ...")])]),t._v(" "),s("p",[t._v("完成车辆pIVehicle“一个批次计算”后的处理。可以在此获取车辆当前信息，如当前道路、位置、方向角、速度、期望速度、前后左右车辆等。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_calcAcce(self, pIVehicle:Tessng.IVehicle, ref_acce:Tessng.objreal) -> bool: ...")])]),t._v(" "),s("p",[t._v("计算加速度")]),t._v(" "),s("p",[t._v("[in] pIVehicle：待计算加速度的车辆")]),t._v(" "),s("p",[t._v("[out] ref_acce：计算结果，单位：像素/秒^2")]),t._v(" "),s("p",[t._v("返回：False 忽略，True 则TES NG用调用此方法后所得ref_acce.value作为当前车辆的加速度。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isCalcVehicleVector3D(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("是否计算车辆3D属性，如欧拉角等")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def calcVehicleEuler(self, pIVehicle:Tessng.IVehicle, bPosiDire:bool=...) -> PySide2.QtGui.QVector3D: ...")])]),t._v(" "),s("p",[t._v("计算欧拉角")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[in] bPosiDire：车头方向是否正向计算，如果bPosiDire为False则反向计算")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_reSetAcce(self, pIVehicle:Tessng.IVehicle, ref_inOutAcce:Tessng.objreal) -> bool: ...")])]),t._v(" "),s("p",[t._v("重新计算加速度。TESS NG调用此方法时将当前计算所得加速度赋给inOutAcce，如果需要，用户可以在此方法中重新计算加速度并赋给ref_inOutAcce.value。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[in、out] ref_inOutAcce：重新计算前及计算后的加速度，单位：像素/秒^2")]),t._v(" "),s("p",[t._v("返回结果：")]),t._v(" "),s("p",[t._v("如果返回False则忽略，如果返回True，则将inOutAcce作为当前加速度。")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref_reSetAcce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inOutAcce"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("roadName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" roadName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"连接段1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            inOutAcce"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" vehi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currSpeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            inOutAcce"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" m2p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n\n")])])]),s("p",[t._v("Ø "),s("strong",[t._v("def afterCalcTracingType(self, pIVehicle:Tessng.IVehicle) -> None: ...")])]),t._v(" "),s("p",[t._v("计算跟驰类型后处理")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def travelOnChangingTrace(self, pIVehicle:Tessng.IVehicle) -> bool: ...")])]),t._v(" "),s("p",[t._v("是否在变轨迹上")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def travelOnChangingTrace(self, pIVehicle:Tessng.IVehicle) -> bool: ...")])]),t._v(" "),s("p",[t._v("获取车辆边界矩形")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[out] outRect：车辆边界矩形")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def shape(self, pIVehicle:Tessng.IVehicle, outShape:PySide2.QtGui.QPainterPath) -> bool: ...")])]),t._v(" "),s("p",[t._v("获取车辆图形路径")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[out] outShape：车辆形状路径")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def rePaintVehicle(self, pIVehicle:Tessng.IVehicle, painter:PySide2.QtGui.QPainter) -> None: ...")])]),t._v(" "),s("p",[t._v("绘制车辆")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[in] painter：笔刷")]),t._v(" "),s("p",[t._v("返回：True，TESSNG不再绘制车辆，False，TESSNG认为用户没有绘制，继续绘制")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_paintVehicleWithRotation(self, pIVehicle:Tessng.IVehicle, painter:PySide2.QtGui.QPainter, ref_inOutRotation:Tessng.objreal) -> bool: ...")])]),t._v(" "),s("p",[t._v("绘制车辆，绘制前将车辆对象旋转指定角度")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("[in] painter：QPainter指针")]),t._v(" "),s("p",[t._v("[in] inOutRotation：旋转的角度")]),t._v(" "),s("p",[t._v("返回：True，TESSNG不再绘制车辆，False，TESSNG认为用户没有绘制，继续绘制")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_paintVehicleWithRotation(self, pIVehicle:Tessng.IVehicle, painter:PySide2.QtGui.QPainter, ref_inOutRotation:Tessng.objreal) -> bool: ...")])]),t._v(" "),s("p",[t._v("以设定的角度绘制车辆")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle，车辆对象")]),t._v(" "),s("p",[t._v("[in] painter：QT的QPainter对象")]),t._v(" "),s("p",[t._v("[in、out] ref_inOutRotation：角度，TESS NG在调用此方法时传入车辆的旋转角，这个方法内部可以修改这个角度，改变TESS NG计算结果")]),t._v(" "),s("p",[t._v("返回：如果True，TESS NG不再绘制，否则TESS NG按原有规则绘制车辆。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def paintVehicle(self, pIVehicle:Tessng.IVehicle, painter:PySide2.QtGui.QPainter) -> bool: ...")])]),t._v(" "),s("p",[t._v("绘制车辆")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle，要重绘制的车辆")]),t._v(" "),s("p",[t._v("[in] painter，QPainter对象")]),t._v(" "),s("p",[t._v("返回：如果返回True，TESS NG不再绘制，否则TESS NG按原有规则绘制车辆。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def rePaintVehicle(self, pIVehicle:Tessng.IVehicle, painter:PySide2.QtGui.QPainter) -> None: ...")])]),t._v(" "),s("p",[t._v("绘制车辆后的再绘制，客户可在此方法增加绘制内容")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle，要重绘制的车辆")]),t._v(" "),s("p",[t._v("[in] painter，QPainter对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def ref_reCalcAngle(self, pIVehicle:Tessng.IVehicle, ref_outAngle:Tessng.objreal) -> bool: ...")])]),t._v(" "),s("p",[t._v("重新计算角度。TESS NG调用此方法时将当前算得的角度赋给ref_outAngle.value，如果需要，用户可在此方法中重新计算车辆角度，并将算得的角度赋给ref_outAngle.value。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("[in、out] ref_outAngle：重新计算前后角度，北向0度顺时针，一周360度")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isStopDriving(self, pIVehicle:Tessng.IVehicle) -> bool: ...")])]),t._v(" "),s("p",[t._v("是否停车运行，TESS NG在计算下一点位置后调用，判断是否要停止车辆pIVehicle的运行。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("返回结果：")]),t._v(" "),s("p",[t._v("如果返回True，则停止该车辆运行，移出路网。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def isPassbyEventZone(self, pIVehicle:Tessng.IVehicle) -> bool: ...")])]),t._v(" "),s("p",[t._v("是否正在经过事件区（如：施工区、限速区等）")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def beforeStopVehicle(self, pIVehicle:Tessng.IVehicle) -> None: ...")])]),t._v(" "),s("p",[t._v("车辆停止运行前的处理。")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in] pIVehicle：车辆对象；")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def afterStopVehicle(self, pIVehicle:Tessng.IVehicle) -> None: ...")])]),t._v(" "),s("p",[t._v("车辆停止运行后的处理")]),t._v(" "),s("p",[t._v("参数：")]),t._v(" "),s("p",[t._v("[in]pIVehicle：车辆对象。")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def recoveredSnapshot(self) -> bool: ...")])]),t._v(" "),s("p",[t._v("用快照恢复仿真场景，分布式环境可用")]),t._v(" "),s("p",[t._v("Ø "),s("strong",[t._v("def vehiRunInfo(self, pIVehicle:Tessng.IVehicle) -> str: ...")])]),t._v(" "),s("p",[t._v("车辆运行信息。在仿真过程中如果某辆车被单选，按ctrl+i 会弹出被单选车辆运行状态，文本框中的“其它信息”就是当前方法返回的字符串，开发者可以借此对实现的业务逻辑进行了解，用户可以了解仿真过程中具体车辆的一些特殊信息。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/vuepress/img/%E5%9B%BE9%E8%BD%A6%E8%BE%86%E8%BF%90%E8%A1%8C%E8%BF%87%E7%A8%8B%E5%B1%9E%E6%80%A7%E7%AA%97%E5%8F%A3.png",alt:"车辆运行过程属性窗口"}})])])}),[],!1,null,null,null);s.default=a.exports}}]);