(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function t(t){for(var i,a,s=t[0],l=t[1],c=t[2],p=0,f=[];p<s.length;p++)a=s[p],Object.prototype.hasOwnProperty.call(r,a)&&r[a]&&f.push(r[a][0]),r[a]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(e[i]=l[i]);for(u&&u(t);f.length;)f.shift()();return o.push.apply(o,c||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],i=!0,s=1;s<n.length;s++){var l=n[s];0!==r[l]&&(i=!1)}i&&(o.splice(t--,1),e=a(a.s=n[0]))}return e}var i={},r={12:0},o=[];function a(t){if(i[t])return i[t].exports;var n=i[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.e=function(e){var t=[],n=r[e];if(0!==n)if(n)t.push(n[2]);else{var i=new Promise((function(t,i){n=r[e]=[t,i]}));t.push(n[2]=i);var o,s=document.createElement("script");s.charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.src=function(e){return a.p+"assets/js/"+({13:"vendors~docsearch"}[e]||e)+"."+{1:"8ad87f6f",2:"87db2cf7",3:"26fa4d2a",4:"fa06e885",5:"73d34e77",6:"ede881a6",7:"75b85482",8:"ff8c51a6",9:"9c71da5b",10:"3c6ce834",11:"09762753",13:"638bbdd1",14:"b5e2fe37",15:"7779f75a",16:"dcb00087",17:"f5f97815",18:"a375d3e9",19:"8255e001",20:"11877118",21:"81070543",22:"a328fa26",23:"7b70a74b",24:"39eca4c0",25:"38a534ba",26:"6196ca23",27:"a2364143",28:"fb371d5d",29:"4b99363f",30:"23eeb12e",31:"305ec918",32:"fbc59b8b",33:"18dcd7ec",34:"7b0015f8",35:"b9d97528",36:"3bb2aed9",37:"ac45cea3",38:"64eba635",39:"b7a4e0d4",40:"fab28343",41:"3eafe134",42:"71090910",43:"c486453b",44:"3c5d9688",45:"fdcdfe6c",46:"00cc8482",47:"5ab78590",48:"bf2d57b6",49:"3dc8c444",50:"777d1602",51:"7aa467c4",52:"95bdfa4b",53:"fa6b74e1",54:"45e7bc32",55:"3cc143c2",56:"5319b8e6",57:"a78e7125"}[e]+".js"}(e);var l=new Error;o=function(t){s.onerror=s.onload=null,clearTimeout(c);var n=r[e];if(0!==n){if(n){var i=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src;l.message="Loading chunk "+e+" failed.\n("+i+": "+o+")",l.name="ChunkLoadError",l.type=i,l.request=o,n[1](l)}r[e]=void 0}};var c=setTimeout((function(){o({type:"timeout",target:s})}),12e4);s.onerror=s.onload=o,document.head.appendChild(s)}return Promise.all(t)},a.m=e,a.c=i,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)a.d(n,i,function(t){return e[t]}.bind(null,i));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="/vuepress/",a.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=t,s=s.slice();for(var c=0;c<s.length;c++)t(s[c]);var u=l;o.push([137,0]),n()}([function(e,t,n){"use strict";n.d(t,"a",(function(){return Ze})),n.d(t,"b",(function(){return di})),n.d(t,"c",(function(){return sn})),n.d(t,"d",(function(){return fe})),n.d(t,"e",(function(){return at})),n.d(t,"f",(function(){return on})),n.d(t,"g",(function(){return an})),n.d(t,"h",(function(){return rt})),n.d(t,"i",(function(){return je})),n.d(t,"j",(function(){return qe})),n.d(t,"k",(function(){return Ue})),n.d(t,"l",(function(){return tt}));
/*!
 * Vue.js v2.7.16
 * (c) 2014-2023 Evan You
 * Released under the MIT License.
 */
var i=Object.freeze({}),r=Array.isArray;function o(e){return null==e}function a(e){return null!=e}function s(e){return!0===e}function l(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function c(e){return"function"==typeof e}function u(e){return null!==e&&"object"==typeof e}var p=Object.prototype.toString;function f(e){return"[object Object]"===p.call(e)}function d(e){return"[object RegExp]"===p.call(e)}function h(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function m(e){return a(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function g(e){return null==e?"":Array.isArray(e)||f(e)&&e.toString===p?JSON.stringify(e,v,2):String(e)}function v(e,t){return t&&t.__v_isRef?t.value:t}function y(e){var t=parseFloat(e);return isNaN(t)?e:t}function b(e,t){for(var n=Object.create(null),i=e.split(","),r=0;r<i.length;r++)n[i[r]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}b("slot,component",!0);var I=b("key,ref,slot,slot-scope,is");function S(e,t){var n=e.length;if(n){if(t===e[n-1])return void(e.length=n-1);var i=e.indexOf(t);if(i>-1)return e.splice(i,1)}}var _=Object.prototype.hasOwnProperty;function D(e,t){return _.call(e,t)}function L(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var k=/-(\w)/g,w=L((function(e){return e.replace(k,(function(e,t){return t?t.toUpperCase():""}))})),T=L((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),C=/\B([A-Z])/g,P=L((function(e){return e.replace(C,"-$1").toLowerCase()}));var x=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var i=arguments.length;return i?i>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function O(e,t){t=t||0;for(var n=e.length-t,i=new Array(n);n--;)i[n]=e[n+t];return i}function A(e,t){for(var n in t)e[n]=t[n];return e}function E(e){for(var t={},n=0;n<e.length;n++)e[n]&&A(t,e[n]);return t}function F(e,t,n){}var N=function(e,t,n){return!1},V=function(e){return e};function j(e,t){if(e===t)return!0;var n=u(e),i=u(t);if(!n||!i)return!n&&!i&&String(e)===String(t);try{var r=Array.isArray(e),o=Array.isArray(t);if(r&&o)return e.length===t.length&&e.every((function(e,n){return j(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(r||o)return!1;var a=Object.keys(e),s=Object.keys(t);return a.length===s.length&&a.every((function(n){return j(e[n],t[n])}))}catch(e){return!1}}function R(e,t){for(var n=0;n<e.length;n++)if(j(e[n],t))return n;return-1}function Q(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}function $(e,t){return e===t?0===e&&1/e!=1/t:e==e||t==t}var B=["component","directive","filter"],M=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],G={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:N,isReservedAttr:N,isUnknownElement:N,getTagNamespace:F,parsePlatformTagName:V,mustUseProp:N,async:!0,_lifecycleHooks:M},q=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function z(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function W(e,t,n,i){Object.defineProperty(e,t,{value:n,enumerable:!!i,writable:!0,configurable:!0})}var U=new RegExp("[^".concat(q.source,".$_\\d]"));var H="__proto__"in{},Z="undefined"!=typeof window,J=Z&&window.navigator.userAgent.toLowerCase(),K=J&&/msie|trident/.test(J),Y=J&&J.indexOf("msie 9.0")>0,X=J&&J.indexOf("edge/")>0;J&&J.indexOf("android");var ee=J&&/iphone|ipad|ipod|ios/.test(J);J&&/chrome\/\d+/.test(J),J&&/phantomjs/.test(J);var te,ne=J&&J.match(/firefox\/(\d+)/),ie={}.watch,re=!1;if(Z)try{var oe={};Object.defineProperty(oe,"passive",{get:function(){re=!0}}),window.addEventListener("test-passive",null,oe)}catch(e){}var ae=function(){return void 0===te&&(te=!Z&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),te},se=Z&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function le(e){return"function"==typeof e&&/native code/.test(e.toString())}var ce,ue="undefined"!=typeof Symbol&&le(Symbol)&&"undefined"!=typeof Reflect&&le(Reflect.ownKeys);ce="undefined"!=typeof Set&&le(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var pe=null;function fe(){return pe&&{proxy:pe}}function de(e){void 0===e&&(e=null),e||pe&&pe._scope.off(),pe=e,e&&e._scope.on()}var he=function(){function e(e,t,n,i,r,o,a,s){this.tag=e,this.data=t,this.children=n,this.text=i,this.elm=r,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),me=function(e){void 0===e&&(e="");var t=new he;return t.text=e,t.isComment=!0,t};function ge(e){return new he(void 0,void 0,void 0,String(e))}function ve(e){var t=new he(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}"function"==typeof SuppressedError&&SuppressedError;var ye=0,be=[],Ie=function(){function e(){this._pending=!1,this.id=ye++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){this.subs[this.subs.indexOf(e)]=null,this._pending||(this._pending=!0,be.push(this))},e.prototype.depend=function(t){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){var t=this.subs.filter((function(e){return e}));for(var n=0,i=t.length;n<i;n++){0,t[n].update()}},e}();Ie.target=null;var Se=[];function _e(e){Se.push(e),Ie.target=e}function De(){Se.pop(),Ie.target=Se[Se.length-1]}var Le=Array.prototype,ke=Object.create(Le);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=Le[e];W(ke,e,(function(){for(var n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];var r,o=t.apply(this,n),a=this.__ob__;switch(e){case"push":case"unshift":r=n;break;case"splice":r=n.slice(2)}return r&&a.observeArray(r),a.dep.notify(),o}))}));var we=Object.getOwnPropertyNames(ke),Te={},Ce=!0;function Pe(e){Ce=e}var xe={notify:F,depend:F,addSub:F,removeSub:F},Oe=function(){function e(e,t,n){if(void 0===t&&(t=!1),void 0===n&&(n=!1),this.value=e,this.shallow=t,this.mock=n,this.dep=n?xe:new Ie,this.vmCount=0,W(e,"__ob__",this),r(e)){if(!n)if(H)e.__proto__=ke;else for(var i=0,o=we.length;i<o;i++){W(e,s=we[i],ke[s])}t||this.observeArray(e)}else{var a=Object.keys(e);for(i=0;i<a.length;i++){var s;Ee(e,s=a[i],Te,void 0,t,n)}}}return e.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Ae(e[t],!1,this.mock)},e}();function Ae(e,t,n){return e&&D(e,"__ob__")&&e.__ob__ instanceof Oe?e.__ob__:!Ce||!n&&ae()||!r(e)&&!f(e)||!Object.isExtensible(e)||e.__v_skip||Ge(e)||e instanceof he?void 0:new Oe(e,t,n)}function Ee(e,t,n,i,o,a,s){void 0===s&&(s=!1);var l=new Ie,c=Object.getOwnPropertyDescriptor(e,t);if(!c||!1!==c.configurable){var u=c&&c.get,p=c&&c.set;u&&!p||n!==Te&&2!==arguments.length||(n=e[t]);var f=o?n&&n.__ob__:Ae(n,!1,a);return Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=u?u.call(e):n;return Ie.target&&(l.depend(),f&&(f.dep.depend(),r(t)&&Ve(t))),Ge(t)&&!o?t.value:t},set:function(t){var i=u?u.call(e):n;if($(i,t)){if(p)p.call(e,t);else{if(u)return;if(!o&&Ge(i)&&!Ge(t))return void(i.value=t);n=t}f=o?t&&t.__ob__:Ae(t,!1,a),l.notify()}}}),l}}function Fe(e,t,n){if(!Me(e)){var i=e.__ob__;return r(e)&&h(t)?(e.length=Math.max(e.length,t),e.splice(t,1,n),i&&!i.shallow&&i.mock&&Ae(n,!1,!0),n):t in e&&!(t in Object.prototype)?(e[t]=n,n):e._isVue||i&&i.vmCount?n:i?(Ee(i.value,t,n,void 0,i.shallow,i.mock),i.dep.notify(),n):(e[t]=n,n)}}function Ne(e,t){if(r(e)&&h(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||Me(e)||D(e,t)&&(delete e[t],n&&n.dep.notify())}}function Ve(e){for(var t=void 0,n=0,i=e.length;n<i;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),r(t)&&Ve(t)}function je(e){return Qe(e,!1),e}function Re(e){return Qe(e,!0),W(e,"__v_isShallow",!0),e}function Qe(e,t){if(!Me(e)){Ae(e,t,ae());0}}function $e(e){return Me(e)?$e(e.__v_raw):!(!e||!e.__ob__)}function Be(e){return!(!e||!e.__v_isShallow)}function Me(e){return!(!e||!e.__v_isReadonly)}function Ge(e){return!(!e||!0!==e.__v_isRef)}function qe(e){return ze(e,!1)}function ze(e,t){if(Ge(e))return e;var n={};return W(n,"__v_isRef",!0),W(n,"__v_isShallow",t),W(n,"dep",Ee(n,"value",e,null,t,ae())),n}function We(e,t,n){Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var e=t[n];if(Ge(e))return e.value;var i=e&&e.__ob__;return i&&i.dep.depend(),e},set:function(e){var i=t[n];Ge(i)&&!Ge(e)?i.value=e:t[n]=e}})}function Ue(e){var t=r(e)?new Array(e.length):{};for(var n in e)t[n]=He(e,n);return t}function He(e,t,n){var i=e[t];if(Ge(i))return i;var r={get value(){var i=e[t];return void 0===i?n:i},set value(n){e[t]=n}};return W(r,"__v_isRef",!0),r}function Ze(e,t){var n,i,r=c(e);r?(n=e,i=F):(n=e.get,i=e.set);var o=ae()?null:new fn(pe,n,F,{lazy:!0});var a={effect:o,get value(){return o?(o.dirty&&o.evaluate(),Ie.target&&o.depend(),o.value):n()},set value(e){i(e)}};return W(a,"__v_isRef",!0),W(a,"__v_isReadonly",r),a}var Je="".concat("watcher"," callback"),Ke="".concat("watcher"," getter"),Ye="".concat("watcher"," cleanup");var Xe,et={};function tt(e,t,n){return nt(e,t,n)}function nt(e,t,n){var o=void 0===n?i:n,a=o.immediate,s=o.deep,l=o.flush,u=void 0===l?"pre":l;o.onTrack,o.onTrigger;var p,f,d=pe,h=function(e,t,n){void 0===n&&(n=null);var i=qt(e,null,n,d,t);return s&&i&&i.__ob__&&i.__ob__.dep.depend(),i},m=!1,g=!1;if(Ge(e)?(p=function(){return e.value},m=Be(e)):$e(e)?(p=function(){return e.__ob__.dep.depend(),e},s=!0):r(e)?(g=!0,m=e.some((function(e){return $e(e)||Be(e)})),p=function(){return e.map((function(e){return Ge(e)?e.value:$e(e)?(e.__ob__.dep.depend(),cn(e)):c(e)?h(e,Ke):void 0}))}):p=c(e)?t?function(){return h(e,Ke)}:function(){if(!d||!d._isDestroyed)return f&&f(),h(e,"watcher",[y])}:F,t&&s){var v=p;p=function(){return cn(v())}}var y=function(e){f=b.onStop=function(){h(e,Ye)}};if(ae())return y=F,t?a&&h(t,Je,[p(),g?[]:void 0,y]):p(),F;var b=new fn(pe,p,F,{lazy:!0});b.noRecurse=!t;var I=g?[]:et;return b.run=function(){if(b.active)if(t){var e=b.get();(s||m||(g?e.some((function(e,t){return $(e,I[t])})):$(e,I)))&&(f&&f(),h(t,Je,[e,I===et?void 0:I,y]),I=e)}else b.get()},"sync"===u?b.update=b.run:"post"===u?(b.post=!0,b.update=function(){return En(b)}):b.update=function(){if(d&&d===pe&&!d._isMounted){var e=d._preWatchers||(d._preWatchers=[]);e.indexOf(b)<0&&e.push(b)}else En(b)},t?a?b.run():I=b.get():"post"===u&&d?d.$once("hook:mounted",(function(){return b.get()})):b.get(),function(){b.teardown()}}var it=function(){function e(e){void 0===e&&(e=!1),this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Xe,!e&&Xe&&(this.index=(Xe.scopes||(Xe.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var t=Xe;try{return Xe=this,e()}finally{Xe=t}}else 0},e.prototype.on=function(){Xe=this},e.prototype.off=function(){Xe=this.parent},e.prototype.stop=function(e){if(this.active){var t=void 0,n=void 0;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].teardown();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){var i=this.parent.scopes.pop();i&&i!==this&&(this.parent.scopes[this.index]=i,i.index=this.index)}this.parent=void 0,this.active=!1}},e}();function rt(e,t){pe&&(ot(pe)[e]=t)}function ot(e){var t=e._provided,n=e.$parent&&e.$parent._provided;return n===t?e._provided=Object.create(n):t}function at(e,t,n){void 0===n&&(n=!1);var i=pe;if(i){var r=i.$parent&&i.$parent._provided;if(r&&e in r)return r[e];if(arguments.length>1)return n&&c(t)?t.call(i):t}else 0}var st=L((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),i="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=i?e.slice(1):e,once:n,capture:i,passive:t}}));function lt(e,t){function n(){var e=n.fns;if(!r(e))return qt(e,null,arguments,t,"v-on handler");for(var i=e.slice(),o=0;o<i.length;o++)qt(i[o],null,arguments,t,"v-on handler")}return n.fns=e,n}function ct(e,t,n,i,r,a){var l,c,u,p;for(l in e)c=e[l],u=t[l],p=st(l),o(c)||(o(u)?(o(c.fns)&&(c=e[l]=lt(c,a)),s(p.once)&&(c=e[l]=r(p.name,c,p.capture)),n(p.name,c,p.capture,p.passive,p.params)):c!==u&&(u.fns=c,e[l]=u));for(l in t)o(e[l])&&i((p=st(l)).name,t[l],p.capture)}function ut(e,t,n){var i;e instanceof he&&(e=e.data.hook||(e.data.hook={}));var r=e[t];function l(){n.apply(this,arguments),S(i.fns,l)}o(r)?i=lt([l]):a(r.fns)&&s(r.merged)?(i=r).fns.push(l):i=lt([r,l]),i.merged=!0,e[t]=i}function pt(e,t,n,i,r){if(a(t)){if(D(t,n))return e[n]=t[n],r||delete t[n],!0;if(D(t,i))return e[n]=t[i],r||delete t[i],!0}return!1}function ft(e){return l(e)?[ge(e)]:r(e)?function e(t,n){var i,c,u,p,f=[];for(i=0;i<t.length;i++)o(c=t[i])||"boolean"==typeof c||(u=f.length-1,p=f[u],r(c)?c.length>0&&(dt((c=e(c,"".concat(n||"","_").concat(i)))[0])&&dt(p)&&(f[u]=ge(p.text+c[0].text),c.shift()),f.push.apply(f,c)):l(c)?dt(p)?f[u]=ge(p.text+c):""!==c&&f.push(ge(c)):dt(c)&&dt(p)?f[u]=ge(p.text+c.text):(s(t._isVList)&&a(c.tag)&&o(c.key)&&a(n)&&(c.key="__vlist".concat(n,"_").concat(i,"__")),f.push(c)));return f}(e):void 0}function dt(e){return a(e)&&a(e.text)&&!1===e.isComment}function ht(e,t){var n,i,o,s,l=null;if(r(e)||"string"==typeof e)for(l=new Array(e.length),n=0,i=e.length;n<i;n++)l[n]=t(e[n],n);else if("number"==typeof e)for(l=new Array(e),n=0;n<e;n++)l[n]=t(n+1,n);else if(u(e))if(ue&&e[Symbol.iterator]){l=[];for(var c=e[Symbol.iterator](),p=c.next();!p.done;)l.push(t(p.value,l.length)),p=c.next()}else for(o=Object.keys(e),l=new Array(o.length),n=0,i=o.length;n<i;n++)s=o[n],l[n]=t(e[s],s,n);return a(l)||(l=[]),l._isVList=!0,l}function mt(e,t,n,i){var r,o=this.$scopedSlots[e];o?(n=n||{},i&&(n=A(A({},i),n)),r=o(n)||(c(t)?t():t)):r=this.$slots[e]||(c(t)?t():t);var a=n&&n.slot;return a?this.$createElement("template",{slot:a},r):r}function gt(e){return Kn(this.$options,"filters",e,!0)||V}function vt(e,t){return r(e)?-1===e.indexOf(t):e!==t}function yt(e,t,n,i,r){var o=G.keyCodes[t]||n;return r&&i&&!G.keyCodes[t]?vt(r,i):o?vt(o,e):i?P(i)!==t:void 0===e}function bt(e,t,n,i,o){if(n)if(u(n)){r(n)&&(n=E(n));var a=void 0,s=function(r){if("class"===r||"style"===r||I(r))a=e;else{var s=e.attrs&&e.attrs.type;a=i||G.mustUseProp(t,s,r)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=w(r),c=P(r);l in a||c in a||(a[r]=n[r],o&&((e.on||(e.on={}))["update:".concat(r)]=function(e){n[r]=e}))};for(var l in n)s(l)}else;return e}function It(e,t){var n=this._staticTrees||(this._staticTrees=[]),i=n[e];return i&&!t||_t(i=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),i}function St(e,t,n){return _t(e,"__once__".concat(t).concat(n?"_".concat(n):""),!0),e}function _t(e,t,n){if(r(e))for(var i=0;i<e.length;i++)e[i]&&"string"!=typeof e[i]&&Dt(e[i],"".concat(t,"_").concat(i),n);else Dt(e,t,n)}function Dt(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function Lt(e,t){if(t)if(f(t)){var n=e.on=e.on?A({},e.on):{};for(var i in t){var r=n[i],o=t[i];n[i]=r?[].concat(r,o):o}}else;return e}function kt(e,t,n,i){t=t||{$stable:!n};for(var o=0;o<e.length;o++){var a=e[o];r(a)?kt(a,t,n):a&&(a.proxy&&(a.fn.proxy=!0),t[a.key]=a.fn)}return i&&(t.$key=i),t}function wt(e,t){for(var n=0;n<t.length;n+=2){var i=t[n];"string"==typeof i&&i&&(e[t[n]]=t[n+1])}return e}function Tt(e,t){return"string"==typeof e?t+e:e}function Ct(e){e._o=St,e._n=y,e._s=g,e._l=ht,e._t=mt,e._q=j,e._i=R,e._m=It,e._f=gt,e._k=yt,e._b=bt,e._v=ge,e._e=me,e._u=kt,e._g=Lt,e._d=wt,e._p=Tt}function Pt(e,t){if(!e||!e.length)return{};for(var n={},i=0,r=e.length;i<r;i++){var o=e[i],a=o.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,o.context!==t&&o.fnContext!==t||!a||null==a.slot)(n.default||(n.default=[])).push(o);else{var s=a.slot,l=n[s]||(n[s]=[]);"template"===o.tag?l.push.apply(l,o.children||[]):l.push(o)}}for(var c in n)n[c].every(xt)&&delete n[c];return n}function xt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function Ot(e){return e.isComment&&e.asyncFactory}function At(e,t,n,r){var o,a=Object.keys(n).length>0,s=t?!!t.$stable:!a,l=t&&t.$key;if(t){if(t._normalized)return t._normalized;if(s&&r&&r!==i&&l===r.$key&&!a&&!r.$hasNormal)return r;for(var c in o={},t)t[c]&&"$"!==c[0]&&(o[c]=Et(e,n,c,t[c]))}else o={};for(var u in n)u in o||(o[u]=Ft(n,u));return t&&Object.isExtensible(t)&&(t._normalized=o),W(o,"$stable",s),W(o,"$key",l),W(o,"$hasNormal",a),o}function Et(e,t,n,i){var o=function(){var t=pe;de(e);var n=arguments.length?i.apply(null,arguments):i({}),o=(n=n&&"object"==typeof n&&!r(n)?[n]:ft(n))&&n[0];return de(t),n&&(!o||1===n.length&&o.isComment&&!Ot(o))?void 0:n};return i.proxy&&Object.defineProperty(t,n,{get:o,enumerable:!0,configurable:!0}),o}function Ft(e,t){return function(){return e[t]}}function Nt(e){return{get attrs(){if(!e._attrsProxy){var t=e._attrsProxy={};W(t,"_v_attr_proxy",!0),Vt(t,e.$attrs,i,e,"$attrs")}return e._attrsProxy},get listeners(){e._listenersProxy||Vt(e._listenersProxy={},e.$listeners,i,e,"$listeners");return e._listenersProxy},get slots(){return function(e){e._slotsProxy||Rt(e._slotsProxy={},e.$scopedSlots);return e._slotsProxy}(e)},emit:x(e.$emit,e),expose:function(t){t&&Object.keys(t).forEach((function(n){return We(e,t,n)}))}}}function Vt(e,t,n,i,r){var o=!1;for(var a in t)a in e?t[a]!==n[a]&&(o=!0):(o=!0,jt(e,a,i,r));for(var a in e)a in t||(o=!0,delete e[a]);return o}function jt(e,t,n,i){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){return n[i][t]}})}function Rt(e,t){for(var n in t)e[n]=t[n];for(var n in e)n in t||delete e[n]}var Qt=null;function $t(e,t){return(e.__esModule||ue&&"Module"===e[Symbol.toStringTag])&&(e=e.default),u(e)?t.extend(e):e}function Bt(e){if(r(e))for(var t=0;t<e.length;t++){var n=e[t];if(a(n)&&(a(n.componentOptions)||Ot(n)))return n}}function Mt(e,t,n,i,p,f){return(r(n)||l(n))&&(p=i,i=n,n=void 0),s(f)&&(p=2),function(e,t,n,i,l){if(a(n)&&a(n.__ob__))return me();a(n)&&a(n.is)&&(t=n.is);if(!t)return me();0;r(i)&&c(i[0])&&((n=n||{}).scopedSlots={default:i[0]},i.length=0);2===l?i=ft(i):1===l&&(i=function(e){for(var t=0;t<e.length;t++)if(r(e[t]))return Array.prototype.concat.apply([],e);return e}(i));var p,f;if("string"==typeof t){var d=void 0;f=e.$vnode&&e.$vnode.ns||G.getTagNamespace(t),p=G.isReservedTag(t)?new he(G.parsePlatformTagName(t),n,i,void 0,void 0,e):n&&n.pre||!a(d=Kn(e.$options,"components",t))?new he(t,n,i,void 0,void 0,e):Bn(d,n,e,i,t)}else p=Bn(t,n,e,i);return r(p)?p:a(p)?(a(f)&&function e(t,n,i){t.ns=n,"foreignObject"===t.tag&&(n=void 0,i=!0);if(a(t.children))for(var r=0,l=t.children.length;r<l;r++){var c=t.children[r];a(c.tag)&&(o(c.ns)||s(i)&&"svg"!==c.tag)&&e(c,n,i)}}(p,f),a(n)&&function(e){u(e.style)&&cn(e.style);u(e.class)&&cn(e.class)}(n),p):me()}(e,t,n,i,p)}function Gt(e,t,n){_e();try{if(t)for(var i=t;i=i.$parent;){var r=i.$options.errorCaptured;if(r)for(var o=0;o<r.length;o++)try{if(!1===r[o].call(i,e,t,n))return}catch(e){zt(e,i,"errorCaptured hook")}}zt(e,t,n)}finally{De()}}function qt(e,t,n,i,r){var o;try{(o=n?e.apply(t,n):e.call(t))&&!o._isVue&&m(o)&&!o._handled&&(o.catch((function(e){return Gt(e,i,r+" (Promise/async)")})),o._handled=!0)}catch(e){Gt(e,i,r)}return o}function zt(e,t,n){if(G.errorHandler)try{return G.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Wt(t,null,"config.errorHandler")}Wt(e,t,n)}function Wt(e,t,n){if(!Z||"undefined"==typeof console)throw e;console.error(e)}var Ut,Ht=!1,Zt=[],Jt=!1;function Kt(){Jt=!1;var e=Zt.slice(0);Zt.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&le(Promise)){var Yt=Promise.resolve();Ut=function(){Yt.then(Kt),ee&&setTimeout(F)},Ht=!0}else if(K||"undefined"==typeof MutationObserver||!le(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ut="undefined"!=typeof setImmediate&&le(setImmediate)?function(){setImmediate(Kt)}:function(){setTimeout(Kt,0)};else{var Xt=1,en=new MutationObserver(Kt),tn=document.createTextNode(String(Xt));en.observe(tn,{characterData:!0}),Ut=function(){Xt=(Xt+1)%2,tn.data=String(Xt)},Ht=!0}function nn(e,t){var n;if(Zt.push((function(){if(e)try{e.call(t)}catch(e){Gt(e,t,"nextTick")}else n&&n(t)})),Jt||(Jt=!0,Ut()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}function rn(e){return function(t,n){if(void 0===n&&(n=pe),n)return function(e,t,n){var i=e.$options;i[t]=Un(i[t],n)}(n,e,t)}}rn("beforeMount");var on=rn("mounted"),an=(rn("beforeUpdate"),rn("updated"));rn("beforeDestroy"),rn("destroyed"),rn("activated"),rn("deactivated"),rn("serverPrefetch"),rn("renderTracked"),rn("renderTriggered"),rn("errorCaptured");function sn(e){return e}var ln=new ce;function cn(e){return function e(t,n){var i,o,a=r(t);if(!a&&!u(t)||t.__v_skip||Object.isFrozen(t)||t instanceof he)return;if(t.__ob__){var s=t.__ob__.dep.id;if(n.has(s))return;n.add(s)}if(a)for(i=t.length;i--;)e(t[i],n);else if(Ge(t))e(t.value,n);else for(o=Object.keys(t),i=o.length;i--;)e(t[o[i]],n)}(e,ln),ln.clear(),e}var un,pn=0,fn=function(){function e(e,t,n,i,r){var o,a;o=this,void 0===(a=Xe&&!Xe._vm?Xe:e?e._scope:void 0)&&(a=Xe),a&&a.active&&a.effects.push(o),(this.vm=e)&&r&&(e._watcher=this),i?(this.deep=!!i.deep,this.user=!!i.user,this.lazy=!!i.lazy,this.sync=!!i.sync,this.before=i.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++pn,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ce,this.newDepIds=new ce,this.expression="",c(t)?this.getter=t:(this.getter=function(e){if(!U.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=F)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;_e(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;Gt(e,t,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&cn(e),De(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():En(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||u(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'.concat(this.expression,'"');qt(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&S(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}();function dn(e,t){un.$on(e,t)}function hn(e,t){un.$off(e,t)}function mn(e,t){var n=un;return function i(){var r=t.apply(null,arguments);null!==r&&n.$off(e,i)}}function gn(e,t,n){un=e,ct(t,n||{},dn,hn,mn,e),un=void 0}var vn=null;function yn(e){var t=vn;return vn=e,function(){vn=t}}function bn(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function In(e,t){if(t){if(e._directInactive=!1,bn(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)In(e.$children[n]);Sn(e,"activated")}}function Sn(e,t,n,i){void 0===i&&(i=!0),_e();var r=pe,o=Xe;i&&de(e);var a=e.$options[t],s="".concat(t," hook");if(a)for(var l=0,c=a.length;l<c;l++)qt(a[l],e,n||null,e,s);e._hasHookEvent&&e.$emit("hook:"+t),i&&(de(r),o&&o.on()),De()}var _n=[],Dn=[],Ln={},kn=!1,wn=!1,Tn=0;var Cn=0,Pn=Date.now;if(Z&&!K){var xn=window.performance;xn&&"function"==typeof xn.now&&Pn()>document.createEvent("Event").timeStamp&&(Pn=function(){return xn.now()})}var On=function(e,t){if(e.post){if(!t.post)return 1}else if(t.post)return-1;return e.id-t.id};function An(){var e,t;for(Cn=Pn(),wn=!0,_n.sort(On),Tn=0;Tn<_n.length;Tn++)(e=_n[Tn]).before&&e.before(),t=e.id,Ln[t]=null,e.run();var n=Dn.slice(),i=_n.slice();Tn=_n.length=Dn.length=0,Ln={},kn=wn=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,In(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],i=n.vm;i&&i._watcher===n&&i._isMounted&&!i._isDestroyed&&Sn(i,"updated")}}(i),function(){for(var e=0;e<be.length;e++){var t=be[e];t.subs=t.subs.filter((function(e){return e})),t._pending=!1}be.length=0}(),se&&G.devtools&&se.emit("flush")}function En(e){var t=e.id;if(null==Ln[t]&&(e!==Ie.target||!e.noRecurse)){if(Ln[t]=!0,wn){for(var n=_n.length-1;n>Tn&&_n[n].id>e.id;)n--;_n.splice(n+1,0,e)}else _n.push(e);kn||(kn=!0,nn(An))}}function Fn(e,t){if(e){for(var n=Object.create(null),i=ue?Reflect.ownKeys(e):Object.keys(e),r=0;r<i.length;r++){var o=i[r];if("__ob__"!==o){var a=e[o].from;if(a in t._provided)n[o]=t._provided[a];else if("default"in e[o]){var s=e[o].default;n[o]=c(s)?s.call(t):s}else 0}}return n}}function Nn(e,t,n,o,a){var l,c=this,u=a.options;D(o,"_uid")?(l=Object.create(o))._original=o:(l=o,o=o._original);var p=s(u._compiled),f=!p;this.data=e,this.props=t,this.children=n,this.parent=o,this.listeners=e.on||i,this.injections=Fn(u.inject,o),this.slots=function(){return c.$slots||At(o,e.scopedSlots,c.$slots=Pt(n,o)),c.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return At(o,e.scopedSlots,this.slots())}}),p&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=At(o,e.scopedSlots,this.$slots)),u._scopeId?this._c=function(e,t,n,i){var a=Mt(l,e,t,n,i,f);return a&&!r(a)&&(a.fnScopeId=u._scopeId,a.fnContext=o),a}:this._c=function(e,t,n,i){return Mt(l,e,t,n,i,f)}}function Vn(e,t,n,i,r){var o=ve(e);return o.fnContext=n,o.fnOptions=i,t.slot&&((o.data||(o.data={})).slot=t.slot),o}function jn(e,t){for(var n in t)e[w(n)]=t[n]}function Rn(e){return e.name||e.__name||e._componentTag}Ct(Nn.prototype);var Qn={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;Qn.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},i=e.data.inlineTemplate;a(i)&&(n.render=i.render,n.staticRenderFns=i.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,vn)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,r,o){var a=r.data.scopedSlots,s=e.$scopedSlots,l=!!(a&&!a.$stable||s!==i&&!s.$stable||a&&e.$scopedSlots.$key!==a.$key||!a&&e.$scopedSlots.$key),c=!!(o||e.$options._renderChildren||l),u=e.$vnode;e.$options._parentVnode=r,e.$vnode=r,e._vnode&&(e._vnode.parent=r),e.$options._renderChildren=o;var p=r.data.attrs||i;e._attrsProxy&&Vt(e._attrsProxy,p,u.data&&u.data.attrs||i,e,"$attrs")&&(c=!0),e.$attrs=p,n=n||i;var f=e.$options._parentListeners;if(e._listenersProxy&&Vt(e._listenersProxy,n,f||i,e,"$listeners"),e.$listeners=e.$options._parentListeners=n,gn(e,n,f),t&&e.$options.props){Pe(!1);for(var d=e._props,h=e.$options._propKeys||[],m=0;m<h.length;m++){var g=h[m],v=e.$options.props;d[g]=Yn(g,v,t,e)}Pe(!0),e.$options.propsData=t}c&&(e.$slots=Pt(o,r.context),e.$forceUpdate())}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,i=e.componentInstance;i._isMounted||(i._isMounted=!0,Sn(i,"mounted")),e.data.keepAlive&&(n._isMounted?((t=i)._inactive=!1,Dn.push(t)):In(i,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(!(n&&(t._directInactive=!0,bn(t))||t._inactive)){t._inactive=!0;for(var i=0;i<t.$children.length;i++)e(t.$children[i]);Sn(t,"deactivated")}}(t,!0):t.$destroy())}},$n=Object.keys(Qn);function Bn(e,t,n,l,c){if(!o(e)){var p=n.$options._base;if(u(e)&&(e=p.extend(e)),"function"==typeof e){var f;if(o(e.cid)&&void 0===(e=function(e,t){if(s(e.error)&&a(e.errorComp))return e.errorComp;if(a(e.resolved))return e.resolved;var n=Qt;if(n&&a(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n),s(e.loading)&&a(e.loadingComp))return e.loadingComp;if(n&&!a(e.owners)){var i=e.owners=[n],r=!0,l=null,c=null;n.$on("hook:destroyed",(function(){return S(i,n)}));var p=function(e){for(var t=0,n=i.length;t<n;t++)i[t].$forceUpdate();e&&(i.length=0,null!==l&&(clearTimeout(l),l=null),null!==c&&(clearTimeout(c),c=null))},f=Q((function(n){e.resolved=$t(n,t),r?i.length=0:p(!0)})),d=Q((function(t){a(e.errorComp)&&(e.error=!0,p(!0))})),h=e(f,d);return u(h)&&(m(h)?o(e.resolved)&&h.then(f,d):m(h.component)&&(h.component.then(f,d),a(h.error)&&(e.errorComp=$t(h.error,t)),a(h.loading)&&(e.loadingComp=$t(h.loading,t),0===h.delay?e.loading=!0:l=setTimeout((function(){l=null,o(e.resolved)&&o(e.error)&&(e.loading=!0,p(!1))}),h.delay||200)),a(h.timeout)&&(c=setTimeout((function(){c=null,o(e.resolved)&&d(null)}),h.timeout)))),r=!1,e.loading?e.loadingComp:e.resolved}}(f=e,p)))return function(e,t,n,i,r){var o=me();return o.asyncFactory=e,o.asyncMeta={data:t,context:n,children:i,tag:r},o}(f,t,n,l,c);t=t||{},fi(e),a(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",i=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var o=t.on||(t.on={}),s=o[i],l=t.model.callback;a(s)?(r(s)?-1===s.indexOf(l):s!==l)&&(o[i]=[l].concat(s)):o[i]=l}(e.options,t);var d=function(e,t,n){var i=t.options.props;if(!o(i)){var r={},s=e.attrs,l=e.props;if(a(s)||a(l))for(var c in i){var u=P(c);pt(r,l,c,u,!0)||pt(r,s,c,u,!1)}return r}}(t,e);if(s(e.options.functional))return function(e,t,n,o,s){var l=e.options,c={},u=l.props;if(a(u))for(var p in u)c[p]=Yn(p,u,t||i);else a(n.attrs)&&jn(c,n.attrs),a(n.props)&&jn(c,n.props);var f=new Nn(n,c,s,o,e),d=l.render.call(null,f._c,f);if(d instanceof he)return Vn(d,n,f.parent,l,f);if(r(d)){for(var h=ft(d)||[],m=new Array(h.length),g=0;g<h.length;g++)m[g]=Vn(h[g],n,f.parent,l,f);return m}}(e,d,t,n,l);var h=t.on;if(t.on=t.nativeOn,s(e.options.abstract)){var g=t.slot;t={},g&&(t.slot=g)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<$n.length;n++){var i=$n[n],r=t[i],o=Qn[i];r===o||r&&r._merged||(t[i]=r?Mn(o,r):o)}}(t);var v=Rn(e.options)||c;return new he("vue-component-".concat(e.cid).concat(v?"-".concat(v):""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:d,listeners:h,tag:c,children:l},f)}}}function Mn(e,t){var n=function(n,i){e(n,i),t(n,i)};return n._merged=!0,n}var Gn=F,qn=G.optionMergeStrategies;function zn(e,t,n){if(void 0===n&&(n=!0),!t)return e;for(var i,r,o,a=ue?Reflect.ownKeys(t):Object.keys(t),s=0;s<a.length;s++)"__ob__"!==(i=a[s])&&(r=e[i],o=t[i],n&&D(e,i)?r!==o&&f(r)&&f(o)&&zn(r,o):Fe(e,i,o));return e}function Wn(e,t,n){return n?function(){var i=c(t)?t.call(n,n):t,r=c(e)?e.call(n,n):e;return i?zn(i,r):r}:t?e?function(){return zn(c(t)?t.call(this,this):t,c(e)?e.call(this,this):e)}:t:e}function Un(e,t){var n=t?e?e.concat(t):r(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Hn(e,t,n,i){var r=Object.create(e||null);return t?A(r,t):r}qn.data=function(e,t,n){return n?Wn(e,t,n):t&&"function"!=typeof t?e:Wn(e,t)},M.forEach((function(e){qn[e]=Un})),B.forEach((function(e){qn[e+"s"]=Hn})),qn.watch=function(e,t,n,i){if(e===ie&&(e=void 0),t===ie&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var o={};for(var a in A(o,e),t){var s=o[a],l=t[a];s&&!r(s)&&(s=[s]),o[a]=s?s.concat(l):r(l)?l:[l]}return o},qn.props=qn.methods=qn.inject=qn.computed=function(e,t,n,i){if(!e)return t;var r=Object.create(null);return A(r,e),t&&A(r,t),r},qn.provide=function(e,t){return e?function(){var n=Object.create(null);return zn(n,c(e)?e.call(this):e),t&&zn(n,c(t)?t.call(this):t,!1),n}:t};var Zn=function(e,t){return void 0===t?e:t};function Jn(e,t,n){if(c(t)&&(t=t.options),function(e,t){var n=e.props;if(n){var i,o,a={};if(r(n))for(i=n.length;i--;)"string"==typeof(o=n[i])&&(a[w(o)]={type:null});else if(f(n))for(var s in n)o=n[s],a[w(s)]=f(o)?o:{type:o};else 0;e.props=a}}(t),function(e,t){var n=e.inject;if(n){var i=e.inject={};if(r(n))for(var o=0;o<n.length;o++)i[n[o]]={from:n[o]};else if(f(n))for(var a in n){var s=n[a];i[a]=f(s)?A({from:a},s):{from:s}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var i=t[n];c(i)&&(t[n]={bind:i,update:i})}}(t),!t._base&&(t.extends&&(e=Jn(e,t.extends,n)),t.mixins))for(var i=0,o=t.mixins.length;i<o;i++)e=Jn(e,t.mixins[i],n);var a,s={};for(a in e)l(a);for(a in t)D(e,a)||l(a);function l(i){var r=qn[i]||Zn;s[i]=r(e[i],t[i],n,i)}return s}function Kn(e,t,n,i){if("string"==typeof n){var r=e[t];if(D(r,n))return r[n];var o=w(n);if(D(r,o))return r[o];var a=T(o);return D(r,a)?r[a]:r[n]||r[o]||r[a]}}function Yn(e,t,n,i){var r=t[e],o=!D(n,e),a=n[e],s=ni(Boolean,r.type);if(s>-1)if(o&&!D(r,"default"))a=!1;else if(""===a||a===P(e)){var l=ni(String,r.type);(l<0||s<l)&&(a=!0)}if(void 0===a){a=function(e,t,n){if(!D(t,"default"))return;var i=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return c(i)&&"Function"!==ei(t.type)?i.call(e):i}(i,r,e);var u=Ce;Pe(!0),Ae(a),Pe(u)}return a}var Xn=/^\s*function (\w+)/;function ei(e){var t=e&&e.toString().match(Xn);return t?t[1]:""}function ti(e,t){return ei(e)===ei(t)}function ni(e,t){if(!r(t))return ti(t,e)?0:-1;for(var n=0,i=t.length;n<i;n++)if(ti(t[n],e))return n;return-1}var ii={enumerable:!0,configurable:!0,get:F,set:F};function ri(e,t,n){ii.get=function(){return this[t][n]},ii.set=function(e){this[t][n]=e},Object.defineProperty(e,n,ii)}function oi(e){var t=e.$options;if(t.props&&function(e,t){var n=e.$options.propsData||{},i=e._props=Re({}),r=e.$options._propKeys=[];e.$parent&&Pe(!1);var o=function(o){r.push(o);var a=Yn(o,t,n,e);Ee(i,o,a,void 0,!0),o in e||ri(e,"_props",o)};for(var a in t)o(a);Pe(!0)}(e,t.props),function(e){var t=e.$options,n=t.setup;if(n){var i=e._setupContext=Nt(e);de(e),_e();var r=qt(n,null,[e._props||Re({}),i],e,"setup");if(De(),de(),c(r))t.render=r;else if(u(r))if(e._setupState=r,r.__sfc){var o=e._setupProxy={};for(var a in r)"__sfc"!==a&&We(o,r,a)}else for(var a in r)z(a)||We(e,r,a);else 0}}(e),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?F:x(t[n],e)}(e,t.methods),t.data)!function(e){var t=e.$options.data;f(t=e._data=c(t)?function(e,t){_e();try{return e.call(t,t)}catch(e){return Gt(e,t,"data()"),{}}finally{De()}}(t,e):t||{})||(t={});var n=Object.keys(t),i=e.$options.props,r=(e.$options.methods,n.length);for(;r--;){var o=n[r];0,i&&D(i,o)||z(o)||ri(e,"_data",o)}var a=Ae(t);a&&a.vmCount++}(e);else{var n=Ae(e._data={});n&&n.vmCount++}t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),i=ae();for(var r in t){var o=t[r],a=c(o)?o:o.get;0,i||(n[r]=new fn(e,a||F,F,ai)),r in e||si(e,r,o)}}(e,t.computed),t.watch&&t.watch!==ie&&function(e,t){for(var n in t){var i=t[n];if(r(i))for(var o=0;o<i.length;o++)ui(e,n,i[o]);else ui(e,n,i)}}(e,t.watch)}var ai={lazy:!0};function si(e,t,n){var i=!ae();c(n)?(ii.get=i?li(t):ci(n),ii.set=F):(ii.get=n.get?i&&!1!==n.cache?li(t):ci(n.get):F,ii.set=n.set||F),Object.defineProperty(e,t,ii)}function li(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),Ie.target&&t.depend(),t.value}}function ci(e){return function(){return e.call(this,this)}}function ui(e,t,n,i){return f(n)&&(i=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,i)}var pi=0;function fi(e){var t=e.options;if(e.super){var n=fi(e.super);if(n!==e.superOptions){e.superOptions=n;var i=function(e){var t,n=e.options,i=e.sealedOptions;for(var r in n)n[r]!==i[r]&&(t||(t={}),t[r]=n[r]);return t}(e);i&&A(e.extendOptions,i),(t=e.options=Jn(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function di(e){this._init(e)}function hi(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,i=n.cid,r=e._Ctor||(e._Ctor={});if(r[i])return r[i];var o=Rn(e)||Rn(n.options);var a=function(e){this._init(e)};return(a.prototype=Object.create(n.prototype)).constructor=a,a.cid=t++,a.options=Jn(n.options,e),a.super=n,a.options.props&&function(e){var t=e.options.props;for(var n in t)ri(e.prototype,"_props",n)}(a),a.options.computed&&function(e){var t=e.options.computed;for(var n in t)si(e.prototype,n,t[n])}(a),a.extend=n.extend,a.mixin=n.mixin,a.use=n.use,B.forEach((function(e){a[e]=n[e]})),o&&(a.options.components[o]=a),a.superOptions=n.options,a.extendOptions=e,a.sealedOptions=A({},a.options),r[i]=a,a}}function mi(e){return e&&(Rn(e.Ctor.options)||e.tag)}function gi(e,t){return r(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!d(e)&&e.test(t)}function vi(e,t){var n=e.cache,i=e.keys,r=e._vnode,o=e.$vnode;for(var a in n){var s=n[a];if(s){var l=s.name;l&&!t(l)&&yi(n,a,i,r)}}o.componentOptions.children=void 0}function yi(e,t,n,i){var r=e[t];!r||i&&r.tag===i.tag||r.componentInstance.$destroy(),e[t]=null,S(n,t)}!function(e){e.prototype._init=function(e){var t=this;t._uid=pi++,t._isVue=!0,t.__v_skip=!0,t._scope=new it(!0),t._scope.parent=void 0,t._scope._vm=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),i=t._parentVnode;n.parent=t.parent,n._parentVnode=i;var r=i.componentOptions;n.propsData=r.propsData,n._parentListeners=r.listeners,n._renderChildren=r.children,n._componentTag=r.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=Jn(fi(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._provided=n?n._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&gn(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,r=n&&n.context;e.$slots=Pt(t._renderChildren,r),e.$scopedSlots=n?At(e.$parent,n.data.scopedSlots,e.$slots):i,e._c=function(t,n,i,r){return Mt(e,t,n,i,r,!1)},e.$createElement=function(t,n,i,r){return Mt(e,t,n,i,r,!0)};var o=n&&n.data;Ee(e,"$attrs",o&&o.attrs||i,null,!0),Ee(e,"$listeners",t._parentListeners||i,null,!0)}(t),Sn(t,"beforeCreate",void 0,!1),function(e){var t=Fn(e.$options.inject,e);t&&(Pe(!1),Object.keys(t).forEach((function(n){Ee(e,n,t[n])})),Pe(!0))}(t),oi(t),function(e){var t=e.$options.provide;if(t){var n=c(t)?t.call(e):t;if(!u(n))return;for(var i=ot(e),r=ue?Reflect.ownKeys(n):Object.keys(n),o=0;o<r.length;o++){var a=r[o];Object.defineProperty(i,a,Object.getOwnPropertyDescriptor(n,a))}}}(t),Sn(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(di),function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=Fe,e.prototype.$delete=Ne,e.prototype.$watch=function(e,t,n){if(f(t))return ui(this,e,t,n);(n=n||{}).user=!0;var i=new fn(this,e,t,n);if(n.immediate){var r='callback for immediate watcher "'.concat(i.expression,'"');_e(),qt(t,this,[i.value],this,r),De()}return function(){i.teardown()}}}(di),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var i=this;if(r(e))for(var o=0,a=e.length;o<a;o++)i.$on(e[o],n);else(i._events[e]||(i._events[e]=[])).push(n),t.test(e)&&(i._hasHookEvent=!0);return i},e.prototype.$once=function(e,t){var n=this;function i(){n.$off(e,i),t.apply(n,arguments)}return i.fn=t,n.$on(e,i),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(r(e)){for(var i=0,o=e.length;i<o;i++)n.$off(e[i],t);return n}var a,s=n._events[e];if(!s)return n;if(!t)return n._events[e]=null,n;for(var l=s.length;l--;)if((a=s[l])===t||a.fn===t){s.splice(l,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?O(n):n;for(var i=O(arguments,1),r='event handler for "'.concat(e,'"'),o=0,a=n.length;o<a;o++)qt(n[o],t,i,t,r)}return t}}(di),function(e){e.prototype._update=function(e,t){var n=this,i=n.$el,r=n._vnode,o=yn(n);n._vnode=e,n.$el=r?n.__patch__(r,e):n.__patch__(n.$el,e,t,!1),o(),i&&(i.__vue__=null),n.$el&&(n.$el.__vue__=n);for(var a=n;a&&a.$vnode&&a.$parent&&a.$vnode===a.$parent._vnode;)a.$parent.$el=a.$el,a=a.$parent},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){Sn(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||S(t.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),Sn(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(di),function(e){Ct(e.prototype),e.prototype.$nextTick=function(e){return nn(e,this)},e.prototype._render=function(){var e=this,t=e.$options,n=t.render,i=t._parentVnode;i&&e._isMounted&&(e.$scopedSlots=At(e.$parent,i.data.scopedSlots,e.$slots,e.$scopedSlots),e._slotsProxy&&Rt(e._slotsProxy,e.$scopedSlots)),e.$vnode=i;var o,a=pe,s=Qt;try{de(e),Qt=e,o=n.call(e._renderProxy,e.$createElement)}catch(t){Gt(t,e,"render"),o=e._vnode}finally{Qt=s,de(a)}return r(o)&&1===o.length&&(o=o[0]),o instanceof he||(o=me()),o.parent=i,o}}(di);var bi=[String,RegExp,Array],Ii={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:bi,exclude:bi,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,t=this.keys,n=this.vnodeToCache,i=this.keyToCache;if(n){var r=n.tag,o=n.componentInstance,a=n.componentOptions;e[i]={name:mi(a),tag:r,componentInstance:o},t.push(i),this.max&&t.length>parseInt(this.max)&&yi(e,t[0],t,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)yi(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){vi(e,(function(e){return gi(t,e)}))})),this.$watch("exclude",(function(t){vi(e,(function(e){return!gi(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=Bt(e),n=t&&t.componentOptions;if(n){var i=mi(n),r=this.include,o=this.exclude;if(r&&(!i||!gi(r,i))||o&&i&&gi(o,i))return t;var a=this.cache,s=this.keys,l=null==t.key?n.Ctor.cid+(n.tag?"::".concat(n.tag):""):t.key;a[l]?(t.componentInstance=a[l].componentInstance,S(s,l),s.push(l)):(this.vnodeToCache=t,this.keyToCache=l),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return G}};Object.defineProperty(e,"config",t),e.util={warn:Gn,extend:A,mergeOptions:Jn,defineReactive:Ee},e.set=Fe,e.delete=Ne,e.nextTick=nn,e.observable=function(e){return Ae(e),e},e.options=Object.create(null),B.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,A(e.options.components,Ii),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=O(arguments,1);return n.unshift(this),c(e.install)?e.install.apply(e,n):c(e)&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Jn(this.options,e),this}}(e),hi(e),function(e){B.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&f(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&c(n)&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(di),Object.defineProperty(di.prototype,"$isServer",{get:ae}),Object.defineProperty(di.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(di,"FunctionalRenderContext",{value:Nn}),di.version="2.7.16";var Si=b("style,class"),_i=b("input,textarea,option,select,progress"),Di=b("contenteditable,draggable,spellcheck"),Li=b("events,caret,typing,plaintext-only"),ki=b("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),wi="http://www.w3.org/1999/xlink",Ti=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},Ci=function(e){return Ti(e)?e.slice(6,e.length):""},Pi=function(e){return null==e||!1===e};function xi(e){for(var t=e.data,n=e,i=e;a(i.componentInstance);)(i=i.componentInstance._vnode)&&i.data&&(t=Oi(i.data,t));for(;a(n=n.parent);)n&&n.data&&(t=Oi(t,n.data));return function(e,t){if(a(e)||a(t))return Ai(e,Ei(t));return""}(t.staticClass,t.class)}function Oi(e,t){return{staticClass:Ai(e.staticClass,t.staticClass),class:a(e.class)?[e.class,t.class]:t.class}}function Ai(e,t){return e?t?e+" "+t:e:t||""}function Ei(e){return Array.isArray(e)?function(e){for(var t,n="",i=0,r=e.length;i<r;i++)a(t=Ei(e[i]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):u(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Fi={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Ni=b("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Vi=b("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),ji=function(e){return Ni(e)||Vi(e)};var Ri=Object.create(null);var Qi=b("text,number,password,search,email,tel,url");var $i=Object.freeze({__proto__:null,createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Fi[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),Bi={create:function(e,t){Mi(t)},update:function(e,t){e.data.ref!==t.data.ref&&(Mi(e,!0),Mi(t))},destroy:function(e){Mi(e,!0)}};function Mi(e,t){var n=e.data.ref;if(a(n)){var i=e.context,o=e.componentInstance||e.elm,s=t?null:o,l=t?void 0:o;if(c(n))qt(n,i,[s],i,"template ref function");else{var u=e.data.refInFor,p="string"==typeof n||"number"==typeof n,f=Ge(n),d=i.$refs;if(p||f)if(u){var h=p?d[n]:n.value;t?r(h)&&S(h,o):r(h)?h.includes(o)||h.push(o):p?(d[n]=[o],Gi(i,n,d[n])):n.value=[o]}else if(p){if(t&&d[n]!==o)return;d[n]=l,Gi(i,n,s)}else if(f){if(t&&n.value!==o)return;n.value=s}else 0}}}function Gi(e,t,n){var i=e._setupState;i&&D(i,t)&&(Ge(i[t])?i[t].value=n:i[t]=n)}var qi=new he("",{},[]),zi=["create","activate","update","remove","destroy"];function Wi(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&a(e.data)===a(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,i=a(n=e.data)&&a(n=n.attrs)&&n.type,r=a(n=t.data)&&a(n=n.attrs)&&n.type;return i===r||Qi(i)&&Qi(r)}(e,t)||s(e.isAsyncPlaceholder)&&o(t.asyncFactory.error))}function Ui(e,t,n){var i,r,o={};for(i=t;i<=n;++i)a(r=e[i].key)&&(o[r]=i);return o}var Hi={create:Zi,update:Zi,destroy:function(e){Zi(e,qi)}};function Zi(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,i,r,o=e===qi,a=t===qi,s=Ki(e.data.directives,e.context),l=Ki(t.data.directives,t.context),c=[],u=[];for(n in l)i=s[n],r=l[n],i?(r.oldValue=i.value,r.oldArg=i.arg,Xi(r,"update",t,e),r.def&&r.def.componentUpdated&&u.push(r)):(Xi(r,"bind",t,e),r.def&&r.def.inserted&&c.push(r));if(c.length){var p=function(){for(var n=0;n<c.length;n++)Xi(c[n],"inserted",t,e)};o?ut(t,"insert",p):p()}u.length&&ut(t,"postpatch",(function(){for(var n=0;n<u.length;n++)Xi(u[n],"componentUpdated",t,e)}));if(!o)for(n in s)l[n]||Xi(s[n],"unbind",e,e,a)}(e,t)}var Ji=Object.create(null);function Ki(e,t){var n,i,r=Object.create(null);if(!e)return r;for(n=0;n<e.length;n++){if((i=e[n]).modifiers||(i.modifiers=Ji),r[Yi(i)]=i,t._setupState&&t._setupState.__sfc){var o=i.def||Kn(t,"_setupState","v-"+i.name);i.def="function"==typeof o?{bind:o,update:o}:o}i.def=i.def||Kn(t.$options,"directives",i.name)}return r}function Yi(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function Xi(e,t,n,i,r){var o=e.def&&e.def[t];if(o)try{o(n.elm,e,n,i,r)}catch(i){Gt(i,n.context,"directive ".concat(e.name," ").concat(t," hook"))}}var er=[Bi,Hi];function tr(e,t){var n=t.componentOptions;if(!(a(n)&&!1===n.Ctor.options.inheritAttrs||o(e.data.attrs)&&o(t.data.attrs))){var i,r,l=t.elm,c=e.data.attrs||{},u=t.data.attrs||{};for(i in(a(u.__ob__)||s(u._v_attr_proxy))&&(u=t.data.attrs=A({},u)),u)r=u[i],c[i]!==r&&nr(l,i,r,t.data.pre);for(i in(K||X)&&u.value!==c.value&&nr(l,"value",u.value),c)o(u[i])&&(Ti(i)?l.removeAttributeNS(wi,Ci(i)):Di(i)||l.removeAttribute(i))}}function nr(e,t,n,i){i||e.tagName.indexOf("-")>-1?ir(e,t,n):ki(t)?Pi(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):Di(t)?e.setAttribute(t,function(e,t){return Pi(t)||"false"===t?"false":"contenteditable"===e&&Li(t)?t:"true"}(t,n)):Ti(t)?Pi(n)?e.removeAttributeNS(wi,Ci(t)):e.setAttributeNS(wi,t,n):ir(e,t,n)}function ir(e,t,n){if(Pi(n))e.removeAttribute(t);else{if(K&&!Y&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var i=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",i)};e.addEventListener("input",i),e.__ieph=!0}e.setAttribute(t,n)}}var rr={create:tr,update:tr};function or(e,t){var n=t.elm,i=t.data,r=e.data;if(!(o(i.staticClass)&&o(i.class)&&(o(r)||o(r.staticClass)&&o(r.class)))){var s=xi(t),l=n._transitionClasses;a(l)&&(s=Ai(s,Ei(l))),s!==n._prevClass&&(n.setAttribute("class",s),n._prevClass=s)}}var ar,sr={create:or,update:or};function lr(e,t,n){var i=ar;return function r(){var o=t.apply(null,arguments);null!==o&&pr(e,r,n,i)}}var cr=Ht&&!(ne&&Number(ne[1])<=53);function ur(e,t,n,i){if(cr){var r=Cn,o=t;t=o._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=r||e.timeStamp<=0||e.target.ownerDocument!==document)return o.apply(this,arguments)}}ar.addEventListener(e,t,re?{capture:n,passive:i}:n)}function pr(e,t,n,i){(i||ar).removeEventListener(e,t._wrapper||t,n)}function fr(e,t){if(!o(e.data.on)||!o(t.data.on)){var n=t.data.on||{},i=e.data.on||{};ar=t.elm||e.elm,function(e){if(a(e.__r)){var t=K?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}a(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),ct(n,i,ur,pr,lr,t.context),ar=void 0}}var dr,hr={create:fr,update:fr,destroy:function(e){return fr(e,qi)}};function mr(e,t){if(!o(e.data.domProps)||!o(t.data.domProps)){var n,i,r=t.elm,l=e.data.domProps||{},c=t.data.domProps||{};for(n in(a(c.__ob__)||s(c._v_attr_proxy))&&(c=t.data.domProps=A({},c)),l)n in c||(r[n]="");for(n in c){if(i=c[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),i===l[n])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===n&&"PROGRESS"!==r.tagName){r._value=i;var u=o(i)?"":String(i);gr(r,u)&&(r.value=u)}else if("innerHTML"===n&&Vi(r.tagName)&&o(r.innerHTML)){(dr=dr||document.createElement("div")).innerHTML="<svg>".concat(i,"</svg>");for(var p=dr.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;p.firstChild;)r.appendChild(p.firstChild)}else if(i!==l[n])try{r[n]=i}catch(e){}}}}function gr(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,i=e._vModifiers;if(a(i)){if(i.number)return y(n)!==y(t);if(i.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var vr={create:mr,update:mr},yr=L((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var i=e.split(n);i.length>1&&(t[i[0].trim()]=i[1].trim())}})),t}));function br(e){var t=Ir(e.style);return e.staticStyle?A(e.staticStyle,t):t}function Ir(e){return Array.isArray(e)?E(e):"string"==typeof e?yr(e):e}var Sr,_r=/^--/,Dr=/\s*!important$/,Lr=function(e,t,n){if(_r.test(t))e.style.setProperty(t,n);else if(Dr.test(n))e.style.setProperty(P(t),n.replace(Dr,""),"important");else{var i=wr(t);if(Array.isArray(n))for(var r=0,o=n.length;r<o;r++)e.style[i]=n[r];else e.style[i]=n}},kr=["Webkit","Moz","ms"],wr=L((function(e){if(Sr=Sr||document.createElement("div").style,"filter"!==(e=w(e))&&e in Sr)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<kr.length;n++){var i=kr[n]+t;if(i in Sr)return i}}));function Tr(e,t){var n=t.data,i=e.data;if(!(o(n.staticStyle)&&o(n.style)&&o(i.staticStyle)&&o(i.style))){var r,s,l=t.elm,c=i.staticStyle,u=i.normalizedStyle||i.style||{},p=c||u,f=Ir(t.data.style)||{};t.data.normalizedStyle=a(f.__ob__)?A({},f):f;var d=function(e,t){var n,i={};if(t)for(var r=e;r.componentInstance;)(r=r.componentInstance._vnode)&&r.data&&(n=br(r.data))&&A(i,n);(n=br(e.data))&&A(i,n);for(var o=e;o=o.parent;)o.data&&(n=br(o.data))&&A(i,n);return i}(t,!0);for(s in p)o(d[s])&&Lr(l,s,"");for(s in d)r=d[s],Lr(l,s,null==r?"":r)}}var Cr={create:Tr,update:Tr},Pr=/\s+/;function xr(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Pr).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" ".concat(e.getAttribute("class")||""," ");n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function Or(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(Pr).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" ".concat(e.getAttribute("class")||""," "),i=" "+t+" ";n.indexOf(i)>=0;)n=n.replace(i," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function Ar(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&A(t,Er(e.name||"v")),A(t,e),t}return"string"==typeof e?Er(e):void 0}}var Er=L((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),Fr=Z&&!Y,Nr="transition",Vr="transitionend",jr="animation",Rr="animationend";Fr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Nr="WebkitTransition",Vr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(jr="WebkitAnimation",Rr="webkitAnimationEnd"));var Qr=Z?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function $r(e){Qr((function(){Qr(e)}))}function Br(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),xr(e,t))}function Mr(e,t){e._transitionClasses&&S(e._transitionClasses,t),Or(e,t)}function Gr(e,t,n){var i=zr(e,t),r=i.type,o=i.timeout,a=i.propCount;if(!r)return n();var s="transition"===r?Vr:Rr,l=0,c=function(){e.removeEventListener(s,u),n()},u=function(t){t.target===e&&++l>=a&&c()};setTimeout((function(){l<a&&c()}),o+1),e.addEventListener(s,u)}var qr=/\b(transform|all)(,|$)/;function zr(e,t){var n,i=window.getComputedStyle(e),r=(i[Nr+"Delay"]||"").split(", "),o=(i[Nr+"Duration"]||"").split(", "),a=Wr(r,o),s=(i[jr+"Delay"]||"").split(", "),l=(i[jr+"Duration"]||"").split(", "),c=Wr(s,l),u=0,p=0;return"transition"===t?a>0&&(n="transition",u=a,p=o.length):"animation"===t?c>0&&(n="animation",u=c,p=l.length):p=(n=(u=Math.max(a,c))>0?a>c?"transition":"animation":null)?"transition"===n?o.length:l.length:0,{type:n,timeout:u,propCount:p,hasTransform:"transition"===n&&qr.test(i[Nr+"Property"])}}function Wr(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return Ur(t)+Ur(e[n])})))}function Ur(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Hr(e,t){var n=e.elm;a(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var i=Ar(e.data.transition);if(!o(i)&&!a(n._enterCb)&&1===n.nodeType){for(var r=i.css,s=i.type,l=i.enterClass,p=i.enterToClass,f=i.enterActiveClass,d=i.appearClass,h=i.appearToClass,m=i.appearActiveClass,g=i.beforeEnter,v=i.enter,b=i.afterEnter,I=i.enterCancelled,S=i.beforeAppear,_=i.appear,D=i.afterAppear,L=i.appearCancelled,k=i.duration,w=vn,T=vn.$vnode;T&&T.parent;)w=T.context,T=T.parent;var C=!w._isMounted||!e.isRootInsert;if(!C||_||""===_){var P=C&&d?d:l,x=C&&m?m:f,O=C&&h?h:p,A=C&&S||g,E=C&&c(_)?_:v,F=C&&D||b,N=C&&L||I,V=y(u(k)?k.enter:k);0;var j=!1!==r&&!Y,R=Kr(E),$=n._enterCb=Q((function(){j&&(Mr(n,O),Mr(n,x)),$.cancelled?(j&&Mr(n,P),N&&N(n)):F&&F(n),n._enterCb=null}));e.data.show||ut(e,"insert",(function(){var t=n.parentNode,i=t&&t._pending&&t._pending[e.key];i&&i.tag===e.tag&&i.elm._leaveCb&&i.elm._leaveCb(),E&&E(n,$)})),A&&A(n),j&&(Br(n,P),Br(n,x),$r((function(){Mr(n,P),$.cancelled||(Br(n,O),R||(Jr(V)?setTimeout($,V):Gr(n,s,$)))}))),e.data.show&&(t&&t(),E&&E(n,$)),j||R||$()}}}function Zr(e,t){var n=e.elm;a(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var i=Ar(e.data.transition);if(o(i)||1!==n.nodeType)return t();if(!a(n._leaveCb)){var r=i.css,s=i.type,l=i.leaveClass,c=i.leaveToClass,p=i.leaveActiveClass,f=i.beforeLeave,d=i.leave,h=i.afterLeave,m=i.leaveCancelled,g=i.delayLeave,v=i.duration,b=!1!==r&&!Y,I=Kr(d),S=y(u(v)?v.leave:v);0;var _=n._leaveCb=Q((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),b&&(Mr(n,c),Mr(n,p)),_.cancelled?(b&&Mr(n,l),m&&m(n)):(t(),h&&h(n)),n._leaveCb=null}));g?g(D):D()}function D(){_.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),f&&f(n),b&&(Br(n,l),Br(n,p),$r((function(){Mr(n,l),_.cancelled||(Br(n,c),I||(Jr(S)?setTimeout(_,S):Gr(n,s,_)))}))),d&&d(n,_),b||I||_())}}function Jr(e){return"number"==typeof e&&!isNaN(e)}function Kr(e){if(o(e))return!1;var t=e.fns;return a(t)?Kr(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function Yr(e,t){!0!==t.data.show&&Hr(t)}var Xr=function(e){var t,n,i={},c=e.modules,u=e.nodeOps;for(t=0;t<zi.length;++t)for(i[zi[t]]=[],n=0;n<c.length;++n)a(c[n][zi[t]])&&i[zi[t]].push(c[n][zi[t]]);function p(e){var t=u.parentNode(e);a(t)&&u.removeChild(t,e)}function f(e,t,n,r,o,l,c){if(a(e.elm)&&a(l)&&(e=l[c]=ve(e)),e.isRootInsert=!o,!function(e,t,n,r){var o=e.data;if(a(o)){var l=a(e.componentInstance)&&o.keepAlive;if(a(o=o.hook)&&a(o=o.init)&&o(e,!1),a(e.componentInstance))return d(e,t),h(n,e.elm,r),s(l)&&function(e,t,n,r){var o,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,a(o=s.data)&&a(o=o.transition)){for(o=0;o<i.activate.length;++o)i.activate[o](qi,s);t.push(s);break}h(n,e.elm,r)}(e,t,n,r),!0}}(e,t,n,r)){var p=e.data,f=e.children,g=e.tag;a(g)?(e.elm=e.ns?u.createElementNS(e.ns,g):u.createElement(g,e),y(e),m(e,f,t),a(p)&&v(e,t),h(n,e.elm,r)):s(e.isComment)?(e.elm=u.createComment(e.text),h(n,e.elm,r)):(e.elm=u.createTextNode(e.text),h(n,e.elm,r))}}function d(e,t){a(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,g(e)?(v(e,t),y(e)):(Mi(e),t.push(e))}function h(e,t,n){a(e)&&(a(n)?u.parentNode(n)===e&&u.insertBefore(e,t,n):u.appendChild(e,t))}function m(e,t,n){if(r(t)){0;for(var i=0;i<t.length;++i)f(t[i],n,e.elm,null,!0,t,i)}else l(e.text)&&u.appendChild(e.elm,u.createTextNode(String(e.text)))}function g(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return a(e.tag)}function v(e,n){for(var r=0;r<i.create.length;++r)i.create[r](qi,e);a(t=e.data.hook)&&(a(t.create)&&t.create(qi,e),a(t.insert)&&n.push(e))}function y(e){var t;if(a(t=e.fnScopeId))u.setStyleScope(e.elm,t);else for(var n=e;n;)a(t=n.context)&&a(t=t.$options._scopeId)&&u.setStyleScope(e.elm,t),n=n.parent;a(t=vn)&&t!==e.context&&t!==e.fnContext&&a(t=t.$options._scopeId)&&u.setStyleScope(e.elm,t)}function I(e,t,n,i,r,o){for(;i<=r;++i)f(n[i],o,e,t,!1,n,i)}function S(e){var t,n,r=e.data;if(a(r))for(a(t=r.hook)&&a(t=t.destroy)&&t(e),t=0;t<i.destroy.length;++t)i.destroy[t](e);if(a(t=e.children))for(n=0;n<e.children.length;++n)S(e.children[n])}function _(e,t,n){for(;t<=n;++t){var i=e[t];a(i)&&(a(i.tag)?(D(i),S(i)):p(i.elm))}}function D(e,t){if(a(t)||a(e.data)){var n,r=i.remove.length+1;for(a(t)?t.listeners+=r:t=function(e,t){function n(){0==--n.listeners&&p(e)}return n.listeners=t,n}(e.elm,r),a(n=e.componentInstance)&&a(n=n._vnode)&&a(n.data)&&D(n,t),n=0;n<i.remove.length;++n)i.remove[n](e,t);a(n=e.data.hook)&&a(n=n.remove)?n(e,t):t()}else p(e.elm)}function L(e,t,n,i){for(var r=n;r<i;r++){var o=t[r];if(a(o)&&Wi(e,o))return r}}function k(e,t,n,r,l,c){if(e!==t){a(t.elm)&&a(r)&&(t=r[l]=ve(t));var p=t.elm=e.elm;if(s(e.isAsyncPlaceholder))a(t.asyncFactory.resolved)?C(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(s(t.isStatic)&&s(e.isStatic)&&t.key===e.key&&(s(t.isCloned)||s(t.isOnce)))t.componentInstance=e.componentInstance;else{var d,h=t.data;a(h)&&a(d=h.hook)&&a(d=d.prepatch)&&d(e,t);var m=e.children,v=t.children;if(a(h)&&g(t)){for(d=0;d<i.update.length;++d)i.update[d](e,t);a(d=h.hook)&&a(d=d.update)&&d(e,t)}o(t.text)?a(m)&&a(v)?m!==v&&function(e,t,n,i,r){var s,l,c,p=0,d=0,h=t.length-1,m=t[0],g=t[h],v=n.length-1,y=n[0],b=n[v],S=!r;for(0;p<=h&&d<=v;)o(m)?m=t[++p]:o(g)?g=t[--h]:Wi(m,y)?(k(m,y,i,n,d),m=t[++p],y=n[++d]):Wi(g,b)?(k(g,b,i,n,v),g=t[--h],b=n[--v]):Wi(m,b)?(k(m,b,i,n,v),S&&u.insertBefore(e,m.elm,u.nextSibling(g.elm)),m=t[++p],b=n[--v]):Wi(g,y)?(k(g,y,i,n,d),S&&u.insertBefore(e,g.elm,m.elm),g=t[--h],y=n[++d]):(o(s)&&(s=Ui(t,p,h)),o(l=a(y.key)?s[y.key]:L(y,t,p,h))?f(y,i,e,m.elm,!1,n,d):Wi(c=t[l],y)?(k(c,y,i,n,d),t[l]=void 0,S&&u.insertBefore(e,c.elm,m.elm)):f(y,i,e,m.elm,!1,n,d),y=n[++d]);p>h?I(e,o(n[v+1])?null:n[v+1].elm,n,d,v,i):d>v&&_(t,p,h)}(p,m,v,n,c):a(v)?(a(e.text)&&u.setTextContent(p,""),I(p,null,v,0,v.length-1,n)):a(m)?_(m,0,m.length-1):a(e.text)&&u.setTextContent(p,""):e.text!==t.text&&u.setTextContent(p,t.text),a(h)&&a(d=h.hook)&&a(d=d.postpatch)&&d(e,t)}}}function w(e,t,n){if(s(n)&&a(e.parent))e.parent.data.pendingInsert=t;else for(var i=0;i<t.length;++i)t[i].data.hook.insert(t[i])}var T=b("attrs,class,staticClass,staticStyle,key");function C(e,t,n,i){var r,o=t.tag,l=t.data,c=t.children;if(i=i||l&&l.pre,t.elm=e,s(t.isComment)&&a(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(a(l)&&(a(r=l.hook)&&a(r=r.init)&&r(t,!0),a(r=t.componentInstance)))return d(t,n),!0;if(a(o)){if(a(c))if(e.hasChildNodes())if(a(r=l)&&a(r=r.domProps)&&a(r=r.innerHTML)){if(r!==e.innerHTML)return!1}else{for(var u=!0,p=e.firstChild,f=0;f<c.length;f++){if(!p||!C(p,c[f],n,i)){u=!1;break}p=p.nextSibling}if(!u||p)return!1}else m(t,c,n);if(a(l)){var h=!1;for(var g in l)if(!T(g)){h=!0,v(t,n);break}!h&&l.class&&cn(l.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,r){if(!o(t)){var l,c=!1,p=[];if(o(e))c=!0,f(t,p);else{var d=a(e.nodeType);if(!d&&Wi(e,t))k(e,t,p,null,null,r);else{if(d){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),n=!0),s(n)&&C(e,t,p))return w(t,p,!0),e;l=e,e=new he(u.tagName(l).toLowerCase(),{},[],void 0,l)}var h=e.elm,m=u.parentNode(h);if(f(t,p,h._leaveCb?null:m,u.nextSibling(h)),a(t.parent))for(var v=t.parent,y=g(t);v;){for(var b=0;b<i.destroy.length;++b)i.destroy[b](v);if(v.elm=t.elm,y){for(var I=0;I<i.create.length;++I)i.create[I](qi,v);var D=v.data.hook.insert;if(D.merged)for(var L=D.fns.slice(1),T=0;T<L.length;T++)L[T]()}else Mi(v);v=v.parent}a(m)?_([e],0,0):a(e.tag)&&S(e)}}return w(t,p,c),t.elm}a(e)&&S(e)}}({nodeOps:$i,modules:[rr,sr,hr,vr,Cr,Z?{create:Yr,activate:Yr,remove:function(e,t){!0!==e.data.show?Zr(e,t):t()}}:{}].concat(er)});Y&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&so(e,"input")}));var eo={inserted:function(e,t,n,i){"select"===n.tag?(i.elm&&!i.elm._vOptions?ut(n,"postpatch",(function(){eo.componentUpdated(e,t,n)})):to(e,t,n.context),e._vOptions=[].map.call(e.options,ro)):("textarea"===n.tag||Qi(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",oo),e.addEventListener("compositionend",ao),e.addEventListener("change",ao),Y&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){to(e,t,n.context);var i=e._vOptions,r=e._vOptions=[].map.call(e.options,ro);if(r.some((function(e,t){return!j(e,i[t])})))(e.multiple?t.value.some((function(e){return io(e,r)})):t.value!==t.oldValue&&io(t.value,r))&&so(e,"change")}}};function to(e,t,n){no(e,t,n),(K||X)&&setTimeout((function(){no(e,t,n)}),0)}function no(e,t,n){var i=t.value,r=e.multiple;if(!r||Array.isArray(i)){for(var o,a,s=0,l=e.options.length;s<l;s++)if(a=e.options[s],r)o=R(i,ro(a))>-1,a.selected!==o&&(a.selected=o);else if(j(ro(a),i))return void(e.selectedIndex!==s&&(e.selectedIndex=s));r||(e.selectedIndex=-1)}}function io(e,t){return t.every((function(t){return!j(t,e)}))}function ro(e){return"_value"in e?e._value:e.value}function oo(e){e.target.composing=!0}function ao(e){e.target.composing&&(e.target.composing=!1,so(e.target,"input"))}function so(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function lo(e){return!e.componentInstance||e.data&&e.data.transition?e:lo(e.componentInstance._vnode)}var co={model:eo,show:{bind:function(e,t,n){var i=t.value,r=(n=lo(n)).data&&n.data.transition,o=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;i&&r?(n.data.show=!0,Hr(n,(function(){e.style.display=o}))):e.style.display=i?o:"none"},update:function(e,t,n){var i=t.value;!i!=!t.oldValue&&((n=lo(n)).data&&n.data.transition?(n.data.show=!0,i?Hr(n,(function(){e.style.display=e.__vOriginalDisplay})):Zr(n,(function(){e.style.display="none"}))):e.style.display=i?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,i,r){r||(e.style.display=e.__vOriginalDisplay)}}},uo={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function po(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?po(Bt(t.children)):e}function fo(e){var t={},n=e.$options;for(var i in n.propsData)t[i]=e[i];var r=n._parentListeners;for(var i in r)t[w(i)]=r[i];return t}function ho(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var mo=function(e){return e.tag||Ot(e)},go=function(e){return"show"===e.name},vo={name:"transition",props:uo,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(mo)).length){0;var i=this.mode;0;var r=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return r;var o=po(r);if(!o)return r;if(this._leaving)return ho(e,r);var a="__transition-".concat(this._uid,"-");o.key=null==o.key?o.isComment?a+"comment":a+o.tag:l(o.key)?0===String(o.key).indexOf(a)?o.key:a+o.key:o.key;var s=(o.data||(o.data={})).transition=fo(this),c=this._vnode,u=po(c);if(o.data.directives&&o.data.directives.some(go)&&(o.data.show=!0),u&&u.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(o,u)&&!Ot(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var p=u.data.transition=A({},s);if("out-in"===i)return this._leaving=!0,ut(p,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),ho(e,r);if("in-out"===i){if(Ot(o))return c;var f,d=function(){f()};ut(s,"afterEnter",d),ut(s,"enterCancelled",d),ut(p,"delayLeave",(function(e){f=e}))}}return r}}},yo=A({tag:String,moveClass:String},uo);function bo(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Io(e){e.data.newPos=e.elm.getBoundingClientRect()}function So(e){var t=e.data.pos,n=e.data.newPos,i=t.left-n.left,r=t.top-n.top;if(i||r){e.data.moved=!0;var o=e.elm.style;o.transform=o.WebkitTransform="translate(".concat(i,"px,").concat(r,"px)"),o.transitionDuration="0s"}}delete yo.mode;var _o={Transition:vo,TransitionGroup:{props:yo,beforeMount:function(){var e=this,t=this._update;this._update=function(n,i){var r=yn(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,r(),t.call(e,n,i)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),i=this.prevChildren=this.children,r=this.$slots.default||[],o=this.children=[],a=fo(this),s=0;s<r.length;s++){if((u=r[s]).tag)if(null!=u.key&&0!==String(u.key).indexOf("__vlist"))o.push(u),n[u.key]=u,(u.data||(u.data={})).transition=a;else;}if(i){var l=[],c=[];for(s=0;s<i.length;s++){var u;(u=i[s]).data.transition=a,u.data.pos=u.elm.getBoundingClientRect(),n[u.key]?l.push(u):c.push(u)}this.kept=e(t,null,l),this.removed=c}return e(t,null,o)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(bo),e.forEach(Io),e.forEach(So),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,i=n.style;Br(n,t),i.transform=i.WebkitTransform=i.transitionDuration="",n.addEventListener(Vr,n._moveCb=function e(i){i&&i.target!==n||i&&!/transform$/.test(i.propertyName)||(n.removeEventListener(Vr,e),n._moveCb=null,Mr(n,t))})}})))},methods:{hasMove:function(e,t){if(!Fr)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){Or(n,e)})),xr(n,t),n.style.display="none",this.$el.appendChild(n);var i=zr(n);return this.$el.removeChild(n),this._hasMove=i.hasTransform}}}};di.config.mustUseProp=function(e,t,n){return"value"===n&&_i(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},di.config.isReservedTag=ji,di.config.isReservedAttr=Si,di.config.getTagNamespace=function(e){return Vi(e)?"svg":"math"===e?"math":void 0},di.config.isUnknownElement=function(e){if(!Z)return!0;if(ji(e))return!1;if(e=e.toLowerCase(),null!=Ri[e])return Ri[e];var t=document.createElement(e);return e.indexOf("-")>-1?Ri[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Ri[e]=/HTMLUnknownElement/.test(t.toString())},A(di.options.directives,co),A(di.options.components,_o),di.prototype.__patch__=Z?Xr:F,di.prototype.$mount=function(e,t){return function(e,t,n){var i;e.$el=t,e.$options.render||(e.$options.render=me),Sn(e,"beforeMount"),i=function(){e._update(e._render(),n)},new fn(e,i,F,{before:function(){e._isMounted&&!e._isDestroyed&&Sn(e,"beforeUpdate")}},!0),n=!1;var r=e._preWatchers;if(r)for(var o=0;o<r.length;o++)r[o].run();return null==e.$vnode&&(e._isMounted=!0,Sn(e,"mounted")),e}(this,e=e&&Z?function(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}(e):void 0,t)},Z&&setTimeout((function(){G.devtools&&se&&se.emit("init",di)}),0)},function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var i=n(0);
/**
  * vue-class-component v7.2.6
  * (c) 2015-present Evan You
  * @license MIT
  */function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function s(){return"undefined"!=typeof Reflect&&Reflect.defineMetadata&&Reflect.getOwnMetadataKeys}function l(e,t){c(e,t),Object.getOwnPropertyNames(t.prototype).forEach((function(n){c(e.prototype,t.prototype,n)})),Object.getOwnPropertyNames(t).forEach((function(n){c(e,t,n)}))}function c(e,t,n){(n?Reflect.getOwnMetadataKeys(t,n):Reflect.getOwnMetadataKeys(t)).forEach((function(i){var r=n?Reflect.getOwnMetadata(i,t,n):Reflect.getOwnMetadata(i,t);n?Reflect.defineMetadata(i,r,e,n):Reflect.defineMetadata(i,r,e)}))}var u={__proto__:[]}instanceof Array;function p(e){return function(t,n,i){var r="function"==typeof t?t:t.constructor;r.__decorators__||(r.__decorators__=[]),"number"!=typeof i&&(i=void 0),r.__decorators__.push((function(t){return e(t,n,i)}))}}function f(e,t){var n=t.prototype._init;t.prototype._init=function(){var t=this,n=Object.getOwnPropertyNames(e);if(e.$options.props)for(var i in e.$options.props)e.hasOwnProperty(i)||n.push(i);n.forEach((function(n){Object.defineProperty(t,n,{get:function(){return e[n]},set:function(t){e[n]=t},configurable:!0})}))};var i=new t;t.prototype._init=n;var r={};return Object.keys(i).forEach((function(e){void 0!==i[e]&&(r[e]=i[e])})),r}var d=["data","beforeCreate","created","beforeMount","mounted","beforeDestroy","destroyed","beforeUpdate","updated","activated","deactivated","render","errorCaptured","serverPrefetch"];function h(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};t.name=t.name||e._componentTag||e.name;var n=e.prototype;Object.getOwnPropertyNames(n).forEach((function(e){if("constructor"!==e)if(d.indexOf(e)>-1)t[e]=n[e];else{var i=Object.getOwnPropertyDescriptor(n,e);void 0!==i.value?"function"==typeof i.value?(t.methods||(t.methods={}))[e]=i.value:(t.mixins||(t.mixins=[])).push({data:function(){return o({},e,i.value)}}):(i.get||i.set)&&((t.computed||(t.computed={}))[e]={get:i.get,set:i.set})}})),(t.mixins||(t.mixins=[])).push({data:function(){return f(this,e)}});var r=e.__decorators__;r&&(r.forEach((function(e){return e(t)})),delete e.__decorators__);var a=Object.getPrototypeOf(e.prototype),c=a instanceof i.b?a.constructor:i.b,u=c.extend(t);return g(u,e,c),s()&&l(u,e),u}var m={prototype:!0,arguments:!0,callee:!0,caller:!0};function g(e,t,n){Object.getOwnPropertyNames(t).forEach((function(i){if(!m[i]){var o=Object.getOwnPropertyDescriptor(e,i);if(!o||o.configurable){var a,s,l=Object.getOwnPropertyDescriptor(t,i);if(!u){if("cid"===i)return;var c=Object.getOwnPropertyDescriptor(n,i);if(a=l.value,s=r(a),null!=a&&("object"===s||"function"===s)&&c&&c.value===l.value)return}0,Object.defineProperty(e,i,l)}}}))}function v(e){return"function"==typeof e?h(e):function(t){return h(t,e)}}v.registerHooks=function(e){d.push.apply(d,a(e))},t.b=v},function(e,t,n){"use strict";function i(e,t,n,i,r,o,a,s){var l,c="function"==typeof e?e.options:e;if(t&&(c.render=t,c.staticRenderFns=n,c._compiled=!0),i&&(c.functional=!0),o&&(c._scopeId="data-v-"+o),a?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),r&&r.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(a)},c._ssrRegister=l):r&&(l=s?function(){r.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:r),l)if(c.functional){c._injectStyles=l;var u=c.render;c.render=function(e,t){return l.call(t),u(e,t)}}else{var p=c.beforeCreate;c.beforeCreate=p?[].concat(p,l):[l]}return{exports:e,options:c}}n.d(t,"a",(function(){return i}))},function(e,t,n){"use strict";var i=n(117),r=Object.prototype.toString;function o(e){return"[object Array]"===r.call(e)}function a(e){return void 0===e}function s(e){return null!==e&&"object"==typeof e}function l(e){if("[object Object]"!==r.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function c(e){return"[object Function]"===r.call(e)}function u(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),o(e))for(var n=0,i=e.length;n<i;n++)t.call(null,e[n],n,e);else for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.call(null,e[r],r,e)}e.exports={isArray:o,isArrayBuffer:function(e){return"[object ArrayBuffer]"===r.call(e)},isBuffer:function(e){return null!==e&&!a(e)&&null!==e.constructor&&!a(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:s,isPlainObject:l,isUndefined:a,isDate:function(e){return"[object Date]"===r.call(e)},isFile:function(e){return"[object File]"===r.call(e)},isBlob:function(e){return"[object Blob]"===r.call(e)},isFunction:c,isStream:function(e){return s(e)&&c(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:u,merge:function e(){var t={};function n(n,i){l(t[i])&&l(n)?t[i]=e(t[i],n):l(n)?t[i]=e({},n):o(n)?t[i]=n.slice():t[i]=n}for(var i=0,r=arguments.length;i<r;i++)u(arguments[i],n);return t},extend:function(e,t,n){return u(t,(function(t,r){e[r]=n&&"function"==typeof t?i(t,n):t})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},function(e,t,n){"use strict";var i=function(e){return e&&e.Math===Math&&e};e.exports=i("object"==typeof globalThis&&globalThis)||i("object"==typeof window&&window)||i("object"==typeof self&&self)||i("object"==typeof global&&global)||i("object"==typeof this&&this)||function(){return this}()||Function("return this")()},function(e,t,n){"use strict";var i=n(45),r=Function.prototype,o=r.call,a=i&&r.bind.bind(o,o);e.exports=i?a:function(e){return function(){return o.apply(e,arguments)}}},function(e,t,n){"use strict";e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){"use strict";var i="object"==typeof document&&document.all;e.exports=void 0===i&&void 0!==i?function(e){return"function"==typeof e||e===i}:function(e){return"function"==typeof e}},function(e,t,n){"use strict";var i=n(6);e.exports=!i((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t,n){e.exports=n(319)},function(e,t,n){"use strict";var i=n(7);e.exports=function(e){return"object"==typeof e?null!==e:i(e)}},function(e,t,n){var i=n(89),r="object"==typeof self&&self&&self.Object===Object&&self,o=i||r||Function("return this")();e.exports=o},function(e,t){var n=Array.isArray;e.exports=n},function(e,t,n){"use strict";var i=n(5),r=n(33),o=i({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return o(r(e),t)}},function(e,t,n){var i=n(194),r=n(197);e.exports=function(e,t){var n=r(e,t);return i(n)?n:void 0}},function(e,t,n){var i=n(307),r=n(115),o=/[T ]/,a=/:/,s=/^(\d{2})$/,l=[/^([+-]\d{2})$/,/^([+-]\d{3})$/,/^([+-]\d{4})$/],c=/^(\d{4})/,u=[/^([+-]\d{4})/,/^([+-]\d{5})/,/^([+-]\d{6})/],p=/^-(\d{2})$/,f=/^-?(\d{3})$/,d=/^-?(\d{2})-?(\d{2})$/,h=/^-?W(\d{2})$/,m=/^-?W(\d{2})-?(\d{1})$/,g=/^(\d{2}([.,]\d*)?)$/,v=/^(\d{2}):?(\d{2}([.,]\d*)?)$/,y=/^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,b=/([Z+-].*)$/,I=/^(Z)$/,S=/^([+-])(\d{2})$/,_=/^([+-])(\d{2}):?(\d{2})$/;function D(e,t,n){t=t||0,n=n||0;var i=new Date(0);i.setUTCFullYear(e,0,4);var r=7*t+n+1-(i.getUTCDay()||7);return i.setUTCDate(i.getUTCDate()+r),i}e.exports=function(e,t){if(r(e))return new Date(e.getTime());if("string"!=typeof e)return new Date(e);var n=(t||{}).additionalDigits;n=null==n?2:Number(n);var L=function(e){var t,n={},i=e.split(o);a.test(i[0])?(n.date=null,t=i[0]):(n.date=i[0],t=i[1]);if(t){var r=b.exec(t);r?(n.time=t.replace(r[1],""),n.timezone=r[1]):n.time=t}return n}(e),k=function(e,t){var n,i=l[t],r=u[t];if(n=c.exec(e)||r.exec(e)){var o=n[1];return{year:parseInt(o,10),restDateString:e.slice(o.length)}}if(n=s.exec(e)||i.exec(e)){var a=n[1];return{year:100*parseInt(a,10),restDateString:e.slice(a.length)}}return{year:null}}(L.date,n),w=k.year,T=function(e,t){if(null===t)return null;var n,i,r,o;if(0===e.length)return(i=new Date(0)).setUTCFullYear(t),i;if(n=p.exec(e))return i=new Date(0),r=parseInt(n[1],10)-1,i.setUTCFullYear(t,r),i;if(n=f.exec(e)){i=new Date(0);var a=parseInt(n[1],10);return i.setUTCFullYear(t,0,a),i}if(n=d.exec(e)){i=new Date(0),r=parseInt(n[1],10)-1;var s=parseInt(n[2],10);return i.setUTCFullYear(t,r,s),i}if(n=h.exec(e))return o=parseInt(n[1],10)-1,D(t,o);if(n=m.exec(e)){o=parseInt(n[1],10)-1;var l=parseInt(n[2],10)-1;return D(t,o,l)}return null}(k.restDateString,w);if(T){var C,P=T.getTime(),x=0;if(L.time&&(x=function(e){var t,n,i;if(t=g.exec(e))return(n=parseFloat(t[1].replace(",",".")))%24*36e5;if(t=v.exec(e))return n=parseInt(t[1],10),i=parseFloat(t[2].replace(",",".")),n%24*36e5+6e4*i;if(t=y.exec(e)){n=parseInt(t[1],10),i=parseInt(t[2],10);var r=parseFloat(t[3].replace(",","."));return n%24*36e5+6e4*i+1e3*r}return null}(L.time)),L.timezone)C=6e4*function(e){var t,n;if(t=I.exec(e))return 0;if(t=S.exec(e))return n=60*parseInt(t[2],10),"+"===t[1]?-n:n;if(t=_.exec(e))return n=60*parseInt(t[2],10)+parseInt(t[3],10),"+"===t[1]?-n:n;return 0}(L.timezone);else{var O=P+x,A=new Date(O);C=i(A);var E=new Date(O);E.setDate(A.getDate()+1);var F=i(E)-i(A);F>0&&(C+=F)}return new Date(P+x+C)}return new Date(e)}},function(e,t,n){"use strict";var i=n(22),r=n(33),o=n(36),a=n(173),s=n(175);i({target:"Array",proto:!0,arity:1,forced:n(6)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}}()},{push:function(e){var t=r(this),n=o(t),i=arguments.length;s(n+i);for(var l=0;l<i;l++)t[n]=arguments[l],n++;return a(t,n),n}})},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"i",(function(){return a})),n.d(t,"f",(function(){return l})),n.d(t,"g",(function(){return c})),n.d(t,"h",(function(){return u})),n.d(t,"d",(function(){return p})),n.d(t,"e",(function(){return f})),n.d(t,"k",(function(){return d})),n.d(t,"l",(function(){return h})),n.d(t,"j",(function(){return m})),n.d(t,"b",(function(){return v})),n.d(t,"a",(function(){return y}));n(16);const i=/#.*$/,r=/\.(md|html)$/,o=/\/$/,a=/^(https?:|mailto:|tel:)/;function s(e){return decodeURI(e).replace(i,"").replace(r,"")}function l(e){return a.test(e)}function c(e){return/^mailto:/.test(e)}function u(e){return/^tel:/.test(e)}function p(e){if(l(e))return e;const t=e.match(i),n=t?t[0]:"",r=s(e);return o.test(r)?e:r+".html"+n}function f(e,t){const n=e.hash,r=function(e){const t=e.match(i);if(t)return t[0]}(t);if(r&&n!==r)return!1;return s(e.path)===s(t)}function d(e,t,n){n&&(t=function(e,t,n){const i=e.charAt(0);if("/"===i)return e;if("?"===i||"#"===i)return t+e;const r=t.split("/");n&&r[r.length-1]||r.pop();const o=e.replace(/^\//,"").split("/");for(let e=0;e<o.length;e++){const t=o[e];".."===t?r.pop():"."!==t&&r.push(t)}""!==r[0]&&r.unshift("");return r.join("/")}(t,n));const i=s(t);for(let t=0;t<e.length;t++)if(s(e[t].regularPath)===i)return Object.assign({},e[t],{type:"page",path:p(e[t].path)});return console.error(`[vuepress] No matching page found for sidebar item "${t}"`),{}}function h(e,t,n,i){const{pages:r,themeConfig:o}=n,a=(i&&o.locales&&o.locales[i]||o).sidebar||o.sidebar,{base:s,config:l}=function(e,t){if(Array.isArray(t))return{base:"/",config:t};for(const i in t)if(0===(n=e,/(\.html|\/)$/.test(n)?n:n+"/").indexOf(encodeURI(i)))return{base:i,config:t[i]};var n;return{}}(t,a);return l?l.map(e=>function e(t,n,i,r=1){if("string"==typeof t)return d(n,t,i);if(Array.isArray(t))return Object.assign(d(n,t[0],i),{title:t[1]});{r>3&&console.error("[vuepress] detected a too deep nested sidebar group.");const o=t.children||[];return 0===o.length&&t.path?Object.assign(d(n,t.path,i),{title:t.title}):{type:"group",path:t.path,title:t.title,sidebarDepth:t.sidebarDepth,children:o.map(t=>e(t,n,i,r+1)),collapsable:!1!==t.collapsable}}}(e,r,s)):[]}function m(e){return Object.assign(e,{type:e.items&&e.items.length?"links":"link"})}function g(e){return e?new Date(e).getTime():0}function v(e,t){const n=g(e.frontmatter.date),i=g(t.frontmatter.date);return 0===n||0===i?0:i-n}function y(e){const t=document.createElement("link");t.rel="stylesheet",t.href=e,document.head.append(t)}},function(e,t,n){"use strict";var i=n(8),r=n(81),o=n(83),a=n(34),s=n(72),l=TypeError,c=Object.defineProperty,u=Object.getOwnPropertyDescriptor;t.f=i?o?function(e,t,n){if(a(e),t=s(t),a(n),"function"==typeof e&&"prototype"===t&&"value"in n&&"writable"in n&&!n.writable){var i=u(e,t);i&&i.writable&&(e[t]=n.value,n={configurable:"configurable"in n?n.configurable:i.configurable,enumerable:"enumerable"in n?n.enumerable:i.enumerable,writable:!1})}return c(e,t,n)}:c:function(e,t,n){if(a(e),t=s(t),a(n),r)try{return c(e,t,n)}catch(e){}if("get"in n||"set"in n)throw new l("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,n){"use strict";var i=n(288),r=n(289),o=n(290),a=n(291),s=n(112),l=n(26),c=n(292),u=Function,p=function(e){try{return u('"use strict"; return ('+e+").constructor;")()}catch(e){}},f=Object.getOwnPropertyDescriptor;if(f)try{f({},"")}catch(e){f=null}var d=function(){throw new l},h=f?function(){try{return d}catch(e){try{return f(arguments,"callee").get}catch(e){return d}}}():d,m=n(293)(),g=n(295)(),v=Object.getPrototypeOf||(g?function(e){return e.__proto__}:null),y={},b="undefined"!=typeof Uint8Array&&v?v(Uint8Array):void 0,I={__proto__:null,"%AggregateError%":"undefined"==typeof AggregateError?void 0:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayIteratorPrototype%":m&&v?v([][Symbol.iterator]()):void 0,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":y,"%AsyncGenerator%":y,"%AsyncGeneratorFunction%":y,"%AsyncIteratorPrototype%":y,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%BigInt%":"undefined"==typeof BigInt?void 0:BigInt,"%BigInt64Array%":"undefined"==typeof BigInt64Array?void 0:BigInt64Array,"%BigUint64Array%":"undefined"==typeof BigUint64Array?void 0:BigUint64Array,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":i,"%eval%":eval,"%EvalError%":r,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?void 0:FinalizationRegistry,"%Function%":u,"%GeneratorFunction%":y,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":m&&v?v(v([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&m&&v?v((new Map)[Symbol.iterator]()):void 0,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":o,"%ReferenceError%":a,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&m&&v?v((new Set)[Symbol.iterator]()):void 0,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":m&&v?v(""[Symbol.iterator]()):void 0,"%Symbol%":m?Symbol:void 0,"%SyntaxError%":s,"%ThrowTypeError%":h,"%TypedArray%":b,"%TypeError%":l,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%URIError%":c,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?void 0:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet};if(v)try{null.error}catch(e){var S=v(v(e));I["%Error.prototype%"]=S}var _={__proto__:null,"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},D=n(61),L=n(297),k=D.call(Function.call,Array.prototype.concat),w=D.call(Function.apply,Array.prototype.splice),T=D.call(Function.call,String.prototype.replace),C=D.call(Function.call,String.prototype.slice),P=D.call(Function.call,RegExp.prototype.exec),x=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,O=/\\(\\)?/g,A=function(e){var t=C(e,0,1),n=C(e,-1);if("%"===t&&"%"!==n)throw new s("invalid intrinsic syntax, expected closing `%`");if("%"===n&&"%"!==t)throw new s("invalid intrinsic syntax, expected opening `%`");var i=[];return T(e,x,(function(e,t,n,r){i[i.length]=n?T(r,O,"$1"):t||e})),i},E=function(e,t){var n,i=e;if(L(_,i)&&(i="%"+(n=_[i])[0]+"%"),L(I,i)){var r=I[i];if(r===y&&(r=function e(t){var n;if("%AsyncFunction%"===t)n=p("async function () {}");else if("%GeneratorFunction%"===t)n=p("function* () {}");else if("%AsyncGeneratorFunction%"===t)n=p("async function* () {}");else if("%AsyncGenerator%"===t){var i=e("%AsyncGeneratorFunction%");i&&(n=i.prototype)}else if("%AsyncIteratorPrototype%"===t){var r=e("%AsyncGenerator%");r&&v&&(n=v(r.prototype))}return I[t]=n,n}(i)),void 0===r&&!t)throw new l("intrinsic "+e+" exists, but is not available. Please file an issue!");return{alias:n,name:i,value:r}}throw new s("intrinsic "+e+" does not exist!")};e.exports=function(e,t){if("string"!=typeof e||0===e.length)throw new l("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof t)throw new l('"allowMissing" argument must be a boolean');if(null===P(/^%?[^%]*%?$/,e))throw new s("`%` may not be present anywhere but at the beginning and end of the intrinsic name");var n=A(e),i=n.length>0?n[0]:"",r=E("%"+i+"%",t),o=r.name,a=r.value,c=!1,u=r.alias;u&&(i=u[0],w(n,k([0,1],u)));for(var p=1,d=!0;p<n.length;p+=1){var h=n[p],m=C(h,0,1),g=C(h,-1);if(('"'===m||"'"===m||"`"===m||'"'===g||"'"===g||"`"===g)&&m!==g)throw new s("property names with quotes must have matching quotes");if("constructor"!==h&&d||(c=!0),L(I,o="%"+(i+="."+h)+"%"))a=I[o];else if(null!=a){if(!(h in a)){if(!t)throw new l("base intrinsic for "+e+" exists, but the property is not available.");return}if(f&&p+1>=n.length){var v=f(a,h);a=(d=!!v)&&"get"in v&&!("originalValue"in v.get)?v.get:a[h]}else d=L(a,h),a=a[h];d&&!c&&(I[o]=a)}}return a}},function(e,t,n){"use strict";var i=n(286),r=n(305),o=n(63);e.exports={formats:o,parse:r,stringify:i}},function(e,t,n){"use strict";var i=n(4),r=n(69).f,o=n(23),a=n(135),s=n(49),l=n(85),c=n(155);e.exports=function(e,t){var n,u,p,f,d,h=e.target,m=e.global,g=e.stat;if(n=m?i:g?i[h]||s(h,{}):i[h]&&i[h].prototype)for(u in t){if(f=t[u],p=e.dontCallGetSet?(d=r(n,u))&&d.value:n[u],!c(m?u:h+(g?".":"#")+u,e.forced)&&void 0!==p){if(typeof f==typeof p)continue;l(f,p)}(e.sham||p&&p.sham)&&o(f,"sham",!0),a(n,u,f,e)}}},function(e,t,n){"use strict";var i=n(8),r=n(18),o=n(46);e.exports=i?function(e,t,n){return r.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var i=n(11).Symbol;e.exports=i},function(e,t,n){var i=n(24),r=n(179),o=n(180),a=i?i.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":a&&a in Object(e)?r(e):o(e)}},function(e,t,n){"use strict";e.exports=TypeError},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"c",(function(){return o})),n.d(t,"b",(function(){return a}));var i=n(17);function r(e,t){return e=e.filter((n,i)=>{const{title:r,frontmatter:{home:o,date:a,publish:s}}=n;if(e.indexOf(n)!==i)return!1;{const e=!0===o||null==r||!1===s;return!0===t?!(e||void 0===a):!e}})}function o(e){e.sort((e,t)=>{const n=e.frontmatter.sticky,r=t.frontmatter.sticky;return n&&r?n==r?Object(i.b)(e,t):n-r:n&&!r?-1:!n&&r?1:Object(i.b)(e,t)})}function a(e){e.sort((e,t)=>Object(i.b)(e,t))}},function(e,t,n){"use strict";var i=n(4),r=n(78),o=n(13),a=n(80),s=n(76),l=n(75),c=i.Symbol,u=r("wks"),p=l?c.for||c:c&&c.withoutSetter||a;e.exports=function(e){return o(u,e)||(u[e]=s&&o(c,e)?c[e]:p("Symbol."+e)),u[e]}},function(e,t,n){"use strict";var i=n(70),r=n(31);e.exports=function(e){return i(r(e))}},function(e,t,n){"use strict";var i=n(5),r=i({}.toString),o=i("".slice);e.exports=function(e){return o(r(e),8,-1)}},function(e,t,n){"use strict";var i=n(71),r=TypeError;e.exports=function(e){if(i(e))throw new r("Can't call method on "+e);return e}},function(e,t,n){"use strict";var i=n(4),r=n(7),o=function(e){return r(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?o(i[e]):i[e]&&i[e][t]}},function(e,t,n){"use strict";var i=n(31),r=Object;e.exports=function(e){return r(i(e))}},function(e,t,n){"use strict";var i=n(10),r=String,o=TypeError;e.exports=function(e){if(i(e))return e;throw new o(r(e)+" is not an object")}},function(e,t,n){"use strict";var i=n(152);e.exports=function(e){var t=+e;return t!=t||0===t?0:i(t)}},function(e,t,n){"use strict";var i=n(153);e.exports=function(e){return i(e.length)}},function(e,t,n){var i=n(184),r=n(185),o=n(186),a=n(187),s=n(188);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=r,l.prototype.get=o,l.prototype.has=a,l.prototype.set=s,e.exports=l},function(e,t,n){var i=n(91);e.exports=function(e,t){for(var n=e.length;n--;)if(i(e[n][0],t))return n;return-1}},function(e,t,n){var i=n(14)(Object,"create");e.exports=i},function(e,t,n){var i=n(206);e.exports=function(e,t){var n=e.__data__;return i(t)?n["string"==typeof t?"string":"hash"]:n.map}},function(e,t,n){var i=n(59);e.exports=function(e){if("string"==typeof e||i(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(e,t,n){var i,r;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(r="function"==typeof(i=function(){var e,t,n={version:"0.2.0"},i=n.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function r(e,t,n){return e<t?t:e>n?n:e}function o(e){return 100*(-1+e)}n.configure=function(e){var t,n;for(t in e)void 0!==(n=e[t])&&e.hasOwnProperty(t)&&(i[t]=n);return this},n.status=null,n.set=function(e){var t=n.isStarted();e=r(e,i.minimum,1),n.status=1===e?null:e;var l=n.render(!t),c=l.querySelector(i.barSelector),u=i.speed,p=i.easing;return l.offsetWidth,a((function(t){""===i.positionUsing&&(i.positionUsing=n.getPositioningCSS()),s(c,function(e,t,n){var r;return(r="translate3d"===i.positionUsing?{transform:"translate3d("+o(e)+"%,0,0)"}:"translate"===i.positionUsing?{transform:"translate("+o(e)+"%,0)"}:{"margin-left":o(e)+"%"}).transition="all "+t+"ms "+n,r}(e,u,p)),1===e?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){n.remove(),t()}),u)}),u)):setTimeout(t,u)})),this},n.isStarted=function(){return"number"==typeof n.status},n.start=function(){n.status||n.set(0);var e=function(){setTimeout((function(){n.status&&(n.trickle(),e())}),i.trickleSpeed)};return i.trickle&&e(),this},n.done=function(e){return e||n.status?n.inc(.3+.5*Math.random()).set(1):this},n.inc=function(e){var t=n.status;return t?("number"!=typeof e&&(e=(1-t)*r(Math.random()*t,.1,.95)),t=r(t+e,0,.994),n.set(t)):n.start()},n.trickle=function(){return n.inc(Math.random()*i.trickleRate)},e=0,t=0,n.promise=function(i){return i&&"resolved"!==i.state()?(0===t&&n.start(),e++,t++,i.always((function(){0==--t?(e=0,n.done()):n.set((e-t)/e)})),this):this},n.render=function(e){if(n.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=i.template;var r,a=t.querySelector(i.barSelector),l=e?"-100":o(n.status||0),u=document.querySelector(i.parent);return s(a,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),i.showSpinner||(r=t.querySelector(i.spinnerSelector))&&f(r),u!=document.body&&c(u,"nprogress-custom-parent"),u.appendChild(t),t},n.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(i.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&f(e)},n.isRendered=function(){return!!document.getElementById("nprogress")},n.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var a=function(){var e=[];function t(){var n=e.shift();n&&n(t)}return function(n){e.push(n),1==e.length&&t()}}(),s=function(){var e=["Webkit","O","Moz","ms"],t={};function n(n){return n=n.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,t){return t.toUpperCase()})),t[n]||(t[n]=function(t){var n=document.body.style;if(t in n)return t;for(var i,r=e.length,o=t.charAt(0).toUpperCase()+t.slice(1);r--;)if((i=e[r]+o)in n)return i;return t}(n))}function i(e,t,i){t=n(t),e.style[t]=i}return function(e,t){var n,r,o=arguments;if(2==o.length)for(n in t)void 0!==(r=t[n])&&t.hasOwnProperty(n)&&i(e,n,r);else i(e,o[1],o[2])}}();function l(e,t){return("string"==typeof e?e:p(e)).indexOf(" "+t+" ")>=0}function c(e,t){var n=p(e),i=n+t;l(n,t)||(e.className=i.substring(1))}function u(e,t){var n,i=p(e);l(e,t)&&(n=i.replace(" "+t+" "," "),e.className=n.substring(1,n.length-1))}function p(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function f(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return n})?i.call(t,n,t,e):i)||(e.exports=r)},function(e,t,n){"use strict";n.d(t,"b",(function(){return i})),n.d(t,"c",(function(){return r})),n.d(t,"a",(function(){return o}));n(16),n(17);function i(){const e=["#e15b64","#f47e60","#f8b26a","#abbd81","#849b87","#e15b64","#f47e60","#f8b26a","#f26d6d","#67cc86","#fb9b5f","#3498db"];return e[Math.floor(Math.random()*e.length)]}function r(e){const t=e.__proto__.push;e.__proto__.push=function(e){return t.call(this,e).catch(e=>e)}}function o(e){const t=e.getRoutes();e.beforeEach((e,n,i)=>{const r=t.find(t=>t.regex.test(e.path));return/\.html$/.test(e.path)||r&&"*"!==r.path&&!r.redirect?i():decodeURIComponent(e.path)!==e.path?i(Object.assign({},e,{path:decodeURIComponent(e.path),fullPath:decodeURIComponent(e.fullPath)})):void i()})}},function(e,t,n){"use strict";var i=n(45),r=Function.prototype.call;e.exports=i?r.bind(r):function(){return r.apply(r,arguments)}},function(e,t,n){"use strict";var i=n(6);e.exports=!i((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},function(e,t,n){"use strict";e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){"use strict";var i=n(7),r=n(142),o=TypeError;e.exports=function(e){if(i(e))return e;throw new o(r(e)+" is not a function")}},function(e,t,n){"use strict";var i=n(79),r=n(4),o=n(49),a=e.exports=r["__core-js_shared__"]||o("__core-js_shared__",{});(a.versions||(a.versions=[])).push({version:"3.37.0",mode:i?"pure":"global",copyright:"© 2014-2024 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.37.0/LICENSE",source:"https://github.com/zloirock/core-js"})},function(e,t,n){"use strict";var i=n(4),r=Object.defineProperty;e.exports=function(e,t){try{r(i,e,{value:t,configurable:!0,writable:!0})}catch(n){i[e]=t}return t}},function(e,t,n){"use strict";e.exports={}},function(e,t,n){"use strict";e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,n){var i=n(178),r=n(19),o=Object.prototype,a=o.hasOwnProperty,s=o.propertyIsEnumerable,l=i(function(){return arguments}())?i:function(e){return r(e)&&a.call(e,"callee")&&!s.call(e,"callee")};e.exports=l},function(e,t,n){var i=n(14)(n(11),"Map");e.exports=i},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,n){var i=n(198),r=n(205),o=n(207),a=n(208),s=n(209);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=r,l.prototype.get=o,l.prototype.has=a,l.prototype.set=s,e.exports=l},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}},function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,t,n){var i=n(12),r=n(59),o=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,a=/^\w*$/;e.exports=function(e,t){if(i(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!r(e))||(a.test(e)||!o.test(e)||null!=t&&e in Object(t))}},function(e,t,n){var i=n(25),r=n(19);e.exports=function(e){return"symbol"==typeof e||r(e)&&"[object Symbol]"==i(e)}},function(e,t){e.exports=function(e){return e}},function(e,t,n){"use strict";var i=n(296);e.exports=Function.prototype.bind||i},function(e,t,n){"use strict";var i=n(20)("%Object.defineProperty%",!0)||!1;if(i)try{i({},"a",{value:1})}catch(e){i=!1}e.exports=i},function(e,t,n){"use strict";var i=String.prototype.replace,r=/%20/g,o="RFC1738",a="RFC3986";e.exports={default:a,formatters:{RFC1738:function(e){return i.call(e,r,"+")},RFC3986:function(e){return String(e)}},RFC1738:o,RFC3986:a}},function(e,t,n){var i=n(312);e.exports=function(e){return i(e,{weekStartsOn:1})}},function(e,t,n){"use strict";var i=n(3),r=n(324),o=n(119),a={"Content-Type":"application/x-www-form-urlencoded"};function s(e,t){!i.isUndefined(e)&&i.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var l,c={transitional:{silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(l=n(120)),l),transformRequest:[function(e,t){return r(t,"Accept"),r(t,"Content-Type"),i.isFormData(e)||i.isArrayBuffer(e)||i.isBuffer(e)||i.isStream(e)||i.isFile(e)||i.isBlob(e)?e:i.isArrayBufferView(e)?e.buffer:i.isURLSearchParams(e)?(s(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):i.isObject(e)||t&&"application/json"===t["Content-Type"]?(s(t,"application/json"),function(e,t,n){if(i.isString(e))try{return(t||JSON.parse)(e),i.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(n||JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional,n=t&&t.silentJSONParsing,r=t&&t.forcedJSONParsing,a=!n&&"json"===this.responseType;if(a||r&&i.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(a){if("SyntaxError"===e.name)throw o(e,this,"E_JSON_PARSE");throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300}};c.headers={common:{Accept:"application/json, text/plain, */*"}},i.forEach(["delete","get","head"],(function(e){c.headers[e]={}})),i.forEach(["post","put","patch"],(function(e){c.headers[e]=i.merge(a)})),e.exports=c},function(e,t,n){"use strict";var i=n(167),r=String;e.exports=function(e){if("Symbol"===i(e))throw new TypeError("Cannot convert a Symbol value to a string");return r(e)}},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){"use strict";var i=n(22),r=n(156).left,o=n(157),a=n(77);i({target:"Array",proto:!0,forced:!n(158)&&a>79&&a<83||!o("reduce")},{reduce:function(e){var t=arguments.length;return r(this,e,t,t>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var i=n(8),r=n(44),o=n(138),a=n(46),s=n(29),l=n(72),c=n(13),u=n(81),p=Object.getOwnPropertyDescriptor;t.f=i?p:function(e,t){if(e=s(e),t=l(t),u)try{return p(e,t)}catch(e){}if(c(e,t))return a(!r(o.f,e,t),e[t])}},function(e,t,n){"use strict";var i=n(5),r=n(6),o=n(30),a=Object,s=i("".split);e.exports=r((function(){return!a("z").propertyIsEnumerable(0)}))?function(e){return"String"===o(e)?s(e,""):a(e)}:a},function(e,t,n){"use strict";e.exports=function(e){return null==e}},function(e,t,n){"use strict";var i=n(139),r=n(73);e.exports=function(e){var t=i(e,"string");return r(t)?t:t+""}},function(e,t,n){"use strict";var i=n(32),r=n(7),o=n(74),a=n(75),s=Object;e.exports=a?function(e){return"symbol"==typeof e}:function(e){var t=i("Symbol");return r(t)&&o(t.prototype,s(e))}},function(e,t,n){"use strict";var i=n(5);e.exports=i({}.isPrototypeOf)},function(e,t,n){"use strict";var i=n(76);e.exports=i&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,n){"use strict";var i=n(77),r=n(6),o=n(4).String;e.exports=!!Object.getOwnPropertySymbols&&!r((function(){var e=Symbol("symbol detection");return!o(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&i&&i<41}))},function(e,t,n){"use strict";var i,r,o=n(4),a=n(140),s=o.process,l=o.Deno,c=s&&s.versions||l&&l.version,u=c&&c.v8;u&&(r=(i=u.split("."))[0]>0&&i[0]<4?1:+(i[0]+i[1])),!r&&a&&(!(i=a.match(/Edge\/(\d+)/))||i[1]>=74)&&(i=a.match(/Chrome\/(\d+)/))&&(r=+i[1]),e.exports=r},function(e,t,n){"use strict";var i=n(48);e.exports=function(e,t){return i[e]||(i[e]=t||{})}},function(e,t,n){"use strict";e.exports=!1},function(e,t,n){"use strict";var i=n(5),r=0,o=Math.random(),a=i(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+a(++r+o,36)}},function(e,t,n){"use strict";var i=n(8),r=n(6),o=n(82);e.exports=!i&&!r((function(){return 7!==Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){"use strict";var i=n(4),r=n(10),o=i.document,a=r(o)&&r(o.createElement);e.exports=function(e){return a?o.createElement(e):{}}},function(e,t,n){"use strict";var i=n(8),r=n(6);e.exports=i&&r((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(e,t,n){"use strict";var i=n(78),r=n(80),o=i("keys");e.exports=function(e){return o[e]||(o[e]=r(e))}},function(e,t,n){"use strict";var i=n(13),r=n(148),o=n(69),a=n(18);e.exports=function(e,t,n){for(var s=r(t),l=a.f,c=o.f,u=0;u<s.length;u++){var p=s[u];i(e,p)||n&&i(n,p)||l(e,p,c(t,p))}}},function(e,t,n){"use strict";var i=n(5),r=n(13),o=n(29),a=n(150).indexOf,s=n(50),l=i([].push);e.exports=function(e,t){var n,i=o(e),c=0,u=[];for(n in i)!r(s,n)&&r(i,n)&&l(u,n);for(;t.length>c;)r(i,n=t[c++])&&(~a(u,n)||l(u,n));return u}},function(e,t,n){"use strict";var i=n(161),r=n(10),o=n(31),a=n(162);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=i(Object.prototype,"__proto__","set"))(n,[]),t=n instanceof Array}catch(e){}return function(n,i){return o(n),a(i),r(n)?(t?e(n,i):n.__proto__=i,n):n}}():void 0)},function(e,t){e.exports=function(e,t){for(var n=-1,i=t.length,r=e.length;++n<i;)e[r+n]=t[n];return e}},function(e,t){var n="object"==typeof global&&global&&global.Object===Object&&global;e.exports=n},function(e,t,n){var i=n(37),r=n(189),o=n(190),a=n(191),s=n(192),l=n(193);function c(e){var t=this.__data__=new i(e);this.size=t.size}c.prototype.clear=r,c.prototype.delete=o,c.prototype.get=a,c.prototype.has=s,c.prototype.set=l,e.exports=c},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,n){var i=n(25),r=n(54);e.exports=function(e){if(!r(e))return!1;var t=i(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(e,t){var n=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,t,n){var i=n(210),r=n(19);e.exports=function e(t,n,o,a,s){return t===n||(null==t||null==n||!r(t)&&!r(n)?t!=t&&n!=n:i(t,n,o,a,e,s))}},function(e,t,n){var i=n(96),r=n(213),o=n(97);e.exports=function(e,t,n,a,s,l){var c=1&n,u=e.length,p=t.length;if(u!=p&&!(c&&p>u))return!1;var f=l.get(e),d=l.get(t);if(f&&d)return f==t&&d==e;var h=-1,m=!0,g=2&n?new i:void 0;for(l.set(e,t),l.set(t,e);++h<u;){var v=e[h],y=t[h];if(a)var b=c?a(y,v,h,t,e,l):a(v,y,h,e,t,l);if(void 0!==b){if(b)continue;m=!1;break}if(g){if(!r(t,(function(e,t){if(!o(g,t)&&(v===e||s(v,e,n,a,l)))return g.push(t)}))){m=!1;break}}else if(v!==y&&!s(v,y,n,a,l)){m=!1;break}}return l.delete(e),l.delete(t),m}},function(e,t,n){var i=n(55),r=n(211),o=n(212);function a(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new i;++t<n;)this.add(e[t])}a.prototype.add=a.prototype.push=r,a.prototype.has=o,e.exports=a},function(e,t){e.exports=function(e,t){return e.has(t)}},function(e,t,n){var i=n(223),r=n(229),o=n(102);e.exports=function(e){return o(e)?i(e):r(e)}},function(e,t,n){(function(e){var i=n(11),r=n(225),o=t&&!t.nodeType&&t,a=o&&"object"==typeof e&&e&&!e.nodeType&&e,s=a&&a.exports===o?i.Buffer:void 0,l=(s?s.isBuffer:void 0)||r;e.exports=l}).call(this,n(67)(e))},function(e,t){var n=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var i=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==i||"symbol"!=i&&n.test(e))&&e>-1&&e%1==0&&e<t}},function(e,t,n){var i=n(226),r=n(227),o=n(228),a=o&&o.isTypedArray,s=a?r(a):i;e.exports=s},function(e,t,n){var i=n(92),r=n(57);e.exports=function(e){return null!=e&&r(e.length)&&!i(e)}},function(e,t,n){var i=n(14)(n(11),"Set");e.exports=i},function(e,t,n){var i=n(54);e.exports=function(e){return e==e&&!i(e)}},function(e,t){e.exports=function(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in Object(n)))}}},function(e,t,n){var i=n(107),r=n(41);e.exports=function(e,t){for(var n=0,o=(t=i(t,e)).length;null!=e&&n<o;)e=e[r(t[n++])];return n&&n==o?e:void 0}},function(e,t,n){var i=n(12),r=n(58),o=n(240),a=n(243);e.exports=function(e,t){return i(e)?e:r(e,t)?[e]:o(a(e))}},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";e.exports=SyntaxError},function(e,t,n){"use strict";var i=n(20)("%Object.getOwnPropertyDescriptor%",!0);if(i)try{i([],"length")}catch(e){i=null}e.exports=i},function(e,t,n){"use strict";var i=n(63),r=Object.prototype.hasOwnProperty,o=Array.isArray,a=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}(),s=function(e,t){for(var n=t&&t.plainObjects?Object.create(null):{},i=0;i<e.length;++i)void 0!==e[i]&&(n[i]=e[i]);return n};e.exports={arrayToObject:s,assign:function(e,t){return Object.keys(t).reduce((function(e,n){return e[n]=t[n],e}),e)},combine:function(e,t){return[].concat(e,t)},compact:function(e){for(var t=[{obj:{o:e},prop:"o"}],n=[],i=0;i<t.length;++i)for(var r=t[i],a=r.obj[r.prop],s=Object.keys(a),l=0;l<s.length;++l){var c=s[l],u=a[c];"object"==typeof u&&null!==u&&-1===n.indexOf(u)&&(t.push({obj:a,prop:c}),n.push(u))}return function(e){for(;e.length>1;){var t=e.pop(),n=t.obj[t.prop];if(o(n)){for(var i=[],r=0;r<n.length;++r)void 0!==n[r]&&i.push(n[r]);t.obj[t.prop]=i}}}(t),e},decode:function(e,t,n){var i=e.replace(/\+/g," ");if("iso-8859-1"===n)return i.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(i)}catch(e){return i}},encode:function(e,t,n,r,o){if(0===e.length)return e;var s=e;if("symbol"==typeof e?s=Symbol.prototype.toString.call(e):"string"!=typeof e&&(s=String(e)),"iso-8859-1"===n)return escape(s).replace(/%u[0-9a-f]{4}/gi,(function(e){return"%26%23"+parseInt(e.slice(2),16)+"%3B"}));for(var l="",c=0;c<s.length;c+=1024){for(var u=s.length>=1024?s.slice(c,c+1024):s,p=[],f=0;f<u.length;++f){var d=u.charCodeAt(f);45===d||46===d||95===d||126===d||d>=48&&d<=57||d>=65&&d<=90||d>=97&&d<=122||o===i.RFC1738&&(40===d||41===d)?p[p.length]=u.charAt(f):d<128?p[p.length]=a[d]:d<2048?p[p.length]=a[192|d>>6]+a[128|63&d]:d<55296||d>=57344?p[p.length]=a[224|d>>12]+a[128|d>>6&63]+a[128|63&d]:(f+=1,d=65536+((1023&d)<<10|1023&u.charCodeAt(f)),p[p.length]=a[240|d>>18]+a[128|d>>12&63]+a[128|d>>6&63]+a[128|63&d])}l+=p.join("")}return l},isBuffer:function(e){return!(!e||"object"!=typeof e)&&!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))},isRegExp:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},maybeMap:function(e,t){if(o(e)){for(var n=[],i=0;i<e.length;i+=1)n.push(t(e[i]));return n}return t(e)},merge:function e(t,n,i){if(!n)return t;if("object"!=typeof n){if(o(t))t.push(n);else{if(!t||"object"!=typeof t)return[t,n];(i&&(i.plainObjects||i.allowPrototypes)||!r.call(Object.prototype,n))&&(t[n]=!0)}return t}if(!t||"object"!=typeof t)return[t].concat(n);var a=t;return o(t)&&!o(n)&&(a=s(t,i)),o(t)&&o(n)?(n.forEach((function(n,o){if(r.call(t,o)){var a=t[o];a&&"object"==typeof a&&n&&"object"==typeof n?t[o]=e(a,n,i):t.push(n)}else t[o]=n})),t):Object.keys(n).reduce((function(t,o){var a=n[o];return r.call(t,o)?t[o]=e(t[o],a,i):t[o]=a,t}),a)}}},function(e,t){e.exports=function(e){return e instanceof Date}},function(e,t,n){var i=n(15),r=n(64);e.exports=function(e){var t=i(e),n=t.getFullYear(),o=new Date(0);o.setFullYear(n+1,0,4),o.setHours(0,0,0,0);var a=r(o),s=new Date(0);s.setFullYear(n,0,4),s.setHours(0,0,0,0);var l=r(s);return t.getTime()>=a.getTime()?n+1:t.getTime()>=l.getTime()?n:n-1}},function(e,t,n){"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),i=0;i<n.length;i++)n[i]=arguments[i];return e.apply(t,n)}}},function(e,t,n){"use strict";var i=n(3);function r(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var o;if(n)o=n(t);else if(i.isURLSearchParams(t))o=t.toString();else{var a=[];i.forEach(t,(function(e,t){null!=e&&(i.isArray(e)?t+="[]":e=[e],i.forEach(e,(function(e){i.isDate(e)?e=e.toISOString():i.isObject(e)&&(e=JSON.stringify(e)),a.push(r(t)+"="+r(e))})))})),o=a.join("&")}if(o){var s=e.indexOf("#");-1!==s&&(e=e.slice(0,s)),e+=(-1===e.indexOf("?")?"?":"&")+o}return e}},function(e,t,n){"use strict";e.exports=function(e,t,n,i,r){return e.config=t,n&&(e.code=n),e.request=i,e.response=r,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},function(e,t,n){"use strict";var i=n(3),r=n(325),o=n(326),a=n(118),s=n(327),l=n(330),c=n(331),u=n(121);e.exports=function(e){return new Promise((function(t,n){var p=e.data,f=e.headers,d=e.responseType;i.isFormData(p)&&delete f["Content-Type"];var h=new XMLHttpRequest;if(e.auth){var m=e.auth.username||"",g=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";f.Authorization="Basic "+btoa(m+":"+g)}var v=s(e.baseURL,e.url);function y(){if(h){var i="getAllResponseHeaders"in h?l(h.getAllResponseHeaders()):null,o={data:d&&"text"!==d&&"json"!==d?h.response:h.responseText,status:h.status,statusText:h.statusText,headers:i,config:e,request:h};r(t,n,o),h=null}}if(h.open(e.method.toUpperCase(),a(v,e.params,e.paramsSerializer),!0),h.timeout=e.timeout,"onloadend"in h?h.onloadend=y:h.onreadystatechange=function(){h&&4===h.readyState&&(0!==h.status||h.responseURL&&0===h.responseURL.indexOf("file:"))&&setTimeout(y)},h.onabort=function(){h&&(n(u("Request aborted",e,"ECONNABORTED",h)),h=null)},h.onerror=function(){n(u("Network Error",e,null,h)),h=null},h.ontimeout=function(){var t="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(u(t,e,e.transitional&&e.transitional.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",h)),h=null},i.isStandardBrowserEnv()){var b=(e.withCredentials||c(v))&&e.xsrfCookieName?o.read(e.xsrfCookieName):void 0;b&&(f[e.xsrfHeaderName]=b)}"setRequestHeader"in h&&i.forEach(f,(function(e,t){void 0===p&&"content-type"===t.toLowerCase()?delete f[t]:h.setRequestHeader(t,e)})),i.isUndefined(e.withCredentials)||(h.withCredentials=!!e.withCredentials),d&&"json"!==d&&(h.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&h.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&h.upload&&h.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){h&&(h.abort(),n(e),h=null)})),p||(p=null),h.send(p)}))}},function(e,t,n){"use strict";var i=n(119);e.exports=function(e,t,n,r,o){var a=new Error(e);return i(a,t,n,r,o)}},function(e,t,n){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t,n){"use strict";var i=n(3);e.exports=function(e,t){t=t||{};var n={},r=["url","method","data"],o=["headers","auth","proxy","params"],a=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],s=["validateStatus"];function l(e,t){return i.isPlainObject(e)&&i.isPlainObject(t)?i.merge(e,t):i.isPlainObject(t)?i.merge({},t):i.isArray(t)?t.slice():t}function c(r){i.isUndefined(t[r])?i.isUndefined(e[r])||(n[r]=l(void 0,e[r])):n[r]=l(e[r],t[r])}i.forEach(r,(function(e){i.isUndefined(t[e])||(n[e]=l(void 0,t[e]))})),i.forEach(o,c),i.forEach(a,(function(r){i.isUndefined(t[r])?i.isUndefined(e[r])||(n[r]=l(void 0,e[r])):n[r]=l(void 0,t[r])})),i.forEach(s,(function(i){i in t?n[i]=l(e[i],t[i]):i in e&&(n[i]=l(void 0,e[i]))}));var u=r.concat(o).concat(a).concat(s),p=Object.keys(e).concat(Object.keys(t)).filter((function(e){return-1===u.indexOf(e)}));return i.forEach(p,c),n}},function(e,t,n){"use strict";function i(e){this.message=e}i.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},i.prototype.__CANCEL__=!0,e.exports=i},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){var i=n(176),r=n(181),o=n(252),a=n(260),s=n(269),l=n(270),c=o((function(e){var t=l(e);return s(t)&&(t=void 0),a(i(e,1,s,!0),r(t,2))}));e.exports=c},function(e,t,n){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var i=/["'&<>]/;e.exports=function(e){var t,n=""+e,r=i.exec(n);if(!r)return n;var o="",a=0,s=0;for(a=r.index;a<n.length;a++){switch(n.charCodeAt(a)){case 34:t="&quot;";break;case 38:t="&amp;";break;case 39:t="&#39;";break;case 60:t="&lt;";break;case 62:t="&gt;";break;default:continue}s!==a&&(o+=n.substring(s,a)),s=a+1,o+=t}return s!==a?o+n.substring(s,a):o}},function(e,t,n){!function(){"use strict";e.exports={polyfill:function(){var e=window,t=document;if(!("scrollBehavior"in t.documentElement.style)||!0===e.__forceSmoothScrollPolyfill__){var n,i=e.HTMLElement||e.Element,r={scroll:e.scroll||e.scrollTo,scrollBy:e.scrollBy,elementScroll:i.prototype.scroll||s,scrollIntoView:i.prototype.scrollIntoView},o=e.performance&&e.performance.now?e.performance.now.bind(e.performance):Date.now,a=(n=e.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(n)?1:0);e.scroll=e.scrollTo=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?h.call(e,t.body,void 0!==arguments[0].left?~~arguments[0].left:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:e.scrollY||e.pageYOffset):r.scroll.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:e.scrollY||e.pageYOffset))},e.scrollBy=function(){void 0!==arguments[0]&&(l(arguments[0])?r.scrollBy.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):h.call(e,t.body,~~arguments[0].left+(e.scrollX||e.pageXOffset),~~arguments[0].top+(e.scrollY||e.pageYOffset)))},i.prototype.scroll=i.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==l(arguments[0])){var e=arguments[0].left,t=arguments[0].top;h.call(this,this,void 0===e?this.scrollLeft:~~e,void 0===t?this.scrollTop:~~t)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");r.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},i.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):r.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},i.prototype.scrollIntoView=function(){if(!0!==l(arguments[0])){var n=f(this),i=n.getBoundingClientRect(),o=this.getBoundingClientRect();n!==t.body?(h.call(this,n,n.scrollLeft+o.left-i.left,n.scrollTop+o.top-i.top),"fixed"!==e.getComputedStyle(n).position&&e.scrollBy({left:i.left,top:i.top,behavior:"smooth"})):e.scrollBy({left:o.left,top:o.top,behavior:"smooth"})}else r.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function s(e,t){this.scrollLeft=e,this.scrollTop=t}function l(e){if(null===e||"object"!=typeof e||void 0===e.behavior||"auto"===e.behavior||"instant"===e.behavior)return!0;if("object"==typeof e&&"smooth"===e.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+e.behavior+" is not a valid value for enumeration ScrollBehavior.")}function c(e,t){return"Y"===t?e.clientHeight+a<e.scrollHeight:"X"===t?e.clientWidth+a<e.scrollWidth:void 0}function u(t,n){var i=e.getComputedStyle(t,null)["overflow"+n];return"auto"===i||"scroll"===i}function p(e){var t=c(e,"Y")&&u(e,"Y"),n=c(e,"X")&&u(e,"X");return t||n}function f(e){for(;e!==t.body&&!1===p(e);)e=e.parentNode||e.host;return e}function d(t){var n,i,r,a,s=(o()-t.startTime)/468;a=s=s>1?1:s,n=.5*(1-Math.cos(Math.PI*a)),i=t.startX+(t.x-t.startX)*n,r=t.startY+(t.y-t.startY)*n,t.method.call(t.scrollable,i,r),i===t.x&&r===t.y||e.requestAnimationFrame(d.bind(e,t))}function h(n,i,a){var l,c,u,p,f=o();n===t.body?(l=e,c=e.scrollX||e.pageXOffset,u=e.scrollY||e.pageYOffset,p=r.scroll):(l=n,c=n.scrollLeft,u=n.scrollTop,p=s),d({scrollable:l,method:p,startTime:f,startX:c,startY:u,x:i,y:a})}}}}()},function(e,t){var n=/^\s+|\s+$/g,i=/^[-+]0x[0-9a-f]+$/i,r=/^0b[01]+$/i,o=/^0o[0-7]+$/i,a=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),u=Object.prototype.toString,p=Math.max,f=Math.min,d=function(){return c.Date.now()};function h(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function m(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==u.call(e)}(e))return NaN;if(h(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=h(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(n,"");var s=r.test(e);return s||o.test(e)?a(e.slice(2),s?2:8):i.test(e)?NaN:+e}e.exports=function(e,t,n){var i,r,o,a,s,l,c=0,u=!1,g=!1,v=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function y(t){var n=i,o=r;return i=r=void 0,c=t,a=e.apply(o,n)}function b(e){return c=e,s=setTimeout(S,t),u?y(e):a}function I(e){var n=e-l;return void 0===l||n>=t||n<0||g&&e-c>=o}function S(){var e=d();if(I(e))return _(e);s=setTimeout(S,function(e){var n=t-(e-l);return g?f(n,o-(e-c)):n}(e))}function _(e){return s=void 0,v&&i?y(e):(i=r=void 0,a)}function D(){var e=d(),n=I(e);if(i=arguments,r=this,l=e,n){if(void 0===s)return b(l);if(g)return s=setTimeout(S,t),y(l)}return void 0===s&&(s=setTimeout(S,t)),a}return t=m(t)||0,h(n)&&(u=!!n.leading,o=(g="maxWait"in n)?p(m(n.maxWait)||0,t):o,v="trailing"in n?!!n.trailing:v),D.cancel=function(){void 0!==s&&clearTimeout(s),c=0,i=l=r=s=void 0},D.flush=function(){return void 0===s?a:_(d())},D}},function(e,t,n){var i=n(306),r=n(311),o=n(116),a=n(15),s=n(314),l=n(315);var c={M:function(e){return e.getMonth()+1},MM:function(e){return f(e.getMonth()+1,2)},Q:function(e){return Math.ceil((e.getMonth()+1)/3)},D:function(e){return e.getDate()},DD:function(e){return f(e.getDate(),2)},DDD:function(e){return i(e)},DDDD:function(e){return f(i(e),3)},d:function(e){return e.getDay()},E:function(e){return e.getDay()||7},W:function(e){return r(e)},WW:function(e){return f(r(e),2)},YY:function(e){return f(e.getFullYear(),4).substr(2)},YYYY:function(e){return f(e.getFullYear(),4)},GG:function(e){return String(o(e)).substr(2)},GGGG:function(e){return o(e)},H:function(e){return e.getHours()},HH:function(e){return f(e.getHours(),2)},h:function(e){var t=e.getHours();return 0===t?12:t>12?t%12:t},hh:function(e){return f(c.h(e),2)},m:function(e){return e.getMinutes()},mm:function(e){return f(e.getMinutes(),2)},s:function(e){return e.getSeconds()},ss:function(e){return f(e.getSeconds(),2)},S:function(e){return Math.floor(e.getMilliseconds()/100)},SS:function(e){return f(Math.floor(e.getMilliseconds()/10),2)},SSS:function(e){return f(e.getMilliseconds(),3)},Z:function(e){return p(e.getTimezoneOffset(),":")},ZZ:function(e){return p(e.getTimezoneOffset())},X:function(e){return Math.floor(e.getTime()/1e3)},x:function(e){return e.getTime()}};function u(e){return e.match(/\[[\s\S]/)?e.replace(/^\[|]$/g,""):e.replace(/\\/g,"")}function p(e,t){t=t||"";var n=e>0?"-":"+",i=Math.abs(e),r=i%60;return n+f(Math.floor(i/60),2)+t+f(r,2)}function f(e,t){for(var n=Math.abs(e).toString();n.length<t;)n="0"+n;return n}e.exports=function(e,t,n){var i=t?String(t):"YYYY-MM-DDTHH:mm:ss.SSSZ",r=(n||{}).locale,o=l.format.formatters,p=l.format.formattingTokensRegExp;r&&r.format&&r.format.formatters&&(o=r.format.formatters,r.format.formattingTokensRegExp&&(p=r.format.formattingTokensRegExp));var f=a(e);return s(f)?function(e,t,n){var i,r,o=e.match(n),a=o.length;for(i=0;i<a;i++)r=t[o[i]]||c[o[i]],o[i]=r||u(o[i]);return function(e){for(var t="",n=0;n<a;n++)o[n]instanceof Function?t+=o[n](e,c):t+=o[n];return t}}(i,o,p)(f):"Invalid Date"}},function(e,t,n){t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const n="color: "+this.color;t.splice(1,0,n,"color: inherit");let i=0,r=0;t[0].replace(/%[a-zA-Z%]/g,e=>{"%%"!==e&&(i++,"%c"===e&&(r=i))}),t.splice(r,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(e){}!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG);return e},t.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=n(340)(t);const{formatters:i}=e.exports;i.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},function(e,t,n){"use strict";var i=n(22),r=n(4),o=n(159),a=n(160),s=r.WebAssembly,l=7!==new Error("e",{cause:7}).cause,c=function(e,t){var n={};n[e]=a(e,t,l),i({global:!0,constructor:!0,arity:1,forced:l},n)},u=function(e,t){if(s&&s[e]){var n={};n[e]=a("WebAssembly."+e,t,l),i({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:l},n)}};c("Error",(function(e){return function(t){return o(e,this,arguments)}})),c("EvalError",(function(e){return function(t){return o(e,this,arguments)}})),c("RangeError",(function(e){return function(t){return o(e,this,arguments)}})),c("ReferenceError",(function(e){return function(t){return o(e,this,arguments)}})),c("SyntaxError",(function(e){return function(t){return o(e,this,arguments)}})),c("TypeError",(function(e){return function(t){return o(e,this,arguments)}})),c("URIError",(function(e){return function(t){return o(e,this,arguments)}})),u("CompileError",(function(e){return function(t){return o(e,this,arguments)}})),u("LinkError",(function(e){return function(t){return o(e,this,arguments)}})),u("RuntimeError",(function(e){return function(t){return o(e,this,arguments)}}))},function(e,t,n){"use strict";var i=n(7),r=n(18),o=n(136),a=n(49);e.exports=function(e,t,n,s){s||(s={});var l=s.enumerable,c=void 0!==s.name?s.name:t;if(i(n)&&o(n,c,s),s.global)l?e[t]=n:a(t,n);else{try{s.unsafe?e[t]&&(l=!0):delete e[t]}catch(e){}l?e[t]=n:r.f(e,t,{value:n,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return e}},function(e,t,n){"use strict";var i=n(5),r=n(6),o=n(7),a=n(13),s=n(8),l=n(144).CONFIGURABLE,c=n(145),u=n(146),p=u.enforce,f=u.get,d=String,h=Object.defineProperty,m=i("".slice),g=i("".replace),v=i([].join),y=s&&!r((function(){return 8!==h((function(){}),"length",{value:8}).length})),b=String(String).split("String"),I=e.exports=function(e,t,n){"Symbol("===m(d(t),0,7)&&(t="["+g(d(t),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),n&&n.getter&&(t="get "+t),n&&n.setter&&(t="set "+t),(!a(e,"name")||l&&e.name!==t)&&(s?h(e,"name",{value:t,configurable:!0}):e.name=t),y&&n&&a(n,"arity")&&e.length!==n.arity&&h(e,"length",{value:n.arity});try{n&&a(n,"constructor")&&n.constructor?s&&h(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var i=p(e);return a(i,"source")||(i.source=v(b,"string"==typeof t?t:"")),e};Function.prototype.toString=I((function(){return o(this)&&f(this).source||c(this)}),"toString")},function(e,t,n){e.exports=n(345)},function(e,t,n){"use strict";var i={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,o=r&&!i.call({1:2},1);t.f=o?function(e){var t=r(this,e);return!!t&&t.enumerable}:i},function(e,t,n){"use strict";var i=n(44),r=n(10),o=n(73),a=n(141),s=n(143),l=n(28),c=TypeError,u=l("toPrimitive");e.exports=function(e,t){if(!r(e)||o(e))return e;var n,l=a(e,u);if(l){if(void 0===t&&(t="default"),n=i(l,e,t),!r(n)||o(n))return n;throw new c("Can't convert object to primitive value")}return void 0===t&&(t="number"),s(e,t)}},function(e,t,n){"use strict";e.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},function(e,t,n){"use strict";var i=n(47),r=n(71);e.exports=function(e,t){var n=e[t];return r(n)?void 0:i(n)}},function(e,t,n){"use strict";var i=String;e.exports=function(e){try{return i(e)}catch(e){return"Object"}}},function(e,t,n){"use strict";var i=n(44),r=n(7),o=n(10),a=TypeError;e.exports=function(e,t){var n,s;if("string"===t&&r(n=e.toString)&&!o(s=i(n,e)))return s;if(r(n=e.valueOf)&&!o(s=i(n,e)))return s;if("string"!==t&&r(n=e.toString)&&!o(s=i(n,e)))return s;throw new a("Can't convert object to primitive value")}},function(e,t,n){"use strict";var i=n(8),r=n(13),o=Function.prototype,a=i&&Object.getOwnPropertyDescriptor,s=r(o,"name"),l=s&&"something"===function(){}.name,c=s&&(!i||i&&a(o,"name").configurable);e.exports={EXISTS:s,PROPER:l,CONFIGURABLE:c}},function(e,t,n){"use strict";var i=n(5),r=n(7),o=n(48),a=i(Function.toString);r(o.inspectSource)||(o.inspectSource=function(e){return a(e)}),e.exports=o.inspectSource},function(e,t,n){"use strict";var i,r,o,a=n(147),s=n(4),l=n(10),c=n(23),u=n(13),p=n(48),f=n(84),d=n(50),h=s.TypeError,m=s.WeakMap;if(a||p.state){var g=p.state||(p.state=new m);g.get=g.get,g.has=g.has,g.set=g.set,i=function(e,t){if(g.has(e))throw new h("Object already initialized");return t.facade=e,g.set(e,t),t},r=function(e){return g.get(e)||{}},o=function(e){return g.has(e)}}else{var v=f("state");d[v]=!0,i=function(e,t){if(u(e,v))throw new h("Object already initialized");return t.facade=e,c(e,v,t),t},r=function(e){return u(e,v)?e[v]:{}},o=function(e){return u(e,v)}}e.exports={set:i,get:r,has:o,enforce:function(e){return o(e)?r(e):i(e,{})},getterFor:function(e){return function(t){var n;if(!l(t)||(n=r(t)).type!==e)throw new h("Incompatible receiver, "+e+" required");return n}}}},function(e,t,n){"use strict";var i=n(4),r=n(7),o=i.WeakMap;e.exports=r(o)&&/native code/.test(String(o))},function(e,t,n){"use strict";var i=n(32),r=n(5),o=n(149),a=n(154),s=n(34),l=r([].concat);e.exports=i("Reflect","ownKeys")||function(e){var t=o.f(s(e)),n=a.f;return n?l(t,n(e)):t}},function(e,t,n){"use strict";var i=n(86),r=n(51).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return i(e,r)}},function(e,t,n){"use strict";var i=n(29),r=n(151),o=n(36),a=function(e){return function(t,n,a){var s=i(t),l=o(s);if(0===l)return!e&&-1;var c,u=r(a,l);if(e&&n!=n){for(;l>u;)if((c=s[u++])!=c)return!0}else for(;l>u;u++)if((e||u in s)&&s[u]===n)return e||u||0;return!e&&-1}};e.exports={includes:a(!0),indexOf:a(!1)}},function(e,t,n){"use strict";var i=n(35),r=Math.max,o=Math.min;e.exports=function(e,t){var n=i(e);return n<0?r(n+t,0):o(n,t)}},function(e,t,n){"use strict";var i=Math.ceil,r=Math.floor;e.exports=Math.trunc||function(e){var t=+e;return(t>0?r:i)(t)}},function(e,t,n){"use strict";var i=n(35),r=Math.min;e.exports=function(e){var t=i(e);return t>0?r(t,9007199254740991):0}},function(e,t,n){"use strict";t.f=Object.getOwnPropertySymbols},function(e,t,n){"use strict";var i=n(6),r=n(7),o=/#|\.prototype\./,a=function(e,t){var n=l[s(e)];return n===u||n!==c&&(r(t)?i(t):!!t)},s=a.normalize=function(e){return String(e).replace(o,".").toLowerCase()},l=a.data={},c=a.NATIVE="N",u=a.POLYFILL="P";e.exports=a},function(e,t,n){"use strict";var i=n(47),r=n(33),o=n(70),a=n(36),s=TypeError,l="Reduce of empty array with no initial value",c=function(e){return function(t,n,c,u){var p=r(t),f=o(p),d=a(p);if(i(n),0===d&&c<2)throw new s(l);var h=e?d-1:0,m=e?-1:1;if(c<2)for(;;){if(h in f){u=f[h],h+=m;break}if(h+=m,e?h<0:d<=h)throw new s(l)}for(;e?h>=0:d>h;h+=m)h in f&&(u=n(u,f[h],h,p));return u}};e.exports={left:c(!1),right:c(!0)}},function(e,t,n){"use strict";var i=n(6);e.exports=function(e,t){var n=[][e];return!!n&&i((function(){n.call(null,t||function(){return 1},1)}))}},function(e,t,n){"use strict";var i=n(4),r=n(30);e.exports="process"===r(i.process)},function(e,t,n){"use strict";var i=n(45),r=Function.prototype,o=r.apply,a=r.call;e.exports="object"==typeof Reflect&&Reflect.apply||(i?a.bind(o):function(){return a.apply(o,arguments)})},function(e,t,n){"use strict";var i=n(32),r=n(13),o=n(23),a=n(74),s=n(87),l=n(85),c=n(164),u=n(165),p=n(166),f=n(169),d=n(170),h=n(8),m=n(79);e.exports=function(e,t,n,g){var v=g?2:1,y=e.split("."),b=y[y.length-1],I=i.apply(null,y);if(I){var S=I.prototype;if(!m&&r(S,"cause")&&delete S.cause,!n)return I;var _=i("Error"),D=t((function(e,t){var n=p(g?t:e,void 0),i=g?new I(e):new I;return void 0!==n&&o(i,"message",n),d(i,D,i.stack,2),this&&a(S,this)&&u(i,this,D),arguments.length>v&&f(i,arguments[v]),i}));if(D.prototype=S,"Error"!==b?s?s(D,_):l(D,_,{name:!0}):h&&"stackTraceLimit"in I&&(c(D,I,"stackTraceLimit"),c(D,I,"prepareStackTrace")),l(D,I),!m)try{S.name!==b&&o(S,"name",b),S.constructor=D}catch(e){}return D}}},function(e,t,n){"use strict";var i=n(5),r=n(47);e.exports=function(e,t,n){try{return i(r(Object.getOwnPropertyDescriptor(e,t)[n]))}catch(e){}}},function(e,t,n){"use strict";var i=n(163),r=String,o=TypeError;e.exports=function(e){if(i(e))return e;throw new o("Can't set "+r(e)+" as a prototype")}},function(e,t,n){"use strict";var i=n(10);e.exports=function(e){return i(e)||null===e}},function(e,t,n){"use strict";var i=n(18).f;e.exports=function(e,t,n){n in e||i(e,n,{configurable:!0,get:function(){return t[n]},set:function(e){t[n]=e}})}},function(e,t,n){"use strict";var i=n(7),r=n(10),o=n(87);e.exports=function(e,t,n){var a,s;return o&&i(a=t.constructor)&&a!==n&&r(s=a.prototype)&&s!==n.prototype&&o(e,s),e}},function(e,t,n){"use strict";var i=n(66);e.exports=function(e,t){return void 0===e?arguments.length<2?"":t:i(e)}},function(e,t,n){"use strict";var i=n(168),r=n(7),o=n(30),a=n(28)("toStringTag"),s=Object,l="Arguments"===o(function(){return arguments}());e.exports=i?o:function(e){var t,n,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=s(e),a))?n:l?o(t):"Object"===(i=o(t))&&r(t.callee)?"Arguments":i}},function(e,t,n){"use strict";var i={};i[n(28)("toStringTag")]="z",e.exports="[object z]"===String(i)},function(e,t,n){"use strict";var i=n(10),r=n(23);e.exports=function(e,t){i(t)&&"cause"in t&&r(e,"cause",t.cause)}},function(e,t,n){"use strict";var i=n(23),r=n(171),o=n(172),a=Error.captureStackTrace;e.exports=function(e,t,n,s){o&&(a?a(e,t):i(e,"stack",r(n,s)))}},function(e,t,n){"use strict";var i=n(5),r=Error,o=i("".replace),a=String(new r("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,l=s.test(a);e.exports=function(e,t){if(l&&"string"==typeof e&&!r.prepareStackTrace)for(;t--;)e=o(e,s,"");return e}},function(e,t,n){"use strict";var i=n(6),r=n(46);e.exports=!i((function(){var e=new Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",r(1,7)),7!==e.stack)}))},function(e,t,n){"use strict";var i=n(8),r=n(174),o=TypeError,a=Object.getOwnPropertyDescriptor,s=i&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=s?function(e,t){if(r(e)&&!a(e,"length").writable)throw new o("Cannot set read only .length");return e.length=t}:function(e,t){return e.length=t}},function(e,t,n){"use strict";var i=n(30);e.exports=Array.isArray||function(e){return"Array"===i(e)}},function(e,t,n){"use strict";var i=TypeError;e.exports=function(e){if(e>9007199254740991)throw i("Maximum allowed index exceeded");return e}},function(e,t,n){var i=n(88),r=n(177);e.exports=function e(t,n,o,a,s){var l=-1,c=t.length;for(o||(o=r),s||(s=[]);++l<c;){var u=t[l];n>0&&o(u)?n>1?e(u,n-1,o,a,s):i(s,u):a||(s[s.length]=u)}return s}},function(e,t,n){var i=n(24),r=n(52),o=n(12),a=i?i.isConcatSpreadable:void 0;e.exports=function(e){return o(e)||r(e)||!!(a&&e&&e[a])}},function(e,t,n){var i=n(25),r=n(19);e.exports=function(e){return r(e)&&"[object Arguments]"==i(e)}},function(e,t,n){var i=n(24),r=Object.prototype,o=r.hasOwnProperty,a=r.toString,s=i?i.toStringTag:void 0;e.exports=function(e){var t=o.call(e,s),n=e[s];try{e[s]=void 0;var i=!0}catch(e){}var r=a.call(e);return i&&(t?e[s]=n:delete e[s]),r}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t,n){var i=n(182),r=n(238),o=n(60),a=n(12),s=n(249);e.exports=function(e){return"function"==typeof e?e:null==e?o:"object"==typeof e?a(e)?r(e[0],e[1]):i(e):s(e)}},function(e,t,n){var i=n(183),r=n(237),o=n(105);e.exports=function(e){var t=r(e);return 1==t.length&&t[0][2]?o(t[0][0],t[0][1]):function(n){return n===e||i(n,e,t)}}},function(e,t,n){var i=n(90),r=n(94);e.exports=function(e,t,n,o){var a=n.length,s=a,l=!o;if(null==e)return!s;for(e=Object(e);a--;){var c=n[a];if(l&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++a<s;){var u=(c=n[a])[0],p=e[u],f=c[1];if(l&&c[2]){if(void 0===p&&!(u in e))return!1}else{var d=new i;if(o)var h=o(p,f,u,e,t,d);if(!(void 0===h?r(f,p,3,o,d):h))return!1}}return!0}},function(e,t){e.exports=function(){this.__data__=[],this.size=0}},function(e,t,n){var i=n(38),r=Array.prototype.splice;e.exports=function(e){var t=this.__data__,n=i(t,e);return!(n<0)&&(n==t.length-1?t.pop():r.call(t,n,1),--this.size,!0)}},function(e,t,n){var i=n(38);e.exports=function(e){var t=this.__data__,n=i(t,e);return n<0?void 0:t[n][1]}},function(e,t,n){var i=n(38);e.exports=function(e){return i(this.__data__,e)>-1}},function(e,t,n){var i=n(38);e.exports=function(e,t){var n=this.__data__,r=i(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this}},function(e,t,n){var i=n(37);e.exports=function(){this.__data__=new i,this.size=0}},function(e,t){e.exports=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}},function(e,t){e.exports=function(e){return this.__data__.get(e)}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t,n){var i=n(37),r=n(53),o=n(55);e.exports=function(e,t){var n=this.__data__;if(n instanceof i){var a=n.__data__;if(!r||a.length<199)return a.push([e,t]),this.size=++n.size,this;n=this.__data__=new o(a)}return n.set(e,t),this.size=n.size,this}},function(e,t,n){var i=n(92),r=n(195),o=n(54),a=n(93),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,u=l.toString,p=c.hasOwnProperty,f=RegExp("^"+u.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!o(e)||r(e))&&(i(e)?f:s).test(a(e))}},function(e,t,n){var i,r=n(196),o=(i=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||""))?"Symbol(src)_1."+i:"";e.exports=function(e){return!!o&&o in e}},function(e,t,n){var i=n(11)["__core-js_shared__"];e.exports=i},function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},function(e,t,n){var i=n(199),r=n(37),o=n(53);e.exports=function(){this.size=0,this.__data__={hash:new i,map:new(o||r),string:new i}}},function(e,t,n){var i=n(200),r=n(201),o=n(202),a=n(203),s=n(204);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var i=e[t];this.set(i[0],i[1])}}l.prototype.clear=i,l.prototype.delete=r,l.prototype.get=o,l.prototype.has=a,l.prototype.set=s,e.exports=l},function(e,t,n){var i=n(39);e.exports=function(){this.__data__=i?i(null):{},this.size=0}},function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},function(e,t,n){var i=n(39),r=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(i){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return r.call(t,e)?t[e]:void 0}},function(e,t,n){var i=n(39),r=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return i?void 0!==t[e]:r.call(t,e)}},function(e,t,n){var i=n(39);e.exports=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=i&&void 0===t?"__lodash_hash_undefined__":t,this}},function(e,t,n){var i=n(40);e.exports=function(e){var t=i(this,e).delete(e);return this.size-=t?1:0,t}},function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},function(e,t,n){var i=n(40);e.exports=function(e){return i(this,e).get(e)}},function(e,t,n){var i=n(40);e.exports=function(e){return i(this,e).has(e)}},function(e,t,n){var i=n(40);e.exports=function(e,t){var n=i(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this}},function(e,t,n){var i=n(90),r=n(95),o=n(214),a=n(217),s=n(233),l=n(12),c=n(99),u=n(101),p="[object Object]",f=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,d,h,m){var g=l(e),v=l(t),y=g?"[object Array]":s(e),b=v?"[object Array]":s(t),I=(y="[object Arguments]"==y?p:y)==p,S=(b="[object Arguments]"==b?p:b)==p,_=y==b;if(_&&c(e)){if(!c(t))return!1;g=!0,I=!1}if(_&&!I)return m||(m=new i),g||u(e)?r(e,t,n,d,h,m):o(e,t,y,n,d,h,m);if(!(1&n)){var D=I&&f.call(e,"__wrapped__"),L=S&&f.call(t,"__wrapped__");if(D||L){var k=D?e.value():e,w=L?t.value():t;return m||(m=new i),h(k,w,n,d,m)}}return!!_&&(m||(m=new i),a(e,t,n,d,h,m))}},function(e,t){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t){e.exports=function(e,t){for(var n=-1,i=null==e?0:e.length;++n<i;)if(t(e[n],n,e))return!0;return!1}},function(e,t,n){var i=n(24),r=n(215),o=n(91),a=n(95),s=n(216),l=n(56),c=i?i.prototype:void 0,u=c?c.valueOf:void 0;e.exports=function(e,t,n,i,c,p,f){switch(n){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!p(new r(e),new r(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return o(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var d=s;case"[object Set]":var h=1&i;if(d||(d=l),e.size!=t.size&&!h)return!1;var m=f.get(e);if(m)return m==t;i|=2,f.set(e,t);var g=a(d(e),d(t),i,c,p,f);return f.delete(e),g;case"[object Symbol]":if(u)return u.call(e)==u.call(t)}return!1}},function(e,t,n){var i=n(11).Uint8Array;e.exports=i},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e,i){n[++t]=[i,e]})),n}},function(e,t,n){var i=n(218),r=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,o,a,s){var l=1&n,c=i(e),u=c.length;if(u!=i(t).length&&!l)return!1;for(var p=u;p--;){var f=c[p];if(!(l?f in t:r.call(t,f)))return!1}var d=s.get(e),h=s.get(t);if(d&&h)return d==t&&h==e;var m=!0;s.set(e,t),s.set(t,e);for(var g=l;++p<u;){var v=e[f=c[p]],y=t[f];if(o)var b=l?o(y,v,f,t,e,s):o(v,y,f,e,t,s);if(!(void 0===b?v===y||a(v,y,n,o,s):b)){m=!1;break}g||(g="constructor"==f)}if(m&&!g){var I=e.constructor,S=t.constructor;I==S||!("constructor"in e)||!("constructor"in t)||"function"==typeof I&&I instanceof I&&"function"==typeof S&&S instanceof S||(m=!1)}return s.delete(e),s.delete(t),m}},function(e,t,n){var i=n(219),r=n(220),o=n(98);e.exports=function(e){return i(e,o,r)}},function(e,t,n){var i=n(88),r=n(12);e.exports=function(e,t,n){var o=t(e);return r(e)?o:i(o,n(e))}},function(e,t,n){var i=n(221),r=n(222),o=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,s=a?function(e){return null==e?[]:(e=Object(e),i(a(e),(function(t){return o.call(e,t)})))}:r;e.exports=s},function(e,t){e.exports=function(e,t){for(var n=-1,i=null==e?0:e.length,r=0,o=[];++n<i;){var a=e[n];t(a,n,e)&&(o[r++]=a)}return o}},function(e,t){e.exports=function(){return[]}},function(e,t,n){var i=n(224),r=n(52),o=n(12),a=n(99),s=n(100),l=n(101),c=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=o(e),u=!n&&r(e),p=!n&&!u&&a(e),f=!n&&!u&&!p&&l(e),d=n||u||p||f,h=d?i(e.length,String):[],m=h.length;for(var g in e)!t&&!c.call(e,g)||d&&("length"==g||p&&("offset"==g||"parent"==g)||f&&("buffer"==g||"byteLength"==g||"byteOffset"==g)||s(g,m))||h.push(g);return h}},function(e,t){e.exports=function(e,t){for(var n=-1,i=Array(e);++n<e;)i[n]=t(n);return i}},function(e,t){e.exports=function(){return!1}},function(e,t,n){var i=n(25),r=n(57),o=n(19),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,e.exports=function(e){return o(e)&&r(e.length)&&!!a[i(e)]}},function(e,t){e.exports=function(e){return function(t){return e(t)}}},function(e,t,n){(function(e){var i=n(89),r=t&&!t.nodeType&&t,o=r&&"object"==typeof e&&e&&!e.nodeType&&e,a=o&&o.exports===r&&i.process,s=function(){try{var e=o&&o.require&&o.require("util").types;return e||a&&a.binding&&a.binding("util")}catch(e){}}();e.exports=s}).call(this,n(67)(e))},function(e,t,n){var i=n(230),r=n(231),o=Object.prototype.hasOwnProperty;e.exports=function(e){if(!i(e))return r(e);var t=[];for(var n in Object(e))o.call(e,n)&&"constructor"!=n&&t.push(n);return t}},function(e,t){var n=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||n)}},function(e,t,n){var i=n(232)(Object.keys,Object);e.exports=i},function(e,t){e.exports=function(e,t){return function(n){return e(t(n))}}},function(e,t,n){var i=n(234),r=n(53),o=n(235),a=n(103),s=n(236),l=n(25),c=n(93),u=c(i),p=c(r),f=c(o),d=c(a),h=c(s),m=l;(i&&"[object DataView]"!=m(new i(new ArrayBuffer(1)))||r&&"[object Map]"!=m(new r)||o&&"[object Promise]"!=m(o.resolve())||a&&"[object Set]"!=m(new a)||s&&"[object WeakMap]"!=m(new s))&&(m=function(e){var t=l(e),n="[object Object]"==t?e.constructor:void 0,i=n?c(n):"";if(i)switch(i){case u:return"[object DataView]";case p:return"[object Map]";case f:return"[object Promise]";case d:return"[object Set]";case h:return"[object WeakMap]"}return t}),e.exports=m},function(e,t,n){var i=n(14)(n(11),"DataView");e.exports=i},function(e,t,n){var i=n(14)(n(11),"Promise");e.exports=i},function(e,t,n){var i=n(14)(n(11),"WeakMap");e.exports=i},function(e,t,n){var i=n(104),r=n(98);e.exports=function(e){for(var t=r(e),n=t.length;n--;){var o=t[n],a=e[o];t[n]=[o,a,i(a)]}return t}},function(e,t,n){var i=n(94),r=n(239),o=n(246),a=n(58),s=n(104),l=n(105),c=n(41);e.exports=function(e,t){return a(e)&&s(t)?l(c(e),t):function(n){var a=r(n,e);return void 0===a&&a===t?o(n,e):i(t,a,3)}}},function(e,t,n){var i=n(106);e.exports=function(e,t,n){var r=null==e?void 0:i(e,t);return void 0===r?n:r}},function(e,t,n){var i=n(241),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,o=/\\(\\)?/g,a=i((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(r,(function(e,n,i,r){t.push(i?r.replace(o,"$1"):n||e)})),t}));e.exports=a},function(e,t,n){var i=n(242);e.exports=function(e){var t=i(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}},function(e,t,n){var i=n(55);function r(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var i=arguments,r=t?t.apply(this,i):i[0],o=n.cache;if(o.has(r))return o.get(r);var a=e.apply(this,i);return n.cache=o.set(r,a)||o,a};return n.cache=new(r.Cache||i),n}r.Cache=i,e.exports=r},function(e,t,n){var i=n(244);e.exports=function(e){return null==e?"":i(e)}},function(e,t,n){var i=n(24),r=n(245),o=n(12),a=n(59),s=i?i.prototype:void 0,l=s?s.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(o(t))return r(t,e)+"";if(a(t))return l?l.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(e,t){e.exports=function(e,t){for(var n=-1,i=null==e?0:e.length,r=Array(i);++n<i;)r[n]=t(e[n],n,e);return r}},function(e,t,n){var i=n(247),r=n(248);e.exports=function(e,t){return null!=e&&r(e,t,i)}},function(e,t){e.exports=function(e,t){return null!=e&&t in Object(e)}},function(e,t,n){var i=n(107),r=n(52),o=n(12),a=n(100),s=n(57),l=n(41);e.exports=function(e,t,n){for(var c=-1,u=(t=i(t,e)).length,p=!1;++c<u;){var f=l(t[c]);if(!(p=null!=e&&n(e,f)))break;e=e[f]}return p||++c!=u?p:!!(u=null==e?0:e.length)&&s(u)&&a(f,u)&&(o(e)||r(e))}},function(e,t,n){var i=n(250),r=n(251),o=n(58),a=n(41);e.exports=function(e){return o(e)?i(a(e)):r(e)}},function(e,t){e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},function(e,t,n){var i=n(106);e.exports=function(e){return function(t){return i(t,e)}}},function(e,t,n){var i=n(60),r=n(253),o=n(255);e.exports=function(e,t){return o(r(e,t,i),e+"")}},function(e,t,n){var i=n(254),r=Math.max;e.exports=function(e,t,n){return t=r(void 0===t?e.length-1:t,0),function(){for(var o=arguments,a=-1,s=r(o.length-t,0),l=Array(s);++a<s;)l[a]=o[t+a];a=-1;for(var c=Array(t+1);++a<t;)c[a]=o[a];return c[t]=n(l),i(e,this,c)}}},function(e,t){e.exports=function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}},function(e,t,n){var i=n(256),r=n(259)(i);e.exports=r},function(e,t,n){var i=n(257),r=n(258),o=n(60),a=r?function(e,t){return r(e,"toString",{configurable:!0,enumerable:!1,value:i(t),writable:!0})}:o;e.exports=a},function(e,t){e.exports=function(e){return function(){return e}}},function(e,t,n){var i=n(14),r=function(){try{var e=i(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=r},function(e,t){var n=Date.now;e.exports=function(e){var t=0,i=0;return function(){var r=n(),o=16-(r-i);if(i=r,o>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},function(e,t,n){var i=n(96),r=n(261),o=n(266),a=n(97),s=n(267),l=n(56);e.exports=function(e,t,n){var c=-1,u=r,p=e.length,f=!0,d=[],h=d;if(n)f=!1,u=o;else if(p>=200){var m=t?null:s(e);if(m)return l(m);f=!1,u=a,h=new i}else h=t?[]:d;e:for(;++c<p;){var g=e[c],v=t?t(g):g;if(g=n||0!==g?g:0,f&&v==v){for(var y=h.length;y--;)if(h[y]===v)continue e;t&&h.push(v),d.push(g)}else u(h,v,n)||(h!==d&&h.push(v),d.push(g))}return d}},function(e,t,n){var i=n(262);e.exports=function(e,t){return!!(null==e?0:e.length)&&i(e,t,0)>-1}},function(e,t,n){var i=n(263),r=n(264),o=n(265);e.exports=function(e,t,n){return t==t?o(e,t,n):i(e,r,n)}},function(e,t){e.exports=function(e,t,n,i){for(var r=e.length,o=n+(i?1:-1);i?o--:++o<r;)if(t(e[o],o,e))return o;return-1}},function(e,t){e.exports=function(e){return e!=e}},function(e,t){e.exports=function(e,t,n){for(var i=n-1,r=e.length;++i<r;)if(e[i]===t)return i;return-1}},function(e,t){e.exports=function(e,t,n){for(var i=-1,r=null==e?0:e.length;++i<r;)if(n(t,e[i]))return!0;return!1}},function(e,t,n){var i=n(103),r=n(268),o=n(56),a=i&&1/o(new i([,-0]))[1]==1/0?function(e){return new i(e)}:r;e.exports=a},function(e,t){e.exports=function(){}},function(e,t,n){var i=n(102),r=n(19);e.exports=function(e){return r(e)&&i(e)}},function(e,t){e.exports=function(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}},function(e,t,n){},function(e,t,n){"use strict";n(108)},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n(109)},function(e,t,n){"use strict";var i=n(22),r=n(33),o=n(36),a=n(35),s=n(277);i({target:"Array",proto:!0},{at:function(e){var t=r(this),n=o(t),i=a(e),s=i>=0?i:n+i;return s<0||s>=n?void 0:t[s]}}),s("at")},function(e,t,n){"use strict";var i=n(28),r=n(278),o=n(18).f,a=i("unscopables"),s=Array.prototype;void 0===s[a]&&o(s,a,{configurable:!0,value:r(null)}),e.exports=function(e){s[a][e]=!0}},function(e,t,n){"use strict";var i,r=n(34),o=n(279),a=n(51),s=n(50),l=n(281),c=n(82),u=n(84),p=u("IE_PROTO"),f=function(){},d=function(e){return"<script>"+e+"<\/script>"},h=function(e){e.write(d("")),e.close();var t=e.parentWindow.Object;return e=null,t},m=function(){try{i=new ActiveXObject("htmlfile")}catch(e){}var e,t;m="undefined"!=typeof document?document.domain&&i?h(i):((t=c("iframe")).style.display="none",l.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(d("document.F=Object")),e.close(),e.F):h(i);for(var n=a.length;n--;)delete m.prototype[a[n]];return m()};s[p]=!0,e.exports=Object.create||function(e,t){var n;return null!==e?(f.prototype=r(e),n=new f,f.prototype=null,n[p]=e):n=m(),void 0===t?n:o.f(n,t)}},function(e,t,n){"use strict";var i=n(8),r=n(83),o=n(18),a=n(34),s=n(29),l=n(280);t.f=i&&!r?Object.defineProperties:function(e,t){a(e);for(var n,i=s(t),r=l(t),c=r.length,u=0;c>u;)o.f(e,n=r[u++],i[n]);return e}},function(e,t,n){"use strict";var i=n(86),r=n(51);e.exports=Object.keys||function(e){return i(e,r)}},function(e,t,n){"use strict";var i=n(32);e.exports=i("document","documentElement")},function(e,t,n){"use strict";var i=n(22),r=n(5),o=n(31),a=n(35),s=n(66),l=n(6),c=r("".charAt);i({target:"String",proto:!0,forced:l((function(){return"\ud842"!=="𠮷".at(-2)}))},{at:function(e){var t=s(o(this)),n=t.length,i=a(e),r=i>=0?i:n+i;return r<0||r>=n?void 0:c(t,r)}})},function(e,t,n){"use strict";n(110)},function(e,t,n){
/*!
 * Valine v1.5.1
 * (c) 2017-2022 xCss
 * Released under the GPL-2.0 License.
 * Last Update: 2022-7-21 3:43:59 ├F10: PM┤
 */
e.exports=function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=108)}([function(e,t,n){"use strict";var i=SyntaxError,r=Function,o=TypeError,a=function(e){try{return r('"use strict"; return ('+e+").constructor;")()}catch(e){}},s=Object.getOwnPropertyDescriptor;if(s)try{s({},"")}catch(e){s=null}var l=function(){throw new o},c=s?function(){try{return l}catch(e){try{return s(arguments,"callee").get}catch(e){return l}}}():l,u=n(22)(),p=Object.getPrototypeOf||function(e){return e.__proto__},f={},d="undefined"==typeof Uint8Array?void 0:p(Uint8Array),h={"%AggregateError%":"undefined"==typeof AggregateError?void 0:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayIteratorPrototype%":u?p([][Symbol.iterator]()):void 0,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":f,"%AsyncGenerator%":f,"%AsyncGeneratorFunction%":f,"%AsyncIteratorPrototype%":f,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%BigInt%":"undefined"==typeof BigInt?void 0:BigInt,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%eval%":eval,"%EvalError%":EvalError,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?void 0:FinalizationRegistry,"%Function%":r,"%GeneratorFunction%":f,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":u?p(p([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&u?p((new Map)[Symbol.iterator]()):void 0,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%ReferenceError%":ReferenceError,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&u?p((new Set)[Symbol.iterator]()):void 0,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":u?p(""[Symbol.iterator]()):void 0,"%Symbol%":u?Symbol:void 0,"%SyntaxError%":i,"%ThrowTypeError%":c,"%TypedArray%":d,"%TypeError%":o,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%URIError%":URIError,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?void 0:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet},m=function e(t){var n;if("%AsyncFunction%"===t)n=a("async function () {}");else if("%GeneratorFunction%"===t)n=a("function* () {}");else if("%AsyncGeneratorFunction%"===t)n=a("async function* () {}");else if("%AsyncGenerator%"===t){var i=e("%AsyncGeneratorFunction%");i&&(n=i.prototype)}else if("%AsyncIteratorPrototype%"===t){var r=e("%AsyncGenerator%");r&&(n=p(r.prototype))}return h[t]=n,n},g={"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},v=n(9),y=n(25),b=v.call(Function.call,Array.prototype.concat),I=v.call(Function.apply,Array.prototype.splice),S=v.call(Function.call,String.prototype.replace),_=v.call(Function.call,String.prototype.slice),D=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,L=/\\(\\)?/g,k=function(e){var t=_(e,0,1),n=_(e,-1);if("%"===t&&"%"!==n)throw new i("invalid intrinsic syntax, expected closing `%`");if("%"===n&&"%"!==t)throw new i("invalid intrinsic syntax, expected opening `%`");var r=[];return S(e,D,(function(e,t,n,i){r[r.length]=n?S(i,L,"$1"):t||e})),r},w=function(e,t){var n,r=e;if(y(g,r)&&(r="%"+(n=g[r])[0]+"%"),y(h,r)){var a=h[r];if(a===f&&(a=m(r)),void 0===a&&!t)throw new o("intrinsic "+e+" exists, but is not available. Please file an issue!");return{alias:n,name:r,value:a}}throw new i("intrinsic "+e+" does not exist!")};e.exports=function(e,t){if("string"!=typeof e||0===e.length)throw new o("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof t)throw new o('"allowMissing" argument must be a boolean');var n=k(e),r=n.length>0?n[0]:"",a=w("%"+r+"%",t),l=a.name,c=a.value,u=!1,p=a.alias;p&&(r=p[0],I(n,b([0,1],p)));for(var f=1,d=!0;f<n.length;f+=1){var m=n[f],g=_(m,0,1),v=_(m,-1);if(('"'===g||"'"===g||"`"===g||'"'===v||"'"===v||"`"===v)&&g!==v)throw new i("property names with quotes must have matching quotes");if("constructor"!==m&&d||(u=!0),y(h,l="%"+(r+="."+m)+"%"))c=h[l];else if(null!=c){if(!(m in c)){if(!t)throw new o("base intrinsic for "+e+" exists, but the property is not available.");return}if(s&&f+1>=n.length){var S=s(c,m);c=(d=!!S)&&"get"in S&&!("originalValue"in S.get)?S.get:c[m]}else d=y(c,m),c=c[m];d&&!u&&(h[l]=c)}}return c}},function(e,t,n){"use strict";var i=n(0),r=n(4),o=r(i("String.prototype.indexOf"));e.exports=function(e,t){var n=i(e,!!t);return"function"==typeof n&&o(e,".prototype.")>-1?r(n):n}},function(e,t,n){"use strict";var i=n(88),r="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),o=Object.prototype.toString,a=Array.prototype.concat,s=Object.defineProperty,l=s&&function(){var e={};try{for(var t in s(e,"x",{enumerable:!1,value:e}),e)return!1;return e.x===e}catch(e){return!1}}(),c=function(e,t,n,i){(!(t in e)||function(e){return"function"==typeof e&&"[object Function]"===o.call(e)}(i)&&i())&&(l?s(e,t,{configurable:!0,enumerable:!1,value:n,writable:!0}):e[t]=n)},u=function(e,t){var n=arguments.length>2?arguments[2]:{},o=i(t);r&&(o=a.call(o,Object.getOwnPropertySymbols(t)));for(var s=0;s<o.length;s+=1)c(e,o[s],t[o[s]],n[o[s]])};u.supportsDescriptors=!!l,e.exports=u},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=i(n(85)),a=i(n(49)),s=i(n(46)),l=i(n(48)),c=i(n(45)),u=document,p=navigator,f=/[&<>"'`\\]/g,d=RegExp(f.source),h=/&(?:amp|lt|gt|quot|#39|#x60|#x5c);/g,m=RegExp(h.source),g={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#x60;","\\":"&#x5c;"},v={};for(var y in g)v[g[y]]=y;var b=null;Array.prototype.forEach||(Array.prototype.forEach=function(e,t){var n,i;if(null==this)throw new TypeError(" this is null or not defined");var r=Object(this),o=r.length>>>0;if("function"!=typeof e)throw new TypeError(e+" is not a function");for(arguments.length>1&&(n=t),i=0;i<o;){var a;i in r&&(a=r[i],e.call(n,a,i,r)),i++}}),window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=Array.prototype.forEach),String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}),(0,o.default)(a.default.fn,{prepend:function(e){return e instanceof HTMLElement||(e=e[0]),this.forEach((function(t){t.insertAdjacentElement("afterBegin",e)})),this},append:function(e){return e instanceof HTMLElement||(e=e[0]),this.forEach((function(t){t.insertAdjacentElement("beforeEnd",e)})),this},remove:function(){return this.forEach((function(e){try{e.parentNode.removeChild(e)}catch(e){}})),this},find:function(e){return(0,a.default)(e,this)},show:function(){return this.forEach((function(e){e.style.display="block"})),this},hide:function(){return this.forEach((function(e){e.style.display="none"})),this},on:function(e,t,n){return a.default.fn.off(e,t,n),this.forEach((function(i){e.split(" ").forEach((function(e){i.addEventListener?i.addEventListener(e,t,n||!1):i.attachEvent?i.attachEvent("on"+e,t):i["on"+e]=t}))})),this},off:function(e,t,n){return this.forEach((function(i){e.split(" ").forEach((function(e){i.removeEventListener?i.removeEventListener(e,t,n||!1):i.detachEvent?i.detachEvent("on"+e,t):i["on"+e]=null}))})),this},html:function(e){return void 0!==e?(this.forEach((function(t){t.innerHTML=e})),this):this[0].innerHTML},text:function(e){return void 0!==e?(this.forEach((function(t){t.innerText=e})),this):this[0].innerText},empty:function(e){return e=e||0,this.forEach((function(t){setTimeout((function(e){t.innerText=""}),e)})),this},val:function(e){return void 0!==e?(this.forEach((function(t){t.value=e})),this):this[0].value||""},attr:function(){var e=arguments;if("object"==r(arguments[0])){var t=arguments[0],n=this;return Object.keys(t).forEach((function(e){n.forEach((function(n){n.setAttribute(e,t[e])}))})),this}return"string"==typeof arguments[0]&&arguments.length<2?this[0].getAttribute(arguments[0])||"":(this.forEach((function(t){t.setAttribute(e[0],e[1])})),this)},removeAttr:function(e){return this.forEach((function(t){var n,i=0,r=e&&e.match(/[^\x20\t\r\n\f\*\/\\]+/g);if(r&&1===t.nodeType)for(;n=r[i++];)t.removeAttribute(n)})),this},hasClass:function(e){return!!this[0]&&new RegExp("(\\s|^)"+e+"(\\s|$)").test(this[0].getAttribute("class"))},addClass:function(e){return this.forEach((function(t){var n=(0,a.default)(t),i=n.attr("class");n.hasClass(e)||n.attr("class",i+=" "+e)})),this},removeClass:function(e){return this.forEach((function(t){var n=(0,a.default)(t),i=n.attr("class");if(n.hasClass(e)){var r=new RegExp("(\\s|^)"+e+"(\\s|$)");n.attr("class",i.replace(r,""))}})),this}}),(0,o.default)(a.default,{extend:o.default,noop:function(){},navi:p,ua:p.userAgent,lang:p.language||p.languages[0],detect:s.default,store:l.default,escape:function(e){return e&&d.test(e)?e.replace(f,(function(e){return g[e]})):e},unescape:function(e){return e&&m.test(e)?e.replace(h,(function(e){return v[e]})):e},dynamicLoadSource:function(e,t){if((0,a.default)('script[src="'+e+'"]').length)t&&t();else{var n=u.createElement("script");n.onload=n.onreadystatechange=function(){this.onload=this.onreadystatechange=null,t&&t(),(0,a.default)(n).remove()},n.async=!0,n.setAttribute("referrerPolicy","no-referrer"),(0,a.default)("head")[0].appendChild(n),n.src=e}},sdkLoader:function(e,t,n){t in window&&window[t]?(b&&clearTimeout(b),n&&n()):a.default.dynamicLoadSource(e,(function(){b=setTimeout(a.default.sdkLoader(e,t,n),100)}))},deleteInWin:function(e,t){var n=function(t){if(e in window)try{delete window[e]}catch(t){window[e]=null}};0===t?n():setTimeout(n,t||500)},ajax:c.default}),t.default=a.default},function(e,t,n){"use strict";var i=n(9),r=n(0),o=r("%Function.prototype.apply%"),a=r("%Function.prototype.call%"),s=r("%Reflect.apply%",!0)||i.call(a,o),l=r("%Object.getOwnPropertyDescriptor%",!0),c=r("%Object.defineProperty%",!0),u=r("%Math.max%");if(c)try{c({},"a",{value:1})}catch(e){c=null}e.exports=function(e){var t=s(i,a,arguments);return l&&c&&l(t,"length").configurable&&c(t,"length",{value:1+u(0,e.length-(arguments.length-1))}),t};var p=function(){return s(i,o,arguments)};c?c(e.exports,"apply",{value:p}):e.exports.apply=p},function(e,t,n){"use strict";e.exports=n(62)},function(e,t,n){"use strict";t.__esModule=!0,t.DEFAULT_EMOJI_CDN="//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/",t.DB_NAME="Comment",t.CONFIG={lang:"zh-CN",langMode:null,appId:"",appKey:"",clazzName:"Comment",meta:["nick","mail","link"],path:location.pathname,placeholder:"Just Go Go",pageSize:10,recordIP:!0,serverURLs:"",visitor:!1,mathJax:!1,emojiCDN:"",emojiMaps:void 0,enableQQ:!1,requiredFields:[]},t.defaultMeta=["nick","mail","link"],t.QQCacheKey="_v_Cache_Q",t.MetaCacheKey="_v_Cache_Meta",t.RandomStr=function(e){return(Date.now()+Math.round(1e3*Math.random())).toString(32)},t.VERSION="1.5.1"},function(e,t,n){var i=n(16),r=n(50);for(var o in(t=e.exports=function(e,t){return new r(t).process(e)}).FilterCSS=r,i)t[o]=i[o];"undefined"!=typeof window&&(window.filterCSS=e.exports)},function(e,t,n){"use strict";var i=n(66);e.exports=function(e){return"symbol"==typeof e?"Symbol":"bigint"==typeof e?"BigInt":i(e)}},function(e,t,n){"use strict";var i=n(78);e.exports=Function.prototype.bind||i},function(e,t,n){"use strict";var i,r,o=Function.prototype.toString,a="object"==typeof Reflect&&null!==Reflect&&Reflect.apply;if("function"==typeof a&&"function"==typeof Object.defineProperty)try{i=Object.defineProperty({},"length",{get:function(){throw r}}),r={},a((function(){throw 42}),null,i)}catch(e){e!==r&&(a=null)}else a=null;var s=/^\s*class\b/,l=function(e){try{var t=o.call(e);return s.test(t)}catch(e){return!1}},c=Object.prototype.toString,u="function"==typeof Symbol&&!!Symbol.toStringTag,p="object"==typeof document&&void 0===document.all&&void 0!==document.all?document.all:{};e.exports=a?function(e){if(e===p)return!0;if(!e)return!1;if("function"!=typeof e&&"object"!=typeof e)return!1;if("function"==typeof e&&!e.prototype)return!0;try{a(e,null,i)}catch(e){if(e!==r)return!1}return!l(e)}:function(e){if(e===p)return!0;if(!e)return!1;if("function"!=typeof e&&"object"!=typeof e)return!1;if("function"==typeof e&&!e.prototype)return!0;if(u)return function(e){try{return!l(e)&&(o.call(e),!0)}catch(e){return!1}}(e);if(l(e))return!1;var t=c.call(e);return"[object Function]"===t||"[object GeneratorFunction]"===t}},function(e,t){e.exports={indexOf:function(e,t){var n,i;if(Array.prototype.indexOf)return e.indexOf(t);for(n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1},forEach:function(e,t,n){var i,r;if(Array.prototype.forEach)return e.forEach(t,n);for(i=0,r=e.length;i<r;i++)t.call(n,e[i],i,e)},trim:function(e){return String.prototype.trim?e.trim():e.replace(/(^\s*)|(\s*$)/g,"")},spaceIndex:function(e){var t=/\s|\n|\t/.exec(e);return t?t.index:-1}}},function(e,t,n){"use strict";t.__esModule=!0;var i={cdn:n(6).DEFAULT_EMOJI_CDN,maps:n(97),parse:function(e,t){return String(e).replace(new RegExp(":("+Object.keys(i.maps).join("|")+"):","ig"),(function(e,n){return i.maps[n]?i.build(n,t):e}))},build:function(e,t){var n=/^(https?:)?\/\//i,r=i.maps[e],o=n.test(r)?r:i.cdn+r,a=' <img alt="'+e+'" referrerpolicy="no-referrer" class="vemoji" src="'+o+'" />';return n.test(o)?a:""}};t.default=i},function(e,t,n){"use strict";t.__esModule=!0;var i=function(e){return e&&e.__esModule?e:{default:e}}(n(95));t.default=function(e){return(0,i.default)(e,{onTagAttr:function(e,t,n,i){return r(e,t,n,i)},onIgnoreTagAttr:function(e,t,n,i){return r(e,t,n,i)}}).replace(/\<\/?div\>/gi,"")};var r=function(e,t,n,r){if(/video|audio/i.test(e))return"";if(/code|pre|span/i.test(e)){if("style"==t){var o=n.match(/color:([#a-z0-9]{3,7}|\s+[#a-z0-9]{3,8})/gi);return o&&o.length?'style="'+o[0]+'"':""}if("class"==t)return t+"='"+i.default.escapeAttrValue(n)+"'"}return"a"===e&&"class"==t&&"at"===n?t+"='"+i.default.escapeAttrValue(n)+"'":"img"===e&&/src|class/i.test(t)?t+"='"+i.default.escapeAttrValue(n)+"' referrerPolicy='no-referrer'":void 0}},function(e,t,n){"use strict";var i=n(0),r=n(1),o=i("%TypeError%"),a=n(52),s=n(18),l=n(53),c=n(55),u=n(56),p=n(60),f=n(20),d=n(81),h=r("String.prototype.split"),m=Object("a"),g="a"!==m[0]||!(0 in m);e.exports=function(e){var t,n=p(this),i=g&&d(this)?h(this,""):n,r=u(i);if(!c(e))throw new o("Array.prototype.forEach callback must be a function");arguments.length>1&&(t=arguments[1]);for(var m=0;m<r;){var v=f(m);if(l(i,v)){var y=s(i,v);a(e,t,[y,m,i])}m+=1}}},function(e,t,n){"use strict";var i=n(75),r=n(14);e.exports=function(){var e=Array.prototype.forEach;return i(e)?e:r}},function(e,t){function n(){var e={"align-content":!1,"align-items":!1,"align-self":!1,"alignment-adjust":!1,"alignment-baseline":!1,all:!1,"anchor-point":!1,animation:!1,"animation-delay":!1,"animation-direction":!1,"animation-duration":!1,"animation-fill-mode":!1,"animation-iteration-count":!1,"animation-name":!1,"animation-play-state":!1,"animation-timing-function":!1,azimuth:!1,"backface-visibility":!1,background:!0,"background-attachment":!0,"background-clip":!0,"background-color":!0,"background-image":!0,"background-origin":!0,"background-position":!0,"background-repeat":!0,"background-size":!0,"baseline-shift":!1,binding:!1,bleed:!1,"bookmark-label":!1,"bookmark-level":!1,"bookmark-state":!1,border:!0,"border-bottom":!0,"border-bottom-color":!0,"border-bottom-left-radius":!0,"border-bottom-right-radius":!0,"border-bottom-style":!0,"border-bottom-width":!0,"border-collapse":!0,"border-color":!0,"border-image":!0,"border-image-outset":!0,"border-image-repeat":!0,"border-image-slice":!0,"border-image-source":!0,"border-image-width":!0,"border-left":!0,"border-left-color":!0,"border-left-style":!0,"border-left-width":!0,"border-radius":!0,"border-right":!0,"border-right-color":!0,"border-right-style":!0,"border-right-width":!0,"border-spacing":!0,"border-style":!0,"border-top":!0,"border-top-color":!0,"border-top-left-radius":!0,"border-top-right-radius":!0,"border-top-style":!0,"border-top-width":!0,"border-width":!0,bottom:!1,"box-decoration-break":!0,"box-shadow":!0,"box-sizing":!0,"box-snap":!0,"box-suppress":!0,"break-after":!0,"break-before":!0,"break-inside":!0,"caption-side":!1,chains:!1,clear:!0,clip:!1,"clip-path":!1,"clip-rule":!1,color:!0,"color-interpolation-filters":!0,"column-count":!1,"column-fill":!1,"column-gap":!1,"column-rule":!1,"column-rule-color":!1,"column-rule-style":!1,"column-rule-width":!1,"column-span":!1,"column-width":!1,columns:!1,contain:!1,content:!1,"counter-increment":!1,"counter-reset":!1,"counter-set":!1,crop:!1,cue:!1,"cue-after":!1,"cue-before":!1,cursor:!1,direction:!1,display:!0,"display-inside":!0,"display-list":!0,"display-outside":!0,"dominant-baseline":!1,elevation:!1,"empty-cells":!1,filter:!1,flex:!1,"flex-basis":!1,"flex-direction":!1,"flex-flow":!1,"flex-grow":!1,"flex-shrink":!1,"flex-wrap":!1,float:!1,"float-offset":!1,"flood-color":!1,"flood-opacity":!1,"flow-from":!1,"flow-into":!1,font:!0,"font-family":!0,"font-feature-settings":!0,"font-kerning":!0,"font-language-override":!0,"font-size":!0,"font-size-adjust":!0,"font-stretch":!0,"font-style":!0,"font-synthesis":!0,"font-variant":!0,"font-variant-alternates":!0,"font-variant-caps":!0,"font-variant-east-asian":!0,"font-variant-ligatures":!0,"font-variant-numeric":!0,"font-variant-position":!0,"font-weight":!0,grid:!1,"grid-area":!1,"grid-auto-columns":!1,"grid-auto-flow":!1,"grid-auto-rows":!1,"grid-column":!1,"grid-column-end":!1,"grid-column-start":!1,"grid-row":!1,"grid-row-end":!1,"grid-row-start":!1,"grid-template":!1,"grid-template-areas":!1,"grid-template-columns":!1,"grid-template-rows":!1,"hanging-punctuation":!1,height:!0,hyphens:!1,icon:!1,"image-orientation":!1,"image-resolution":!1,"ime-mode":!1,"initial-letters":!1,"inline-box-align":!1,"justify-content":!1,"justify-items":!1,"justify-self":!1,left:!1,"letter-spacing":!0,"lighting-color":!0,"line-box-contain":!1,"line-break":!1,"line-grid":!1,"line-height":!1,"line-snap":!1,"line-stacking":!1,"line-stacking-ruby":!1,"line-stacking-shift":!1,"line-stacking-strategy":!1,"list-style":!0,"list-style-image":!0,"list-style-position":!0,"list-style-type":!0,margin:!0,"margin-bottom":!0,"margin-left":!0,"margin-right":!0,"margin-top":!0,"marker-offset":!1,"marker-side":!1,marks:!1,mask:!1,"mask-box":!1,"mask-box-outset":!1,"mask-box-repeat":!1,"mask-box-slice":!1,"mask-box-source":!1,"mask-box-width":!1,"mask-clip":!1,"mask-image":!1,"mask-origin":!1,"mask-position":!1,"mask-repeat":!1,"mask-size":!1,"mask-source-type":!1,"mask-type":!1,"max-height":!0,"max-lines":!1,"max-width":!0,"min-height":!0,"min-width":!0,"move-to":!1,"nav-down":!1,"nav-index":!1,"nav-left":!1,"nav-right":!1,"nav-up":!1,"object-fit":!1,"object-position":!1,opacity:!1,order:!1,orphans:!1,outline:!1,"outline-color":!1,"outline-offset":!1,"outline-style":!1,"outline-width":!1,overflow:!1,"overflow-wrap":!1,"overflow-x":!1,"overflow-y":!1,padding:!0,"padding-bottom":!0,"padding-left":!0,"padding-right":!0,"padding-top":!0,page:!1,"page-break-after":!1,"page-break-before":!1,"page-break-inside":!1,"page-policy":!1,pause:!1,"pause-after":!1,"pause-before":!1,perspective:!1,"perspective-origin":!1,pitch:!1,"pitch-range":!1,"play-during":!1,position:!1,"presentation-level":!1,quotes:!1,"region-fragment":!1,resize:!1,rest:!1,"rest-after":!1,"rest-before":!1,richness:!1,right:!1,rotation:!1,"rotation-point":!1,"ruby-align":!1,"ruby-merge":!1,"ruby-position":!1,"shape-image-threshold":!1,"shape-outside":!1,"shape-margin":!1,size:!1,speak:!1,"speak-as":!1,"speak-header":!1,"speak-numeral":!1,"speak-punctuation":!1,"speech-rate":!1,stress:!1,"string-set":!1,"tab-size":!1,"table-layout":!1,"text-align":!0,"text-align-last":!0,"text-combine-upright":!0,"text-decoration":!0,"text-decoration-color":!0,"text-decoration-line":!0,"text-decoration-skip":!0,"text-decoration-style":!0,"text-emphasis":!0,"text-emphasis-color":!0,"text-emphasis-position":!0,"text-emphasis-style":!0,"text-height":!0,"text-indent":!0,"text-justify":!0,"text-orientation":!0,"text-overflow":!0,"text-shadow":!0,"text-space-collapse":!0,"text-transform":!0,"text-underline-position":!0,"text-wrap":!0,top:!1,transform:!1,"transform-origin":!1,"transform-style":!1,transition:!1,"transition-delay":!1,"transition-duration":!1,"transition-property":!1,"transition-timing-function":!1,"unicode-bidi":!1,"vertical-align":!1,visibility:!1,"voice-balance":!1,"voice-duration":!1,"voice-family":!1,"voice-pitch":!1,"voice-range":!1,"voice-rate":!1,"voice-stress":!1,"voice-volume":!1,volume:!1,"white-space":!1,widows:!1,width:!0,"will-change":!1,"word-break":!0,"word-spacing":!0,"word-wrap":!0,"wrap-flow":!1,"wrap-through":!1,"writing-mode":!1,"z-index":!1};return e}var i=/javascript\s*\:/gim;t.whiteList=n(),t.getDefaultWhiteList=n,t.onAttr=function(e,t,n){},t.onIgnoreAttr=function(e,t,n){},t.safeAttrValue=function(e,t){return i.test(t)?"":t}},function(e,t){e.exports={indexOf:function(e,t){var n,i;if(Array.prototype.indexOf)return e.indexOf(t);for(n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1},forEach:function(e,t,n){var i,r;if(Array.prototype.forEach)return e.forEach(t,n);for(i=0,r=e.length;i<r;i++)t.call(n,e[i],i,e)},trim:function(e){return String.prototype.trim?e.trim():e.replace(/(^\s*)|(\s*$)/g,"")},trimRight:function(e){return String.prototype.trimRight?e.trimRight():e.replace(/(\s*$)/g,"")}}},function(e,t,n){"use strict";var i=n(0)("%TypeError%"),r=n(86),o=n(19),a=n(8);e.exports=function(e,t){if("Object"!==a(e))throw new i("Assertion failed: Type(O) is not Object");if(!o(t))throw new i("Assertion failed: IsPropertyKey(P) is not true, got "+r(t));return e[t]}},function(e,t,n){"use strict";e.exports=function(e){return"string"==typeof e||"symbol"==typeof e}},function(e,t,n){"use strict";var i=n(0),r=i("%String%"),o=i("%TypeError%");e.exports=function(e){if("symbol"==typeof e)throw new o("Cannot convert a Symbol value to a string");return r(e)}},function(e,t,n){"use strict";e.exports=function(e){return null===e||"function"!=typeof e&&"object"!=typeof e}},function(e,t,n){"use strict";var i="undefined"!=typeof Symbol&&Symbol,r=n(23);e.exports=function(){return"function"==typeof i&&"function"==typeof Symbol&&"symbol"==typeof i("foo")&&"symbol"==typeof Symbol("bar")&&r()}},function(e,t,n){"use strict";e.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},t=Symbol("test"),n=Object(t);if("string"==typeof t)return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;if("[object Symbol]"!==Object.prototype.toString.call(n))return!1;for(t in e[t]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var i=Object.getOwnPropertySymbols(e);if(1!==i.length||i[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,t))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var r=Object.getOwnPropertyDescriptor(e,t);if(42!==r.value||!0!==r.enumerable)return!1}return!0}},function(e,t,n){"use strict";var i=n(23);e.exports=function(){return i()&&!!Symbol.toStringTag}},function(e,t,n){"use strict";var i=n(9);e.exports=i.call(Function.call,Object.prototype.hasOwnProperty)},function(e,t,n){"use strict";var i=Object.prototype.toString;e.exports=function(e){var t=i.call(e),n="[object Arguments]"===t;return n||(n="[object Array]"!==t&&null!==e&&"object"==typeof e&&"number"==typeof e.length&&e.length>=0&&"[object Function]"===i.call(e.callee)),n}},function(e,t,n){"use strict";var i=n(5),r=n(1),o=r("Object.prototype.propertyIsEnumerable"),a=r("Array.prototype.push");e.exports=function(e){var t=i(e),n=[];for(var r in t)o(t,r)&&a(n,[r,t[r]]);return n}},function(e,t,n){"use strict";var i=n(27);e.exports=function(){return"function"==typeof Object.entries?Object.entries:i}},function(e,t,n){"use strict";var i=n(5),r=n(20),o=n(1)("String.prototype.replace"),a=/^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/,s=/[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;e.exports=function(){var e=r(i(this));return o(o(e,a,""),s,"")}},function(e,t,n){"use strict";var i=n(29);e.exports=function(){return String.prototype.trim&&"​"==="​".trim()?String.prototype.trim:i}},function(e,t,n){function i(){return{a:["target","href","title"],abbr:["title"],address:[],area:["shape","coords","href","alt"],article:[],aside:[],audio:["autoplay","controls","crossorigin","loop","muted","preload","src"],b:[],bdi:["dir"],bdo:["dir"],big:[],blockquote:["cite"],br:[],caption:[],center:[],cite:[],code:[],col:["align","valign","span","width"],colgroup:["align","valign","span","width"],dd:[],del:["datetime"],details:["open"],div:[],dl:[],dt:[],em:[],figcaption:[],figure:[],font:["color","size","face"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:["src","alt","title","width","height"],ins:["datetime"],li:[],mark:[],nav:[],ol:[],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],summary:[],sup:[],strong:[],strike:[],table:["width","border","align","valign"],tbody:["align","valign"],td:["width","rowspan","colspan","align","valign"],tfoot:["align","valign"],th:["width","rowspan","colspan","align","valign"],thead:["align","valign"],tr:["rowspan","align","valign"],tt:[],u:[],ul:[],video:["autoplay","controls","crossorigin","loop","muted","playsinline","poster","preload","src","height","width"]}}function r(e){return e.replace(g,"&lt;").replace(v,"&gt;")}function o(e){return e.replace(y,"&quot;")}function a(e){return e.replace(b,'"')}function s(e){return e.replace(I,(function(e,t){return"x"===t[0]||"X"===t[0]?String.fromCharCode(parseInt(t.substr(1),16)):String.fromCharCode(parseInt(t,10))}))}function l(e){return e.replace(S,":").replace(_," ")}function c(e){for(var t="",n=0,i=e.length;n<i;n++)t+=e.charCodeAt(n)<32?" ":e.charAt(n);return h.trim(t)}function u(e){return c(e=l(e=s(e=a(e))))}function p(e){return r(e=o(e))}var f=n(7).FilterCSS,d=n(7).getDefaultWhiteList,h=n(11),m=new f,g=/</g,v=/>/g,y=/"/g,b=/&quot;/g,I=/&#([a-zA-Z0-9]*);?/gim,S=/&colon;?/gim,_=/&newline;?/gim,D=/((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a)\:/gi,L=/e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi,k=/u\s*r\s*l\s*\(.*/gi;t.whiteList={a:["target","href","title"],abbr:["title"],address:[],area:["shape","coords","href","alt"],article:[],aside:[],audio:["autoplay","controls","crossorigin","loop","muted","preload","src"],b:[],bdi:["dir"],bdo:["dir"],big:[],blockquote:["cite"],br:[],caption:[],center:[],cite:[],code:[],col:["align","valign","span","width"],colgroup:["align","valign","span","width"],dd:[],del:["datetime"],details:["open"],div:[],dl:[],dt:[],em:[],figcaption:[],figure:[],font:["color","size","face"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:["src","alt","title","width","height"],ins:["datetime"],li:[],mark:[],nav:[],ol:[],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],summary:[],sup:[],strong:[],strike:[],table:["width","border","align","valign"],tbody:["align","valign"],td:["width","rowspan","colspan","align","valign"],tfoot:["align","valign"],th:["width","rowspan","colspan","align","valign"],thead:["align","valign"],tr:["rowspan","align","valign"],tt:[],u:[],ul:[],video:["autoplay","controls","crossorigin","loop","muted","playsinline","poster","preload","src","height","width"]},t.getDefaultWhiteList=i,t.onTag=function(e,t,n){},t.onIgnoreTag=function(e,t,n){},t.onTagAttr=function(e,t,n){},t.onIgnoreTagAttr=function(e,t,n){},t.safeAttrValue=function(e,t,n,i){if(n=u(n),"href"===t||"src"===t){if("#"===(n=h.trim(n)))return"#";if("http://"!==n.substr(0,7)&&"https://"!==n.substr(0,8)&&"mailto:"!==n.substr(0,7)&&"tel:"!==n.substr(0,4)&&"data:image/"!==n.substr(0,11)&&"ftp://"!==n.substr(0,6)&&"./"!==n.substr(0,2)&&"../"!==n.substr(0,3)&&"#"!==n[0]&&"/"!==n[0])return""}else if("background"===t){if(D.lastIndex=0,D.test(n))return""}else if("style"===t){if(L.lastIndex=0,L.test(n))return"";if(k.lastIndex=0,k.test(n)&&(D.lastIndex=0,D.test(n)))return"";!1!==i&&(n=(i=i||m).process(n))}return p(n)},t.escapeHtml=r,t.escapeQuote=o,t.unescapeQuote=a,t.escapeHtmlEntities=s,t.escapeDangerHtml5Entities=l,t.clearNonPrintableCharacter=c,t.friendlyAttrValue=u,t.escapeAttrValue=p,t.onIgnoreTagStripAll=function(){return""},t.StripTagBody=function(e,t){function n(t){return!!i||-1!==h.indexOf(e,t)}"function"!=typeof t&&(t=function(){});var i=!Array.isArray(e),r=[],o=!1;return{onIgnoreTag:function(e,i,a){if(n(e)){if(a.isClosing){var s="[/removed]",l=a.position+s.length;return r.push([!1!==o?o:a.position,l]),o=!1,s}return o||(o=a.position),"[removed]"}return t(e,i,a)},remove:function(e){var t="",n=0;return h.forEach(r,(function(i){t+=e.slice(n,i[0]),n=i[1]})),t+=e.slice(n)}}},t.stripCommentTag=function(e){for(var t="",n=0;n<e.length;){var i=e.indexOf("\x3c!--",n);if(-1===i){t+=e.slice(n);break}t+=e.slice(n,i);var r=e.indexOf("--\x3e",i);if(-1===r)break;n=r+3}return t},t.stripBlankChar=function(e){var t=e.split("");return(t=t.filter((function(e){var t=e.charCodeAt(0);return!(127===t||t<=31&&10!==t&&13!==t)}))).join("")},t.cssFilter=m,t.getDefaultCSSWhiteList=d},function(e,t,n){function i(e){var t=l.spaceIndex(e);if(-1===t)var n=e.slice(1,-1);else n=e.slice(1,t+1);return"/"===(n=l.trim(n).toLowerCase()).slice(0,1)&&(n=n.slice(1)),"/"===n.slice(-1)&&(n=n.slice(0,-1)),n}function r(e){return"</"===e.slice(0,2)}function o(e,t){for(;t<e.length;t++){var n=e[t];if(" "!==n)return"="===n?t:-1}}function a(e,t){for(;t>0;t--){var n=e[t];if(" "!==n)return"="===n?t:-1}}function s(e){return function(e){return'"'===e[0]&&'"'===e[e.length-1]||"'"===e[0]&&"'"===e[e.length-1]}(e)?e.substr(1,e.length-2):e}var l=n(11),c=/[^a-zA-Z0-9_:\.\-]/gim;t.parseTag=function(e,t,n){"use strict";var o="",a=0,s=!1,l=!1,c=0,u=e.length,p="",f="";e:for(c=0;c<u;c++){var d=e.charAt(c);if(!1===s){if("<"===d){s=c;continue}}else if(!1===l){if("<"===d){o+=n(e.slice(a,c)),s=c,a=c;continue}if(">"===d){o+=n(e.slice(a,s)),p=i(f=e.slice(s,c+1)),o+=t(s,o.length,p,f,r(f)),a=c+1,s=!1;continue}if('"'===d||"'"===d)for(var h=1,m=e.charAt(c-h);""===m.trim()||"="===m;){if("="===m){l=d;continue e}m=e.charAt(c-++h)}}else if(d===l){l=!1;continue}}return a<e.length&&(o+=n(e.substr(a))),o},t.parseAttr=function(e,t){"use strict";function n(e,n){if(!((e=(e=l.trim(e)).replace(c,"").toLowerCase()).length<1)){var i=t(e,n||"");i&&r.push(i)}}for(var i=0,r=[],u=!1,p=e.length,f=0;f<p;f++){var d,h=e.charAt(f);if(!1!==u||"="!==h)if(!1===u||f!==i||'"'!==h&&"'"!==h||"="!==e.charAt(f-1)){if(/\s|\n|\t/.test(h)){if(e=e.replace(/\s|\n|\t/g," "),!1===u){if(-1===(d=o(e,f))){n(l.trim(e.slice(i,f))),u=!1,i=f+1;continue}f=d-1;continue}if(-1===(d=a(e,f-1))){n(u,s(l.trim(e.slice(i,f)))),u=!1,i=f+1;continue}}}else{if(-1===(d=e.indexOf(h,f+1)))break;n(u,l.trim(e.slice(i+1,d))),u=!1,i=(f=d)+1}else u=e.slice(i,f),i=f+1}return i<e.length&&(!1===u?n(e.slice(i)):n(u,s(l.trim(e.slice(i))))),l.trim(r.join(" "))}},function(e,t,n){var i,r,o;
/*!
	autosize 4.0.4
	license: MIT
	http://www.jacklmoore.com/autosize
*/r=[e,t],i=function(e,t){"use strict";function n(e){function t(t){var n=e.style.width;e.style.width="0px",e.offsetWidth,e.style.width=n,e.style.overflowY=t}function n(){if(0!==e.scrollHeight){var t=function(e){for(var t=[];e&&e.parentNode&&e.parentNode instanceof Element;)e.parentNode.scrollTop&&t.push({node:e.parentNode,scrollTop:e.parentNode.scrollTop}),e=e.parentNode;return t}(e),n=document.documentElement&&document.documentElement.scrollTop;e.style.height="",e.style.height=e.scrollHeight+r+"px",s=e.clientWidth,t.forEach((function(e){e.node.scrollTop=e.scrollTop})),n&&(document.documentElement.scrollTop=n)}}function i(){n();var i=Math.round(parseFloat(e.style.height)),r=window.getComputedStyle(e,null),o="content-box"===r.boxSizing?Math.round(parseFloat(r.height)):e.offsetHeight;if(o<i?"hidden"===r.overflowY&&(t("scroll"),n(),o="content-box"===r.boxSizing?Math.round(parseFloat(window.getComputedStyle(e,null).height)):e.offsetHeight):"hidden"!==r.overflowY&&(t("hidden"),n(),o="content-box"===r.boxSizing?Math.round(parseFloat(window.getComputedStyle(e,null).height)):e.offsetHeight),l!==o){l=o;var s=a("autosize:resized");try{e.dispatchEvent(s)}catch(e){}}}if(e&&e.nodeName&&"TEXTAREA"===e.nodeName&&!o.has(e)){var r=null,s=null,l=null,c=function(){e.clientWidth!==s&&i()},u=function(t){window.removeEventListener("resize",c,!1),e.removeEventListener("input",i,!1),e.removeEventListener("keyup",i,!1),e.removeEventListener("autosize:destroy",u,!1),e.removeEventListener("autosize:update",i,!1),Object.keys(t).forEach((function(n){e.style[n]=t[n]})),o.delete(e)}.bind(e,{height:e.style.height,resize:e.style.resize,overflowY:e.style.overflowY,overflowX:e.style.overflowX,wordWrap:e.style.wordWrap});e.addEventListener("autosize:destroy",u,!1),"onpropertychange"in e&&"oninput"in e&&e.addEventListener("keyup",i,!1),window.addEventListener("resize",c,!1),e.addEventListener("input",i,!1),e.addEventListener("autosize:update",i,!1),e.style.overflowX="hidden",e.style.wordWrap="break-word",o.set(e,{destroy:u,update:i}),function(){var t=window.getComputedStyle(e,null);"vertical"===t.resize?e.style.resize="none":"both"===t.resize&&(e.style.resize="horizontal"),r="content-box"===t.boxSizing?-(parseFloat(t.paddingTop)+parseFloat(t.paddingBottom)):parseFloat(t.borderTopWidth)+parseFloat(t.borderBottomWidth),isNaN(r)&&(r=0),i()}()}}function i(e){var t=o.get(e);t&&t.destroy()}function r(e){var t=o.get(e);t&&t.update()}var o="function"==typeof Map?new Map:function(){var e=[],t=[];return{has:function(t){return e.indexOf(t)>-1},get:function(n){return t[e.indexOf(n)]},set:function(n,i){-1===e.indexOf(n)&&(e.push(n),t.push(i))},delete:function(n){var i=e.indexOf(n);i>-1&&(e.splice(i,1),t.splice(i,1))}}}(),a=function(e){return new Event(e,{bubbles:!0})};try{new Event("test")}catch(e){a=function(e){var t=document.createEvent("Event");return t.initEvent(e,!0,!1),t}}var s=null;"undefined"==typeof window||"function"!=typeof window.getComputedStyle?((s=function(e){return e}).destroy=function(e){return e},s.update=function(e){return e}):((s=function(e,t){return e&&Array.prototype.forEach.call(e.length?e:[e],(function(e){return n(e)})),e}).destroy=function(e){return e&&Array.prototype.forEach.call(e.length?e:[e],i),e},s.update=function(e){return e&&Array.prototype.forEach.call(e.length?e:[e],r),e}),t.default=s,e.exports=t.default},void 0!==(o="function"==typeof i?i.apply(t,r):i)&&(e.exports=o)},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function r(e){return!!e&&this.init(e),this}function o(e){return new r(e)}var a=i(n(42)),s=i(n(33)),l=i(n(37)),c=i(n(12)),u=n(6),p=i(n(41)),f=i(n(36)),d=n(40),h=i(n(38)),m=i(n(3)),g=i(n(39)),v=i(n(13)),y=(i(n(35)),{comment:"",nick:"",mail:"",link:"",ua:m.default.ua,url:"",QQAvatar:""}),b="",I={},S={cdn:"https://gravatar.loli.net/avatar/",ds:["mp","identicon","monsterid","wavatar","robohash","retro",""],params:"",hide:!1};r.prototype.init=function(e){if("undefined"==typeof document)throw new Error("Sorry, Valine does not support Server-side rendering.");var t=this;return e&&(e=m.default.extend(u.CONFIG,e),t.i18n=(0,l.default)(e.lang||m.default.lang,e.langMode),t.cfg=e,c.default.maps=!!e.emojiMaps&&e.emojiMaps||c.default.maps,c.default.cdn=!!e.emojiCDN&&e.emojiCDN||c.default.cdn,t._init()),t},r.prototype._init=function(){var e=this;try{var t=e.cfg,n=t.avatar,i=t.avatarForce,r=t.avatar_cdn,o=t.visitor,a=t.path,s=void 0===a?location.pathname:a,l=t.pageSize,c=t.recordIP;e.cfg.path=s.replace(/index\.html?$/,"");var p=S.ds,g=i?"&q="+(0,u.RandomStr)():"";S.params="?d="+(p.indexOf(n)>-1?n:"mp")+"&v="+u.VERSION+g,S.hide="hide"===n,S.cdn=/^https?\:\/\//.test(r)?r:S.cdn,e.cfg.pageSize=isNaN(l)||l<1?10:l,c&&(0,d.recordIPFn)((function(e){return y.ip=e}));var v=e.cfg.el||null,b=(0,m.default)(v);if(v=v instanceof HTMLElement?v:b[b.length-1]||null){e.$el=(0,m.default)(v),e.$el.addClass("v").attr("data-class","v"),S.hide&&e.$el.addClass("hide-avatar"),e.cfg.meta=(e.cfg.guest_info||e.cfg.meta||u.defaultMeta).filter((function(e){return u.defaultMeta.indexOf(e)>-1})),e.cfg.requiredFields=e.cfg.requiredFields.filter((function(e){return u.defaultMeta.indexOf(e)>-1}));var I=(0==e.cfg.meta.length?u.defaultMeta:e.cfg.meta).map((function(t){var n="mail"==t?"email":"text";return u.defaultMeta.indexOf(t)>-1?'<input name="'+t+'" placeholder="'+e.i18n.t(t)+'" class="v'+t+' vinput" type="'+n+'">':""})),_='<div class="vpanel"><div class="vwrap"><p class="cancel-reply text-right" style="display:none;" title="'+e.i18n.t("cancelReply")+'"><svg class="vicon cancel-reply-btn" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4220" width="22" height="22"><path d="M796.454 985H227.545c-50.183 0-97.481-19.662-133.183-55.363-35.7-35.701-55.362-83-55.362-133.183V227.545c0-50.183 19.662-97.481 55.363-133.183 35.701-35.7 83-55.362 133.182-55.362h568.909c50.183 0 97.481 19.662 133.183 55.363 35.701 35.702 55.363 83 55.363 133.183v568.909c0 50.183-19.662 97.481-55.363 133.183S846.637 985 796.454 985zM227.545 91C152.254 91 91 152.254 91 227.545v568.909C91 871.746 152.254 933 227.545 933h568.909C871.746 933 933 871.746 933 796.454V227.545C933 152.254 871.746 91 796.454 91H227.545z" p-id="4221"></path><path d="M568.569 512l170.267-170.267c15.556-15.556 15.556-41.012 0-56.569s-41.012-15.556-56.569 0L512 455.431 341.733 285.165c-15.556-15.556-41.012-15.556-56.569 0s-15.556 41.012 0 56.569L455.431 512 285.165 682.267c-15.556 15.556-15.556 41.012 0 56.569 15.556 15.556 41.012 15.556 56.569 0L512 568.569l170.267 170.267c15.556 15.556 41.012 15.556 56.569 0 15.556-15.556 15.556-41.012 0-56.569L568.569 512z" p-id="4222" ></path></svg></p><div class="vheader item'+I.length+'">'+I.join("")+'</div><div class="vedit"><textarea id="veditor" class="veditor vinput" placeholder="'+e.cfg.placeholder+'"></textarea><div class="vrow"><div class="vcol vcol-60 status-bar"></div><div class="vcol vcol-40 vctrl text-right"><span title="'+e.i18n.t("emoji")+'"  class="vicon vemoji-btn"><svg  viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="16172" width="22" height="22" ><path d="M512 1024a512 512 0 1 1 512-512 512 512 0 0 1-512 512zM512 56.888889a455.111111 455.111111 0 1 0 455.111111 455.111111 455.111111 455.111111 0 0 0-455.111111-455.111111zM312.888889 512A85.333333 85.333333 0 1 1 398.222222 426.666667 85.333333 85.333333 0 0 1 312.888889 512z" p-id="16173"></path><path d="M512 768A142.222222 142.222222 0 0 1 369.777778 625.777778a28.444444 28.444444 0 0 1 56.888889 0 85.333333 85.333333 0 0 0 170.666666 0 28.444444 28.444444 0 0 1 56.888889 0A142.222222 142.222222 0 0 1 512 768z" p-id="16174"></path><path d="M782.222222 391.964444l-113.777778 59.733334a29.013333 29.013333 0 0 1-38.684444-10.808889 28.444444 28.444444 0 0 1 10.24-38.684445l113.777778-56.888888a28.444444 28.444444 0 0 1 38.684444 10.24 28.444444 28.444444 0 0 1-10.24 36.408888z" p-id="16175"></path><path d="M640.568889 451.697778l113.777778 56.888889a27.875556 27.875556 0 0 0 38.684444-10.24 27.875556 27.875556 0 0 0-10.24-38.684445l-113.777778-56.888889a28.444444 28.444444 0 0 0-38.684444 10.808889 28.444444 28.444444 0 0 0 10.24 38.115556z" p-id="16176"></path></svg></span><span title="'+e.i18n.t("preview")+'" class="vicon vpreview-btn"><svg  viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="17688" width="22" height="22"><path d="M502.390154 935.384615a29.538462 29.538462 0 1 1 0 59.076923H141.430154C79.911385 994.461538 29.538462 946.254769 29.538462 886.153846V137.846154C29.538462 77.745231 79.950769 29.538462 141.390769 29.538462h741.218462c61.44 0 111.852308 48.206769 111.852307 108.307692v300.268308a29.538462 29.538462 0 1 1-59.076923 0V137.846154c0-26.899692-23.355077-49.230769-52.775384-49.230769H141.390769c-29.420308 0-52.775385 22.331077-52.775384 49.230769v748.307692c0 26.899692 23.355077 49.230769 52.775384 49.230769h360.999385z" p-id="17689"></path><path d="M196.923077 216.615385m29.538461 0l374.153847 0q29.538462 0 29.538461 29.538461l0 0q0 29.538462-29.538461 29.538462l-374.153847 0q-29.538462 0-29.538461-29.538462l0 0q0-29.538462 29.538461-29.538461Z" p-id="17690"></path><path d="M649.846154 846.769231a216.615385 216.615385 0 1 0 0-433.230769 216.615385 216.615385 0 0 0 0 433.230769z m0 59.076923a275.692308 275.692308 0 1 1 0-551.384616 275.692308 275.692308 0 0 1 0 551.384616z" p-id="17691"></path><path d="M807.398383 829.479768m20.886847-20.886846l0 0q20.886846-20.886846 41.773692 0l125.321079 125.321079q20.886846 20.886846 0 41.773693l0 0q-20.886846 20.886846-41.773693 0l-125.321078-125.321079q-20.886846-20.886846 0-41.773693Z" p-id="17692"></path></svg></span></div></div></div><div class="vrow"><div class="vcol vcol-30" ><a alt="Markdown is supported" href="https://guides.github.com/features/mastering-markdown/" class="vicon" target="_blank"><svg class="markdown" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"></path></svg></a></div><div class="vcol vcol-70 text-right"><button type="button"  title="Cmd|Ctrl+Enter" class="vsubmit vbtn">'+e.i18n.t("submit")+'</button></div></div><div class="vemojis" style="display:none;"></div><div class="vinput vpreview" style="display:none;"></div></div></div><div class="vcount" style="display:none;"><span class="vnum">0</span> '+e.i18n.t("comments")+'</div><div class="vload-top text-center" style="display:none;"><i class="vspinner" style="width:30px;height:30px;"></i></div><div class="vcards"></div><div class="vload-bottom text-center" style="display:none;"><i class="vspinner" style="width:30px;height:30px;"></i></div><div class="vempty" style="display:none;"></div><div class="vpage txt-center" style="display:none"><button type="button" class="vmore vbtn">'+e.i18n.t("more")+'</button></div><div class="vpower txt-right">Powered By <a href="https://valine.js.org" target="_blank">Valine</a><br>v'+u.VERSION+"</div>";e.$el.html(_),e.$el.find(".cancel-reply").on("click",(function(t){e.reset()}));var L=e.$el.find(".vempty");e.$nodata={show:function(t){return L.html(t||e.i18n.t("sofa")).show(),e},hide:function(){return L.hide(),e}};var k=e.$el.find(".vload-bottom"),w=e.$el.find(".vload-top");e.$loading={show:function(t){return t&&w.show()||k.show(),e.$nodata.hide(),e},hide:function(){return w.hide(),k.hide(),0===e.$el.find(".vcard").length&&e.$nodata.show(),e}}}(0,f.default)(e.cfg,(function(t){var n=(0,m.default)(".valine-comment-count"),i=0;!function t(n){var r=n[i++];if(r){var o=(0,m.default)(r).attr("data-xid");o&&e.Q(o).count().then((function(e){r.innerText=e,t(n)})).catch((function(e){r.innerText=0}))}}(n),o&&D.add(AV.Object.extend("Counter"),e.cfg.path),e.$el&&e.bind()}))}catch(t){(0,h.default)(e,t,"init")}};var _=function(e,t){var n=new e,i=new AV.ACL;i.setPublicReadAccess(!0),i.setPublicWriteAccess(!0),n.setACL(i),n.set("url",t.url),n.set("xid",t.xid),n.set("title",t.title),n.set("time",1),n.save().then((function(e){(0,m.default)(t.el).find(".leancloud-visitors-count").text(1)})).catch((function(e){}))},D={add:function(e,t){var n=this,i=(0,m.default)(".leancloud_visitors,.leancloud-visitors");if(1===i.length){var r=i[0],o=decodeURI((0,m.default)(r).attr("id")),a=(0,m.default)(r).attr("data-flag-title"),s=encodeURI(o),l={el:r,url:o,xid:s,title:a};if(decodeURI(o)===decodeURI(t)){var c=new AV.Query(e);c.equalTo("url",o),c.find().then((function(t){if(t.length>0){var n=t[0];n.increment("time"),n.save().then((function(e){(0,m.default)(r).find(".leancloud-visitors-count").text(e.get("time"))})).catch((function(e){}))}else _(e,l)})).catch((function(t){101==t.code?_(e,l):(0,h.default)(n,t)}))}else D.show(e,i)}else D.show(e,i)},show:function(e,t){var n=[];if(t.forEach((function(e){var t=(0,m.default)(e).find(".leancloud-visitors-count");t&&t.text("0"),n.push(/\%/.test((0,m.default)(e).attr("id"))?decodeURI((0,m.default)(e).attr("id")):(0,m.default)(e).attr("id"))})),n.length){var i=new AV.Query(e);i.containedIn("url",n),i.find().then((function(e){e.length>0&&t.forEach((function(t){e.forEach((function(e){var n=e.get("xid")||encodeURI(e.get("url")),i=e.get("time"),r=(0,m.default)(t),o=r.attr("id");if((/\%/.test(o)?o:encodeURI(o))==n){var a=r.find(".leancloud-visitors-count");a&&a.text(i)}}))}))})).catch((function(e){}))}}};r.prototype.Q=function(e){var t=this,n=arguments.length,i=t.cfg.clazzName;if(1==n){var r=new AV.Query(i);r.doesNotExist("rid");var o=new AV.Query(i);o.equalTo("rid","");var a=AV.Query.or(r,o);return"*"===e?a.exists("url"):a.equalTo("url",decodeURI(e)),a.addDescending("createdAt"),a.addDescending("insertedAt"),a}var s=JSON.stringify(arguments[1]).replace(/(\[|\])/g,""),l="select * from "+i+" where rid in ("+s+") order by -createdAt,-createdAt";return AV.Query.doCloudQuery(l)},r.prototype.installLocale=function(e,t){return this.i18n(e,t),this},r.prototype.setPath=function(e){return this.config.path=e,this},r.prototype.bind=function(){var e=this,t=e.$el.find(".vemojis"),n=e.$el.find(".vpreview"),i=e.$el.find(".vemoji-btn"),r=e.$el.find(".vpreview-btn"),o=e.$el.find(".veditor"),l=c.default.maps,f=!1;e.$emoji={show:function(){return!f&&function(e){var n=[];for(var i in l)l.hasOwnProperty(i)&&c.default.build(i)&&n.push('<i title="'+i+'" >'+c.default.build(i)+"</i>");t.html(n.join("")),f=!0,t.find("i").on("click",(function(e){e.preventDefault(),C(o[0]," :"+(0,m.default)(this).attr("title")+":")}))}(),e.$preview.hide(),t.show(),i.addClass("actived"),e.$emoji},hide:function(){return i.removeClass("actived"),t.hide(),e.$emoji}},e.$preview={show:function(){return b?(e.$emoji.hide(),r.addClass("actived"),n.html((0,g.default)(b)).show(),V()):e.$preview.hide(),e.$preview},hide:function(){return r.removeClass("actived"),n.hide().html(""),e.$preview}};var _=function(t){var i=t.val()||"";i||e.$preview.hide(),b!=i&&(b=i,r.hasClass("actived")>-1&&b!=n.html()&&n.html((0,g.default)(b)),V())};i.on("click",(function(t){i.hasClass("actived")?e.$emoji.hide():e.$emoji.show()})),r.on("click",(function(t){r.hasClass("actived")?e.$preview.hide():e.$preview.show()}));var D=e.cfg.meta,L={},k={veditor:"comment"};for(var w in D.forEach((function(e){k["v"+e]=e})),k)k.hasOwnProperty(w)&&function(){var t=k[w],n=e.$el.find("."+w);L[t]=n,n.on("input change blur propertychange",(function(i){e.cfg.enableQQ&&"blur"===i.type&&"nick"===t&&(n.val()&&!isNaN(n.val())?(0,d.fetchQQFn)(n.val(),(function(e){var t=e.nick||n.val(),i=e.qq+"@qq.com";(0,m.default)(".vnick").val(t),(0,m.default)(".vmail").val(i),y.nick=t,y.mail=i,y.QQAvatar=e.pic})):m.default.store.get(u.QQCacheKey)&&m.default.store.get(u.QQCacheKey).nick!=n.val()&&(m.default.store.remove(u.QQCacheKey),y.nick=n.val(),y.mail="",y.QQAvatar="")),"comment"===t?((0,s.default)(n[0]),T((function(e){_(n)}))()):y[t]=(0,v.default)(n.val().replace(/(^\s*)|(\s*$)/g,"").substring(0,35))}))}();var T=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:300,n=void 0;return function(){var i=this,r=arguments;n&&clearTimeout(n),n=setTimeout((function(){e.apply(i,r)}),t)}},C=function(e,t){if(document.selection)e.focus(),document.selection.createRange().text=t,e.focus();else if(e.selectionStart||"0"==e.selectionStart){var n=e.selectionStart,i=e.selectionEnd,r=e.scrollTop;e.value=e.value.substring(0,n)+t+e.value.substring(i,e.value.length),e.focus(),e.selectionStart=n+t.length,e.selectionEnd=n+t.length,e.scrollTop=r}else e.focus(),e.value+=t;T((function(t){_((0,m.default)(e))}))()},P={no:1,size:e.cfg.pageSize,skip:e.cfg.pageSize},x=e.$el.find(".vpage");x.on("click",(function(e){x.hide(),P.no++,O()}));var O=function(){var t=P.size,n=P.no,i=Number(e.$el.find(".vnum").text());e.$loading.show();var r=e.Q(e.cfg.path);r.limit(t),r.skip((n-1)*t),r.find().then((function(r){if(P.skip=P.size,r&&r.length){var o=[];r.forEach((function(t){o.push(t.id),E(t,e.$el.find(".vcards"),!0)})),e.Q(e.cfg.path,o).then((function(e){(e&&e.results||[]).forEach((function(e){E(e,(0,m.default)('.vquote[data-self-id="'+e.get("rid")+'"]'))}))})).catch((function(e){})),t*n<i?x.show():x.hide(),V()}else e.$nodata.show();e.$loading.hide()})).catch((function(t){e.$loading.hide(),(0,h.default)(e,t,"query")}))};e.Q(e.cfg.path).count().then((function(t){t>0?(e.$el.find(".vcount").show().find(".vnum").text(t),O()):e.$loading.hide()})).catch((function(t){(0,h.default)(e,t,"count")}));var A=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=/(https?|http):\/\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]/g,n=e.match(t)||[];return n.length>0?n[0]:""},E=function(t,n,i){var r=(0,m.default)('<div class="vcard" id="'+t.id+'"></div>'),o=(0,v.default)(t.get("ua")),s="";o&&!/ja/.test(e.cfg.lang)&&(s=(o=m.default.detect(o)).version?o.os?'<span class="vsys">'+o.browser+" "+o.version+'</span> <span class="vsys">'+o.os+" "+o.osVersion+"</span>":"":'<span class="vsys">'+o.browser+"</span>"),"*"===e.cfg.path&&(s='<a href="'+t.get("url")+'" class="vsys">'+t.get("url")+"</a>");var l=t.get("link")?/^https?\:\/\//.test(t.get("link"))?t.get("link"):"http://"+t.get("link"):"",c=m.default.escape((0,v.default)(t.get("nick").substring(0,30))),u=l?'<a class="vnick" rel="nofollow" href="'+A(l)+'" target="_blank" >'+c+"</a>":'<span class="vnick">'+c+"</span>",f=(S.hide?"":e.cfg.enableQQ&&t.get("QQAvatar")?(0,v.default)('<img class="vimg" src="'+A(t.get("QQAvatar"))+'" referrerPolicy="no-referrer"/>'):'<img class="vimg" src="'+(S.cdn+(0,a.default)(t.get("mail"))+S.params)+'">')+'<div class="vh"><div class="vhead">'+u+" "+s+'</div><div class="vmeta"><span class="vtime" >'+(0,p.default)(t.get("insertedAt"),e.i18n)+'</span><span class="vat" data-vm-id="'+(t.get("rid")||t.id)+'" data-self-id="'+t.id+'">'+e.i18n.t("reply")+'</span></div><div class="vcontent" data-expand="'+e.i18n.t("expand")+'">'+(0,g.default)(t.get("comment"))+'</div><div class="vreply-wrapper" data-self-id="'+t.id+'"></div><div class="vquote" data-self-id="'+t.id+'"></div></div>';r.html(f);var d=r.find(".vat");r.find("a:not(.at)").forEach((function(e){(0,m.default)(e).attr({target:"_blank",rel:"noopener"})})),i?n.append(r):n.prepend(r);var h=r.find(".vcontent");h&&j(h),d&&N(d,t)},F={},N=function(t,n){t.on("click",(function(i){var r=t.attr("data-vm-id"),o=t.attr("data-self-id"),a=e.$el.find(".vwrap"),s="@"+m.default.escape(n.get("nick"));(0,m.default)('.vreply-wrapper[data-self-id="'+o+'"]').append(a).find(".cancel-reply").show(),F={at:m.default.escape(s)+" ",rid:r,pid:o,rmail:n.get("mail")},L.comment.attr({placeholder:s})[0].focus()}))},V=function(){setTimeout((function(){try{e.cfg.mathjax&&"MathJax"in window&&"version"in window.MathJax&&(/^3.*/.test(window.MathJax.version)&&MathJax.typeset()||MathJax.Hub.Queue(["Typeset",MathJax.Hub,document.querySelector(".v")])),"renderMathInElement"in window&&renderMathInElement((0,m.default)(".v")[0],{delimiters:[{left:"$$",right:"$$",display:!0},{left:"$",right:"$",display:!1}]})}catch(e){}}),100)},j=function(e){setTimeout((function(){e[0].offsetHeight>200&&(e.addClass("expand"),e.on("click",(function(t){e.removeClass("expand")})))}))};!function(t){if(t=m.default.store.get(u.MetaCacheKey)||t)for(var n in D)if(D.hasOwnProperty(n)){var i=D[n];e.$el.find(".v"+i).val(m.default.unescape(t[i])),y[i]=t[i]}var r=m.default.store.get(u.QQCacheKey);y.QQAvatar=e.cfg.enableQQ&&!!r&&r.pic||""}(),e.reset=function(){y.comment="",L.comment.val(""),_(L.comment),L.comment.attr("placeholder",e.cfg.placeholder),F={},e.$preview.hide(),e.$el.find(".vpanel").append(e.$el.find(".vwrap")),e.$el.find(".cancel-reply").hide(),b="",s.default.update(L.comment[0])};var R=e.$el.find(".vsubmit"),Q=function(t){if(e.cfg.requiredFields.indexOf("nick")>-1&&y.nick.length<3)return L.nick[0].focus(),void e.$el.find(".status-bar").text(""+e.i18n.t("nickFail")).empty(3e3);if(e.cfg.requiredFields.indexOf("mail")>-1&&!/[\w-\.]+@([\w-]+\.)+[a-z]{2,3}/.test(y.mail))return L.mail[0].focus(),void e.$el.find(".status-bar").text(""+e.i18n.t("mailFail")).empty(3e3);if(""!=b){for(var n in I)if(I.hasOwnProperty(n)){var i=I[n];b=b.replace(n,i),URL.revokeObjectURL(n)}I={},y.comment=(0,v.default)(b),y.nick=y.nick||"Anonymous";var r=m.default.store.get("vlx");r&&Date.now()/1e3-r/1e3<20?e.$el.find(".status-bar").text(e.i18n.t("busy")).empty(3e3):$()}else L.comment[0].focus()},$=function(){m.default.store.set("vlx",Date.now()),R.attr({disabled:!0}),e.$loading.show(!0);var t=new(AV.Object.extend(e.cfg.clazzName||"Comment"));if(y.url=decodeURI(e.cfg.path),y.insertedAt=new Date,F.rid){var n=F.pid||F.rid;t.set("rid",F.rid),t.set("pid",n),y.comment=b.replace("<p>",'<p><a class="at" href="#'+n+'">'+F.at+"</a> , ")}for(var i in y)if(y.hasOwnProperty(i)){var r=y[i];t.set(i,r)}t.setACL(function(){var e=new AV.ACL;return e.setPublicReadAccess(!0),e.setPublicWriteAccess(!1),e}()),t.save().then((function(t){"Anonymous"!=y.nick&&m.default.store.set(u.MetaCacheKey,{nick:y.nick,link:y.link,mail:y.mail});var n=e.$el.find(".vnum");try{F.rid?E(t,(0,m.default)('.vquote[data-self-id="'+F.rid+'"]'),!0):(Number(n.text())?n.text(Number(n.text())+1):e.$el.find(".vcount").show().find(".vnum").text(Number(n.text())+1),E(t,e.$el.find(".vcards")),P.skip++),R.removeAttr("disabled"),e.$loading.hide(),e.reset()}catch(t){(0,h.default)(e,t,"save")}})).catch((function(t){(0,h.default)(e,t,"commitEvt")}))};R.on("click",Q),(0,m.default)(document).on("keydown",(function(e){var t=(e=window.event||e).keyCode||e.which||e.charCode;(e.ctrlKey||e.metaKey)&&13===t&&Q(),9===t&&"veditor"==(document.activeElement.id||"")&&(e.preventDefault(),C(o[0],"    "))})).on("paste",(function(e){var t="clipboardData"in e?e.clipboardData:e.originalEvent&&e.originalEvent.clipboardData||window.clipboardData;t&&B(t.items,!0)})),o.on("dragenter dragleave dragover drop",(function(e){e.stopPropagation(),e.preventDefault(),"drop"===e.type&&B(e.dataTransfer.items)}));var B=function(e,t){for(var n=0,i=e.length;n<i;n++){var r=e[n];if("string"===r.kind&&r.type.match("^text/html"))!t&&r.getAsString((function(e){e&&C(o[0],e.replace(/<[^>]+>/g,""))}));else if(r.type.indexOf("image")>-1){M(r.getAsFile());continue}}},M=function(e){try{var t=URL.createObjectURL(e),n="![image]("+t+") ",i=new FileReader;C(o[0],n),i.onload=function(){I[t]=i.result},i.readAsDataURL(e)}catch(e){}}},e.exports=o,e.exports.default=o},function(e,t,n){"use strict";t.__esModule=!0;var i=function(e){return e&&e.__esModule?e:{default:e}}(n(3));t.default={getApi:function(e,t){i.default.ajax({url:"https://app-router.com/2/route",body:{appId:e}}).then((function(e){e.json().then((function(e){return t&&t("//"+e.api_server)}))}))}}},function(e,t,n){"use strict";t.__esModule=!0;var i=function(e){return e&&e.__esModule?e:{default:e}}(n(3)),r=!1;t.default=function(e,t){if("AV"in window){var n=window.AV.version||window.AV.VERSION;parseInt(n.split(".")[0])>2?r=!!AV.applicationId&&!!AV.applicationKey:i.default.deleteInWin("AV",0)}r?t&&t():i.default.sdkLoader("//unpkg.com/leancloud-storage@3/dist/av-min.js","AV",(function(n){var i,o="https://",a=e.app_id||e.appId,s=e.app_key||e.appKey;if(!e.serverURLs)switch(a.slice(-9)){case"-9Nh9j0Va":o+="tab.";break;case"-MdYXbMMI":o+="us."}i=e.serverURLs||o+"leancloud.cn",AV.init({appId:a,appKey:s,serverURLs:i}),r=!0,t&&t()}))}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r=i(n(84)),o=i(n(100)),a=i(n(101)),s=i(n(98)),l=i(n(99)),c={zh:o.default,"zh-cn":o.default,"zh-CN":o.default,"zh-TW":a.default,en:s.default,"en-US":s.default,ja:l.default,"ja-JP":l.default};t.default=function(e,t){return!c[e]&&e&&t&&(c[e]=t),new r.default({phrases:c[e||"zh"],locale:e})}},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){if(e.$el&&e.$loading.hide().$nodata.hide(),"[object Error]"==={}.toString.call(t)){var n=t.code||t.message||t.error||"";if(isNaN(n))e.$el&&e.$nodata.show('<pre style="text-align:left;"> '+JSON.stringify(t)+"</pre>");else{var i=e.i18n.t("code-"+n),r=(i=="code-"+n?void 0:i)||t.message||t.error||"";101==n||-1==n?e.$nodata.show():e.$el&&e.$nodata.show('<pre style="text-align:left;">Code '+n+": "+r+"</pre>")}}else e.$el&&e.$nodata.show('<pre style="text-align:left;">'+JSON.stringify(t)+"</pre>")}},function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r=n(83),o=i(n(79)),a=i(n(3)),s=i(n(12)),l=i(n(13)),c=new r.marked.Renderer;c.code=function(e,t){return'<pre><code class="hljs language-'+t+'">'+(t&&hljs.getLanguage(t)?hljs.highlight(t,e).value:a.default.escape(e))+"</code></pre>"},r.marked.setOptions({renderer:"hljs"in window?c:new r.marked.Renderer,highlight:function(e,t){return"hljs"in window?t&&hljs.getLanguage(t)&&hljs.highlight(t,e,!0).value||hljs.highlightAuto(e).value:(0,o.default)(e)},gfm:!0,tables:!0,breaks:!0,pedantic:!1,sanitize:!1,smartLists:!0,smartypants:!0,headerPrefix:"v-"}),t.default=function(e){return(0,l.default)((0,r.marked)(s.default.parse(e,!0)))}},function(e,t,n){"use strict";t.__esModule=!0,t.recordIPFn=t.fetchQQFn=void 0;var i=function(e){return e&&e.__esModule?e:{default:e}}(n(3)),r=n(6);t.fetchQQFn=function(e,t){var n=i.default.store.get(r.QQCacheKey);n&&n.qq==e?t&&t(n):i.default.ajax({url:"//valine.api.ioliu.cn/getqqinfo",method:"POST",body:{qq:e}}).then((function(e){e.json().then((function(e){e.errmsg||(i.default.store.set(r.QQCacheKey,e),t&&t(e))}))}))},t.recordIPFn=function(e){i.default.ajax({url:"https://forge.speedtest.cn/api/location/info",method:"get"}).then((function(e){return e.json()})).then((function(t){e&&e(t.ip)}))}},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){if(!e)return"Invalid Date.";try{var n=r(e).getTime();if(isNaN(n))return"Invalid Date.";var o=(new Date).getTime()-n,a=Math.floor(o/864e5);if(0===a){var s=o%864e5,l=Math.floor(s/36e5);if(0===l){var c=s%36e5,u=Math.floor(c/6e4);if(0===u){var p=c%6e4;return Math.round(p/1e3)+" "+t.t("seconds")}return u+" "+t.t("minutes")}return l+" "+t.t("hours")}return a<0?t.t("now"):a<8?a+" "+t.t("days"):i(e)}catch(e){}};var i=function(e){var t=o(e.getDate(),2),n=o(e.getMonth()+1,2);return o(e.getFullYear(),2)+"-"+n+"-"+t},r=function e(t){return t instanceof Date?t:!isNaN(t)||/^\d+$/.test(t)?new Date(parseInt(t)):/GMT/.test(t||"")?e(new Date(t).getTime()):(t=(t||"").replace(/(^\s*)|(\s*$)/g,"").replace(/\.\d+/,"").replace(/-/,"/").replace(/-/,"/").replace(/(\d)T(\d)/,"$1 $2").replace(/Z/," UTC").replace(/([+-]\d\d):?(\d\d)/," $1$2"),new Date(t))},o=function(e,t){for(var n=e.toString();n.length<t;)n="0"+n;return n}},function(e,t,n){var i;!function(r){"use strict";function o(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function a(e,t,n,i,r,a){return o(function(e,t){return e<<t|e>>>32-t}(o(o(t,e),o(i,a)),r),n)}function s(e,t,n,i,r,o,s){return a(t&n|~t&i,e,t,r,o,s)}function l(e,t,n,i,r,o,s){return a(t&i|n&~i,e,t,r,o,s)}function c(e,t,n,i,r,o,s){return a(t^n^i,e,t,r,o,s)}function u(e,t,n,i,r,o,s){return a(n^(t|~i),e,t,r,o,s)}function p(e,t){e[t>>5]|=128<<t%32,e[14+(t+64>>>9<<4)]=t;var n,i,r,a,p,f=1732584193,d=-271733879,h=-1732584194,m=271733878;for(n=0;n<e.length;n+=16)i=f,r=d,a=h,p=m,f=s(f,d,h,m,e[n],7,-680876936),m=s(m,f,d,h,e[n+1],12,-389564586),h=s(h,m,f,d,e[n+2],17,606105819),d=s(d,h,m,f,e[n+3],22,-1044525330),f=s(f,d,h,m,e[n+4],7,-176418897),m=s(m,f,d,h,e[n+5],12,1200080426),h=s(h,m,f,d,e[n+6],17,-1473231341),d=s(d,h,m,f,e[n+7],22,-45705983),f=s(f,d,h,m,e[n+8],7,1770035416),m=s(m,f,d,h,e[n+9],12,-1958414417),h=s(h,m,f,d,e[n+10],17,-42063),d=s(d,h,m,f,e[n+11],22,-1990404162),f=s(f,d,h,m,e[n+12],7,1804603682),m=s(m,f,d,h,e[n+13],12,-40341101),h=s(h,m,f,d,e[n+14],17,-1502002290),f=l(f,d=s(d,h,m,f,e[n+15],22,1236535329),h,m,e[n+1],5,-165796510),m=l(m,f,d,h,e[n+6],9,-1069501632),h=l(h,m,f,d,e[n+11],14,643717713),d=l(d,h,m,f,e[n],20,-373897302),f=l(f,d,h,m,e[n+5],5,-701558691),m=l(m,f,d,h,e[n+10],9,38016083),h=l(h,m,f,d,e[n+15],14,-660478335),d=l(d,h,m,f,e[n+4],20,-405537848),f=l(f,d,h,m,e[n+9],5,568446438),m=l(m,f,d,h,e[n+14],9,-1019803690),h=l(h,m,f,d,e[n+3],14,-187363961),d=l(d,h,m,f,e[n+8],20,1163531501),f=l(f,d,h,m,e[n+13],5,-1444681467),m=l(m,f,d,h,e[n+2],9,-51403784),h=l(h,m,f,d,e[n+7],14,1735328473),f=c(f,d=l(d,h,m,f,e[n+12],20,-1926607734),h,m,e[n+5],4,-378558),m=c(m,f,d,h,e[n+8],11,-2022574463),h=c(h,m,f,d,e[n+11],16,1839030562),d=c(d,h,m,f,e[n+14],23,-35309556),f=c(f,d,h,m,e[n+1],4,-1530992060),m=c(m,f,d,h,e[n+4],11,1272893353),h=c(h,m,f,d,e[n+7],16,-155497632),d=c(d,h,m,f,e[n+10],23,-1094730640),f=c(f,d,h,m,e[n+13],4,681279174),m=c(m,f,d,h,e[n],11,-358537222),h=c(h,m,f,d,e[n+3],16,-722521979),d=c(d,h,m,f,e[n+6],23,76029189),f=c(f,d,h,m,e[n+9],4,-640364487),m=c(m,f,d,h,e[n+12],11,-421815835),h=c(h,m,f,d,e[n+15],16,530742520),f=u(f,d=c(d,h,m,f,e[n+2],23,-995338651),h,m,e[n],6,-198630844),m=u(m,f,d,h,e[n+7],10,1126891415),h=u(h,m,f,d,e[n+14],15,-1416354905),d=u(d,h,m,f,e[n+5],21,-57434055),f=u(f,d,h,m,e[n+12],6,1700485571),m=u(m,f,d,h,e[n+3],10,-1894986606),h=u(h,m,f,d,e[n+10],15,-1051523),d=u(d,h,m,f,e[n+1],21,-2054922799),f=u(f,d,h,m,e[n+8],6,1873313359),m=u(m,f,d,h,e[n+15],10,-30611744),h=u(h,m,f,d,e[n+6],15,-1560198380),d=u(d,h,m,f,e[n+13],21,1309151649),f=u(f,d,h,m,e[n+4],6,-145523070),m=u(m,f,d,h,e[n+11],10,-1120210379),h=u(h,m,f,d,e[n+2],15,718787259),d=u(d,h,m,f,e[n+9],21,-343485551),f=o(f,i),d=o(d,r),h=o(h,a),m=o(m,p);return[f,d,h,m]}function f(e){var t,n="",i=32*e.length;for(t=0;t<i;t+=8)n+=String.fromCharCode(e[t>>5]>>>t%32&255);return n}function d(e){var t,n=[];for(n[(e.length>>2)-1]=void 0,t=0;t<n.length;t+=1)n[t]=0;var i=8*e.length;for(t=0;t<i;t+=8)n[t>>5]|=(255&e.charCodeAt(t/8))<<t%32;return n}function h(e){var t,n,i="0123456789abcdef",r="";for(n=0;n<e.length;n+=1)t=e.charCodeAt(n),r+=i.charAt(t>>>4&15)+i.charAt(15&t);return r}function m(e){return unescape(encodeURIComponent(e))}function g(e){return function(e){return f(p(d(e),8*e.length))}(m(e))}function v(e,t){return function(e,t){var n,i,r=d(e),o=[],a=[];for(o[15]=a[15]=void 0,r.length>16&&(r=p(r,8*e.length)),n=0;n<16;n+=1)o[n]=909522486^r[n],a[n]=1549556828^r[n];return i=p(o.concat(d(t)),512+8*t.length),f(p(a.concat(i),640))}(m(e),m(t))}function y(e,t,n){return t?n?v(t,e):function(e,t){return h(v(e,t))}(t,e):n?g(e):function(e){return h(g(e))}(e)}void 0!==(i=function(){return y}.call(t,n,t,e))&&(e.exports=i)}()},function(e,t,n){"use strict";var i=n(2),r=n(4),o=n(1),a=n(5),s=n(14),l=n(15),c=l(),u=n(44),p=o("Array.prototype.slice"),f=r.apply(c),d=function(e,t){return a(e),f(e,p(arguments,1))};i(d,{getPolyfill:l,implementation:s,shim:u}),e.exports=d},function(e,t,n){"use strict";var i=n(2),r=n(15);e.exports=function(){var e=r();return i(Array.prototype,{forEach:e},{forEach:function(){return Array.prototype.forEach!==e}}),e}},function(e,t,n){"use strict";t.__esModule=!0;var i=function(e){return e&&e.__esModule?e:{default:e}}(n(47));t.default=function(e){return e=(0,i.default)({url:"",method:"get",body:{}},e),new Promise((function(t,n){if("jsonp"==e.method){var i="cb_"+(Date.now()+Math.round(1e3*Math.random())).toString(32),r=document,a=r.body,s=r.createElement("script");return s.async=!0,s.defer=!0,e.url.indexOf("?")>-1?e.url+="&"+o({callback:i,t:Date.now()}):e.url+="?"+o({callback:i,t:Date.now()}),s.src=e.url,window[i]=function(e){window[i]=null,a.removeChild(s),t(e)},void a.appendChild(s)}var l="XMLHttpRequest"in window?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP"),c=[],u=[],p={};for(var f in o(e.body)&&(e.url=e.url+"?"+("get"==e.method?o(e.body):"")),l.open(e.method||"get",e.url),"blob"==e.dataType&&(l.responseType="blob"),l.onload=function(){l.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm,(function(e,t,n){c.push(t=t.toLowerCase()),u.push([t,n]),p[t]=p[t]?p[t]+","+n:n})),t(function e(){return{ok:2==(l.status/100|0),statusText:l.statusText,status:l.status,url:l.responseURL,text:function(){return Promise.resolve(l.responseText)},json:function(){return Promise.resolve(l.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([l.response]))},clone:e,headers:{keys:function(){return c},entries:function(){return u},get:function(e){return p[e.toLowerCase()]},has:function(e){return e.toLowerCase()in p}}}}())},l.onerror=n,l.withCredentials="include"==e.credentials,e.headers)l.setRequestHeader(f,e.headers[f]);l.send("post"==e.method?e.body:"get"==e.method?"":o(e.body))}))};var r=encodeURIComponent,o=function(e){var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(r(n)+"="+r(e[n]));return(t=t.join("&").replace(/%20/g,"+"))||""}},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e){var t={},n={Trident:(e=e||navigator.userAgent).indexOf("Trident")>-1||e.indexOf("NET CLR")>-1,Presto:e.indexOf("Presto")>-1,WebKit:e.indexOf("AppleWebKit")>-1,Gecko:e.indexOf("Gecko/")>-1,Safari:e.indexOf("Safari")>-1,Edge:e.indexOf("Edge")>-1||e.indexOf("Edg")>-1,Chrome:e.indexOf("Chrome")>-1||e.indexOf("CriOS")>-1,IE:e.indexOf("MSIE")>-1||e.indexOf("Trident")>-1,Firefox:e.indexOf("Firefox")>-1||e.indexOf("FxiOS")>-1,"Firefox Focus":e.indexOf("Focus")>-1,Chromium:e.indexOf("Chromium")>-1,Opera:e.indexOf("Opera")>-1||e.indexOf("OPR")>-1,Vivaldi:e.indexOf("Vivaldi")>-1,Yandex:e.indexOf("YaBrowser")>-1,Kindle:e.indexOf("Kindle")>-1||e.indexOf("Silk/")>-1,360:e.indexOf("360EE")>-1||e.indexOf("360SE")>-1,UC:e.indexOf("UC")>-1||e.indexOf(" UBrowser")>-1,QQBrowser:e.indexOf("QQBrowser")>-1,QQ:e.indexOf("QQ/")>-1,Baidu:e.indexOf("Baidu")>-1||e.indexOf("BIDUBrowser")>-1,Maxthon:e.indexOf("Maxthon")>-1,Sogou:e.indexOf("MetaSr")>-1||e.indexOf("Sogou")>-1,LBBROWSER:e.indexOf("LBBROWSER")>-1,"2345Explorer":e.indexOf("2345Explorer")>-1,TheWorld:e.indexOf("TheWorld")>-1,XiaoMi:e.indexOf("MiuiBrowser")>-1,Quark:e.indexOf("Quark")>-1,Qiyu:e.indexOf("Qiyu")>-1,Wechat:e.indexOf("MicroMessenger")>-1,Taobao:e.indexOf("AliApp(TB")>-1,Alipay:e.indexOf("AliApp(AP")>-1,Weibo:e.indexOf("Weibo")>-1,Douban:e.indexOf("com.douban.frodo")>-1,Suning:e.indexOf("SNEBUY-APP")>-1,iQiYi:e.indexOf("IqiyiApp")>-1,Windows:e.indexOf("Windows")>-1,Linux:e.indexOf("Linux")>-1||e.indexOf("X11")>-1,macOS:e.indexOf("Macintosh")>-1,Android:e.indexOf("Android")>-1||e.indexOf("Adr")>-1,Ubuntu:e.indexOf("Ubuntu")>-1,FreeBSD:e.indexOf("FreeBSD")>-1,Debian:e.indexOf("Debian")>-1,"Windows Phone":e.indexOf("IEMobile")>-1||e.indexOf("Windows Phone")>-1,BlackBerry:e.indexOf("BlackBerry")>-1||e.indexOf("RIM")>-1||e.indexOf("BB10")>-1,MeeGo:e.indexOf("MeeGo")>-1,Symbian:e.indexOf("Symbian")>-1,iOS:e.indexOf("like Mac OS X")>-1,"Chrome OS":e.indexOf("CrOS")>-1,WebOS:e.indexOf("hpwOS")>-1,Mobile:e.indexOf("Mobi")>-1||e.indexOf("iPh")>-1||e.indexOf("480")>-1,Tablet:e.indexOf("Tablet")>-1||e.indexOf("Pad")>-1||e.indexOf("Nexus 7")>-1};n.Mobile&&(n.Mobile=!(e.indexOf("iPad")>-1));var i={browser:["Safari","Chrome","Edge","IE","Firefox","Firefox Focus","Chromium","Opera","Vivaldi","Yandex","Kindle","360","UC","QQBrowser","QQ","Baidu","Maxthon","Sogou","LBBROWSER","2345Explorer","TheWorld","XiaoMi","Quark","Qiyu","Wechat","Taobao","Alipay","Weibo","Douban","Suning","iQiYi"],os:["Windows","Linux","Mac OS","macOS","Android","Ubuntu","FreeBSD","Debian","iOS","Windows Phone","BlackBerry","MeeGo","Symbian","Chrome OS","WebOS"]};for(var r in i)if(i.hasOwnProperty(r))for(var o=0,a=i[r].length;o<a;o++){var s=i[r][o];n[s]&&(t[r]=s)}var l={Windows:function(){return{"10.0":"11",6.4:"10",6.3:"8.1",6.2:"8",6.1:"7","6.0":"Vista",5.2:"XP",5.1:"XP","5.0":"2000"}[e.replace(/^.*Windows NT ([\d.]+).*$/,"$1")]},Android:e.replace(/^.*Android ([\d.]+);.*$/,"$1"),iOS:e.replace(/^.*OS ([\d_]+) like.*$/,"$1").replace(/_/g,"."),Debian:e.replace(/^.*Debian\/([\d.]+).*$/,"$1"),"Windows Phone":e.replace(/^.*Windows Phone( OS)? ([\d.]+);.*$/,"$2"),macOS:e.replace(/^.*Mac OS X ([\d_]+).*$/,"$1").replace(/_/g,"."),WebOS:e.replace(/^.*hpwOS\/([\d.]+);.*$/,"$1"),BlackBerry:e.replace(/^.*BB([\d.]+);*$/,"$1")};t.osVersion="";var c=l[t.os];c&&(t.osVersion="function"==typeof c?c():c==e?"":c);var u={Safari:e.replace(/^.*Version\/([\d.]+).*$/,"$1"),Chrome:e.replace(/^.*Chrome\/([\d.]+).*$/,"$1").replace(/^.*CriOS\/([\d.]+).*$/,"$1"),IE:e.replace(/^.*MSIE ([\d.]+).*$/,"$1").replace(/^.*rv:([\d.]+).*$/,"$1"),Edge:e.replace(/^.*Edge?\/([\d.]+).*$/,"$1"),Firefox:e.replace(/^.*Firefox\/([\d.]+).*$/,"$1").replace(/^.*FxiOS\/([\d.]+).*$/,"$1"),"Firefox Focus":e.replace(/^.*Focus\/([\d.]+).*$/,"$1"),Chromium:e.replace(/^.*Chromium\/([\d.]+).*$/,"$1"),Opera:e.replace(/^.*Opera\/([\d.]+).*$/,"$1").replace(/^.*OPR\/([\d.]+).*$/,"$1"),Vivaldi:e.replace(/^.*Vivaldi\/([\d.]+).*$/,"$1"),Yandex:e.replace(/^.*YaBrowser\/([\d.]+).*$/,"$1"),Kindle:e.replace(/^.*Version\/([\d.]+).*$/,"$1"),Maxthon:e.replace(/^.*Maxthon\/([\d.]+).*$/,"$1"),QQBrowser:e.replace(/^.*QQBrowser\/([\d.]+).*$/,"$1"),QQ:e.replace(/^.*QQ\/([\d.]+).*$/,"$1"),Baidu:e.replace(/^.*BIDUBrowser[\s\/]([\d.]+).*$/,"$1"),UC:e.replace(/^.*UC?Browser\/([\d.]+).*$/,"$1"),Sogou:e.replace(/^.*SE ([\d.X]+).*$/,"$1").replace(/^.*SogouMobileBrowser\/([\d.]+).*$/,"$1"),"2345Explorer":e.replace(/^.*2345Explorer\/([\d.]+).*$/,"$1"),TheWorld:e.replace(/^.*TheWorld ([\d.]+).*$/,"$1"),XiaoMi:e.replace(/^.*MiuiBrowser\/([\d.]+).*$/,"$1"),Quark:e.replace(/^.*Quark\/([\d.]+).*$/,"$1"),Qiyu:e.replace(/^.*Qiyu\/([\d.]+).*$/,"$1"),Wechat:e.replace(/^.*MicroMessenger\/([\d.]+).*$/,"$1"),Taobao:e.replace(/^.*AliApp\(TB\/([\d.]+).*$/,"$1"),Alipay:e.replace(/^.*AliApp\(AP\/([\d.]+).*$/,"$1"),Weibo:e.replace(/^.*weibo__([\d.]+).*$/,"$1"),Douban:e.replace(/^.*com.douban.frodo\/([\d.]+).*$/,"$1"),Suning:e.replace(/^.*SNEBUY-APP([\d.]+).*$/,"$1"),iQiYi:e.replace(/^.*IqiyiVersion\/([\d.]+).*$/,"$1")};t.version="";var p=u[t.browser];return p&&(t.version="function"==typeof p?p():p==e?"":p),null==t.browser&&(t.browser="Unknow App"),t}},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e){e=Object(e);for(var t=1,n=arguments.length;t<n;t++){var i=arguments[t];if(i)for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e}},function(e,t,n){"use strict";function i(e){return/^\{[\s\S]*\}$/.test(JSON.stringify(e))}function r(e){return"[object Function]"==={}.toString.call(e)}function o(e){return"[object Array]"==={}.toString.call(e)}function a(e){if("string"==typeof e)try{return JSON.parse(e)}catch(t){return e}}function s(){if(!(this instanceof s))return new s}function l(e,t){var n=arguments,a=null;if(u||(u=s()),0===n.length)return u.get();if(1===n.length){if("string"==typeof e)return u.get(e);if(i(e))return u.set(e)}if(2===n.length&&"string"==typeof e){if(!t)return u.remove(e);if(t&&"string"==typeof t)return u.set(e,t);t&&r(t)&&(a=null,a=t(e,u.get(e)),l.set(e,a))}if(2===n.length&&o(e)&&r(t))for(var c=0,p=e.length;c<p;c++)a=t(e[c],u.get(e[c])),l.set(e[c],a);return l}t.__esModule=!0;var c=window.localStorage;c=function(e){var t="_Is_Incognit";try{e.setItem(t,"yes")}catch(t){if(["QuotaExceededError","NS_ERROR_DOM_QUOTA_REACHED"].indexOf(t.name)>-1){var n=function(){};e.__proto__={setItem:n,getItem:n,removeItem:n,clear:n}}}finally{"yes"===e.getItem(t)&&e.removeItem(t)}return e}(c),s.prototype={set:function(e,t){if(e&&!i(e))c.setItem(e,function(e){return void 0===e||"function"==typeof e?e+"":JSON.stringify(e)}(t));else if(i(e))for(var n in e)this.set(n,e[n]);return this},get:function(e){if(!e){var t={};return this.each((function(e,n){return t[e]=n})),t}if("?"===e.charAt(0))return this.has(e.substr(1));var n=arguments;if(n.length>1){for(var i={},r=0,o=n.length;r<o;r++){var s=a(c.getItem(n[r]));s&&(i[n[r]]=s)}return i}return a(c.getItem(e))},clear:function(){return c.clear(),this},remove:function(e){var t=this.get(e);return c.removeItem(e),t},has:function(e){return{}.hasOwnProperty.call(this.get(),e)},keys:function(){var e=[];return this.each((function(t){e.push(t)})),e},each:function(e){for(var t=0,n=c.length;t<n;t++){var i=c.key(t);e(i,this.get(i))}return this},search:function(e){for(var t=this.keys(),n={},i=0,r=t.length;i<r;i++)t[i].indexOf(e)>-1&&(n[t[i]]=this.get(t[i]));return n}};var u=null;for(var p in s.prototype)l[p]=s.prototype[p];t.default=l},function(e,t,n){var i,r;r=function(e,t,n){function i(t,r,o){return o=Object.create(i.fn),t&&o.push.apply(o,t.addEventListener?[t]:""+t===t?/</.test(t)?((r=e.createElement(r)).innerHTML=t,r.children):r?(r=i(r)[0])?r[n](t):o:e[n](t):t),o}return i.fn=[],i.one=function(e,t){return i(e,t)[0]||null},i}(document,0,"querySelectorAll"),void 0!==(i=function(){return r}.apply(t,[]))&&(e.exports=i)},function(e,t,n){function i(e){return null==e}function r(e){(e=function(e){var t={};for(var n in e)t[n]=e[n];return t}(e||{})).whiteList=e.whiteList||o.whiteList,e.onAttr=e.onAttr||o.onAttr,e.onIgnoreAttr=e.onIgnoreAttr||o.onIgnoreAttr,e.safeAttrValue=e.safeAttrValue||o.safeAttrValue,this.options=e}var o=n(16),a=n(51);n(17),r.prototype.process=function(e){if(!(e=(e=e||"").toString()))return"";var t=this.options,n=t.whiteList,r=t.onAttr,o=t.onIgnoreAttr,s=t.safeAttrValue;return a(e,(function(e,t,a,l,c){var u=n[a],p=!1;if(!0===u?p=u:"function"==typeof u?p=u(l):u instanceof RegExp&&(p=u.test(l)),!0!==p&&(p=!1),l=s(a,l)){var f,d={position:t,sourcePosition:e,source:c,isWhite:p};return p?i(f=r(a,l,d))?a+":"+l:f:i(f=o(a,l,d))?void 0:f}}))},e.exports=r},function(e,t,n){var i=n(17);e.exports=function(e,t){function n(){if(!o){var n=i.trim(e.slice(a,s)),r=n.indexOf(":");if(-1!==r){var c=i.trim(n.slice(0,r)),u=i.trim(n.slice(r+1));if(c){var p=t(a,l.length,c,u,n);p&&(l+=p+"; ")}}}a=s+1}";"!==(e=i.trimRight(e))[e.length-1]&&(e+=";");for(var r=e.length,o=!1,a=0,s=0,l="";s<r;s++){var c=e[s];if("/"===c&&"*"===e[s+1]){var u=e.indexOf("*/",s+2);if(-1===u)break;a=(s=u+1)+1,o=!1}else"("===c?o=!0:")"===c?o=!1:";"===c?o||n():"\n"===c&&n()}return i.trim(l)}},function(e,t,n){"use strict";var i=n(0),r=n(1),o=i("%TypeError%"),a=n(54),s=i("%Reflect.apply%",!0)||r("%Function.prototype.apply%");e.exports=function(e,t){var n=arguments.length>2?arguments[2]:[];if(!a(n))throw new o("Assertion failed: optional `argumentsList`, if provided, must be a List");return s(e,t,n)}},function(e,t,n){"use strict";var i=n(0)("%TypeError%"),r=n(19),o=n(8);e.exports=function(e,t){if("Object"!==o(e))throw new i("Assertion failed: `O` must be an Object");if(!r(t))throw new i("Assertion failed: `P` must be a Property Key");return t in e}},function(e,t,n){"use strict";var i=n(0)("%Array%"),r=!i.isArray&&n(1)("Object.prototype.toString");e.exports=i.isArray||function(e){return"[object Array]"===r(e)}},function(e,t,n){"use strict";e.exports=n(10)},function(e,t,n){"use strict";var i=n(0)("%TypeError%"),r=n(18),o=n(58),a=n(8);e.exports=function(e){if("Object"!==a(e))throw new i("Assertion failed: `obj` must be an Object");return o(r(e,"length"))}},function(e,t,n){"use strict";var i=n(63),r=n(59);e.exports=function(e){var t=r(e);return 0!==t&&(t=i(t)),0===t?0:t}},function(e,t,n){"use strict";var i=n(72),r=n(57);e.exports=function(e){var t=r(e);return t<=0?0:t>i?i:t}},function(e,t,n){"use strict";var i=n(0),r=i("%TypeError%"),o=i("%Number%"),a=i("%RegExp%"),s=i("%parseInt%"),l=n(1),c=n(73),u=n(71),p=l("String.prototype.slice"),f=c(/^0b[01]+$/i),d=c(/^0o[0-7]+$/i),h=c(/^[-+]0x[0-9a-f]+$/i),m=c(new a("["+["","​","￾"].join("")+"]","g")),g=["\t\n\v\f\r   ᠎    ","         　\u2028","\u2029\ufeff"].join(""),v=new RegExp("(^["+g+"]+)|(["+g+"]+$)","g"),y=l("String.prototype.replace"),b=n(61);e.exports=function e(t){var n=u(t)?t:b(t,o);if("symbol"==typeof n)throw new r("Cannot convert a Symbol value to a number");if("bigint"==typeof n)throw new r("Conversion from 'BigInt' to 'number' is not allowed.");if("string"==typeof n){if(f(n))return e(s(p(n,2),2));if(d(n))return e(s(p(n,2),8));if(m(n)||h(n))return NaN;var i=function(e){return y(e,v,"")}(n);if(i!==n)return e(i)}return o(n)}},function(e,t,n){"use strict";var i=n(0)("%Object%"),r=n(5);e.exports=function(e){return r(e),i(e)}},function(e,t,n){"use strict";var i=n(76);e.exports=function(e){return arguments.length>1?i(e,arguments[1]):i(e)}},function(e,t,n){"use strict";var i=n(0)("%TypeError%");e.exports=function(e,t){if(null==e)throw new i(t||"Cannot call method on "+e);return e}},function(e,t,n){"use strict";var i=n(67),r=n(68),o=n(64),a=n(70),s=n(69),l=n(74);e.exports=function(e){var t=o(e);return a(t)?0:0!==t&&s(t)?l(t)*r(i(t)):t}},function(e,t,n){"use strict";var i=n(65);e.exports=function(e){var t=i(e,Number);if("string"!=typeof t)return+t;var n=t.replace(/^[ \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u0085]+|[ \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u0085]+$/g,"");return/^0[ob]|^[+-]0x/.test(n)?NaN:+n}},function(e,t,n){"use strict";e.exports=n(77)},function(e,t,n){"use strict";e.exports=function(e){return null===e?"Null":void 0===e?"Undefined":"function"==typeof e||"object"==typeof e?"Object":"number"==typeof e?"Number":"boolean"==typeof e?"Boolean":"string"==typeof e?"String":void 0}},function(e,t,n){"use strict";var i=n(0)("%Math.abs%");e.exports=function(e){return i(e)}},function(e,t,n){"use strict";var i=Math.floor;e.exports=function(e){return i(e)}},function(e,t,n){"use strict";var i=Number.isNaN||function(e){return e!=e};e.exports=Number.isFinite||function(e){return"number"==typeof e&&!i(e)&&e!==1/0&&e!==-1/0}},function(e,t,n){"use strict";e.exports=Number.isNaN||function(e){return e!=e}},function(e,t,n){"use strict";e.exports=function(e){return null===e||"function"!=typeof e&&"object"!=typeof e}},function(e,t,n){"use strict";var i=n(0),r=i("%Math%"),o=i("%Number%");e.exports=o.MAX_SAFE_INTEGER||r.pow(2,53)-1},function(e,t,n){"use strict";var i=n(0)("RegExp.prototype.test"),r=n(4);e.exports=function(e){return r(i,e)}},function(e,t,n){"use strict";e.exports=function(e){return e>=0?1:-1}},function(e,t){e.exports=function(e){var t=!0,n=!0,i=!1;if("function"==typeof e){try{e.call("f",(function(e,n,i){"object"!=typeof i&&(t=!1)})),e.call([null],(function(){"use strict";n="string"==typeof this}),"x")}catch(e){i=!0}return!i&&t&&n}return!1}},function(e,t,n){"use strict";var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator,r=n(21),o=n(10),a=n(80),s=n(82),l=function(e,t){if(null==e)throw new TypeError("Cannot call method on "+e);if("string"!=typeof t||"number"!==t&&"string"!==t)throw new TypeError('hint must be "string" or "number"');var n,i,a,s="string"===t?["toString","valueOf"]:["valueOf","toString"];for(a=0;a<s.length;++a)if(n=e[s[a]],o(n)&&(i=n.call(e),r(i)))return i;throw new TypeError("No default value")},c=function(e,t){var n=e[t];if(null!=n){if(!o(n))throw new TypeError(n+" returned for property "+t+" of object "+e+" is not a function");return n}};e.exports=function(e){if(r(e))return e;var t,n="default";if(arguments.length>1&&(arguments[1]===String?n="string":arguments[1]===Number&&(n="number")),i&&(Symbol.toPrimitive?t=c(e,Symbol.toPrimitive):s(e)&&(t=Symbol.prototype.valueOf)),void 0!==t){var o=t.call(e,n);if(r(o))return o;throw new TypeError("unable to convert exotic object to primitive")}return"default"===n&&(a(e)||s(e))&&(n="string"),l(e,"default"===n?"number":n)}},function(e,t,n){"use strict";var i=Object.prototype.toString,r=n(21),o=n(10),a=function(e){var t;if((t=arguments.length>1?arguments[1]:"[object Date]"===i.call(e)?String:Number)===String||t===Number){var n,a,s=t===String?["toString","valueOf"]:["valueOf","toString"];for(a=0;a<s.length;++a)if(o(e[s[a]])&&(n=e[s[a]](),r(n)))return n;throw new TypeError("No default value")}throw new TypeError("invalid [[DefaultValue]] hint supplied")};e.exports=function(e){return r(e)?e:arguments.length>1?a(e,arguments[1]):a(e)}},function(e,t,n){"use strict";var i=Array.prototype.slice,r=Object.prototype.toString;e.exports=function(e){var t=this;if("function"!=typeof t||"[object Function]"!==r.call(t))throw new TypeError("Function.prototype.bind called on incompatible "+t);for(var n,o=i.call(arguments,1),a=function(){if(this instanceof n){var r=t.apply(this,o.concat(i.call(arguments)));return Object(r)===r?r:this}return t.apply(e,o.concat(i.call(arguments)))},s=Math.max(0,t.length-o.length),l=[],c=0;c<s;c++)l.push("$"+c);if(n=Function("binder","return function ("+l.join(",")+"){ return binder.apply(this,arguments); }")(a),t.prototype){var u=function(){};u.prototype=t.prototype,n.prototype=new u,u.prototype=null}return n}},function(e,t,n){e.exports=function(){"use strict";var e=function(e,t){return function(e){var t=e.exports=function(){return new RegExp("(?:"+t.line().source+")|(?:"+t.block().source+")","gm")};t.line=function(){return/(?:^|\s)\/\/(.+?)$/gm},t.block=function(){return/\/\*([\S\s]*?)\*\//gm}}(t={exports:{}}),t.exports}(),t=["23AC69","91C132","F19726","E8552D","1AAB8E","E1147F","2980C1","1BA1E6","9FA0A0","F19726","E30B20","E30B20","A3338B"];return function(n,i){void 0===i&&(i={});var r=i.colors;void 0===r&&(r=t);var o=0,a={},s=new RegExp("("+/[\u4E00-\u9FFF\u3400-\u4dbf\uf900-\ufaff\u3040-\u309f\uac00-\ud7af\u0400-\u04FF]+|\w+/.source+"|"+/</.source+")|("+e().source+")","gmi");return n.replace(s,(function(e,t,n){if(n)return function(e){return'<span style="color: slategray">'+e+"</span>"}(n);if("<"===t)return"&lt;";var i;a[t]?i=a[t]:(i=r[o],a[t]=i);var s='<span style="color: #'+i+'">'+t+"</span>";return o=++o%r.length,s}))}}()},function(e,t,n){"use strict";var i=Date.prototype.getDay,r=Object.prototype.toString,o=n(24)();e.exports=function(e){return"object"==typeof e&&null!==e&&(o?function(e){try{return i.call(e),!0}catch(e){return!1}}(e):"[object Date]"===r.call(e))}},function(e,t,n){"use strict";var i=String.prototype.valueOf,r=Object.prototype.toString,o=n(24)();e.exports=function(e){return"string"==typeof e||"object"==typeof e&&(o?function(e){try{return i.call(e),!0}catch(e){return!1}}(e):"[object String]"===r.call(e))}},function(e,t,n){"use strict";var i=Object.prototype.toString;if(n(22)()){var r=Symbol.prototype.toString,o=/^Symbol\(.*\)$/;e.exports=function(e){if("symbol"==typeof e)return!0;if("[object Symbol]"!==i.call(e))return!1;try{return function(e){return"symbol"==typeof e.valueOf()&&o.test(r.call(e))}(e)}catch(e){return!1}}}else e.exports=function(e){return!1}},function(e,t,n){!function(e){"use strict";function t(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function n(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),Object.defineProperty(e,"prototype",{writable:!1}),e}function i(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function o(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(n)return(n=n.call(e)).next.bind(n);if(Array.isArray(e)||(n=i(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0;return function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function a(){return{baseUrl:null,breaks:!1,extensions:null,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1}}function s(t){e.defaults=t}function l(e,t){if(t){if(S.test(e))return e.replace(_,w)}else if(D.test(e))return e.replace(L,w);return e}function c(e){return e.replace(T,(function(e,t){return"colon"===(t=t.toLowerCase())?":":"#"===t.charAt(0)?"x"===t.charAt(1)?String.fromCharCode(parseInt(t.substring(2),16)):String.fromCharCode(+t.substring(1)):""}))}function u(e,t){e=e.source||e,t=t||"";var n={replace:function(t,i){return i=(i=i.source||i).replace(C,"$1"),e=e.replace(t,i),n},getRegex:function(){return new RegExp(e,t)}};return n}function p(e,t,n){if(e){var i;try{i=decodeURIComponent(c(n)).replace(P,"").toLowerCase()}catch(e){return null}if(0===i.indexOf("javascript:")||0===i.indexOf("vbscript:")||0===i.indexOf("data:"))return null}t&&!x.test(n)&&(n=function(e,t){O[" "+e]||(A.test(e)?O[" "+e]=e+"/":O[" "+e]=h(e,"/",!0));var n=-1===(e=O[" "+e]).indexOf(":");return"//"===t.substring(0,2)?n?t:e.replace(E,"$1")+t:"/"===t.charAt(0)?n?t:e.replace(F,"$1")+t:e+t}(t,n));try{n=encodeURI(n).replace(/%25/g,"%")}catch(e){return null}return n}function f(e){for(var t,n,i=1;i<arguments.length;i++)for(n in t=arguments[i])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}function d(e,t){var n=e.replace(/\|/g,(function(e,t,n){for(var i=!1,r=t;--r>=0&&"\\"===n[r];)i=!i;return i?"|":" |"})).split(/ \|/),i=0;if(n[0].trim()||n.shift(),n.length>0&&!n[n.length-1].trim()&&n.pop(),n.length>t)n.splice(t);else for(;n.length<t;)n.push("");for(;i<n.length;i++)n[i]=n[i].trim().replace(/\\\|/g,"|");return n}function h(e,t,n){var i=e.length;if(0===i)return"";for(var r=0;r<i;){var o=e.charAt(i-r-1);if(o!==t||n){if(o===t||!n)break;r++}else r++}return e.substr(0,i-r)}function m(e){e&&e.sanitize&&e.silent}function g(e,t){if(t<1)return"";for(var n="";t>1;)1&t&&(n+=e),t>>=1,e+=e;return n+e}function v(e,t,n,i){var r=t.href,o=t.title?l(t.title):null,a=e[1].replace(/\\([\[\]])/g,"$1");if("!"!==e[0].charAt(0)){i.state.inLink=!0;var s={type:"link",raw:n,href:r,title:o,text:a,tokens:i.inlineTokens(a,[])};return i.state.inLink=!1,s}return{type:"image",raw:n,href:r,title:o,text:l(a)}}function y(e){return e.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…")}function b(e){var t,n,i="",r=e.length;for(t=0;t<r;t++)n=e.charCodeAt(t),Math.random()>.5&&(n="x"+n.toString(16)),i+="&#"+n+";";return i}function I(e,t,n){if(null==e)throw new Error("marked(): input parameter is undefined or null");if("string"!=typeof e)throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(e)+", string expected");if("function"==typeof t&&(n=t,t=null),m(t=f({},I.defaults,t||{})),n){var i,r=t.highlight;try{i=Q.lex(e,t)}catch(e){return n(e)}var o=function(e){var o;if(!e)try{t.walkTokens&&I.walkTokens(i,t.walkTokens),o=G.parse(i,t)}catch(t){e=t}return t.highlight=r,e?n(e):n(null,o)};if(!r||r.length<3)return o();if(delete t.highlight,!i.length)return o();var a=0;return I.walkTokens(i,(function(e){"code"===e.type&&(a++,setTimeout((function(){r(e.text,e.lang,(function(t,n){if(t)return o(t);null!=n&&n!==e.text&&(e.text=n,e.escaped=!0),0==--a&&o()}))}),0))})),void(0===a&&o())}try{var s=Q.lex(e,t);return t.walkTokens&&I.walkTokens(s,t.walkTokens),G.parse(s,t)}catch(e){if(e.message+="\nPlease report this to https://github.com/markedjs/marked.",t.silent)return"<p>An error occurred:</p><pre>"+l(e.message+"",!0)+"</pre>";throw e}}e.defaults={baseUrl:null,breaks:!1,extensions:null,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:null,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tokenizer:null,walkTokens:null,xhtml:!1};var S=/[&<>"']/,_=/[&<>"']/g,D=/[<>"']|&(?!#?\w+;)/,L=/[<>"']|&(?!#?\w+;)/g,k={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},w=function(e){return k[e]},T=/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi,C=/(^|[^\[])\^/g,P=/[^\w:]/g,x=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i,O={},A=/^[^:]+:\/*[^/]*$/,E=/^([^:]+:)[\s\S]*$/,F=/^([^:]+:\/*[^/]*)[\s\S]*$/,N={exec:function(){}},V=function(){function t(t){this.options=t||e.defaults}var n=t.prototype;return n.space=function(e){var t=this.rules.block.newline.exec(e);if(t&&t[0].length>0)return{type:"space",raw:t[0]}},n.code=function(e){var t=this.rules.block.code.exec(e);if(t){var n=t[0].replace(/^ {1,4}/gm,"");return{type:"code",raw:t[0],codeBlockStyle:"indented",text:this.options.pedantic?n:h(n,"\n")}}},n.fences=function(e){var t=this.rules.block.fences.exec(e);if(t){var n=t[0],i=function(e,t){var n=e.match(/^(\s+)(?:```)/);if(null===n)return t;var i=n[1];return t.split("\n").map((function(e){var t=e.match(/^\s+/);return null===t?e:t[0].length>=i.length?e.slice(i.length):e})).join("\n")}(n,t[3]||"");return{type:"code",raw:n,lang:t[2]?t[2].trim():t[2],text:i}}},n.heading=function(e){var t=this.rules.block.heading.exec(e);if(t){var n=t[2].trim();if(/#$/.test(n)){var i=h(n,"#");this.options.pedantic?n=i.trim():i&&!/ $/.test(i)||(n=i.trim())}var r={type:"heading",raw:t[0],depth:t[1].length,text:n,tokens:[]};return this.lexer.inline(r.text,r.tokens),r}},n.hr=function(e){var t=this.rules.block.hr.exec(e);if(t)return{type:"hr",raw:t[0]}},n.blockquote=function(e){var t=this.rules.block.blockquote.exec(e);if(t){var n=t[0].replace(/^ *> ?/gm,"");return{type:"blockquote",raw:t[0],tokens:this.lexer.blockTokens(n,[]),text:n}}},n.list=function(e){var t=this.rules.block.list.exec(e);if(t){var n,i,r,a,s,l,c,u,p,f,d,h,m=t[1].trim(),g=m.length>1,v={type:"list",raw:"",ordered:g,start:g?+m.slice(0,-1):"",loose:!1,items:[]};m=g?"\\d{1,9}\\"+m.slice(-1):"\\"+m,this.options.pedantic&&(m=g?m:"[*+-]");for(var y=new RegExp("^( {0,3}"+m+")((?: [^\\n]*)?(?:\\n|$))");e&&(h=!1,t=y.exec(e))&&!this.rules.block.hr.test(e);){if(n=t[0],e=e.substring(n.length),u=t[2].split("\n",1)[0],p=e.split("\n",1)[0],this.options.pedantic?(a=2,d=u.trimLeft()):(a=(a=t[2].search(/[^ ]/))>4?1:a,d=u.slice(a),a+=t[1].length),l=!1,!u&&/^ *$/.test(p)&&(n+=p+"\n",e=e.substring(p.length+1),h=!0),!h)for(var b=new RegExp("^ {0,"+Math.min(3,a-1)+"}(?:[*+-]|\\d{1,9}[.)])");e&&(u=f=e.split("\n",1)[0],this.options.pedantic&&(u=u.replace(/^ {1,4}(?=( {4})*[^ ])/g,"  ")),!b.test(u));){if(u.search(/[^ ]/)>=a||!u.trim())d+="\n"+u.slice(a);else{if(l)break;d+="\n"+u}l||u.trim()||(l=!0),n+=f+"\n",e=e.substring(f.length+1)}v.loose||(c?v.loose=!0:/\n *\n *$/.test(n)&&(c=!0)),this.options.gfm&&(i=/^\[[ xX]\] /.exec(d))&&(r="[ ] "!==i[0],d=d.replace(/^\[[ xX]\] +/,"")),v.items.push({type:"list_item",raw:n,task:!!i,checked:r,loose:!1,text:d}),v.raw+=n}v.items[v.items.length-1].raw=n.trimRight(),v.items[v.items.length-1].text=d.trimRight(),v.raw=v.raw.trimRight();var I=v.items.length;for(s=0;s<I;s++){this.lexer.state.top=!1,v.items[s].tokens=this.lexer.blockTokens(v.items[s].text,[]);var S=v.items[s].tokens.filter((function(e){return"space"===e.type})),_=S.every((function(e){for(var t,n=0,i=o(e.raw.split(""));!(t=i()).done;)if("\n"===t.value&&(n+=1),n>1)return!0;return!1}));!v.loose&&S.length&&_&&(v.loose=!0,v.items[s].loose=!0)}return v}},n.html=function(e){var t=this.rules.block.html.exec(e);if(t){var n={type:"html",raw:t[0],pre:!this.options.sanitizer&&("pre"===t[1]||"script"===t[1]||"style"===t[1]),text:t[0]};return this.options.sanitize&&(n.type="paragraph",n.text=this.options.sanitizer?this.options.sanitizer(t[0]):l(t[0]),n.tokens=[],this.lexer.inline(n.text,n.tokens)),n}},n.def=function(e){var t=this.rules.block.def.exec(e);if(t)return t[3]&&(t[3]=t[3].substring(1,t[3].length-1)),{type:"def",tag:t[1].toLowerCase().replace(/\s+/g," "),raw:t[0],href:t[2],title:t[3]}},n.table=function(e){var t=this.rules.block.table.exec(e);if(t){var n={type:"table",header:d(t[1]).map((function(e){return{text:e}})),align:t[2].replace(/^ *|\| *$/g,"").split(/ *\| */),rows:t[3]&&t[3].trim()?t[3].replace(/\n[ \t]*$/,"").split("\n"):[]};if(n.header.length===n.align.length){n.raw=t[0];var i,r,o,a,s=n.align.length;for(i=0;i<s;i++)/^ *-+: *$/.test(n.align[i])?n.align[i]="right":/^ *:-+: *$/.test(n.align[i])?n.align[i]="center":/^ *:-+ *$/.test(n.align[i])?n.align[i]="left":n.align[i]=null;for(s=n.rows.length,i=0;i<s;i++)n.rows[i]=d(n.rows[i],n.header.length).map((function(e){return{text:e}}));for(s=n.header.length,r=0;r<s;r++)n.header[r].tokens=[],this.lexer.inlineTokens(n.header[r].text,n.header[r].tokens);for(s=n.rows.length,r=0;r<s;r++)for(a=n.rows[r],o=0;o<a.length;o++)a[o].tokens=[],this.lexer.inlineTokens(a[o].text,a[o].tokens);return n}}},n.lheading=function(e){var t=this.rules.block.lheading.exec(e);if(t){var n={type:"heading",raw:t[0],depth:"="===t[2].charAt(0)?1:2,text:t[1],tokens:[]};return this.lexer.inline(n.text,n.tokens),n}},n.paragraph=function(e){var t=this.rules.block.paragraph.exec(e);if(t){var n={type:"paragraph",raw:t[0],text:"\n"===t[1].charAt(t[1].length-1)?t[1].slice(0,-1):t[1],tokens:[]};return this.lexer.inline(n.text,n.tokens),n}},n.text=function(e){var t=this.rules.block.text.exec(e);if(t){var n={type:"text",raw:t[0],text:t[0],tokens:[]};return this.lexer.inline(n.text,n.tokens),n}},n.escape=function(e){var t=this.rules.inline.escape.exec(e);if(t)return{type:"escape",raw:t[0],text:l(t[1])}},n.tag=function(e){var t=this.rules.inline.tag.exec(e);if(t)return!this.lexer.state.inLink&&/^<a /i.test(t[0])?this.lexer.state.inLink=!0:this.lexer.state.inLink&&/^<\/a>/i.test(t[0])&&(this.lexer.state.inLink=!1),!this.lexer.state.inRawBlock&&/^<(pre|code|kbd|script)(\s|>)/i.test(t[0])?this.lexer.state.inRawBlock=!0:this.lexer.state.inRawBlock&&/^<\/(pre|code|kbd|script)(\s|>)/i.test(t[0])&&(this.lexer.state.inRawBlock=!1),{type:this.options.sanitize?"text":"html",raw:t[0],inLink:this.lexer.state.inLink,inRawBlock:this.lexer.state.inRawBlock,text:this.options.sanitize?this.options.sanitizer?this.options.sanitizer(t[0]):l(t[0]):t[0]}},n.link=function(e){var t=this.rules.inline.link.exec(e);if(t){var n=t[2].trim();if(!this.options.pedantic&&/^</.test(n)){if(!/>$/.test(n))return;var i=h(n.slice(0,-1),"\\");if((n.length-i.length)%2==0)return}else{var r=function(e,t){if(-1===e.indexOf(t[1]))return-1;for(var n=e.length,i=0,r=0;r<n;r++)if("\\"===e[r])r++;else if(e[r]===t[0])i++;else if(e[r]===t[1]&&--i<0)return r;return-1}(t[2],"()");if(r>-1){var o=(0===t[0].indexOf("!")?5:4)+t[1].length+r;t[2]=t[2].substring(0,r),t[0]=t[0].substring(0,o).trim(),t[3]=""}}var a=t[2],s="";if(this.options.pedantic){var l=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(a);l&&(a=l[1],s=l[3])}else s=t[3]?t[3].slice(1,-1):"";return a=a.trim(),/^</.test(a)&&(a=this.options.pedantic&&!/>$/.test(n)?a.slice(1):a.slice(1,-1)),v(t,{href:a?a.replace(this.rules.inline._escapes,"$1"):a,title:s?s.replace(this.rules.inline._escapes,"$1"):s},t[0],this.lexer)}},n.reflink=function(e,t){var n;if((n=this.rules.inline.reflink.exec(e))||(n=this.rules.inline.nolink.exec(e))){var i=(n[2]||n[1]).replace(/\s+/g," ");if(!(i=t[i.toLowerCase()])||!i.href){var r=n[0].charAt(0);return{type:"text",raw:r,text:r}}return v(n,i,n[0],this.lexer)}},n.emStrong=function(e,t,n){void 0===n&&(n="");var i=this.rules.inline.emStrong.lDelim.exec(e);if(i&&(!i[3]||!n.match(/(?:[0-9A-Za-z\xAA\xB2\xB3\xB5\xB9\xBA\xBC-\xBE\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u0660-\u0669\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07C0-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0966-\u096F\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09E6-\u09F1\u09F4-\u09F9\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A66-\u0A6F\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AE6-\u0AEF\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B66-\u0B6F\u0B71-\u0B77\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0BE6-\u0BF2\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C66-\u0C6F\u0C78-\u0C7E\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CE6-\u0CEF\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D58-\u0D61\u0D66-\u0D78\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DE6-\u0DEF\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F20-\u0F33\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F-\u1049\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u1090-\u1099\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1369-\u137C\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u17E0-\u17E9\u17F0-\u17F9\u1810-\u1819\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A16\u1A20-\u1A54\u1A80-\u1A89\u1A90-\u1A99\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B50-\u1B59\u1B83-\u1BA0\u1BAE-\u1BE5\u1C00-\u1C23\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2070\u2071\u2074-\u2079\u207F-\u2089\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2150-\u2189\u2460-\u249B\u24EA-\u24FF\u2776-\u2793\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2CFD\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u3192-\u3195\u31A0-\u31BF\u31F0-\u31FF\u3220-\u3229\u3248-\u324F\u3251-\u325F\u3280-\u3289\u32B1-\u32BF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA830-\uA835\uA840-\uA873\uA882-\uA8B3\uA8D0-\uA8D9\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA900-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF-\uA9D9\uA9E0-\uA9E4\uA9E6-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA50-\uAA59\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD07-\uDD33\uDD40-\uDD78\uDD8A\uDD8B\uDE80-\uDE9C\uDEA0-\uDED0\uDEE1-\uDEFB\uDF00-\uDF23\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC58-\uDC76\uDC79-\uDC9E\uDCA7-\uDCAF\uDCE0-\uDCF2\uDCF4\uDCF5\uDCFB-\uDD1B\uDD20-\uDD39\uDD80-\uDDB7\uDDBC-\uDDCF\uDDD2-\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE40-\uDE48\uDE60-\uDE7E\uDE80-\uDE9F\uDEC0-\uDEC7\uDEC9-\uDEE4\uDEEB-\uDEEF\uDF00-\uDF35\uDF40-\uDF55\uDF58-\uDF72\uDF78-\uDF91\uDFA9-\uDFAF]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDCFA-\uDD23\uDD30-\uDD39\uDE60-\uDE7E\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF27\uDF30-\uDF45\uDF51-\uDF54\uDF70-\uDF81\uDFB0-\uDFCB\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC52-\uDC6F\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD03-\uDD26\uDD36-\uDD3F\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDD0-\uDDDA\uDDDC\uDDE1-\uDDF4\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDEF0-\uDEF9\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC50-\uDC59\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE50-\uDE59\uDE80-\uDEAA\uDEB8\uDEC0-\uDEC9\uDF00-\uDF1A\uDF30-\uDF3B\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCF2\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDD50-\uDD59\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC50-\uDC6C\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD50-\uDD59\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDDA0-\uDDA9\uDEE0-\uDEF2\uDFB0\uDFC0-\uDFD4]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDE70-\uDEBE\uDEC0-\uDEC9\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF50-\uDF59\uDF5B-\uDF61\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE96\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD834[\uDEE0-\uDEF3\uDF60-\uDF78]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD40-\uDD49\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB\uDEF0-\uDEF9]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDCC7-\uDCCF\uDD00-\uDD43\uDD4B\uDD50-\uDD59]|\uD83B[\uDC71-\uDCAB\uDCAD-\uDCAF\uDCB1-\uDCB4\uDD01-\uDD2D\uDD2F-\uDD3D\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD83C[\uDD00-\uDD0C]|\uD83E[\uDFF0-\uDFF9]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])/))){var r=i[1]||i[2]||"";if(!r||r&&(""===n||this.rules.inline.punctuation.exec(n))){var o,a,s=i[0].length-1,l=s,c=0,u="*"===i[0][0]?this.rules.inline.emStrong.rDelimAst:this.rules.inline.emStrong.rDelimUnd;for(u.lastIndex=0,t=t.slice(-1*e.length+s);null!=(i=u.exec(t));)if(o=i[1]||i[2]||i[3]||i[4]||i[5]||i[6])if(a=o.length,i[3]||i[4])l+=a;else if(!((i[5]||i[6])&&s%3)||(s+a)%3){if(!((l-=a)>0)){if(a=Math.min(a,a+l+c),Math.min(s,a)%2){var p=e.slice(1,s+i.index+a);return{type:"em",raw:e.slice(0,s+i.index+a+1),text:p,tokens:this.lexer.inlineTokens(p,[])}}var f=e.slice(2,s+i.index+a-1);return{type:"strong",raw:e.slice(0,s+i.index+a+1),text:f,tokens:this.lexer.inlineTokens(f,[])}}}else c+=a}}},n.codespan=function(e){var t=this.rules.inline.code.exec(e);if(t){var n=t[2].replace(/\n/g," "),i=/[^ ]/.test(n),r=/^ /.test(n)&&/ $/.test(n);return i&&r&&(n=n.substring(1,n.length-1)),n=l(n,!0),{type:"codespan",raw:t[0],text:n}}},n.br=function(e){var t=this.rules.inline.br.exec(e);if(t)return{type:"br",raw:t[0]}},n.del=function(e){var t=this.rules.inline.del.exec(e);if(t)return{type:"del",raw:t[0],text:t[2],tokens:this.lexer.inlineTokens(t[2],[])}},n.autolink=function(e,t){var n,i,r=this.rules.inline.autolink.exec(e);if(r)return i="@"===r[2]?"mailto:"+(n=l(this.options.mangle?t(r[1]):r[1])):n=l(r[1]),{type:"link",raw:r[0],text:n,href:i,tokens:[{type:"text",raw:n,text:n}]}},n.url=function(e,t){var n;if(n=this.rules.inline.url.exec(e)){var i,r;if("@"===n[2])r="mailto:"+(i=l(this.options.mangle?t(n[0]):n[0]));else{var o;do{o=n[0],n[0]=this.rules.inline._backpedal.exec(n[0])[0]}while(o!==n[0]);i=l(n[0]),r="www."===n[1]?"http://"+i:i}return{type:"link",raw:n[0],text:i,href:r,tokens:[{type:"text",raw:i,text:i}]}}},n.inlineText=function(e,t){var n,i=this.rules.inline.text.exec(e);if(i)return n=this.lexer.state.inRawBlock?this.options.sanitize?this.options.sanitizer?this.options.sanitizer(i[0]):l(i[0]):i[0]:l(this.options.smartypants?t(i[0]):i[0]),{type:"text",raw:i[0],text:n}},t}(),j={newline:/^(?: *(?:\n|$))+/,code:/^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,fences:/^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?=\n|$)|$)/,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( {0,3}bull)( [^\n]+?)?(?:\n|$)/,html:"^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",def:/^ {0,3}\[(label)\]: *(?:\n *)?<?([^\s>]+)>?(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,table:N,lheading:/^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,_paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,text:/^[^\n]+/,_label:/(?!\s*\])(?:\\.|[^\[\]\\])+/,_title:/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/};j.def=u(j.def).replace("label",j._label).replace("title",j._title).getRegex(),j.bullet=/(?:[*+-]|\d{1,9}[.)])/,j.listItemStart=u(/^( *)(bull) */).replace("bull",j.bullet).getRegex(),j.list=u(j.list).replace(/bull/g,j.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+j.def.source+")").getRegex(),j._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",j._comment=/<!--(?!-?>)[\s\S]*?(?:-->|$)/,j.html=u(j.html,"i").replace("comment",j._comment).replace("tag",j._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),j.paragraph=u(j._paragraph).replace("hr",j.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("|table","").replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",j._tag).getRegex(),j.blockquote=u(j.blockquote).replace("paragraph",j.paragraph).getRegex(),j.normal=f({},j),j.gfm=f({},j.normal,{table:"^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"}),j.gfm.table=u(j.gfm.table).replace("hr",j.hr).replace("heading"," {0,3}#{1,6} ").replace("blockquote"," {0,3}>").replace("code"," {4}[^\\n]").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",j._tag).getRegex(),j.gfm.paragraph=u(j._paragraph).replace("hr",j.hr).replace("heading"," {0,3}#{1,6} ").replace("|lheading","").replace("table",j.gfm.table).replace("blockquote"," {0,3}>").replace("fences"," {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list"," {0,3}(?:[*+-]|1[.)]) ").replace("html","</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag",j._tag).getRegex(),j.pedantic=f({},j.normal,{html:u("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment",j._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,heading:/^(#{1,6})(.*)(?:\n+|$)/,fences:N,paragraph:u(j.normal._paragraph).replace("hr",j.hr).replace("heading"," *#{1,6} *[^\n]").replace("lheading",j.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replace("|list","").replace("|html","").getRegex()});var R={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:N,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(ref)\]/,nolink:/^!?\[(ref)\](?:\[\])?/,reflinkSearch:"reflink|nolink(?!\\()",emStrong:{lDelim:/^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,rDelimAst:/^[^_*]*?\_\_[^_*]*?\*[^_*]*?(?=\_\_)|[punct_](\*+)(?=[\s]|$)|[^punct*_\s](\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|[^punct*_\s](\*+)(?=[^punct*_\s])/,rDelimUnd:/^[^_*]*?\*\*[^_*]*?\_[^_*]*?(?=\*\*)|[punct*](\_+)(?=[\s]|$)|[^punct*_\s](\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/},code:/^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,br:/^( {2,}|\\)\n(?!\s*$)/,del:N,text:/^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,punctuation:/^([\spunctuation])/,_punctuation:"!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~"};R.punctuation=u(R.punctuation).replace(/punctuation/g,R._punctuation).getRegex(),R.blockSkip=/\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g,R.escapedEmSt=/\\\*|\\_/g,R._comment=u(j._comment).replace("(?:--\x3e|$)","--\x3e").getRegex(),R.emStrong.lDelim=u(R.emStrong.lDelim).replace(/punct/g,R._punctuation).getRegex(),R.emStrong.rDelimAst=u(R.emStrong.rDelimAst,"g").replace(/punct/g,R._punctuation).getRegex(),R.emStrong.rDelimUnd=u(R.emStrong.rDelimUnd,"g").replace(/punct/g,R._punctuation).getRegex(),R._escapes=/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,R._scheme=/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,R._email=/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/,R.autolink=u(R.autolink).replace("scheme",R._scheme).replace("email",R._email).getRegex(),R._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,R.tag=u(R.tag).replace("comment",R._comment).replace("attribute",R._attribute).getRegex(),R._label=/(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/,R._href=/<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/,R._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,R.link=u(R.link).replace("label",R._label).replace("href",R._href).replace("title",R._title).getRegex(),R.reflink=u(R.reflink).replace("label",R._label).replace("ref",j._label).getRegex(),R.nolink=u(R.nolink).replace("ref",j._label).getRegex(),R.reflinkSearch=u(R.reflinkSearch,"g").replace("reflink",R.reflink).replace("nolink",R.nolink).getRegex(),R.normal=f({},R),R.pedantic=f({},R.normal,{strong:{start:/^__|\*\*/,middle:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,endAst:/\*\*(?!\*)/g,endUnd:/__(?!_)/g},em:{start:/^_|\*/,middle:/^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,endAst:/\*(?!\*)/g,endUnd:/_(?!_)/g},link:u(/^!?\[(label)\]\((.*?)\)/).replace("label",R._label).getRegex(),reflink:u(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",R._label).getRegex()}),R.gfm=f({},R.normal,{escape:u(R.escape).replace("])","~|])").getRegex(),_extended_email:/[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,url:/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,text:/^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/}),R.gfm.url=u(R.gfm.url,"i").replace("email",R.gfm._extended_email).getRegex(),R.breaks=f({},R.gfm,{br:u(R.br).replace("{2,}","*").getRegex(),text:u(R.gfm.text).replace("\\b_","\\b_| {2,}\\n").replace(/\{2,\}/g,"*").getRegex()});var Q=function(){function t(t){this.tokens=[],this.tokens.links=Object.create(null),this.options=t||e.defaults,this.options.tokenizer=this.options.tokenizer||new V,this.tokenizer=this.options.tokenizer,this.tokenizer.options=this.options,this.tokenizer.lexer=this,this.inlineQueue=[],this.state={inLink:!1,inRawBlock:!1,top:!0};var n={block:j.normal,inline:R.normal};this.options.pedantic?(n.block=j.pedantic,n.inline=R.pedantic):this.options.gfm&&(n.block=j.gfm,this.options.breaks?n.inline=R.breaks:n.inline=R.gfm),this.tokenizer.rules=n}t.lex=function(e,n){return new t(n).lex(e)},t.lexInline=function(e,n){return new t(n).inlineTokens(e)};var i=t.prototype;return i.lex=function(e){e=e.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    "),this.blockTokens(e,this.tokens);for(var t;t=this.inlineQueue.shift();)this.inlineTokens(t.src,t.tokens);return this.tokens},i.blockTokens=function(e,t){var n,i,r,o,a=this;for(void 0===t&&(t=[]),this.options.pedantic&&(e=e.replace(/^ +$/gm,""));e;)if(!(this.options.extensions&&this.options.extensions.block&&this.options.extensions.block.some((function(i){return!!(n=i.call({lexer:a},e,t))&&(e=e.substring(n.raw.length),t.push(n),!0)}))))if(n=this.tokenizer.space(e))e=e.substring(n.raw.length),1===n.raw.length&&t.length>0?t[t.length-1].raw+="\n":t.push(n);else if(n=this.tokenizer.code(e))e=e.substring(n.raw.length),!(i=t[t.length-1])||"paragraph"!==i.type&&"text"!==i.type?t.push(n):(i.raw+="\n"+n.raw,i.text+="\n"+n.text,this.inlineQueue[this.inlineQueue.length-1].src=i.text);else if(n=this.tokenizer.fences(e))e=e.substring(n.raw.length),t.push(n);else if(n=this.tokenizer.heading(e))e=e.substring(n.raw.length),t.push(n);else if(n=this.tokenizer.hr(e))e=e.substring(n.raw.length),t.push(n);else if(n=this.tokenizer.blockquote(e))e=e.substring(n.raw.length),t.push(n);else if(n=this.tokenizer.list(e))e=e.substring(n.raw.length),t.push(n);else if(n=this.tokenizer.html(e))e=e.substring(n.raw.length),t.push(n);else if(n=this.tokenizer.def(e))e=e.substring(n.raw.length),!(i=t[t.length-1])||"paragraph"!==i.type&&"text"!==i.type?this.tokens.links[n.tag]||(this.tokens.links[n.tag]={href:n.href,title:n.title}):(i.raw+="\n"+n.raw,i.text+="\n"+n.raw,this.inlineQueue[this.inlineQueue.length-1].src=i.text);else if(n=this.tokenizer.table(e))e=e.substring(n.raw.length),t.push(n);else if(n=this.tokenizer.lheading(e))e=e.substring(n.raw.length),t.push(n);else if(r=e,this.options.extensions&&this.options.extensions.startBlock&&function(){var t=1/0,n=e.slice(1),i=void 0;a.options.extensions.startBlock.forEach((function(e){"number"==typeof(i=e.call({lexer:this},n))&&i>=0&&(t=Math.min(t,i))})),t<1/0&&t>=0&&(r=e.substring(0,t+1))}(),this.state.top&&(n=this.tokenizer.paragraph(r)))i=t[t.length-1],o&&"paragraph"===i.type?(i.raw+="\n"+n.raw,i.text+="\n"+n.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=i.text):t.push(n),o=r.length!==e.length,e=e.substring(n.raw.length);else if(n=this.tokenizer.text(e))e=e.substring(n.raw.length),(i=t[t.length-1])&&"text"===i.type?(i.raw+="\n"+n.raw,i.text+="\n"+n.text,this.inlineQueue.pop(),this.inlineQueue[this.inlineQueue.length-1].src=i.text):t.push(n);else if(e){var s="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent)break;throw new Error(s)}return this.state.top=!0,t},i.inline=function(e,t){this.inlineQueue.push({src:e,tokens:t})},i.inlineTokens=function(e,t){var n=this;void 0===t&&(t=[]);var i,r,o,a,s,l,c=e;if(this.tokens.links){var u=Object.keys(this.tokens.links);if(u.length>0)for(;null!=(a=this.tokenizer.rules.inline.reflinkSearch.exec(c));)u.includes(a[0].slice(a[0].lastIndexOf("[")+1,-1))&&(c=c.slice(0,a.index)+"["+g("a",a[0].length-2)+"]"+c.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex))}for(;null!=(a=this.tokenizer.rules.inline.blockSkip.exec(c));)c=c.slice(0,a.index)+"["+g("a",a[0].length-2)+"]"+c.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);for(;null!=(a=this.tokenizer.rules.inline.escapedEmSt.exec(c));)c=c.slice(0,a.index)+"++"+c.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);for(;e;)if(s||(l=""),s=!1,!(this.options.extensions&&this.options.extensions.inline&&this.options.extensions.inline.some((function(r){return!!(i=r.call({lexer:n},e,t))&&(e=e.substring(i.raw.length),t.push(i),!0)}))))if(i=this.tokenizer.escape(e))e=e.substring(i.raw.length),t.push(i);else if(i=this.tokenizer.tag(e))e=e.substring(i.raw.length),(r=t[t.length-1])&&"text"===i.type&&"text"===r.type?(r.raw+=i.raw,r.text+=i.text):t.push(i);else if(i=this.tokenizer.link(e))e=e.substring(i.raw.length),t.push(i);else if(i=this.tokenizer.reflink(e,this.tokens.links))e=e.substring(i.raw.length),(r=t[t.length-1])&&"text"===i.type&&"text"===r.type?(r.raw+=i.raw,r.text+=i.text):t.push(i);else if(i=this.tokenizer.emStrong(e,c,l))e=e.substring(i.raw.length),t.push(i);else if(i=this.tokenizer.codespan(e))e=e.substring(i.raw.length),t.push(i);else if(i=this.tokenizer.br(e))e=e.substring(i.raw.length),t.push(i);else if(i=this.tokenizer.del(e))e=e.substring(i.raw.length),t.push(i);else if(i=this.tokenizer.autolink(e,b))e=e.substring(i.raw.length),t.push(i);else if(this.state.inLink||!(i=this.tokenizer.url(e,b))){if(o=e,this.options.extensions&&this.options.extensions.startInline&&function(){var t=1/0,i=e.slice(1),r=void 0;n.options.extensions.startInline.forEach((function(e){"number"==typeof(r=e.call({lexer:this},i))&&r>=0&&(t=Math.min(t,r))})),t<1/0&&t>=0&&(o=e.substring(0,t+1))}(),i=this.tokenizer.inlineText(o,y))e=e.substring(i.raw.length),"_"!==i.raw.slice(-1)&&(l=i.raw.slice(-1)),s=!0,(r=t[t.length-1])&&"text"===r.type?(r.raw+=i.raw,r.text+=i.text):t.push(i);else if(e){var p="Infinite loop on byte: "+e.charCodeAt(0);if(this.options.silent)break;throw new Error(p)}}else e=e.substring(i.raw.length),t.push(i);return t},n(t,null,[{key:"rules",get:function(){return{block:j,inline:R}}}]),t}(),$=function(){function t(t){this.options=t||e.defaults}var n=t.prototype;return n.code=function(e,t,n){var i=(t||"").match(/\S*/)[0];if(this.options.highlight){var r=this.options.highlight(e,i);null!=r&&r!==e&&(n=!0,e=r)}return e=e.replace(/\n$/,"")+"\n",i?'<pre><code class="'+this.options.langPrefix+l(i,!0)+'">'+(n?e:l(e,!0))+"</code></pre>\n":"<pre><code>"+(n?e:l(e,!0))+"</code></pre>\n"},n.blockquote=function(e){return"<blockquote>\n"+e+"</blockquote>\n"},n.html=function(e){return e},n.heading=function(e,t,n,i){return this.options.headerIds?"<h"+t+' id="'+this.options.headerPrefix+i.slug(n)+'">'+e+"</h"+t+">\n":"<h"+t+">"+e+"</h"+t+">\n"},n.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"},n.list=function(e,t,n){var i=t?"ol":"ul";return"<"+i+(t&&1!==n?' start="'+n+'"':"")+">\n"+e+"</"+i+">\n"},n.listitem=function(e){return"<li>"+e+"</li>\n"},n.checkbox=function(e){return"<input "+(e?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "},n.paragraph=function(e){return"<p>"+e+"</p>\n"},n.table=function(e,t){return t&&(t="<tbody>"+t+"</tbody>"),"<table>\n<thead>\n"+e+"</thead>\n"+t+"</table>\n"},n.tablerow=function(e){return"<tr>\n"+e+"</tr>\n"},n.tablecell=function(e,t){var n=t.header?"th":"td";return(t.align?"<"+n+' align="'+t.align+'">':"<"+n+">")+e+"</"+n+">\n"},n.strong=function(e){return"<strong>"+e+"</strong>"},n.em=function(e){return"<em>"+e+"</em>"},n.codespan=function(e){return"<code>"+e+"</code>"},n.br=function(){return this.options.xhtml?"<br/>":"<br>"},n.del=function(e){return"<del>"+e+"</del>"},n.link=function(e,t,n){if(null===(e=p(this.options.sanitize,this.options.baseUrl,e)))return n;var i='<a href="'+l(e)+'"';return t&&(i+=' title="'+t+'"'),i+">"+n+"</a>"},n.image=function(e,t,n){if(null===(e=p(this.options.sanitize,this.options.baseUrl,e)))return n;var i='<img src="'+e+'" alt="'+n+'"';return t&&(i+=' title="'+t+'"'),i+(this.options.xhtml?"/>":">")},n.text=function(e){return e},t}(),B=function(){function e(){}var t=e.prototype;return t.strong=function(e){return e},t.em=function(e){return e},t.codespan=function(e){return e},t.del=function(e){return e},t.html=function(e){return e},t.text=function(e){return e},t.link=function(e,t,n){return""+n},t.image=function(e,t,n){return""+n},t.br=function(){return""},e}(),M=function(){function e(){this.seen={}}var t=e.prototype;return t.serialize=function(e){return e.toLowerCase().trim().replace(/<[!\/a-z].*?>/gi,"").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g,"").replace(/\s/g,"-")},t.getNextSafeSlug=function(e,t){var n=e,i=0;if(this.seen.hasOwnProperty(n)){i=this.seen[e];do{n=e+"-"+ ++i}while(this.seen.hasOwnProperty(n))}return t||(this.seen[e]=i,this.seen[n]=0),n},t.slug=function(e,t){void 0===t&&(t={});var n=this.serialize(e);return this.getNextSafeSlug(n,t.dryrun)},e}(),G=function(){function t(t){this.options=t||e.defaults,this.options.renderer=this.options.renderer||new $,this.renderer=this.options.renderer,this.renderer.options=this.options,this.textRenderer=new B,this.slugger=new M}t.parse=function(e,n){return new t(n).parse(e)},t.parseInline=function(e,n){return new t(n).parseInline(e)};var n=t.prototype;return n.parse=function(e,t){void 0===t&&(t=!0);var n,i,r,o,a,s,l,u,p,f,d,h,m,g,v,y,b,I,S,_="",D=e.length;for(n=0;n<D;n++)if(f=e[n],!(this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[f.type])||!1===(S=this.options.extensions.renderers[f.type].call({parser:this},f))&&["space","hr","heading","code","table","blockquote","list","html","paragraph","text"].includes(f.type))switch(f.type){case"space":continue;case"hr":_+=this.renderer.hr();continue;case"heading":_+=this.renderer.heading(this.parseInline(f.tokens),f.depth,c(this.parseInline(f.tokens,this.textRenderer)),this.slugger);continue;case"code":_+=this.renderer.code(f.text,f.lang,f.escaped);continue;case"table":for(u="",l="",o=f.header.length,i=0;i<o;i++)l+=this.renderer.tablecell(this.parseInline(f.header[i].tokens),{header:!0,align:f.align[i]});for(u+=this.renderer.tablerow(l),p="",o=f.rows.length,i=0;i<o;i++){for(l="",a=(s=f.rows[i]).length,r=0;r<a;r++)l+=this.renderer.tablecell(this.parseInline(s[r].tokens),{header:!1,align:f.align[r]});p+=this.renderer.tablerow(l)}_+=this.renderer.table(u,p);continue;case"blockquote":p=this.parse(f.tokens),_+=this.renderer.blockquote(p);continue;case"list":for(d=f.ordered,h=f.start,m=f.loose,o=f.items.length,p="",i=0;i<o;i++)y=(v=f.items[i]).checked,b=v.task,g="",v.task&&(I=this.renderer.checkbox(y),m?v.tokens.length>0&&"paragraph"===v.tokens[0].type?(v.tokens[0].text=I+" "+v.tokens[0].text,v.tokens[0].tokens&&v.tokens[0].tokens.length>0&&"text"===v.tokens[0].tokens[0].type&&(v.tokens[0].tokens[0].text=I+" "+v.tokens[0].tokens[0].text)):v.tokens.unshift({type:"text",text:I}):g+=I),g+=this.parse(v.tokens,m),p+=this.renderer.listitem(g,b,y);_+=this.renderer.list(p,d,h);continue;case"html":_+=this.renderer.html(f.text);continue;case"paragraph":_+=this.renderer.paragraph(this.parseInline(f.tokens));continue;case"text":for(p=f.tokens?this.parseInline(f.tokens):f.text;n+1<D&&"text"===e[n+1].type;)p+="\n"+((f=e[++n]).tokens?this.parseInline(f.tokens):f.text);_+=t?this.renderer.paragraph(p):p;continue;default:var L='Token with "'+f.type+'" type was not found.';if(this.options.silent)return;throw new Error(L)}else _+=S||"";return _},n.parseInline=function(e,t){t=t||this.renderer;var n,i,r,o="",a=e.length;for(n=0;n<a;n++)if(i=e[n],!(this.options.extensions&&this.options.extensions.renderers&&this.options.extensions.renderers[i.type])||!1===(r=this.options.extensions.renderers[i.type].call({parser:this},i))&&["escape","html","link","image","strong","em","codespan","br","del","text"].includes(i.type))switch(i.type){case"escape":o+=t.text(i.text);break;case"html":o+=t.html(i.text);break;case"link":o+=t.link(i.href,i.title,this.parseInline(i.tokens,t));break;case"image":o+=t.image(i.href,i.title,i.text);break;case"strong":o+=t.strong(this.parseInline(i.tokens,t));break;case"em":o+=t.em(this.parseInline(i.tokens,t));break;case"codespan":o+=t.codespan(i.text);break;case"br":o+=t.br();break;case"del":o+=t.del(this.parseInline(i.tokens,t));break;case"text":o+=t.text(i.text);break;default:var s='Token with "'+i.type+'" type was not found.';if(this.options.silent)return;throw new Error(s)}else o+=r||"";return o},t}();I.options=I.setOptions=function(e){return f(I.defaults,e),s(I.defaults),I},I.getDefaults=a,I.defaults=e.defaults,I.use=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var i,r=f.apply(void 0,[{}].concat(t)),o=I.defaults.extensions||{renderers:{},childTokens:{}};t.forEach((function(e){if(e.extensions&&(i=!0,e.extensions.forEach((function(e){if(!e.name)throw new Error("extension name required");if(e.renderer){var t=o.renderers?o.renderers[e.name]:null;o.renderers[e.name]=t?function(){for(var n=arguments.length,i=new Array(n),r=0;r<n;r++)i[r]=arguments[r];var o=e.renderer.apply(this,i);return!1===o&&(o=t.apply(this,i)),o}:e.renderer}if(e.tokenizer){if(!e.level||"block"!==e.level&&"inline"!==e.level)throw new Error("extension level must be 'block' or 'inline'");o[e.level]?o[e.level].unshift(e.tokenizer):o[e.level]=[e.tokenizer],e.start&&("block"===e.level?o.startBlock?o.startBlock.push(e.start):o.startBlock=[e.start]:"inline"===e.level&&(o.startInline?o.startInline.push(e.start):o.startInline=[e.start]))}e.childTokens&&(o.childTokens[e.name]=e.childTokens)}))),e.renderer&&function(){var t=I.defaults.renderer||new $;for(var n in e.renderer)!function(n){var i=t[n];t[n]=function(){for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];var s=e.renderer[n].apply(t,o);return!1===s&&(s=i.apply(t,o)),s}}(n);r.renderer=t}(),e.tokenizer&&function(){var t=I.defaults.tokenizer||new V;for(var n in e.tokenizer)!function(n){var i=t[n];t[n]=function(){for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];var s=e.tokenizer[n].apply(t,o);return!1===s&&(s=i.apply(t,o)),s}}(n);r.tokenizer=t}(),e.walkTokens){var t=I.defaults.walkTokens;r.walkTokens=function(n){e.walkTokens.call(this,n),t&&t.call(this,n)}}i&&(r.extensions=o),I.setOptions(r)}))},I.walkTokens=function(e,t){for(var n,i=o(e);!(n=i()).done;)!function(){var e=n.value;switch(t.call(I,e),e.type){case"table":for(var i,r=o(e.header);!(i=r()).done;){var a=i.value;I.walkTokens(a.tokens,t)}for(var s,l=o(e.rows);!(s=l()).done;)for(var c,u=o(s.value);!(c=u()).done;){var p=c.value;I.walkTokens(p.tokens,t)}break;case"list":I.walkTokens(e.items,t);break;default:I.defaults.extensions&&I.defaults.extensions.childTokens&&I.defaults.extensions.childTokens[e.type]?I.defaults.extensions.childTokens[e.type].forEach((function(n){I.walkTokens(e[n],t)})):e.tokens&&I.walkTokens(e.tokens,t)}}()},I.parseInline=function(e,t){if(null==e)throw new Error("marked.parseInline(): input parameter is undefined or null");if("string"!=typeof e)throw new Error("marked.parseInline(): input parameter is of type "+Object.prototype.toString.call(e)+", string expected");m(t=f({},I.defaults,t||{}));try{var n=Q.lexInline(e,t);return t.walkTokens&&I.walkTokens(n,t.walkTokens),G.parseInline(n,t)}catch(e){if(e.message+="\nPlease report this to https://github.com/markedjs/marked.",t.silent)return"<p>An error occurred:</p><pre>"+l(e.message+"",!0)+"</pre>";throw e}},I.Parser=G,I.parser=G.parse,I.Renderer=$,I.TextRenderer=B,I.Lexer=Q,I.lexer=Q.lex,I.Tokenizer=V,I.Slugger=M,I.parse=I;var q=I.options,z=I.setOptions,W=I.use,U=I.walkTokens,H=I.parseInline,Z=I,J=G.parse,K=Q.lex;e.Lexer=Q,e.Parser=G,e.Renderer=$,e.Slugger=M,e.TextRenderer=B,e.Tokenizer=V,e.getDefaults=a,e.lexer=K,e.marked=I,e.options=q,e.parse=Z,e.parseInline=H,e.parser=J,e.setOptions=z,e.use=W,e.walkTokens=U,Object.defineProperty(e,"__esModule",{value:!0})}(t)},function(e,t,n){"use strict";function i(e,t){var n=function(e){var t={};return s(l(e),(function(e){var n=e[0],i=e[1];s(i,(function(e){t[e]=n}))})),t}(e.pluralTypeToLanguages);return n[t]||n[h.call(t,/-/,1)[0]]||n.en}function r(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function o(e,t,n,i,r){if("string"!=typeof e)throw new TypeError("Polyglot.transformPhrase expects argument #1 to be string");if(null==t)return e;var o=e,a=i||b,s="number"==typeof t?{smart_count:t}:t;if(null!=s.smart_count&&e){var l=r||v,c=h.call(e,m),f=function(e,t,n){return e.pluralTypes[t](n)}(l,y(l,n||"en"),s.smart_count);o=p(c[f]||c[0])}return d.call(o,a,(function(e,t){return u(s,t)&&null!=s[t]?s[t]:e}))}function a(e){var t=e||{};this.phrases={},this.extend(t.phrases||{}),this.currentLocale=t.locale||"en";var n=t.allowMissing?o:null;this.onMissingKey="function"==typeof t.onMissingKey?t.onMissingKey:n,this.warn=t.warn||f,this.tokenRegex=function(e){var t=e&&e.prefix||"%{",n=e&&e.suffix||"}";if(t===m||n===m)throw new RangeError('"'+m+'" token is reserved for pluralization');return new RegExp(r(t)+"(.*?)"+r(n),"g")}(t.interpolation),this.pluralRules=t.pluralRules||v}var s=n(43),l=n(89),c=n(94),u=n(25),p=n(92),f=function(e){c(!1,e)},d=String.prototype.replace,h=String.prototype.split,m="||||",g=function(e){var t=e%100,n=t%10;return 11!==t&&1===n?0:2<=n&&n<=4&&!(t>=12&&t<=14)?1:2},v={pluralTypes:{arabic:function(e){if(e<3)return e;var t=e%100;return t>=3&&t<=10?3:t>=11?4:5},bosnian_serbian:g,chinese:function(){return 0},croatian:g,french:function(e){return e>=2?1:0},german:function(e){return 1!==e?1:0},russian:g,lithuanian:function(e){return e%10==1&&e%100!=11?0:e%10>=2&&e%10<=9&&(e%100<11||e%100>19)?1:2},czech:function(e){return 1===e?0:e>=2&&e<=4?1:2},polish:function(e){if(1===e)return 0;var t=e%10;return 2<=t&&t<=4&&(e%100<10||e%100>=20)?1:2},icelandic:function(e){return e%10!=1||e%100==11?1:0},slovenian:function(e){var t=e%100;return 1===t?0:2===t?1:3===t||4===t?2:3}},pluralTypeToLanguages:{arabic:["ar"],bosnian_serbian:["bs-Latn-BA","bs-Cyrl-BA","srl-RS","sr-RS"],chinese:["id","id-ID","ja","ko","ko-KR","lo","ms","th","th-TH","zh"],croatian:["hr","hr-HR"],german:["fa","da","de","en","es","fi","el","he","hi-IN","hu","hu-HU","it","nl","no","pt","sv","tr"],french:["fr","tl","pt-br"],russian:["ru","ru-RU"],lithuanian:["lt"],czech:["cs","cs-CZ","sk"],polish:["pl"],icelandic:["is"],slovenian:["sl-SL"]}},y=function(){var e={};return function(t,n){var r=e[n];return r&&!t.pluralTypes[r]&&(r=null,e[n]=r),r||(r=i(t,n))&&(e[n]=r),r}}(),b=/%\{(.*?)\}/g;a.prototype.locale=function(e){return e&&(this.currentLocale=e),this.currentLocale},a.prototype.extend=function(e,t){s(l(e||{}),(function(e){var n=e[0],i=e[1],r=t?t+"."+n:n;"object"==typeof i?this.extend(i,r):this.phrases[r]=i}),this)},a.prototype.unset=function(e,t){"string"==typeof e?delete this.phrases[e]:s(l(e||{}),(function(e){var n=e[0],i=e[1],r=t?t+"."+n:n;"object"==typeof i?this.unset(i,r):delete this.phrases[r]}),this)},a.prototype.clear=function(){this.phrases={}},a.prototype.replace=function(e){this.clear(),this.extend(e)},a.prototype.t=function(e,t){var n,i,r=null==t?{}:t;return"string"==typeof this.phrases[e]?n=this.phrases[e]:"string"==typeof r._?n=r._:this.onMissingKey?i=(0,this.onMissingKey)(e,r,this.currentLocale,this.tokenRegex,this.pluralRules):(this.warn('Missing translation for key: "'+e+'"'),i=e),"string"==typeof n&&(i=o(n,r,this.currentLocale,this.tokenRegex,this.pluralRules)),i},a.prototype.has=function(e){return u(this.phrases,e)},a.transformPhrase=function(e,t,n){return o(e,t,n)},e.exports=a},function(e,t,n){"use strict";function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var i={};return"abcdefghijklmnopqrst".split("").forEach((function(e){i[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},i)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,s,l=i(e),c=1;c<arguments.length;c++){for(var u in n=Object(arguments[c]))o.call(n,u)&&(l[u]=n[u]);if(r){s=r(n);for(var p=0;p<s.length;p++)a.call(n,s[p])&&(l[s[p]]=n[s[p]])}}return l}},function(e,t,n){function i(e,t){if(e===1/0||e===-1/0||e!=e||e&&e>-1e3&&e<1e3||B.call(/e/,t))return t;var n=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if("number"==typeof e){var i=e<0?-z(-e):z(e);if(i!==e){var r=String(i),o=j.call(t,r.length+1);return R.call(r,n,"$&_")+"."+R.call(R.call(o,/([0-9]{3})/g,"$&_"),/_$/,"")}}return R.call(t,n,"$&_")}function r(e,t,n){var i="double"===(n.quoteStyle||t)?'"':"'";return i+e+i}function o(e){return R.call(String(e),/"/g,"&quot;")}function a(e){return!("[object Array]"!==c(e)||J&&"object"==typeof e&&J in e)}function s(e){if(Z)return e&&"object"==typeof e&&e instanceof Symbol;if("symbol"==typeof e)return!0;if(!e||"object"!=typeof e||!H)return!1;try{return H.call(e),!0}catch(e){}return!1}function l(e,t){return te.call(e,t)}function c(e){return F.call(e)}function u(e){if(e.name)return e.name;var t=V.call(N.call(e),/^function\s*([\w$]+)/);return t?t[1]:null}function p(e,t){if(e.indexOf)return e.indexOf(t);for(var n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1}function f(e){if(!x||!e||"object"!=typeof e)return!1;try{x.call(e,x);try{O.call(e,O)}catch(e){return!0}return e instanceof WeakMap}catch(e){}return!1}function d(e){if(!A||!e||"object"!=typeof e)return!1;try{return A.call(e),!0}catch(e){}return!1}function h(e){if(!O||!e||"object"!=typeof e)return!1;try{O.call(e,O);try{x.call(e,x)}catch(e){return!0}return e instanceof WeakSet}catch(e){}return!1}function m(e,t){if(e.length>t.maxStringLength){var n=e.length-t.maxStringLength,i="... "+n+" more character"+(n>1?"s":"");return m(j.call(e,0,t.maxStringLength),t)+i}return r(R.call(R.call(e,/(['\\])/g,"\\$1"),/[\x00-\x1f]/g,g),"single",t)}function g(e){var t=e.charCodeAt(0),n={8:"b",9:"t",10:"n",12:"f",13:"r"}[t];return n?"\\"+n:"\\x"+(t<16?"0":"")+Q.call(t.toString(16))}function v(e){return"Object("+e+")"}function y(e){return e+" { ? }"}function b(e,t,n,i){return e+" ("+t+") {"+(i?I(n,i):G.call(n,", "))+"}"}function I(e,t){if(0===e.length)return"";var n="\n"+t.prev+t.base;return n+G.call(e,","+n)+"\n"+t.prev}function S(e,t){var n=a(e),i=[];if(n){i.length=e.length;for(var r=0;r<e.length;r++)i[r]=l(e,r)?t(e[r],e):""}var o,s="function"==typeof U?U(e):[];if(Z){o={};for(var c=0;c<s.length;c++)o["$"+s[c]]=s[c]}for(var u in e)l(e,u)&&(n&&String(Number(u))===u&&u<e.length||Z&&o["$"+u]instanceof Symbol||(B.call(/[^\w$]/,u)?i.push(t(u,e)+": "+t(e[u],e)):i.push(u+": "+t(e[u],e))));if("function"==typeof U)for(var p=0;p<s.length;p++)K.call(e,s[p])&&i.push("["+t(s[p])+"]: "+t(e[s[p]],e));return i}var _="function"==typeof Map&&Map.prototype,D=Object.getOwnPropertyDescriptor&&_?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,L=_&&D&&"function"==typeof D.get?D.get:null,k=_&&Map.prototype.forEach,w="function"==typeof Set&&Set.prototype,T=Object.getOwnPropertyDescriptor&&w?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,C=w&&T&&"function"==typeof T.get?T.get:null,P=w&&Set.prototype.forEach,x="function"==typeof WeakMap&&WeakMap.prototype?WeakMap.prototype.has:null,O="function"==typeof WeakSet&&WeakSet.prototype?WeakSet.prototype.has:null,A="function"==typeof WeakRef&&WeakRef.prototype?WeakRef.prototype.deref:null,E=Boolean.prototype.valueOf,F=Object.prototype.toString,N=Function.prototype.toString,V=String.prototype.match,j=String.prototype.slice,R=String.prototype.replace,Q=String.prototype.toUpperCase,$=String.prototype.toLowerCase,B=RegExp.prototype.test,M=Array.prototype.concat,G=Array.prototype.join,q=Array.prototype.slice,z=Math.floor,W="function"==typeof BigInt?BigInt.prototype.valueOf:null,U=Object.getOwnPropertySymbols,H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol.prototype.toString:null,Z="function"==typeof Symbol&&"object"==typeof Symbol.iterator,J="function"==typeof Symbol&&Symbol.toStringTag&&(Symbol.toStringTag,1)?Symbol.toStringTag:null,K=Object.prototype.propertyIsEnumerable,Y=("function"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(e){return e.__proto__}:null),X=n(102).custom,ee=X&&s(X)?X:null;e.exports=function e(t,n,g,_){function D(t,n,i){if(n&&(_=q.call(_)).push(n),i){var r={depth:w.depth};return l(w,"quoteStyle")&&(r.quoteStyle=w.quoteStyle),e(t,r,g+1,_)}return e(t,w,g+1,_)}var w=n||{};if(l(w,"quoteStyle")&&"single"!==w.quoteStyle&&"double"!==w.quoteStyle)throw new TypeError('option "quoteStyle" must be "single" or "double"');if(l(w,"maxStringLength")&&("number"==typeof w.maxStringLength?w.maxStringLength<0&&w.maxStringLength!==1/0:null!==w.maxStringLength))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var T=!l(w,"customInspect")||w.customInspect;if("boolean"!=typeof T&&"symbol"!==T)throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");if(l(w,"indent")&&null!==w.indent&&"\t"!==w.indent&&!(parseInt(w.indent,10)===w.indent&&w.indent>0))throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');if(l(w,"numericSeparator")&&"boolean"!=typeof w.numericSeparator)throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');var x=w.numericSeparator;if(void 0===t)return"undefined";if(null===t)return"null";if("boolean"==typeof t)return t?"true":"false";if("string"==typeof t)return m(t,w);if("number"==typeof t){if(0===t)return 1/0/t>0?"0":"-0";var O=String(t);return x?i(t,O):O}if("bigint"==typeof t){var A=String(t)+"n";return x?i(t,A):A}var F=void 0===w.depth?5:w.depth;if(void 0===g&&(g=0),g>=F&&F>0&&"object"==typeof t)return a(t)?"[Array]":"[Object]";var N=function(e,t){var n;if("\t"===e.indent)n="\t";else{if(!("number"==typeof e.indent&&e.indent>0))return null;n=G.call(Array(e.indent+1)," ")}return{base:n,prev:G.call(Array(t+1),n)}}(w,g);if(void 0===_)_=[];else if(p(_,t)>=0)return"[Circular]";if("function"==typeof t){var V=u(t),Q=S(t,D);return"[Function"+(V?": "+V:" (anonymous)")+"]"+(Q.length>0?" { "+G.call(Q,", ")+" }":"")}if(s(t)){var B=Z?R.call(String(t),/^(Symbol\(.*\))_[^)]*$/,"$1"):H.call(t);return"object"!=typeof t||Z?B:v(B)}if(function(e){return!(!e||"object"!=typeof e)&&("undefined"!=typeof HTMLElement&&e instanceof HTMLElement||"string"==typeof e.nodeName&&"function"==typeof e.getAttribute)}(t)){for(var z="<"+$.call(String(t.nodeName)),U=t.attributes||[],X=0;X<U.length;X++)z+=" "+U[X].name+"="+r(o(U[X].value),"double",w);return z+=">",t.childNodes&&t.childNodes.length&&(z+="..."),z+"</"+$.call(String(t.nodeName))+">"}if(a(t)){if(0===t.length)return"[]";var te=S(t,D);return N&&!function(e){for(var t=0;t<e.length;t++)if(p(e[t],"\n")>=0)return!1;return!0}(te)?"["+I(te,N)+"]":"[ "+G.call(te,", ")+" ]"}if(function(e){return!("[object Error]"!==c(e)||J&&"object"==typeof e&&J in e)}(t)){var ne=S(t,D);return"cause"in t&&!K.call(t,"cause")?"{ ["+String(t)+"] "+G.call(M.call("[cause]: "+D(t.cause),ne),", ")+" }":0===ne.length?"["+String(t)+"]":"{ ["+String(t)+"] "+G.call(ne,", ")+" }"}if("object"==typeof t&&T){if(ee&&"function"==typeof t[ee])return t[ee]();if("symbol"!==T&&"function"==typeof t.inspect)return t.inspect()}if(function(e){if(!L||!e||"object"!=typeof e)return!1;try{L.call(e);try{C.call(e)}catch(e){return!0}return e instanceof Map}catch(e){}return!1}(t)){var ie=[];return k.call(t,(function(e,n){ie.push(D(n,t,!0)+" => "+D(e,t))})),b("Map",L.call(t),ie,N)}if(function(e){if(!C||!e||"object"!=typeof e)return!1;try{C.call(e);try{L.call(e)}catch(e){return!0}return e instanceof Set}catch(e){}return!1}(t)){var re=[];return P.call(t,(function(e){re.push(D(e,t))})),b("Set",C.call(t),re,N)}if(f(t))return y("WeakMap");if(h(t))return y("WeakSet");if(d(t))return y("WeakRef");if(function(e){return!("[object Number]"!==c(e)||J&&"object"==typeof e&&J in e)}(t))return v(D(Number(t)));if(function(e){if(!e||"object"!=typeof e||!W)return!1;try{return W.call(e),!0}catch(e){}return!1}(t))return v(D(W.call(t)));if(function(e){return!("[object Boolean]"!==c(e)||J&&"object"==typeof e&&J in e)}(t))return v(E.call(t));if(function(e){return!("[object String]"!==c(e)||J&&"object"==typeof e&&J in e)}(t))return v(D(String(t)));if(!function(e){return!("[object Date]"!==c(e)||J&&"object"==typeof e&&J in e)}(t)&&!function(e){return!("[object RegExp]"!==c(e)||J&&"object"==typeof e&&J in e)}(t)){var oe=S(t,D),ae=Y?Y(t)===Object.prototype:t instanceof Object||t.constructor===Object,se=t instanceof Object?"":"null prototype",le=!ae&&J&&Object(t)===t&&J in t?j.call(c(t),8,-1):se?"Object":"",ce=(ae||"function"!=typeof t.constructor?"":t.constructor.name?t.constructor.name+" ":"")+(le||se?"["+G.call(M.call([],le||[],se||[]),": ")+"] ":"");return 0===oe.length?ce+"{}":N?ce+"{"+I(oe,N)+"}":ce+"{ "+G.call(oe,", ")+" }"}return String(t)};var te=Object.prototype.hasOwnProperty||function(e){return e in this}},function(e,t,n){"use strict";var i;if(!Object.keys){var r=Object.prototype.hasOwnProperty,o=Object.prototype.toString,a=n(26),s=Object.prototype.propertyIsEnumerable,l=!s.call({toString:null},"toString"),c=s.call((function(){}),"prototype"),u=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],p=function(e){var t=e.constructor;return t&&t.prototype===e},f={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$onmozfullscreenchange:!0,$onmozfullscreenerror:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},d=function(){if("undefined"==typeof window)return!1;for(var e in window)try{if(!f["$"+e]&&r.call(window,e)&&null!==window[e]&&"object"==typeof window[e])try{p(window[e])}catch(e){return!0}}catch(e){return!0}return!1}(),h=function(e){if("undefined"==typeof window||!d)return p(e);try{return p(e)}catch(e){return!1}};i=function(e){var t=null!==e&&"object"==typeof e,n="[object Function]"===o.call(e),i=a(e),s=t&&"[object String]"===o.call(e),p=[];if(!t&&!n&&!i)throw new TypeError("Object.keys called on a non-object");var f=c&&n;if(s&&e.length>0&&!r.call(e,0))for(var d=0;d<e.length;++d)p.push(String(d));if(i&&e.length>0)for(var m=0;m<e.length;++m)p.push(String(m));else for(var g in e)f&&"prototype"===g||!r.call(e,g)||p.push(String(g));if(l)for(var v=h(e),y=0;y<u.length;++y)v&&"constructor"===u[y]||!r.call(e,u[y])||p.push(u[y]);return p}}e.exports=i},function(e,t,n){"use strict";var i=Array.prototype.slice,r=n(26),o=Object.keys,a=o?function(e){return o(e)}:n(87),s=Object.keys;a.shim=function(){return Object.keys?function(){var e=Object.keys(arguments);return e&&e.length===arguments.length}(1,2)||(Object.keys=function(e){return s(r(e)?i.call(e):e)}):Object.keys=a,Object.keys||a},e.exports=a},function(e,t,n){"use strict";var i=n(2),r=n(4),o=n(27),a=n(28),s=n(90),l=r(a(),Object);i(l,{getPolyfill:a,implementation:o,shim:s}),e.exports=l},function(e,t,n){"use strict";var i=n(28),r=n(2);e.exports=function(){var e=i();return r(Object,{entries:e},{entries:function(){return Object.entries!==e}}),e}},function(e,t){function n(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function r(e){if(c===setTimeout)return setTimeout(e,0);if((c===n||!c)&&setTimeout)return c=setTimeout,setTimeout(e,0);try{return c(e,0)}catch(t){try{return c.call(null,e,0)}catch(t){return c.call(this,e,0)}}}function o(){h&&f&&(h=!1,f.length?d=f.concat(d):m=-1,d.length&&a())}function a(){if(!h){var e=r(o);h=!0;for(var t=d.length;t;){for(f=d,d=[];++m<t;)f&&f[m].run();m=-1,t=d.length}f=null,h=!1,function(e){if(u===clearTimeout)return clearTimeout(e);if((u===i||!u)&&clearTimeout)return u=clearTimeout,clearTimeout(e);try{u(e)}catch(t){try{return u.call(null,e)}catch(t){return u.call(this,e)}}}(e)}}function s(e,t){this.fun=e,this.array=t}function l(){}var c,u,p=e.exports={};!function(){try{c="function"==typeof setTimeout?setTimeout:n}catch(e){c=n}try{u="function"==typeof clearTimeout?clearTimeout:i}catch(e){u=i}}();var f,d=[],h=!1,m=-1;p.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];d.push(new s(e,t)),1!==d.length||h||r(a)},s.prototype.run=function(){this.fun.apply(null,this.array)},p.title="browser",p.browser=!0,p.env={},p.argv=[],p.version="",p.versions={},p.on=l,p.addListener=l,p.once=l,p.off=l,p.removeListener=l,p.removeAllListeners=l,p.emit=l,p.prependListener=l,p.prependOnceListener=l,p.listeners=function(e){return[]},p.binding=function(e){throw new Error("process.binding is not supported")},p.cwd=function(){return"/"},p.chdir=function(e){throw new Error("process.chdir is not supported")},p.umask=function(){return 0}},function(e,t,n){"use strict";var i=n(4),r=n(2),o=n(29),a=n(30),s=n(93),l=i(a());r(l,{getPolyfill:a,implementation:o,shim:s}),e.exports=l},function(e,t,n){"use strict";var i=n(2),r=n(30);e.exports=function(){var e=r();return i(String.prototype,{trim:e},{trim:function(){return String.prototype.trim!==e}}),e}},function(e,t,n){"use strict";(function(t){var n=function(){};if("production"!==t.env.NODE_ENV){var i=function(e,t){var n=arguments.length;t=new Array(n>1?n-1:0);for(var i=1;i<n;i++)t[i-1]=arguments[i];var r=0,o="Warning: "+e.replace(/%s/g,(function(){return t[r++]}));try{throw new Error(o)}catch(e){}};n=function(e,t,n){var r=arguments.length;n=new Array(r>2?r-2:0);for(var o=2;o<r;o++)n[o-2]=arguments[o];if(void 0===t)throw new Error("`warning(condition, format, ...args)` requires a warning message argument");e||i.apply(null,[t].concat(n))}}e.exports=n}).call(t,n(91))},function(e,t,n){function i(e,t){return new a(t).process(e)}var r=n(31),o=n(32),a=n(96);for(var s in(t=e.exports=i).filterXSS=i,t.FilterXSS=a,r)t[s]=r[s];for(var s in o)t[s]=o[s];"undefined"!=typeof window&&(window.filterXSS=e.exports),"undefined"!=typeof self&&"undefined"!=typeof DedicatedWorkerGlobalScope&&self instanceof DedicatedWorkerGlobalScope&&(self.filterXSS=e.exports)},function(e,t,n){function i(e){return null==e}function r(e){(e=function(e){var t={};for(var n in e)t[n]=e[n];return t}(e||{})).stripIgnoreTag&&(e.onIgnoreTag,e.onIgnoreTag=a.onIgnoreTagStripAll),e.whiteList=e.whiteList||e.allowList||a.whiteList,e.onTag=e.onTag||a.onTag,e.onTagAttr=e.onTagAttr||a.onTagAttr,e.onIgnoreTag=e.onIgnoreTag||a.onIgnoreTag,e.onIgnoreTagAttr=e.onIgnoreTagAttr||a.onIgnoreTagAttr,e.safeAttrValue=e.safeAttrValue||a.safeAttrValue,e.escapeHtml=e.escapeHtml||a.escapeHtml,this.options=e,!1===e.css?this.cssFilter=!1:(e.css=e.css||{},this.cssFilter=new o(e.css))}var o=n(7).FilterCSS,a=n(31),s=n(32),l=s.parseTag,c=s.parseAttr,u=n(11);r.prototype.process=function(e){if(!(e=(e=e||"").toString()))return"";var t=this.options,n=t.whiteList,r=t.onTag,o=t.onIgnoreTag,s=t.onTagAttr,p=t.onIgnoreTagAttr,f=t.safeAttrValue,d=t.escapeHtml,h=this.cssFilter;t.stripBlankChar&&(e=a.stripBlankChar(e)),t.allowCommentTag||(e=a.stripCommentTag(e));var m=!1;t.stripIgnoreTagBody&&(m=a.StripTagBody(t.stripIgnoreTagBody,o),o=m.onIgnoreTag);var g=l(e,(function(e,t,a,l,m){var g,v={sourcePosition:e,position:t,isClosing:m,isWhite:n.hasOwnProperty(a)};if(!i(g=r(a,l,v)))return g;if(v.isWhite){if(v.isClosing)return"</"+a+">";var y=function(e){var t=u.spaceIndex(e);if(-1===t)return{html:"",closing:"/"===e[e.length-2]};var n="/"===(e=u.trim(e.slice(t+1,-1)))[e.length-1];return n&&(e=u.trim(e.slice(0,-1))),{html:e,closing:n}}(l),b=n[a],I=c(y.html,(function(e,t){var n,r=-1!==u.indexOf(b,e);return i(n=s(a,e,t,r))?r?(t=f(a,e,t,h))?e+'="'+t+'"':e:i(n=p(a,e,t,r))?void 0:n:n}));return l="<"+a,I&&(l+=" "+I),y.closing&&(l+=" /"),l+">"}return i(g=o(a,l,v))?d(l):g}),d);return m&&(g=m.remove(g)),g},e.exports=r},function(e,t){e.exports={smile:"e3/2018new_weixioa02_org.png",lovely:"09/2018new_keai_org.png",happy:"1e/2018new_taikaixin_org.png",clap:"6e/2018new_guzhang_thumb.png",whee:"33/2018new_xixi_thumb.png",haha:"8f/2018new_haha_thumb.png","laugh and cry":"4a/2018new_xiaoku_thumb.png",wink:"43/2018new_jiyan_org.png",greddy:"fa/2018new_chanzui_org.png",awkward:"a3/2018new_heixian_thumb.png",sweat:"28/2018new_han_org.png","pick nose":"9a/2018new_wabi_thumb.png",hum:"7c/2018new_heng_thumb.png",angry:"f6/2018new_nu_thumb.png",grievance:"a5/2018new_weiqu_thumb.png",poor:"96/2018new_kelian_org.png",disappoint:"aa/2018new_shiwang_thumb.png",sad:"ee/2018new_beishang_org.png",tear:"6e/2018new_leimu_org.png","no way":"83/2018new_kuxiao_org.png",shy:"c1/2018new_haixiu_org.png",dirt:"10/2018new_wu_thumb.png","love you":"f6/2018new_aini_org.png",kiss:"2c/2018new_qinqin_thumb.png",amorousness:"9d/2018new_huaxin_org.png",longing:"c9/2018new_chongjing_org.png",desire:"3e/2018new_tianping_thumb.png","bad laugh":"4d/2018new_huaixiao_org.png",blackness:"9e/2018new_yinxian_org.png","laugh without word":"2d/2018new_xiaoerbuyu_org.png",titter:"71/2018new_touxiao_org.png",cool:"c4/2018new_ku_org.png","not easy":"aa/2018new_bingbujiandan_thumb.png",think:"30/2018new_sikao_org.png",question:"b8/2018new_ningwen_org.png","no idea":"2a/2018new_wenhao_thumb.png",dizzy:"07/2018new_yun_thumb.png",bomb:"a2/2018new_shuai_thumb.png",bone:"a1/2018new_kulou_thumb.png","be quiet":"b0/2018new_xu_org.png","shut up":"62/2018new_bizui_org.png",stupid:"dd/2018new_shayan_org.png","surprise ":"49/2018new_chijing_org.png",vomit:"08/2018new_tu_org.png",cold:"40/2018new_kouzhao_thumb.png",sick:"3b/2018new_shengbing_thumb.png",bye:"fd/2018new_baibai_thumb.png","look down on":"da/2018new_bishi_org.png","white eye":"ef/2018new_landelini_org.png","left hum":"43/2018new_zuohengheng_thumb.png","right hum":"c1/2018new_youhengheng_thumb.png",crazy:"17/2018new_zhuakuang_org.png","scold ":"87/2018new_zhouma_thumb.png","hit on face":"cb/2018new_dalian_org.png",wow:"ae/2018new_ding_org.png",fan:"86/2018new_hufen02_org.png",money:"a2/2018new_qian_thumb.png",yawn:"55/2018new_dahaqian_org.png",sleepy:"3c/2018new_kun_thumb.png",sleep:"e2/2018new_shuijiao_thumb.png","watermelon ":"01/2018new_chigua_thumb.png",doge:"a1/2018new_doge02_org.png",dog:"22/2018new_erha_org.png",cat:"7b/2018new_miaomiao_thumb.png",thumb:"e6/2018new_zan_org.png",good:"8a/2018new_good_org.png",ok:"45/2018new_ok_org.png",yeah:"29/2018new_ye_thumb.png","shack hand":"e9/2018new_woshou_thumb.png",bow:"e7/2018new_zuoyi_org.png",come:"42/2018new_guolai_thumb.png",punch:"86/2018new_quantou_thumb.png"}},function(e,t){e.exports={nick:"NickName",mail:"E-Mail",link:"Website(http://)",nickFail:"NickName cannot be less than 3 bytes.",mailFail:"Please confirm your email address.",sofa:"No comment yet.",submit:"Submit",reply:"Reply",cancelReply:"Cancel reply",comments:"Comments",cancel:"Cancel",confirm:"Confirm",continue:"Continue",more:"Load More...",preview:"Preview",emoji:"Emoji",expand:"See more....",seconds:"seconds ago",minutes:"minutes ago",hours:"hours ago",days:"days ago",now:"just now",uploading:"Uploading ...",uploadDone:"Upload completed!",busy:"Submit is busy, please wait...","code-98":"Valine initialization failed, please check your version of av-min.js.","code-99":"Valine initialization failed, Please check the `el` element in the init method.","code-100":"Valine initialization failed, Please check your appId and appKey.","code-140":"The total number of API calls today has exceeded the development version limit.","code-401":"Unauthorized operation, Please check your appId and appKey.","code-403":"Access denied by API domain white list, Please check your security domain."}},function(e,t){e.exports={nick:"ニックネーム",mail:"メールアドレス",link:"サイト(http://)",nickFail:"3バイト以上のニックネームをご入力ください.",mailFail:"メールアドレスをご確認ください.",sofa:"コメントしましょう~",submit:"提出する",reply:"返信する",cancelReply:"キャンセル",comments:"コメント",cancel:"キャンセル",confirm:"確認する",continue:"继续",more:"さらに読み込む...",preview:"プレビュー",emoji:"絵文字",expand:"もっと見る",seconds:"秒前",minutes:"分前",hours:"時間前",days:"日前",now:"たっだ今",uploading:"アップロード中...",uploadDone:"アップロードが完了しました!",busy:"20 秒間隔で提出してください    ...","code-98":"ロードエラーです。av-min.js のバージョンを確認してください.","code-99":"ロードエラーです。initにある`el`エレメントを確認ください.","code-100":"ロードエラーです。AppIdとAppKeyを確認ください.","code-140":"今日のAPIコールの総数が開発バージョンの上限を超えた.","code-401":"権限が制限されています。AppIdとAppKeyを確認ください.","code-403":"アクセスがAPIなどに制限されました、ドメイン名のセキュリティ設定を確認ください"}},function(e,t){e.exports={nick:"昵称",mail:"邮箱",link:"网址(http://)",nickFail:"昵称不能少于3个字符",mailFail:"请填写正确的邮件地址",sofa:"来发评论吧~",submit:"提交",reply:"回复",cancelReply:"取消回复",comments:"评论",cancel:"取消",confirm:"确认",continue:"继续",more:"加载更多...",preview:"预览",emoji:"表情",expand:"查看更多...",seconds:"秒前",minutes:"分钟前",hours:"小时前",days:"天前",now:"刚刚",uploading:"正在传输...",uploadDone:"传输完成!",busy:"操作频繁，请稍候再试...","code-98":"Valine 初始化失败，请检查 av-min.js 版本","code-99":"Valine 初始化失败，请检查init中的`el`元素.","code-100":"Valine 初始化失败，请检查你的AppId和AppKey.","code-140":"今日 API 调用总次数已超过开发版限制.","code-401":"未经授权的操作，请检查你的AppId和AppKey.","code-403":"访问被API域名白名单拒绝，请检查你的安全域名设置."}},function(e,t){e.exports={nick:"暱稱",mail:"郵箱",link:"網址(http://)",nickFail:"昵稱不能少於3個字符",mailFail:"請填寫正確的郵件地址",sofa:"來發評論吧~",submit:"提交",reply:"回覆",cancelReply:"取消回覆",comments:"評論",cancel:"取消",confirm:"確認",continue:"繼續",more:"加載更多...",preview:"預覽",emoji:"表情",expand:"查看更多...",seconds:"秒前",minutes:"分鐘前",hours:"小時前",days:"天前",now:"剛剛",uploading:"正在上傳...",uploadDone:"上傳完成!",busy:"操作頻繁，請稍候再試...","code-98":"Valine 初始化失敗，請檢查 av-min.js 版本","code-99":"Valine 初始化失敗，請檢查init中的`el`元素.","code-100":"Valine 初始化失敗，請檢查你的AppId和AppKey.","code-140":"今日 API 調用總次數已超過開發版限制.","code-401":"未經授權的操作，請檢查你的AppId和AppKey.","code-403":"訪問被API域名白名單拒絕，請檢查你的安全域名設置."}},function(e,t){},function(e,t,n){var i=n(104);"string"==typeof i&&(i=[[e.i,i,""]]);var r={transform:void 0};n(106)(i,r),i.locals&&(e.exports=i.locals)},function(e,t,n){(t=n(105)(!1)).push([e.i,'.v[data-class=v]{font-size:16px;text-align:left}.v[data-class=v] *{-webkit-box-sizing:border-box;box-sizing:border-box;line-height:1.75}.v[data-class=v] .vinput,.v[data-class=v] .veditor,.v[data-class=v] p,.v[data-class=v] pre code,.v[data-class=v] .status-bar{color:#555}.v[data-class=v] .vtime,.v[data-class=v] .vsys{color:#b3b3b3}.v[data-class=v] .text-right{text-align:right}.v[data-class=v] .text-center{text-align:center}.v[data-class=v] img{max-width:100%;border:none}.v[data-class=v] hr{margin:.825em 0;border-color:#f6f6f6;border-style:dashed}.v[data-class=v].hide-avatar .vimg{display:none}.v[data-class=v] a{position:relative;cursor:pointer;color:#1abc9c;text-decoration:none;display:inline-block}.v[data-class=v] a:hover{color:#d7191a}.v[data-class=v] pre,.v[data-class=v] code{background-color:#f8f8f8;padding:.2em .4em;border-radius:3px;font-size:85%;margin:0}.v[data-class=v] pre{padding:10px;overflow:auto;line-height:1.45}.v[data-class=v] pre code{padding:0;background:transparent;white-space:pre-wrap;word-break:keep-all}.v[data-class=v] blockquote{color:#666;margin:.5em 0;padding:0 0 0 1em;border-left:8px solid rgba(238,238,238,.5)}.v[data-class=v] .vinput{border:none;resize:none;outline:none;padding:10px 5px;max-width:100%;font-size:.775em;-webkit-box-sizing:border-box;box-sizing:border-box}.v[data-class=v] input[type=checkbox],.v[data-class=v] input[type=radio]{display:inline-block;vertical-align:middle;margin-top:-2px}.v[data-class=v] .vicon{cursor:pointer;display:inline-block;overflow:hidden;fill:#555;vertical-align:middle}.v[data-class=v] .vicon+.vicon{margin-left:10px}.v[data-class=v] .vicon.actived{fill:#66b1ff}.v[data-class=v] .vrow{font-size:0;padding:10px 0}.v[data-class=v] .vrow .vcol{display:inline-block;vertical-align:middle;font-size:14px}.v[data-class=v] .vrow .vcol.vcol-20{width:20%}.v[data-class=v] .vrow .vcol.vcol-30{width:30%}.v[data-class=v] .vrow .vcol.vcol-40{width:40%}.v[data-class=v] .vrow .vcol.vcol-50{width:50%}.v[data-class=v] .vrow .vcol.vcol-60{width:60%}.v[data-class=v] .vrow .vcol.vcol-70{width:70%}.v[data-class=v] .vrow .vcol.vcol-80{width:80%}.v[data-class=v] .vrow .vcol.vctrl{font-size:12px}.v[data-class=v] .vemoji,.v[data-class=v] .emoji{width:26px;height:26px;overflow:hidden;vertical-align:middle;margin:0 1px;display:inline-block}.v[data-class=v] .vwrap{border:1px solid #f0f0f0;border-radius:4px;margin-bottom:10px;overflow:hidden;position:relative;padding:10px}.v[data-class=v] .vwrap input{background:transparent}.v[data-class=v] .vwrap .vedit{position:relative;padding-top:10px}.v[data-class=v] .vwrap .cancel-reply-btn{position:absolute;right:5px;top:5px;cursor:pointer}.v[data-class=v] .vwrap .vemojis{display:none;font-size:18px;max-height:145px;overflow:auto;padding-bottom:10px;-webkit-box-shadow:0px 0 1px #f0f0f0;box-shadow:0px 0 1px #f0f0f0}.v[data-class=v] .vwrap .vemojis i{font-style:normal;padding-top:7px;width:36px;cursor:pointer;text-align:center;display:inline-block;vertical-align:middle}.v[data-class=v] .vwrap .vpreview{padding:7px;-webkit-box-shadow:0px 0 1px #f0f0f0;box-shadow:0px 0 1px #f0f0f0}.v[data-class=v] .vwrap .vheader .vinput{width:33.33%;border-bottom:1px #dedede dashed}.v[data-class=v] .vwrap .vheader.item2 .vinput{width:50%}.v[data-class=v] .vwrap .vheader.item1 .vinput{width:100%}.v[data-class=v] .vwrap .vheader .vinput:focus{border-bottom-color:#eb5055}@media screen and (max-width: 520px){.v[data-class=v] .vwrap .vheader .vinput{width:100%}.v[data-class=v] .vwrap .vheader.item2 .vinput{width:100%}}.v[data-class=v] .vpower{color:#999;font-size:.75em;padding:.5em 0}.v[data-class=v] .vpower a{font-size:.75em}.v[data-class=v] .vcount{padding:5px;font-weight:600;font-size:1.25em}.v[data-class=v] ul,.v[data-class=v] ol{padding:0;margin-left:1.25em}.v[data-class=v] .txt-center{text-align:center}.v[data-class=v] .txt-right{text-align:right}.v[data-class=v] .veditor{width:100%;min-height:8.75em;font-size:.875em;background:transparent;resize:vertical;-webkit-transition:all .25s ease;transition:all .25s ease}.v[data-class=v] .vbtn{-webkit-transition-duration:.4s;transition-duration:.4s;text-align:center;color:#555;border:1px solid #ededed;border-radius:.3em;display:inline-block;background:transparent;margin-bottom:0;font-weight:400;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;white-space:nowrap;padding:.5em 1.25em;font-size:.875em;line-height:1.42857143;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:none}.v[data-class=v] .vbtn+.vbtn{margin-left:1.25em}.v[data-class=v] .vbtn:active,.v[data-class=v] .vbtn:hover{color:#3090e4;border-color:#3090e4}.v[data-class=v] .vbtn:disabled{border-color:#e1e1e1;color:#e1e1e1;background-color:#fdfafa;cursor:not-allowed}.v[data-class=v] .vempty{padding:1.25em;text-align:center;color:#555;overflow:auto}.v[data-class=v] .vsys{display:inline-block;padding:.2em .5em;font-size:.75em;border-radius:.2em;margin-right:.3em}@media screen and (max-width: 520px){.v[data-class=v] .vsys{display:none}}.v[data-class=v] .vcards{width:100%}.v[data-class=v] .vcards .vcard{padding-top:1.25em;position:relative;display:block}.v[data-class=v] .vcards .vcard:after{content:"";clear:both;display:block}.v[data-class=v] .vcards .vcard .vimg{width:3.125em;height:3.125em;float:left;border-radius:50%;margin-right:.7525em;border:1px solid #f5f5f5;padding:.125em}@media screen and (max-width: 720px){.v[data-class=v] .vcards .vcard .vimg{width:2.5em;height:2.5em}}.v[data-class=v] .vcards .vcard .vhead{line-height:1.5;margin-top:0}.v[data-class=v] .vcards .vcard .vhead .vnick{position:relative;font-size:.875em;font-weight:500;margin-right:.875em;cursor:pointer;text-decoration:none;display:inline-block}.v[data-class=v] .vcards .vcard .vhead .vnick:hover{color:#d7191a}.v[data-class=v] .vcards .vcard .vh{overflow:hidden;padding-bottom:.5em;border-bottom:1px dashed #f5f5f5}.v[data-class=v] .vcards .vcard .vh .vtime{font-size:.75em;margin-right:.875em}.v[data-class=v] .vcards .vcard .vh .vmeta{line-height:1;position:relative}.v[data-class=v] .vcards .vcard .vh .vmeta .vat{font-size:.8125em;color:#ef2f11;cursor:pointer;float:right}.v[data-class=v] .vcards .vcard:last-child .vh{border-bottom:none}.v[data-class=v] .vcards .vcard .vcontent{word-wrap:break-word;word-break:break-all;font-size:.875em;line-height:2;position:relative;margin-bottom:.75em;padding-top:.625em}.v[data-class=v] .vcards .vcard .vcontent.expand{cursor:pointer;max-height:8em;overflow:hidden}.v[data-class=v] .vcards .vcard .vcontent.expand::before{display:block;content:"";position:absolute;width:100%;left:0;top:0;bottom:3.15em;background:-webkit-gradient(linear, left top, left bottom, from(rgba(255, 255, 255, 0)), to(rgba(255, 255, 255, 0.9)));background:linear-gradient(180deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.9));z-index:999}.v[data-class=v] .vcards .vcard .vcontent.expand::after{display:block;content:attr(data-expand);text-align:center;color:#828586;position:absolute;width:100%;height:3.15em;line-height:3.15em;left:0;bottom:0;z-index:999;background:rgba(255,255,255,.9)}.v[data-class=v] .vcards .vcard .vquote{padding-left:1em;border-left:1px dashed rgba(238,238,238,.5)}.v[data-class=v] .vcards .vcard .vquote .vimg{width:2.225em;height:2.225em}.v[data-class=v] .vpage .vmore{margin:1em 0}.v[data-class=v] .clear{content:"";display:block;clear:both}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes pulse{50%{background:#dcdcdc}}@keyframes pulse{50%{background:#dcdcdc}}.v[data-class=v] .vspinner{width:22px;height:22px;display:inline-block;border:6px double #a0a0a0;border-top-color:transparent;border-bottom-color:transparent;border-radius:50%;-webkit-animation:spin 1s infinite linear;animation:spin 1s infinite linear;position:relative;vertical-align:middle;margin:0 5px}[data-theme=dark] .v[data-class=v] .vinput,[data-theme=dark] .v[data-class=v] .veditor,[data-theme=dark] .v[data-class=v] p,[data-theme=dark] .v[data-class=v] pre code,[data-theme=dark] .v[data-class=v] .status-bar,.dark .v[data-class=v] .vinput,.dark .v[data-class=v] .veditor,.dark .v[data-class=v] p,.dark .v[data-class=v] pre code,.dark .v[data-class=v] .status-bar,.theme__dark .v[data-class=v] .vinput,.theme__dark .v[data-class=v] .veditor,.theme__dark .v[data-class=v] p,.theme__dark .v[data-class=v] pre code,.theme__dark .v[data-class=v] .status-bar,.night .v[data-class=v] .vinput,.night .v[data-class=v] .veditor,.night .v[data-class=v] p,.night .v[data-class=v] pre code,.night .v[data-class=v] .status-bar{color:#b2b2b5}[data-theme=dark] .v[data-class=v] .vtime,[data-theme=dark] .v[data-class=v] .vsys,.dark .v[data-class=v] .vtime,.dark .v[data-class=v] .vsys,.theme__dark .v[data-class=v] .vtime,.theme__dark .v[data-class=v] .vsys,.night .v[data-class=v] .vtime,.night .v[data-class=v] .vsys{color:#929298}[data-theme=dark] .v[data-class=v] pre,[data-theme=dark] .v[data-class=v] code,[data-theme=dark] .v[data-class=v] pre code,.dark .v[data-class=v] pre,.dark .v[data-class=v] code,.dark .v[data-class=v] pre code,.theme__dark .v[data-class=v] pre,.theme__dark .v[data-class=v] code,.theme__dark .v[data-class=v] pre code,.night .v[data-class=v] pre,.night .v[data-class=v] code,.night .v[data-class=v] pre code{color:#929298;background-color:#151414}[data-theme=dark] .v[data-class=v] .vwrap,.dark .v[data-class=v] .vwrap,.theme__dark .v[data-class=v] .vwrap,.night .v[data-class=v] .vwrap{border-color:#b2b2b5}[data-theme=dark] .v[data-class=v] .vicon,.dark .v[data-class=v] .vicon,.theme__dark .v[data-class=v] .vicon,.night .v[data-class=v] .vicon{fill:#b2b2b5}[data-theme=dark] .v[data-class=v] .vicon.actived,.dark .v[data-class=v] .vicon.actived,.theme__dark .v[data-class=v] .vicon.actived,.night .v[data-class=v] .vicon.actived{fill:#66b1ff}[data-theme=dark] .v[data-class=v] .vbtn,.dark .v[data-class=v] .vbtn,.theme__dark .v[data-class=v] .vbtn,.night .v[data-class=v] .vbtn{color:#b2b2b5;border-color:#b2b2b5}[data-theme=dark] .v[data-class=v] .vbtn:hover,.dark .v[data-class=v] .vbtn:hover,.theme__dark .v[data-class=v] .vbtn:hover,.night .v[data-class=v] .vbtn:hover{color:#66b1ff;border-color:#66b1ff}[data-theme=dark] .v[data-class=v] a:hover,.dark .v[data-class=v] a:hover,.theme__dark .v[data-class=v] a:hover,.night .v[data-class=v] a:hover{color:#d7191a}[data-theme=dark] .v[data-class=v] .vcards .vcard .vcontent.expand::before,.dark .v[data-class=v] .vcards .vcard .vcontent.expand::before,.theme__dark .v[data-class=v] .vcards .vcard .vcontent.expand::before,.night .v[data-class=v] .vcards .vcard .vcontent.expand::before{background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.7)));background:linear-gradient(180deg, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.7))}[data-theme=dark] .v[data-class=v] .vcards .vcard .vcontent.expand::after,.dark .v[data-class=v] .vcards .vcard .vcontent.expand::after,.theme__dark .v[data-class=v] .vcards .vcard .vcontent.expand::after,.night .v[data-class=v] .vcards .vcard .vcontent.expand::after{background:rgba(0,0,0,.7)}@media(prefers-color-scheme: dark){.v[data-class=v] .vinput,.v[data-class=v] .veditor,.v[data-class=v] p,.v[data-class=v] pre code,.v[data-class=v] .status-bar{color:#b2b2b5}.v[data-class=v] .vtime,.v[data-class=v] .vsys{color:#929298}.v[data-class=v] pre,.v[data-class=v] code,.v[data-class=v] pre code{color:#929298;background-color:#151414}.v[data-class=v] .vwrap{border-color:#b2b2b5}.v[data-class=v] .vicon{fill:#b2b2b5}.v[data-class=v] .vicon.actived{fill:#66b1ff}.v[data-class=v] .vbtn{color:#b2b2b5;border-color:#b2b2b5}.v[data-class=v] .vbtn:hover{color:#66b1ff;border-color:#66b1ff}.v[data-class=v] a:hover{color:#d7191a}.v[data-class=v] .vcards .vcard .vcontent.expand::before{background:-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.3)), to(rgba(0, 0, 0, 0.7)));background:linear-gradient(180deg, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.7))}.v[data-class=v] .vcards .vcard .vcontent.expand::after{background:rgba(0,0,0,.7)}}',""]),e.exports=t},function(e,t,n){"use strict";function i(e,t){var n=e[1]||"",i=e[3];if(!i)return n;if(t&&"function"==typeof btoa){var r=function(e){return"/*# ".concat("sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(e)))))," */")}(i);return[n].concat(i.sources.map((function(e){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(e," */")}))).concat([r]).join("\n")}return[n].join("\n")}e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=i(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,i){"string"==typeof e&&(e=[[null,e,""]]);var r={};if(i)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(r[a]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);i&&r[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},function(e,t,n){function i(e,t){for(var n=0;n<e.length;n++){var i=e[n],r=h[i.id];if(r){r.refs++;for(var o=0;o<r.parts.length;o++)r.parts[o](i.parts[o]);for(;o<i.parts.length;o++)r.parts.push(u(i.parts[o],t))}else{var a=[];for(o=0;o<i.parts.length;o++)a.push(u(i.parts[o],t));h[i.id]={id:i.id,refs:1,parts:a}}}}function r(e,t){for(var n=[],i={},r=0;r<e.length;r++){var o=e[r],a=t.base?o[0]+t.base:o[0],s={css:o[1],media:o[2],sourceMap:o[3]};i[a]?i[a].parts.push(s):n.push(i[a]={id:a,parts:[s]})}return n}function o(e,t){var n=g(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var i=b[b.length-1];if("top"===e.insertAt)i?i.nextSibling?n.insertBefore(t,i.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),b.push(t);else{if("bottom"!==e.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");n.appendChild(t)}}function a(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=b.indexOf(e);t>=0&&b.splice(t,1)}function s(e){var t=document.createElement("style");return e.attrs.type="text/css",c(t,e.attrs),o(e,t),t}function l(e){var t=document.createElement("link");return e.attrs.type="text/css",e.attrs.rel="stylesheet",c(t,e.attrs),o(e,t),t}function c(e,t){Object.keys(t).forEach((function(n){e.setAttribute(n,t[n])}))}function u(e,t){var n,i,r,o;if(t.transform&&e.css){if(!(o=t.transform(e.css)))return function(){};e.css=o}if(t.singleton){var c=y++;n=v||(v=s(t)),i=p.bind(null,n,c,!1),r=p.bind(null,n,c,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=l(t),i=d.bind(null,n,t),r=function(){a(n),n.href&&URL.revokeObjectURL(n.href)}):(n=s(t),i=f.bind(null,n),r=function(){a(n)});return i(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;i(e=t)}else r()}}function p(e,t,n,i){var r=n?"":i.css;if(e.styleSheet)e.styleSheet.cssText=S(t,r);else{var o=document.createTextNode(r),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(o,a[t]):e.appendChild(o)}}function f(e,t){var n=t.css,i=t.media;if(i&&e.setAttribute("media",i),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}function d(e,t,n){var i=n.css,r=n.sourceMap,o=void 0===t.convertToAbsoluteUrls&&r;(t.convertToAbsoluteUrls||o)&&(i=I(i)),r&&(i+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var a=new Blob([i],{type:"text/css"}),s=e.href;e.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}var h={},m=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}((function(){return window&&document&&document.all&&!window.atob})),g=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e.call(this,n)),t[n]}}((function(e){return document.querySelector(e)})),v=null,y=0,b=[],I=n(107);e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||(t.singleton=m()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=r(e,t);return i(n,t),function(e){for(var o=[],a=0;a<n.length;a++){var s=n[a];(l=h[s.id]).refs--,o.push(l)}for(e&&i(r(e,t),t),a=0;a<o.length;a++){var l;if(0===(l=o[a]).refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete h[l.id]}}}};var S=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}()},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,i=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(e,t){var r,o=t.trim().replace(/^"(.*)"$/,(function(e,t){return t})).replace(/^'(.*)'$/,(function(e,t){return t}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(o)?e:(r=0===o.indexOf("//")?o:0===o.indexOf("/")?n+o:i+o.replace(/^\.\//,""),"url("+JSON.stringify(r)+")")}))}},function(e,t,n){n(103),e.exports=n(34)}])},function(e,t,n){"use strict";n(111)},function(e,t,n){"use strict";var i=n(287),r=n(114),o=n(63),a=Object.prototype.hasOwnProperty,s={brackets:function(e){return e+"[]"},comma:"comma",indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},l=Array.isArray,c=Array.prototype.push,u=function(e,t){c.apply(e,l(t)?t:[t])},p=Date.prototype.toISOString,f=o.default,d={addQueryPrefix:!1,allowDots:!1,allowEmptyArrays:!1,arrayFormat:"indices",charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encodeDotInKeys:!1,encoder:r.encode,encodeValuesOnly:!1,format:f,formatter:o.formatters[f],indices:!1,serializeDate:function(e){return p.call(e)},skipNulls:!1,strictNullHandling:!1},h={},m=function e(t,n,o,a,s,c,p,f,m,g,v,y,b,I,S,_,D,L){for(var k,w=t,T=L,C=0,P=!1;void 0!==(T=T.get(h))&&!P;){var x=T.get(t);if(C+=1,void 0!==x){if(x===C)throw new RangeError("Cyclic object value");P=!0}void 0===T.get(h)&&(C=0)}if("function"==typeof g?w=g(n,w):w instanceof Date?w=b(w):"comma"===o&&l(w)&&(w=r.maybeMap(w,(function(e){return e instanceof Date?b(e):e}))),null===w){if(c)return m&&!_?m(n,d.encoder,D,"key",I):n;w=""}if("string"==typeof(k=w)||"number"==typeof k||"boolean"==typeof k||"symbol"==typeof k||"bigint"==typeof k||r.isBuffer(w))return m?[S(_?n:m(n,d.encoder,D,"key",I))+"="+S(m(w,d.encoder,D,"value",I))]:[S(n)+"="+S(String(w))];var O,A=[];if(void 0===w)return A;if("comma"===o&&l(w))_&&m&&(w=r.maybeMap(w,m)),O=[{value:w.length>0?w.join(",")||null:void 0}];else if(l(g))O=g;else{var E=Object.keys(w);O=v?E.sort(v):E}var F=f?n.replace(/\./g,"%2E"):n,N=a&&l(w)&&1===w.length?F+"[]":F;if(s&&l(w)&&0===w.length)return N+"[]";for(var V=0;V<O.length;++V){var j=O[V],R="object"==typeof j&&void 0!==j.value?j.value:w[j];if(!p||null!==R){var Q=y&&f?j.replace(/\./g,"%2E"):j,$=l(w)?"function"==typeof o?o(N,Q):N:N+(y?"."+Q:"["+Q+"]");L.set(t,C);var B=i();B.set(h,L),u(A,e(R,$,o,a,s,c,p,f,"comma"===o&&_&&l(w)?null:m,g,v,y,b,I,S,_,D,B))}}return A};e.exports=function(e,t){var n,r=e,c=function(e){if(!e)return d;if(void 0!==e.allowEmptyArrays&&"boolean"!=typeof e.allowEmptyArrays)throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");if(void 0!==e.encodeDotInKeys&&"boolean"!=typeof e.encodeDotInKeys)throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");if(null!==e.encoder&&void 0!==e.encoder&&"function"!=typeof e.encoder)throw new TypeError("Encoder has to be a function.");var t=e.charset||d.charset;if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var n=o.default;if(void 0!==e.format){if(!a.call(o.formatters,e.format))throw new TypeError("Unknown format option provided.");n=e.format}var i,r=o.formatters[n],c=d.filter;if(("function"==typeof e.filter||l(e.filter))&&(c=e.filter),i=e.arrayFormat in s?e.arrayFormat:"indices"in e?e.indices?"indices":"repeat":d.arrayFormat,"commaRoundTrip"in e&&"boolean"!=typeof e.commaRoundTrip)throw new TypeError("`commaRoundTrip` must be a boolean, or absent");var u=void 0===e.allowDots?!0===e.encodeDotInKeys||d.allowDots:!!e.allowDots;return{addQueryPrefix:"boolean"==typeof e.addQueryPrefix?e.addQueryPrefix:d.addQueryPrefix,allowDots:u,allowEmptyArrays:"boolean"==typeof e.allowEmptyArrays?!!e.allowEmptyArrays:d.allowEmptyArrays,arrayFormat:i,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:d.charsetSentinel,commaRoundTrip:e.commaRoundTrip,delimiter:void 0===e.delimiter?d.delimiter:e.delimiter,encode:"boolean"==typeof e.encode?e.encode:d.encode,encodeDotInKeys:"boolean"==typeof e.encodeDotInKeys?e.encodeDotInKeys:d.encodeDotInKeys,encoder:"function"==typeof e.encoder?e.encoder:d.encoder,encodeValuesOnly:"boolean"==typeof e.encodeValuesOnly?e.encodeValuesOnly:d.encodeValuesOnly,filter:c,format:n,formatter:r,serializeDate:"function"==typeof e.serializeDate?e.serializeDate:d.serializeDate,skipNulls:"boolean"==typeof e.skipNulls?e.skipNulls:d.skipNulls,sort:"function"==typeof e.sort?e.sort:null,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:d.strictNullHandling}}(t);"function"==typeof c.filter?r=(0,c.filter)("",r):l(c.filter)&&(n=c.filter);var p=[];if("object"!=typeof r||null===r)return"";var f=s[c.arrayFormat],h="comma"===f&&c.commaRoundTrip;n||(n=Object.keys(r)),c.sort&&n.sort(c.sort);for(var g=i(),v=0;v<n.length;++v){var y=n[v];c.skipNulls&&null===r[y]||u(p,m(r[y],y,f,h,c.allowEmptyArrays,c.strictNullHandling,c.skipNulls,c.encodeDotInKeys,c.encode?c.encoder:null,c.filter,c.sort,c.allowDots,c.serializeDate,c.format,c.formatter,c.encodeValuesOnly,c.charset,g))}var b=p.join(c.delimiter),I=!0===c.addQueryPrefix?"?":"";return c.charsetSentinel&&("iso-8859-1"===c.charset?I+="utf8=%26%2310003%3B&":I+="utf8=%E2%9C%93&"),b.length>0?I+b:""}},function(e,t,n){"use strict";var i=n(20),r=n(298),o=n(303),a=n(26),s=i("%WeakMap%",!0),l=i("%Map%",!0),c=r("WeakMap.prototype.get",!0),u=r("WeakMap.prototype.set",!0),p=r("WeakMap.prototype.has",!0),f=r("Map.prototype.get",!0),d=r("Map.prototype.set",!0),h=r("Map.prototype.has",!0),m=function(e,t){for(var n,i=e;null!==(n=i.next);i=n)if(n.key===t)return i.next=n.next,n.next=e.next,e.next=n,n};e.exports=function(){var e,t,n,i={assert:function(e){if(!i.has(e))throw new a("Side channel does not contain "+o(e))},get:function(i){if(s&&i&&("object"==typeof i||"function"==typeof i)){if(e)return c(e,i)}else if(l){if(t)return f(t,i)}else if(n)return function(e,t){var n=m(e,t);return n&&n.value}(n,i)},has:function(i){if(s&&i&&("object"==typeof i||"function"==typeof i)){if(e)return p(e,i)}else if(l){if(t)return h(t,i)}else if(n)return function(e,t){return!!m(e,t)}(n,i);return!1},set:function(i,r){s&&i&&("object"==typeof i||"function"==typeof i)?(e||(e=new s),u(e,i,r)):l?(t||(t=new l),d(t,i,r)):(n||(n={key:{},next:null}),function(e,t,n){var i=m(e,t);i?i.value=n:e.next={key:t,next:e.next,value:n}}(n,i,r))}};return i}},function(e,t,n){"use strict";e.exports=Error},function(e,t,n){"use strict";e.exports=EvalError},function(e,t,n){"use strict";e.exports=RangeError},function(e,t,n){"use strict";e.exports=ReferenceError},function(e,t,n){"use strict";e.exports=URIError},function(e,t,n){"use strict";var i="undefined"!=typeof Symbol&&Symbol,r=n(294);e.exports=function(){return"function"==typeof i&&("function"==typeof Symbol&&("symbol"==typeof i("foo")&&("symbol"==typeof Symbol("bar")&&r())))}},function(e,t,n){"use strict";e.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},t=Symbol("test"),n=Object(t);if("string"==typeof t)return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;if("[object Symbol]"!==Object.prototype.toString.call(n))return!1;for(t in e[t]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var i=Object.getOwnPropertySymbols(e);if(1!==i.length||i[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,t))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var r=Object.getOwnPropertyDescriptor(e,t);if(42!==r.value||!0!==r.enumerable)return!1}return!0}},function(e,t,n){"use strict";var i={__proto__:null,foo:{}},r=Object;e.exports=function(){return{__proto__:i}.foo===i.foo&&!(i instanceof r)}},function(e,t,n){"use strict";var i="Function.prototype.bind called on incompatible ",r=Object.prototype.toString,o=Math.max,a=function(e,t){for(var n=[],i=0;i<e.length;i+=1)n[i]=e[i];for(var r=0;r<t.length;r+=1)n[r+e.length]=t[r];return n},s=function(e,t){for(var n=[],i=t||0,r=0;i<e.length;i+=1,r+=1)n[r]=e[i];return n},l=function(e,t){for(var n="",i=0;i<e.length;i+=1)n+=e[i],i+1<e.length&&(n+=t);return n};e.exports=function(e){var t=this;if("function"!=typeof t||"[object Function]"!==r.apply(t))throw new TypeError(i+t);for(var n,c=s(arguments,1),u=function(){if(this instanceof n){var i=t.apply(this,a(c,arguments));return Object(i)===i?i:this}return t.apply(e,a(c,arguments))},p=o(0,t.length-c.length),f=[],d=0;d<p;d++)f[d]="$"+d;if(n=Function("binder","return function ("+l(f,",")+"){ return binder.apply(this,arguments); }")(u),t.prototype){var h=function(){};h.prototype=t.prototype,n.prototype=new h,h.prototype=null}return n}},function(e,t,n){"use strict";var i=Function.prototype.call,r=Object.prototype.hasOwnProperty,o=n(61);e.exports=o.call(i,r)},function(e,t,n){"use strict";var i=n(20),r=n(299),o=r(i("String.prototype.indexOf"));e.exports=function(e,t){var n=i(e,!!t);return"function"==typeof n&&o(e,".prototype.")>-1?r(n):n}},function(e,t,n){"use strict";var i=n(61),r=n(20),o=n(300),a=n(26),s=r("%Function.prototype.apply%"),l=r("%Function.prototype.call%"),c=r("%Reflect.apply%",!0)||i.call(l,s),u=n(62),p=r("%Math.max%");e.exports=function(e){if("function"!=typeof e)throw new a("a function is required");var t=c(i,l,arguments);return o(t,1+p(0,e.length-(arguments.length-1)),!0)};var f=function(){return c(i,s,arguments)};u?u(e.exports,"apply",{value:f}):e.exports.apply=f},function(e,t,n){"use strict";var i=n(20),r=n(301),o=n(302)(),a=n(113),s=n(26),l=i("%Math.floor%");e.exports=function(e,t){if("function"!=typeof e)throw new s("`fn` is not a function");if("number"!=typeof t||t<0||t>4294967295||l(t)!==t)throw new s("`length` must be a positive 32-bit integer");var n=arguments.length>2&&!!arguments[2],i=!0,c=!0;if("length"in e&&a){var u=a(e,"length");u&&!u.configurable&&(i=!1),u&&!u.writable&&(c=!1)}return(i||c||!n)&&(o?r(e,"length",t,!0,!0):r(e,"length",t)),e}},function(e,t,n){"use strict";var i=n(62),r=n(112),o=n(26),a=n(113);e.exports=function(e,t,n){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new o("`obj` must be an object or a function`");if("string"!=typeof t&&"symbol"!=typeof t)throw new o("`property` must be a string or a symbol`");if(arguments.length>3&&"boolean"!=typeof arguments[3]&&null!==arguments[3])throw new o("`nonEnumerable`, if provided, must be a boolean or null");if(arguments.length>4&&"boolean"!=typeof arguments[4]&&null!==arguments[4])throw new o("`nonWritable`, if provided, must be a boolean or null");if(arguments.length>5&&"boolean"!=typeof arguments[5]&&null!==arguments[5])throw new o("`nonConfigurable`, if provided, must be a boolean or null");if(arguments.length>6&&"boolean"!=typeof arguments[6])throw new o("`loose`, if provided, must be a boolean");var s=arguments.length>3?arguments[3]:null,l=arguments.length>4?arguments[4]:null,c=arguments.length>5?arguments[5]:null,u=arguments.length>6&&arguments[6],p=!!a&&a(e,t);if(i)i(e,t,{configurable:null===c&&p?p.configurable:!c,enumerable:null===s&&p?p.enumerable:!s,value:n,writable:null===l&&p?p.writable:!l});else{if(!u&&(s||l||c))throw new r("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");e[t]=n}}},function(e,t,n){"use strict";var i=n(62),r=function(){return!!i};r.hasArrayLengthDefineBug=function(){if(!i)return null;try{return 1!==i([],"length",{value:1}).length}catch(e){return!0}},e.exports=r},function(e,t,n){var i="function"==typeof Map&&Map.prototype,r=Object.getOwnPropertyDescriptor&&i?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,o=i&&r&&"function"==typeof r.get?r.get:null,a=i&&Map.prototype.forEach,s="function"==typeof Set&&Set.prototype,l=Object.getOwnPropertyDescriptor&&s?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,c=s&&l&&"function"==typeof l.get?l.get:null,u=s&&Set.prototype.forEach,p="function"==typeof WeakMap&&WeakMap.prototype?WeakMap.prototype.has:null,f="function"==typeof WeakSet&&WeakSet.prototype?WeakSet.prototype.has:null,d="function"==typeof WeakRef&&WeakRef.prototype?WeakRef.prototype.deref:null,h=Boolean.prototype.valueOf,m=Object.prototype.toString,g=Function.prototype.toString,v=String.prototype.match,y=String.prototype.slice,b=String.prototype.replace,I=String.prototype.toUpperCase,S=String.prototype.toLowerCase,_=RegExp.prototype.test,D=Array.prototype.concat,L=Array.prototype.join,k=Array.prototype.slice,w=Math.floor,T="function"==typeof BigInt?BigInt.prototype.valueOf:null,C=Object.getOwnPropertySymbols,P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol.prototype.toString:null,x="function"==typeof Symbol&&"object"==typeof Symbol.iterator,O="function"==typeof Symbol&&Symbol.toStringTag&&(typeof Symbol.toStringTag===x||"symbol")?Symbol.toStringTag:null,A=Object.prototype.propertyIsEnumerable,E=("function"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(e){return e.__proto__}:null);function F(e,t){if(e===1/0||e===-1/0||e!=e||e&&e>-1e3&&e<1e3||_.call(/e/,t))return t;var n=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if("number"==typeof e){var i=e<0?-w(-e):w(e);if(i!==e){var r=String(i),o=y.call(t,r.length+1);return b.call(r,n,"$&_")+"."+b.call(b.call(o,/([0-9]{3})/g,"$&_"),/_$/,"")}}return b.call(t,n,"$&_")}var N=n(304),V=N.custom,j=M(V)?V:null;function R(e,t,n){var i="double"===(n.quoteStyle||t)?'"':"'";return i+e+i}function Q(e){return b.call(String(e),/"/g,"&quot;")}function $(e){return!("[object Array]"!==z(e)||O&&"object"==typeof e&&O in e)}function B(e){return!("[object RegExp]"!==z(e)||O&&"object"==typeof e&&O in e)}function M(e){if(x)return e&&"object"==typeof e&&e instanceof Symbol;if("symbol"==typeof e)return!0;if(!e||"object"!=typeof e||!P)return!1;try{return P.call(e),!0}catch(e){}return!1}e.exports=function e(t,n,i,r){var s=n||{};if(q(s,"quoteStyle")&&"single"!==s.quoteStyle&&"double"!==s.quoteStyle)throw new TypeError('option "quoteStyle" must be "single" or "double"');if(q(s,"maxStringLength")&&("number"==typeof s.maxStringLength?s.maxStringLength<0&&s.maxStringLength!==1/0:null!==s.maxStringLength))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var l=!q(s,"customInspect")||s.customInspect;if("boolean"!=typeof l&&"symbol"!==l)throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");if(q(s,"indent")&&null!==s.indent&&"\t"!==s.indent&&!(parseInt(s.indent,10)===s.indent&&s.indent>0))throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');if(q(s,"numericSeparator")&&"boolean"!=typeof s.numericSeparator)throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');var m=s.numericSeparator;if(void 0===t)return"undefined";if(null===t)return"null";if("boolean"==typeof t)return t?"true":"false";if("string"==typeof t)return function e(t,n){if(t.length>n.maxStringLength){var i=t.length-n.maxStringLength,r="... "+i+" more character"+(i>1?"s":"");return e(y.call(t,0,n.maxStringLength),n)+r}return R(b.call(b.call(t,/(['\\])/g,"\\$1"),/[\x00-\x1f]/g,U),"single",n)}(t,s);if("number"==typeof t){if(0===t)return 1/0/t>0?"0":"-0";var I=String(t);return m?F(t,I):I}if("bigint"==typeof t){var _=String(t)+"n";return m?F(t,_):_}var w=void 0===s.depth?5:s.depth;if(void 0===i&&(i=0),i>=w&&w>0&&"object"==typeof t)return $(t)?"[Array]":"[Object]";var C=function(e,t){var n;if("\t"===e.indent)n="\t";else{if(!("number"==typeof e.indent&&e.indent>0))return null;n=L.call(Array(e.indent+1)," ")}return{base:n,prev:L.call(Array(t+1),n)}}(s,i);if(void 0===r)r=[];else if(W(r,t)>=0)return"[Circular]";function V(t,n,o){if(n&&(r=k.call(r)).push(n),o){var a={depth:s.depth};return q(s,"quoteStyle")&&(a.quoteStyle=s.quoteStyle),e(t,a,i+1,r)}return e(t,s,i+1,r)}if("function"==typeof t&&!B(t)){var G=function(e){if(e.name)return e.name;var t=v.call(g.call(e),/^function\s*([\w$]+)/);if(t)return t[1];return null}(t),X=Y(t,V);return"[Function"+(G?": "+G:" (anonymous)")+"]"+(X.length>0?" { "+L.call(X,", ")+" }":"")}if(M(t)){var ee=x?b.call(String(t),/^(Symbol\(.*\))_[^)]*$/,"$1"):P.call(t);return"object"!=typeof t||x?ee:H(ee)}if(function(e){if(!e||"object"!=typeof e)return!1;if("undefined"!=typeof HTMLElement&&e instanceof HTMLElement)return!0;return"string"==typeof e.nodeName&&"function"==typeof e.getAttribute}(t)){for(var te="<"+S.call(String(t.nodeName)),ne=t.attributes||[],ie=0;ie<ne.length;ie++)te+=" "+ne[ie].name+"="+R(Q(ne[ie].value),"double",s);return te+=">",t.childNodes&&t.childNodes.length&&(te+="..."),te+="</"+S.call(String(t.nodeName))+">"}if($(t)){if(0===t.length)return"[]";var re=Y(t,V);return C&&!function(e){for(var t=0;t<e.length;t++)if(W(e[t],"\n")>=0)return!1;return!0}(re)?"["+K(re,C)+"]":"[ "+L.call(re,", ")+" ]"}if(function(e){return!("[object Error]"!==z(e)||O&&"object"==typeof e&&O in e)}(t)){var oe=Y(t,V);return"cause"in Error.prototype||!("cause"in t)||A.call(t,"cause")?0===oe.length?"["+String(t)+"]":"{ ["+String(t)+"] "+L.call(oe,", ")+" }":"{ ["+String(t)+"] "+L.call(D.call("[cause]: "+V(t.cause),oe),", ")+" }"}if("object"==typeof t&&l){if(j&&"function"==typeof t[j]&&N)return N(t,{depth:w-i});if("symbol"!==l&&"function"==typeof t.inspect)return t.inspect()}if(function(e){if(!o||!e||"object"!=typeof e)return!1;try{o.call(e);try{c.call(e)}catch(e){return!0}return e instanceof Map}catch(e){}return!1}(t)){var ae=[];return a&&a.call(t,(function(e,n){ae.push(V(n,t,!0)+" => "+V(e,t))})),J("Map",o.call(t),ae,C)}if(function(e){if(!c||!e||"object"!=typeof e)return!1;try{c.call(e);try{o.call(e)}catch(e){return!0}return e instanceof Set}catch(e){}return!1}(t)){var se=[];return u&&u.call(t,(function(e){se.push(V(e,t))})),J("Set",c.call(t),se,C)}if(function(e){if(!p||!e||"object"!=typeof e)return!1;try{p.call(e,p);try{f.call(e,f)}catch(e){return!0}return e instanceof WeakMap}catch(e){}return!1}(t))return Z("WeakMap");if(function(e){if(!f||!e||"object"!=typeof e)return!1;try{f.call(e,f);try{p.call(e,p)}catch(e){return!0}return e instanceof WeakSet}catch(e){}return!1}(t))return Z("WeakSet");if(function(e){if(!d||!e||"object"!=typeof e)return!1;try{return d.call(e),!0}catch(e){}return!1}(t))return Z("WeakRef");if(function(e){return!("[object Number]"!==z(e)||O&&"object"==typeof e&&O in e)}(t))return H(V(Number(t)));if(function(e){if(!e||"object"!=typeof e||!T)return!1;try{return T.call(e),!0}catch(e){}return!1}(t))return H(V(T.call(t)));if(function(e){return!("[object Boolean]"!==z(e)||O&&"object"==typeof e&&O in e)}(t))return H(h.call(t));if(function(e){return!("[object String]"!==z(e)||O&&"object"==typeof e&&O in e)}(t))return H(V(String(t)));if("undefined"!=typeof window&&t===window)return"{ [object Window] }";if(t===global)return"{ [object globalThis] }";if(!function(e){return!("[object Date]"!==z(e)||O&&"object"==typeof e&&O in e)}(t)&&!B(t)){var le=Y(t,V),ce=E?E(t)===Object.prototype:t instanceof Object||t.constructor===Object,ue=t instanceof Object?"":"null prototype",pe=!ce&&O&&Object(t)===t&&O in t?y.call(z(t),8,-1):ue?"Object":"",fe=(ce||"function"!=typeof t.constructor?"":t.constructor.name?t.constructor.name+" ":"")+(pe||ue?"["+L.call(D.call([],pe||[],ue||[]),": ")+"] ":"");return 0===le.length?fe+"{}":C?fe+"{"+K(le,C)+"}":fe+"{ "+L.call(le,", ")+" }"}return String(t)};var G=Object.prototype.hasOwnProperty||function(e){return e in this};function q(e,t){return G.call(e,t)}function z(e){return m.call(e)}function W(e,t){if(e.indexOf)return e.indexOf(t);for(var n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1}function U(e){var t=e.charCodeAt(0),n={8:"b",9:"t",10:"n",12:"f",13:"r"}[t];return n?"\\"+n:"\\x"+(t<16?"0":"")+I.call(t.toString(16))}function H(e){return"Object("+e+")"}function Z(e){return e+" { ? }"}function J(e,t,n,i){return e+" ("+t+") {"+(i?K(n,i):L.call(n,", "))+"}"}function K(e,t){if(0===e.length)return"";var n="\n"+t.prev+t.base;return n+L.call(e,","+n)+"\n"+t.prev}function Y(e,t){var n=$(e),i=[];if(n){i.length=e.length;for(var r=0;r<e.length;r++)i[r]=q(e,r)?t(e[r],e):""}var o,a="function"==typeof C?C(e):[];if(x){o={};for(var s=0;s<a.length;s++)o["$"+a[s]]=a[s]}for(var l in e)q(e,l)&&(n&&String(Number(l))===l&&l<e.length||x&&o["$"+l]instanceof Symbol||(_.call(/[^\w$]/,l)?i.push(t(l,e)+": "+t(e[l],e)):i.push(l+": "+t(e[l],e))));if("function"==typeof C)for(var c=0;c<a.length;c++)A.call(e,a[c])&&i.push("["+t(a[c])+"]: "+t(e[a[c]],e));return i}},function(e,t){},function(e,t,n){"use strict";var i=n(114),r=Object.prototype.hasOwnProperty,o=Array.isArray,a={allowDots:!1,allowEmptyArrays:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decodeDotInKeys:!1,decoder:i.decode,delimiter:"&",depth:5,duplicates:"combine",ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},s=function(e){return e.replace(/&#(\d+);/g,(function(e,t){return String.fromCharCode(parseInt(t,10))}))},l=function(e,t){return e&&"string"==typeof e&&t.comma&&e.indexOf(",")>-1?e.split(","):e},c=function(e,t,n,i){if(e){var o=n.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,a=/(\[[^[\]]*])/g,s=n.depth>0&&/(\[[^[\]]*])/.exec(o),c=s?o.slice(0,s.index):o,u=[];if(c){if(!n.plainObjects&&r.call(Object.prototype,c)&&!n.allowPrototypes)return;u.push(c)}for(var p=0;n.depth>0&&null!==(s=a.exec(o))&&p<n.depth;){if(p+=1,!n.plainObjects&&r.call(Object.prototype,s[1].slice(1,-1))&&!n.allowPrototypes)return;u.push(s[1])}return s&&u.push("["+o.slice(s.index)+"]"),function(e,t,n,i){for(var r=i?t:l(t,n),o=e.length-1;o>=0;--o){var a,s=e[o];if("[]"===s&&n.parseArrays)a=n.allowEmptyArrays&&""===r?[]:[].concat(r);else{a=n.plainObjects?Object.create(null):{};var c="["===s.charAt(0)&&"]"===s.charAt(s.length-1)?s.slice(1,-1):s,u=n.decodeDotInKeys?c.replace(/%2E/g,"."):c,p=parseInt(u,10);n.parseArrays||""!==u?!isNaN(p)&&s!==u&&String(p)===u&&p>=0&&n.parseArrays&&p<=n.arrayLimit?(a=[])[p]=r:"__proto__"!==u&&(a[u]=r):a={0:r}}r=a}return r}(u,t,n,i)}};e.exports=function(e,t){var n=function(e){if(!e)return a;if(void 0!==e.allowEmptyArrays&&"boolean"!=typeof e.allowEmptyArrays)throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");if(void 0!==e.decodeDotInKeys&&"boolean"!=typeof e.decodeDotInKeys)throw new TypeError("`decodeDotInKeys` option can only be `true` or `false`, when provided");if(null!==e.decoder&&void 0!==e.decoder&&"function"!=typeof e.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var t=void 0===e.charset?a.charset:e.charset,n=void 0===e.duplicates?a.duplicates:e.duplicates;if("combine"!==n&&"first"!==n&&"last"!==n)throw new TypeError("The duplicates option must be either combine, first, or last");return{allowDots:void 0===e.allowDots?!0===e.decodeDotInKeys||a.allowDots:!!e.allowDots,allowEmptyArrays:"boolean"==typeof e.allowEmptyArrays?!!e.allowEmptyArrays:a.allowEmptyArrays,allowPrototypes:"boolean"==typeof e.allowPrototypes?e.allowPrototypes:a.allowPrototypes,allowSparse:"boolean"==typeof e.allowSparse?e.allowSparse:a.allowSparse,arrayLimit:"number"==typeof e.arrayLimit?e.arrayLimit:a.arrayLimit,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:a.charsetSentinel,comma:"boolean"==typeof e.comma?e.comma:a.comma,decodeDotInKeys:"boolean"==typeof e.decodeDotInKeys?e.decodeDotInKeys:a.decodeDotInKeys,decoder:"function"==typeof e.decoder?e.decoder:a.decoder,delimiter:"string"==typeof e.delimiter||i.isRegExp(e.delimiter)?e.delimiter:a.delimiter,depth:"number"==typeof e.depth||!1===e.depth?+e.depth:a.depth,duplicates:n,ignoreQueryPrefix:!0===e.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof e.interpretNumericEntities?e.interpretNumericEntities:a.interpretNumericEntities,parameterLimit:"number"==typeof e.parameterLimit?e.parameterLimit:a.parameterLimit,parseArrays:!1!==e.parseArrays,plainObjects:"boolean"==typeof e.plainObjects?e.plainObjects:a.plainObjects,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:a.strictNullHandling}}(t);if(""===e||null==e)return n.plainObjects?Object.create(null):{};for(var u="string"==typeof e?function(e,t){var n,c={__proto__:null},u=t.ignoreQueryPrefix?e.replace(/^\?/,""):e,p=t.parameterLimit===1/0?void 0:t.parameterLimit,f=u.split(t.delimiter,p),d=-1,h=t.charset;if(t.charsetSentinel)for(n=0;n<f.length;++n)0===f[n].indexOf("utf8=")&&("utf8=%E2%9C%93"===f[n]?h="utf-8":"utf8=%26%2310003%3B"===f[n]&&(h="iso-8859-1"),d=n,n=f.length);for(n=0;n<f.length;++n)if(n!==d){var m,g,v=f[n],y=v.indexOf("]="),b=-1===y?v.indexOf("="):y+1;-1===b?(m=t.decoder(v,a.decoder,h,"key"),g=t.strictNullHandling?null:""):(m=t.decoder(v.slice(0,b),a.decoder,h,"key"),g=i.maybeMap(l(v.slice(b+1),t),(function(e){return t.decoder(e,a.decoder,h,"value")}))),g&&t.interpretNumericEntities&&"iso-8859-1"===h&&(g=s(g)),v.indexOf("[]=")>-1&&(g=o(g)?[g]:g);var I=r.call(c,m);I&&"combine"===t.duplicates?c[m]=i.combine(c[m],g):I&&"last"!==t.duplicates||(c[m]=g)}return c}(e,n):e,p=n.plainObjects?Object.create(null):{},f=Object.keys(u),d=0;d<f.length;++d){var h=f[d],m=c(h,u[h],n,"string"==typeof e);p=i.merge(p,m,n)}return!0===n.allowSparse?p:i.compact(p)}},function(e,t,n){var i=n(15),r=n(308),o=n(309);e.exports=function(e){var t=i(e);return o(t,r(t))+1}},function(e,t){e.exports=function(e){var t=new Date(e.getTime()),n=t.getTimezoneOffset();return t.setSeconds(0,0),6e4*n+t.getTime()%6e4}},function(e,t,n){var i=n(15);e.exports=function(e){var t=i(e),n=new Date(0);return n.setFullYear(t.getFullYear(),0,1),n.setHours(0,0,0,0),n}},function(e,t,n){var i=n(310);e.exports=function(e,t){var n=i(e),r=i(t),o=n.getTime()-6e4*n.getTimezoneOffset(),a=r.getTime()-6e4*r.getTimezoneOffset();return Math.round((o-a)/864e5)}},function(e,t,n){var i=n(15);e.exports=function(e){var t=i(e);return t.setHours(0,0,0,0),t}},function(e,t,n){var i=n(15),r=n(64),o=n(313);e.exports=function(e){var t=i(e),n=r(t).getTime()-o(t).getTime();return Math.round(n/6048e5)+1}},function(e,t,n){var i=n(15);e.exports=function(e,t){var n=t&&Number(t.weekStartsOn)||0,r=i(e),o=r.getDay(),a=(o<n?7:0)+o-n;return r.setDate(r.getDate()-a),r.setHours(0,0,0,0),r}},function(e,t,n){var i=n(116),r=n(64);e.exports=function(e){var t=i(e),n=new Date(0);return n.setFullYear(t,0,4),n.setHours(0,0,0,0),r(n)}},function(e,t,n){var i=n(115);e.exports=function(e){if(i(e))return!isNaN(e);throw new TypeError(toString.call(e)+" is not an instance of Date")}},function(e,t,n){var i=n(316),r=n(317);e.exports={distanceInWords:i(),format:r()}},function(e,t){e.exports=function(){var e={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};return{localize:function(t,n,i){var r;return i=i||{},r="string"==typeof e[t]?e[t]:1===n?e[t].one:e[t].other.replace("{{count}}",n),i.addSuffix?i.comparison>0?"in "+r:r+" ago":r}}}},function(e,t,n){var i=n(318);e.exports=function(){var e=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],t=["January","February","March","April","May","June","July","August","September","October","November","December"],n=["Su","Mo","Tu","We","Th","Fr","Sa"],r=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],o=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],a=["AM","PM"],s=["am","pm"],l=["a.m.","p.m."],c={MMM:function(t){return e[t.getMonth()]},MMMM:function(e){return t[e.getMonth()]},dd:function(e){return n[e.getDay()]},ddd:function(e){return r[e.getDay()]},dddd:function(e){return o[e.getDay()]},A:function(e){return e.getHours()/12>=1?a[1]:a[0]},a:function(e){return e.getHours()/12>=1?s[1]:s[0]},aa:function(e){return e.getHours()/12>=1?l[1]:l[0]}};return["M","D","DDD","d","Q","W"].forEach((function(e){c[e+"o"]=function(t,n){return function(e){var t=e%100;if(t>20||t<10)switch(t%10){case 1:return e+"st";case 2:return e+"nd";case 3:return e+"rd"}return e+"th"}(n[e](t))}})),{formatters:c,formattingTokensRegExp:i(c)}}},function(e,t){var n=["M","MM","Q","D","DD","DDD","DDDD","d","E","W","WW","YY","YYYY","GG","GGGG","H","HH","h","hh","m","mm","s","ss","S","SS","SSS","Z","ZZ","X","x"];e.exports=function(e){var t=[];for(var i in e)e.hasOwnProperty(i)&&t.push(i);var r=n.concat(t).sort().reverse();return new RegExp("(\\[[^\\[]*\\])|(\\\\)?("+r.join("|")+"|.)","g")}},function(e,t,n){"use strict";var i=n(3),r=n(117),o=n(320),a=n(123);function s(e){var t=new o(e),n=r(o.prototype.request,t);return i.extend(n,o.prototype,t),i.extend(n,t),n}var l=s(n(65));l.Axios=o,l.create=function(e){return s(a(l.defaults,e))},l.Cancel=n(124),l.CancelToken=n(334),l.isCancel=n(122),l.all=function(e){return Promise.all(e)},l.spread=n(335),l.isAxiosError=n(336),e.exports=l,e.exports.default=l},function(e,t,n){"use strict";var i=n(3),r=n(118),o=n(321),a=n(322),s=n(123),l=n(332),c=l.validators;function u(e){this.defaults=e,this.interceptors={request:new o,response:new o}}u.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=s(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t=e.transitional;void 0!==t&&l.assertOptions(t,{silentJSONParsing:c.transitional(c.boolean,"1.0.0"),forcedJSONParsing:c.transitional(c.boolean,"1.0.0"),clarifyTimeoutError:c.transitional(c.boolean,"1.0.0")},!1);var n=[],i=!0;this.interceptors.request.forEach((function(t){"function"==typeof t.runWhen&&!1===t.runWhen(e)||(i=i&&t.synchronous,n.unshift(t.fulfilled,t.rejected))}));var r,o=[];if(this.interceptors.response.forEach((function(e){o.push(e.fulfilled,e.rejected)})),!i){var u=[a,void 0];for(Array.prototype.unshift.apply(u,n),u=u.concat(o),r=Promise.resolve(e);u.length;)r=r.then(u.shift(),u.shift());return r}for(var p=e;n.length;){var f=n.shift(),d=n.shift();try{p=f(p)}catch(e){d(e);break}}try{r=a(p)}catch(e){return Promise.reject(e)}for(;o.length;)r=r.then(o.shift(),o.shift());return r},u.prototype.getUri=function(e){return e=s(this.defaults,e),r(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},i.forEach(["delete","get","head","options"],(function(e){u.prototype[e]=function(t,n){return this.request(s(n||{},{method:e,url:t,data:(n||{}).data}))}})),i.forEach(["post","put","patch"],(function(e){u.prototype[e]=function(t,n,i){return this.request(s(i||{},{method:e,url:t,data:n}))}})),e.exports=u},function(e,t,n){"use strict";var i=n(3);function r(){this.handlers=[]}r.prototype.use=function(e,t,n){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!n&&n.synchronous,runWhen:n?n.runWhen:null}),this.handlers.length-1},r.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},r.prototype.forEach=function(e){i.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=r},function(e,t,n){"use strict";var i=n(3),r=n(323),o=n(122),a=n(65);function s(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return s(e),e.headers=e.headers||{},e.data=r.call(e,e.data,e.headers,e.transformRequest),e.headers=i.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),i.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||a.adapter)(e).then((function(t){return s(e),t.data=r.call(e,t.data,t.headers,e.transformResponse),t}),(function(t){return o(t)||(s(e),t&&t.response&&(t.response.data=r.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},function(e,t,n){"use strict";var i=n(3),r=n(65);e.exports=function(e,t,n){var o=this||r;return i.forEach(n,(function(n){e=n.call(o,e,t)})),e}},function(e,t,n){"use strict";var i=n(3);e.exports=function(e,t){i.forEach(e,(function(n,i){i!==t&&i.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[i])}))}},function(e,t,n){"use strict";var i=n(121);e.exports=function(e,t,n){var r=n.config.validateStatus;n.status&&r&&!r(n.status)?t(i("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},function(e,t,n){"use strict";var i=n(3);e.exports=i.isStandardBrowserEnv()?{write:function(e,t,n,r,o,a){var s=[];s.push(e+"="+encodeURIComponent(t)),i.isNumber(n)&&s.push("expires="+new Date(n).toGMTString()),i.isString(r)&&s.push("path="+r),i.isString(o)&&s.push("domain="+o),!0===a&&s.push("secure"),document.cookie=s.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,t,n){"use strict";var i=n(328),r=n(329);e.exports=function(e,t){return e&&!i(t)?r(e,t):t}},function(e,t,n){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t,n){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t,n){"use strict";var i=n(3),r=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,o,a={};return e?(i.forEach(e.split("\n"),(function(e){if(o=e.indexOf(":"),t=i.trim(e.substr(0,o)).toLowerCase(),n=i.trim(e.substr(o+1)),t){if(a[t]&&r.indexOf(t)>=0)return;a[t]="set-cookie"===t?(a[t]?a[t]:[]).concat([n]):a[t]?a[t]+", "+n:n}})),a):a}},function(e,t,n){"use strict";var i=n(3);e.exports=i.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function r(e){var i=e;return t&&(n.setAttribute("href",i),i=n.href),n.setAttribute("href",i),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=r(window.location.href),function(t){var n=i.isString(t)?r(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},function(e,t,n){"use strict";var i=n(333),r={};["object","boolean","number","function","string","symbol"].forEach((function(e,t){r[e]=function(n){return typeof n===e||"a"+(t<1?"n ":" ")+e}}));var o={},a=i.version.split(".");function s(e,t){for(var n=t?t.split("."):a,i=e.split("."),r=0;r<3;r++){if(n[r]>i[r])return!0;if(n[r]<i[r])return!1}return!1}r.transitional=function(e,t,n){var r=t&&s(t);function a(e,t){return"[Axios v"+i.version+"] Transitional option '"+e+"'"+t+(n?". "+n:"")}return function(n,i,s){if(!1===e)throw new Error(a(i," has been removed in "+t));return r&&!o[i]&&(o[i]=!0,console.warn(a(i," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(n,i,s)}},e.exports={isOlderVersion:s,assertOptions:function(e,t,n){if("object"!=typeof e)throw new TypeError("options must be an object");for(var i=Object.keys(e),r=i.length;r-- >0;){var o=i[r],a=t[o];if(a){var s=e[o],l=void 0===s||a(s,o,e);if(!0!==l)throw new TypeError("option "+o+" must be "+l)}else if(!0!==n)throw Error("Unknown option "+o)}},validators:r}},function(e){e.exports=JSON.parse('{"_args":[["axios@0.21.4","/home/runner/work/vuepress/vuepress"]],"_development":true,"_from":"axios@0.21.4","_id":"axios@0.21.4","_inBundle":false,"_integrity":"sha512-ut5vewkiu8jjGBdqpM44XxjuCjq9LAKeHVmoVfHVzy8eHgxxq8SbAVQNovDA8mVi05kP0Ea/n/UzcSHcTJQfNg==","_location":"/axios","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"axios@0.21.4","name":"axios","escapedName":"axios","rawSpec":"0.21.4","saveSpec":null,"fetchSpec":"0.21.4"},"_requiredBy":["/@vssue/api-bitbucket-v2","/@vssue/api-gitee-v5","/@vssue/api-github-v3","/@vssue/api-github-v4","/@vssue/api-gitlab-v4"],"_resolved":"https://registry.npmjs.org/axios/-/axios-0.21.4.tgz","_spec":"0.21.4","_where":"/home/runner/work/vuepress/vuepress","author":{"name":"Matt Zabriskie"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"bugs":{"url":"https://github.com/axios/axios/issues"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}],"dependencies":{"follow-redirects":"^1.14.0"},"description":"Promise based HTTP client for the browser and node.js","devDependencies":{"coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.3.0","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^23.0.0","grunt-karma":"^4.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^4.0.2","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^6.3.2","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^4.3.6","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^8.2.1","sinon":"^4.5.0","terser-webpack-plugin":"^4.2.3","typescript":"^4.0.5","url-search-params":"^0.10.0","webpack":"^4.44.2","webpack-dev-server":"^3.11.0"},"homepage":"https://axios-http.com","jsdelivr":"dist/axios.min.js","keywords":["xhr","http","ajax","promise","node"],"license":"MIT","main":"index.js","name":"axios","repository":{"type":"git","url":"git+https://github.com/axios/axios.git"},"scripts":{"build":"NODE_ENV=production grunt build","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","examples":"node ./examples/server.js","fix":"eslint --fix lib/**/*.js","postversion":"git push && git push --tags","preversion":"npm test","start":"node ./sandbox/server.js","test":"grunt test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json"},"typings":"./index.d.ts","unpkg":"dist/axios.min.js","version":"0.21.4"}')},function(e,t,n){"use strict";var i=n(124);function r(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;e((function(e){n.reason||(n.reason=new i(e),t(n.reason))}))}r.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},r.source=function(){var e;return{token:new r((function(t){e=t})),cancel:e}},e.exports=r},function(e,t,n){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},function(e,t,n){"use strict";e.exports=function(e){return"object"==typeof e&&!0===e.isAxiosError}},function(e,t,n){},function(e,t,n){"use strict";n(125)},function(e,t,n){},function(e,t,n){e.exports=function(e){function t(e){let n,r,o,a=null;function s(...e){if(!s.enabled)return;const i=s,r=Number(new Date),o=r-(n||r);i.diff=o,i.prev=n,i.curr=r,n=r,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let a=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,(n,r)=>{if("%%"===n)return"%";a++;const o=t.formatters[r];if("function"==typeof o){const t=e[a];n=o.call(i,t),e.splice(a,1),a--}return n}),t.formatArgs.call(i,e);(i.log||t.log).apply(i,e)}return s.namespace=e,s.useColors=t.useColors(),s.color=t.selectColor(e),s.extend=i,s.destroy=t.destroy,Object.defineProperty(s,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==a?a:(r!==t.namespaces&&(r=t.namespaces,o=t.enabled(e)),o),set:e=>{a=e}}),"function"==typeof t.init&&t.init(s),s}function i(e,n){const i=t(this.namespace+(void 0===n?":":n)+e);return i.log=this.log,i}function r(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},t.disable=function(){const e=[...t.names.map(r),...t.skips.map(r).map(e=>"-"+e)].join(",");return t.enable(""),e},t.enable=function(e){let n;t.save(e),t.namespaces=e,t.names=[],t.skips=[];const i=("string"==typeof e?e:"").split(/[\s,]+/),r=i.length;for(n=0;n<r;n++)i[n]&&("-"===(e=i[n].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.slice(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){if("*"===e[e.length-1])return!0;let n,i;for(n=0,i=t.skips.length;n<i;n++)if(t.skips[n].test(e))return!1;for(n=0,i=t.names.length;n<i;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(341),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach(n=>{t[n]=e[n]}),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return t.colors[Math.abs(n)%t.colors.length]},t.enable(t.load()),t}},function(e,t){var n=1e3,i=6e4,r=60*i,o=24*r;function a(e,t,n,i){var r=t>=1.5*n;return Math.round(e/n)+" "+i+(r?"s":"")}e.exports=function(e,t){t=t||{};var s=typeof e;if("string"===s&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(!t)return;var a=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*a;case"weeks":case"week":case"w":return 6048e5*a;case"days":case"day":case"d":return a*o;case"hours":case"hour":case"hrs":case"hr":case"h":return a*r;case"minutes":case"minute":case"mins":case"min":case"m":return a*i;case"seconds":case"second":case"secs":case"sec":case"s":return a*n;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return a;default:return}}(e);if("number"===s&&isFinite(e))return t.long?function(e){var t=Math.abs(e);if(t>=o)return a(e,t,o,"day");if(t>=r)return a(e,t,r,"hour");if(t>=i)return a(e,t,i,"minute");if(t>=n)return a(e,t,n,"second");return e+" ms"}(e):function(e){var t=Math.abs(e);if(t>=o)return Math.round(e/o)+"d";if(t>=r)return Math.round(e/r)+"h";if(t>=i)return Math.round(e/i)+"m";if(t>=n)return Math.round(e/n)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},function(e,t,n){},function(e,t,n){"use strict";n(126)},function(e,t,n){"use strict";n(127)},function(e,t,n){"use strict";n.r(t);var i=n(0);
/*!
  * vue-router v3.6.5
  * (c) 2022 Evan You
  * @license MIT
  */function r(e,t){for(var n in t)e[n]=t[n];return e}var o=/[!'()*]/g,a=function(e){return"%"+e.charCodeAt(0).toString(16)},s=/%2C/g,l=function(e){return encodeURIComponent(e).replace(o,a).replace(s,",")};function c(e){try{return decodeURIComponent(e)}catch(e){0}return e}var u=function(e){return null==e||"object"==typeof e?e:String(e)};function p(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),i=c(n.shift()),r=n.length>0?c(n.join("=")):null;void 0===t[i]?t[i]=r:Array.isArray(t[i])?t[i].push(r):t[i]=[t[i],r]})),t):t}function f(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return l(t);if(Array.isArray(n)){var i=[];return n.forEach((function(e){void 0!==e&&(null===e?i.push(l(t)):i.push(l(t)+"="+l(e)))})),i.join("&")}return l(t)+"="+l(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var d=/\/?$/;function h(e,t,n,i){var r=i&&i.options.stringifyQuery,o=t.query||{};try{o=m(o)}catch(e){}var a={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:o,params:t.params||{},fullPath:y(t,r),matched:e?v(e):[]};return n&&(a.redirectedFrom=y(n,r)),Object.freeze(a)}function m(e){if(Array.isArray(e))return e.map(m);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=m(e[n]);return t}return e}var g=h(null,{path:"/"});function v(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function y(e,t){var n=e.path,i=e.query;void 0===i&&(i={});var r=e.hash;return void 0===r&&(r=""),(n||"/")+(t||f)(i)+r}function b(e,t,n){return t===g?e===t:!!t&&(e.path&&t.path?e.path.replace(d,"")===t.path.replace(d,"")&&(n||e.hash===t.hash&&I(e.query,t.query)):!(!e.name||!t.name)&&(e.name===t.name&&(n||e.hash===t.hash&&I(e.query,t.query)&&I(e.params,t.params))))}function I(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),i=Object.keys(t).sort();return n.length===i.length&&n.every((function(n,r){var o=e[n];if(i[r]!==n)return!1;var a=t[n];return null==o||null==a?o===a:"object"==typeof o&&"object"==typeof a?I(o,a):String(o)===String(a)}))}function S(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var i in n.instances){var r=n.instances[i],o=n.enteredCbs[i];if(r&&o){delete n.enteredCbs[i];for(var a=0;a<o.length;a++)r._isBeingDestroyed||o[a](r)}}}}var _={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,i=t.children,o=t.parent,a=t.data;a.routerView=!0;for(var s=o.$createElement,l=n.name,c=o.$route,u=o._routerViewCache||(o._routerViewCache={}),p=0,f=!1;o&&o._routerRoot!==o;){var d=o.$vnode?o.$vnode.data:{};d.routerView&&p++,d.keepAlive&&o._directInactive&&o._inactive&&(f=!0),o=o.$parent}if(a.routerViewDepth=p,f){var h=u[l],m=h&&h.component;return m?(h.configProps&&D(m,a,h.route,h.configProps),s(m,a,i)):s()}var g=c.matched[p],v=g&&g.components[l];if(!g||!v)return u[l]=null,s();u[l]={component:v},a.registerRouteInstance=function(e,t){var n=g.instances[l];(t&&n!==e||!t&&n===e)&&(g.instances[l]=t)},(a.hook||(a.hook={})).prepatch=function(e,t){g.instances[l]=t.componentInstance},a.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==g.instances[l]&&(g.instances[l]=e.componentInstance),S(c)};var y=g.props&&g.props[l];return y&&(r(u[l],{route:c,configProps:y}),D(v,a,c,y)),s(v,a,i)}};function D(e,t,n,i){var o=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(n,i);if(o){o=t.props=r({},o);var a=t.attrs=t.attrs||{};for(var s in o)e.props&&s in e.props||(a[s]=o[s],delete o[s])}}function L(e,t,n){var i=e.charAt(0);if("/"===i)return e;if("?"===i||"#"===i)return t+e;var r=t.split("/");n&&r[r.length-1]||r.pop();for(var o=e.replace(/^\//,"").split("/"),a=0;a<o.length;a++){var s=o[a];".."===s?r.pop():"."!==s&&r.push(s)}return""!==r[0]&&r.unshift(""),r.join("/")}function k(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var w=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},T=B,C=E,P=function(e,t){return N(E(e,t),t)},x=N,O=$,A=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function E(e,t){for(var n,i=[],r=0,o=0,a="",s=t&&t.delimiter||"/";null!=(n=A.exec(e));){var l=n[0],c=n[1],u=n.index;if(a+=e.slice(o,u),o=u+l.length,c)a+=c[1];else{var p=e[o],f=n[2],d=n[3],h=n[4],m=n[5],g=n[6],v=n[7];a&&(i.push(a),a="");var y=null!=f&&null!=p&&p!==f,b="+"===g||"*"===g,I="?"===g||"*"===g,S=n[2]||s,_=h||m;i.push({name:d||r++,prefix:f||"",delimiter:S,optional:I,repeat:b,partial:y,asterisk:!!v,pattern:_?j(_):v?".*":"[^"+V(S)+"]+?"})}}return o<e.length&&(a+=e.substr(o)),a&&i.push(a),i}function F(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function N(e,t){for(var n=new Array(e.length),i=0;i<e.length;i++)"object"==typeof e[i]&&(n[i]=new RegExp("^(?:"+e[i].pattern+")$",Q(t)));return function(t,i){for(var r="",o=t||{},a=(i||{}).pretty?F:encodeURIComponent,s=0;s<e.length;s++){var l=e[s];if("string"!=typeof l){var c,u=o[l.name];if(null==u){if(l.optional){l.partial&&(r+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(w(u)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var p=0;p<u.length;p++){if(c=a(u[p]),!n[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");r+=(0===p?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(u).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):a(u),!n[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');r+=l.prefix+c}}else r+=l}return r}}function V(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function j(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function R(e,t){return e.keys=t,e}function Q(e){return e&&e.sensitive?"":"i"}function $(e,t,n){w(t)||(n=t||n,t=[]);for(var i=(n=n||{}).strict,r=!1!==n.end,o="",a=0;a<e.length;a++){var s=e[a];if("string"==typeof s)o+=V(s);else{var l=V(s.prefix),c="(?:"+s.pattern+")";t.push(s),s.repeat&&(c+="(?:"+l+c+")*"),o+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var u=V(n.delimiter||"/"),p=o.slice(-u.length)===u;return i||(o=(p?o.slice(0,-u.length):o)+"(?:"+u+"(?=$))?"),o+=r?"$":i&&p?"":"(?="+u+"|$)",R(new RegExp("^"+o,Q(n)),t)}function B(e,t,n){return w(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var i=0;i<n.length;i++)t.push({name:i,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return R(e,t)}(e,t):w(e)?function(e,t,n){for(var i=[],r=0;r<e.length;r++)i.push(B(e[r],t,n).source);return R(new RegExp("(?:"+i.join("|")+")",Q(n)),t)}(e,t,n):function(e,t,n){return $(E(e,n),t,n)}(e,t,n)}T.parse=C,T.compile=P,T.tokensToFunction=x,T.tokensToRegExp=O;var M=Object.create(null);function G(e,t,n){t=t||{};try{var i=M[e]||(M[e]=T.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),i(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function q(e,t,n,i){var o="string"==typeof e?{path:e}:e;if(o._normalized)return o;if(o.name){var a=(o=r({},e)).params;return a&&"object"==typeof a&&(o.params=r({},a)),o}if(!o.path&&o.params&&t){(o=r({},o))._normalized=!0;var s=r(r({},t.params),o.params);if(t.name)o.name=t.name,o.params=s;else if(t.matched.length){var l=t.matched[t.matched.length-1].path;o.path=G(l,s,t.path)}else 0;return o}var c=function(e){var t="",n="",i=e.indexOf("#");i>=0&&(t=e.slice(i),e=e.slice(0,i));var r=e.indexOf("?");return r>=0&&(n=e.slice(r+1),e=e.slice(0,r)),{path:e,query:n,hash:t}}(o.path||""),f=t&&t.path||"/",d=c.path?L(c.path,f,n||o.append):f,h=function(e,t,n){void 0===t&&(t={});var i,r=n||p;try{i=r(e||"")}catch(e){i={}}for(var o in t){var a=t[o];i[o]=Array.isArray(a)?a.map(u):u(a)}return i}(c.query,o.query,i&&i.options.parseQuery),m=o.hash||c.hash;return m&&"#"!==m.charAt(0)&&(m="#"+m),{_normalized:!0,path:d,query:h,hash:m}}var z,W=function(){},U={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,i=this.$route,o=n.resolve(this.to,i,this.append),a=o.location,s=o.route,l=o.href,c={},u=n.options.linkActiveClass,p=n.options.linkExactActiveClass,f=null==u?"router-link-active":u,m=null==p?"router-link-exact-active":p,g=null==this.activeClass?f:this.activeClass,v=null==this.exactActiveClass?m:this.exactActiveClass,y=s.redirectedFrom?h(null,q(s.redirectedFrom),null,n):s;c[v]=b(i,y,this.exactPath),c[g]=this.exact||this.exactPath?c[v]:function(e,t){return 0===e.path.replace(d,"/").indexOf(t.path.replace(d,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(i,y);var I=c[v]?this.ariaCurrentValue:null,S=function(e){H(e)&&(t.replace?n.replace(a,W):n.push(a,W))},_={click:H};Array.isArray(this.event)?this.event.forEach((function(e){_[e]=S})):_[this.event]=S;var D={class:c},L=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:l,route:s,navigate:S,isActive:c[g],isExactActive:c[v]});if(L){if(1===L.length)return L[0];if(L.length>1||!L.length)return 0===L.length?e():e("span",{},L)}if("a"===this.tag)D.on=_,D.attrs={href:l,"aria-current":I};else{var k=function e(t){var n;if(t)for(var i=0;i<t.length;i++){if("a"===(n=t[i]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(k){k.isStatic=!1;var w=k.data=r({},k.data);for(var T in w.on=w.on||{},w.on){var C=w.on[T];T in _&&(w.on[T]=Array.isArray(C)?C:[C])}for(var P in _)P in w.on?w.on[P].push(_[P]):w.on[P]=S;var x=k.data.attrs=r({},k.data.attrs);x.href=l,x["aria-current"]=I}else D.on=_}return e(this.tag,D,this.$slots.default)}};function H(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var Z="undefined"!=typeof window;function J(e,t,n,i,r){var o=t||[],a=n||Object.create(null),s=i||Object.create(null);e.forEach((function(e){!function e(t,n,i,r,o,a){var s=r.path,l=r.name;0;var c=r.pathToRegexpOptions||{},u=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return k(t.path+"/"+e)}(s,o,c.strict);"boolean"==typeof r.caseSensitive&&(c.sensitive=r.caseSensitive);var p={path:u,regex:K(u,c),components:r.components||{default:r.component},alias:r.alias?"string"==typeof r.alias?[r.alias]:r.alias:[],instances:{},enteredCbs:{},name:l,parent:o,matchAs:a,redirect:r.redirect,beforeEnter:r.beforeEnter,meta:r.meta||{},props:null==r.props?{}:r.components?r.props:{default:r.props}};r.children&&r.children.forEach((function(r){var o=a?k(a+"/"+r.path):void 0;e(t,n,i,r,p,o)}));n[p.path]||(t.push(p.path),n[p.path]=p);if(void 0!==r.alias)for(var f=Array.isArray(r.alias)?r.alias:[r.alias],d=0;d<f.length;++d){0;var h={path:f[d],children:r.children};e(t,n,i,h,o,p.path||"/")}l&&(i[l]||(i[l]=p))}(o,a,s,e,r)}));for(var l=0,c=o.length;l<c;l++)"*"===o[l]&&(o.push(o.splice(l,1)[0]),c--,l--);return{pathList:o,pathMap:a,nameMap:s}}function K(e,t){return T(e,[],t)}function Y(e,t){var n=J(e),i=n.pathList,r=n.pathMap,o=n.nameMap;function a(e,n,a){var s=q(e,n,!1,t),c=s.name;if(c){var u=o[c];if(!u)return l(null,s);var p=u.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),n&&"object"==typeof n.params)for(var f in n.params)!(f in s.params)&&p.indexOf(f)>-1&&(s.params[f]=n.params[f]);return s.path=G(u.path,s.params),l(u,s,a)}if(s.path){s.params={};for(var d=0;d<i.length;d++){var h=i[d],m=r[h];if(X(m.regex,s.path,s.params))return l(m,s,a)}}return l(null,s)}function s(e,n){var i=e.redirect,r="function"==typeof i?i(h(e,n,null,t)):i;if("string"==typeof r&&(r={path:r}),!r||"object"!=typeof r)return l(null,n);var s=r,c=s.name,u=s.path,p=n.query,f=n.hash,d=n.params;if(p=s.hasOwnProperty("query")?s.query:p,f=s.hasOwnProperty("hash")?s.hash:f,d=s.hasOwnProperty("params")?s.params:d,c){o[c];return a({_normalized:!0,name:c,query:p,hash:f,params:d},void 0,n)}if(u){var m=function(e,t){return L(e,t.parent?t.parent.path:"/",!0)}(u,e);return a({_normalized:!0,path:G(m,d),query:p,hash:f},void 0,n)}return l(null,n)}function l(e,n,i){return e&&e.redirect?s(e,i||n):e&&e.matchAs?function(e,t,n){var i=a({_normalized:!0,path:G(n,t.params)});if(i){var r=i.matched,o=r[r.length-1];return t.params=i.params,l(o,t)}return l(null,t)}(0,n,e.matchAs):h(e,n,i,t)}return{match:a,addRoute:function(e,t){var n="object"!=typeof e?o[e]:void 0;J([t||e],i,r,o,n),n&&n.alias.length&&J(n.alias.map((function(e){return{path:e,children:[t]}})),i,r,o,n)},getRoutes:function(){return i.map((function(e){return r[e]}))},addRoutes:function(e){J(e,i,r,o)}}}function X(e,t,n){var i=t.match(e);if(!i)return!1;if(!n)return!0;for(var r=1,o=i.length;r<o;++r){var a=e.keys[r-1];a&&(n[a.name||"pathMatch"]="string"==typeof i[r]?c(i[r]):i[r])}return!0}var ee=Z&&window.performance&&window.performance.now?window.performance:Date;function te(){return ee.now().toFixed(3)}var ne=te();function ie(){return ne}function re(e){return ne=e}var oe=Object.create(null);function ae(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=r({},window.history.state);return n.key=ie(),window.history.replaceState(n,"",t),window.addEventListener("popstate",ce),function(){window.removeEventListener("popstate",ce)}}function se(e,t,n,i){if(e.app){var r=e.options.scrollBehavior;r&&e.app.$nextTick((function(){var o=function(){var e=ie();if(e)return oe[e]}(),a=r.call(e,t,n,i?o:null);a&&("function"==typeof a.then?a.then((function(e){he(e,o)})).catch((function(e){0})):he(a,o))}))}}function le(){var e=ie();e&&(oe[e]={x:window.pageXOffset,y:window.pageYOffset})}function ce(e){le(),e.state&&e.state.key&&re(e.state.key)}function ue(e){return fe(e.x)||fe(e.y)}function pe(e){return{x:fe(e.x)?e.x:window.pageXOffset,y:fe(e.y)?e.y:window.pageYOffset}}function fe(e){return"number"==typeof e}var de=/^#\d/;function he(e,t){var n,i="object"==typeof e;if(i&&"string"==typeof e.selector){var r=de.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(r){var o=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),i=e.getBoundingClientRect();return{x:i.left-n.left-t.x,y:i.top-n.top-t.y}}(r,o={x:fe((n=o).x)?n.x:0,y:fe(n.y)?n.y:0})}else ue(e)&&(t=pe(e))}else i&&ue(e)&&(t=pe(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var me,ge=Z&&((-1===(me=window.navigator.userAgent).indexOf("Android 2.")&&-1===me.indexOf("Android 4.0")||-1===me.indexOf("Mobile Safari")||-1!==me.indexOf("Chrome")||-1!==me.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function ve(e,t){le();var n=window.history;try{if(t){var i=r({},n.state);i.key=ie(),n.replaceState(i,"",e)}else n.pushState({key:re(te())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function ye(e){ve(e,!0)}var be={redirected:2,aborted:4,cancelled:8,duplicated:16};function Ie(e,t){return _e(e,t,be.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return De.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function Se(e,t){return _e(e,t,be.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function _e(e,t,n,i){var r=new Error(i);return r._isRouter=!0,r.from=e,r.to=t,r.type=n,r}var De=["params","query","hash"];function Le(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function ke(e,t){return Le(e)&&e._isRouter&&(null==t||e.type===t)}function we(e,t,n){var i=function(r){r>=e.length?n():e[r]?t(e[r],(function(){i(r+1)})):i(r+1)};i(0)}function Te(e){return function(t,n,i){var r=!1,o=0,a=null;Ce(e,(function(e,t,n,s){if("function"==typeof e&&void 0===e.cid){r=!0,o++;var l,c=Oe((function(t){var r;((r=t).__esModule||xe&&"Module"===r[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:z.extend(t),n.components[s]=t,--o<=0&&i()})),u=Oe((function(e){var t="Failed to resolve async component "+s+": "+e;a||(a=Le(e)?e:new Error(t),i(a))}));try{l=e(c,u)}catch(e){u(e)}if(l)if("function"==typeof l.then)l.then(c,u);else{var p=l.component;p&&"function"==typeof p.then&&p.then(c,u)}}})),r||i()}}function Ce(e,t){return Pe(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function Pe(e){return Array.prototype.concat.apply([],e)}var xe="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Oe(e){var t=!1;return function(){for(var n=[],i=arguments.length;i--;)n[i]=arguments[i];if(!t)return t=!0,e.apply(this,n)}}var Ae=function(e,t){this.router=e,this.base=function(e){if(!e)if(Z){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=g,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Ee(e,t,n,i){var r=Ce(e,(function(e,i,r,o){var a=function(e,t){"function"!=typeof e&&(e=z.extend(e));return e.options[t]}(e,t);if(a)return Array.isArray(a)?a.map((function(e){return n(e,i,r,o)})):n(a,i,r,o)}));return Pe(i?r.reverse():r)}function Fe(e,t){if(t)return function(){return e.apply(t,arguments)}}Ae.prototype.listen=function(e){this.cb=e},Ae.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},Ae.prototype.onError=function(e){this.errorCbs.push(e)},Ae.prototype.transitionTo=function(e,t,n){var i,r=this;try{i=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var o=this.current;this.confirmTransition(i,(function(){r.updateRoute(i),t&&t(i),r.ensureURL(),r.router.afterHooks.forEach((function(e){e&&e(i,o)})),r.ready||(r.ready=!0,r.readyCbs.forEach((function(e){e(i)})))}),(function(e){n&&n(e),e&&!r.ready&&(ke(e,be.redirected)&&o===g||(r.ready=!0,r.readyErrorCbs.forEach((function(t){t(e)}))))}))},Ae.prototype.confirmTransition=function(e,t,n){var i=this,r=this.current;this.pending=e;var o=function(e){!ke(e)&&Le(e)&&(i.errorCbs.length?i.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},a=e.matched.length-1,s=r.matched.length-1;if(b(e,r)&&a===s&&e.matched[a]===r.matched[s])return this.ensureURL(),e.hash&&se(this.router,r,e,!1),o(function(e,t){var n=_e(e,t,be.duplicated,'Avoided redundant navigation to current location: "'+e.fullPath+'".');return n.name="NavigationDuplicated",n}(r,e));var l=function(e,t){var n,i=Math.max(e.length,t.length);for(n=0;n<i&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),c=l.updated,u=l.deactivated,p=l.activated,f=[].concat(function(e){return Ee(e,"beforeRouteLeave",Fe,!0)}(u),this.router.beforeHooks,function(e){return Ee(e,"beforeRouteUpdate",Fe)}(c),p.map((function(e){return e.beforeEnter})),Te(p)),d=function(t,n){if(i.pending!==e)return o(Se(r,e));try{t(e,r,(function(t){!1===t?(i.ensureURL(!0),o(function(e,t){return _e(e,t,be.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(r,e))):Le(t)?(i.ensureURL(!0),o(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(o(Ie(r,e)),"object"==typeof t&&t.replace?i.replace(t):i.push(t)):n(t)}))}catch(e){o(e)}};we(f,d,(function(){we(function(e){return Ee(e,"beforeRouteEnter",(function(e,t,n,i){return function(e,t,n){return function(i,r,o){return e(i,r,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),o(e)}))}}(e,n,i)}))}(p).concat(i.router.resolveHooks),d,(function(){if(i.pending!==e)return o(Se(r,e));i.pending=null,t(e),i.router.app&&i.router.app.$nextTick((function(){S(e)}))}))}))},Ae.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Ae.prototype.setupListeners=function(){},Ae.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=g,this.pending=null};var Ne=function(e){function t(t,n){e.call(this,t,n),this._startLocation=Ve(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,i=ge&&n;i&&this.listeners.push(ae());var r=function(){var n=e.current,r=Ve(e.base);e.current===g&&r===e._startLocation||e.transitionTo(r,(function(e){i&&se(t,e,n,!0)}))};window.addEventListener("popstate",r),this.listeners.push((function(){window.removeEventListener("popstate",r)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var i=this,r=this.current;this.transitionTo(e,(function(e){ve(k(i.base+e.fullPath)),se(i.router,e,r,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var i=this,r=this.current;this.transitionTo(e,(function(e){ye(k(i.base+e.fullPath)),se(i.router,e,r,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(Ve(this.base)!==this.current.fullPath){var t=k(this.base+this.current.fullPath);e?ve(t):ye(t)}},t.prototype.getCurrentLocation=function(){return Ve(this.base)},t}(Ae);function Ve(e){var t=window.location.pathname,n=t.toLowerCase(),i=e.toLowerCase();return!e||n!==i&&0!==n.indexOf(k(i+"/"))||(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var je=function(e){function t(t,n,i){e.call(this,t,n),i&&function(e){var t=Ve(e);if(!/^\/#/.test(t))return window.location.replace(k(e+"/#"+t)),!0}(this.base)||Re()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=ge&&t;n&&this.listeners.push(ae());var i=function(){var t=e.current;Re()&&e.transitionTo(Qe(),(function(i){n&&se(e.router,i,t,!0),ge||Me(i.fullPath)}))},r=ge?"popstate":"hashchange";window.addEventListener(r,i),this.listeners.push((function(){window.removeEventListener(r,i)}))}},t.prototype.push=function(e,t,n){var i=this,r=this.current;this.transitionTo(e,(function(e){Be(e.fullPath),se(i.router,e,r,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var i=this,r=this.current;this.transitionTo(e,(function(e){Me(e.fullPath),se(i.router,e,r,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;Qe()!==t&&(e?Be(t):Me(t))},t.prototype.getCurrentLocation=function(){return Qe()},t}(Ae);function Re(){var e=Qe();return"/"===e.charAt(0)||(Me("/"+e),!1)}function Qe(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function $e(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function Be(e){ge?ve($e(e)):window.location.hash=e}function Me(e){ge?ye($e(e)):window.location.replace($e(e))}var Ge=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var i=this;this.transitionTo(e,(function(e){i.stack=i.stack.slice(0,i.index+1).concat(e),i.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var i=this;this.transitionTo(e,(function(e){i.stack=i.stack.slice(0,i.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var i=this.stack[n];this.confirmTransition(i,(function(){var e=t.current;t.index=n,t.updateRoute(i),t.router.afterHooks.forEach((function(t){t&&t(i,e)}))}),(function(e){ke(e,be.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(Ae),qe=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Y(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!ge&&!1!==e.fallback,this.fallback&&(t="hash"),Z||(t="abstract"),this.mode=t,t){case"history":this.history=new Ne(this,e.base);break;case"hash":this.history=new je(this,e.base,this.fallback);break;case"abstract":this.history=new Ge(this,e.base);break;default:0}},ze={currentRoute:{configurable:!0}};qe.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},ze.currentRoute.get=function(){return this.history&&this.history.current},qe.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof Ne||n instanceof je){var i=function(e){n.setupListeners(),function(e){var i=n.current,r=t.options.scrollBehavior;ge&&r&&"fullPath"in e&&se(t,e,i,!1)}(e)};n.transitionTo(n.getCurrentLocation(),i,i)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},qe.prototype.beforeEach=function(e){return Ue(this.beforeHooks,e)},qe.prototype.beforeResolve=function(e){return Ue(this.resolveHooks,e)},qe.prototype.afterEach=function(e){return Ue(this.afterHooks,e)},qe.prototype.onReady=function(e,t){this.history.onReady(e,t)},qe.prototype.onError=function(e){this.history.onError(e)},qe.prototype.push=function(e,t,n){var i=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){i.history.push(e,t,n)}));this.history.push(e,t,n)},qe.prototype.replace=function(e,t,n){var i=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){i.history.replace(e,t,n)}));this.history.replace(e,t,n)},qe.prototype.go=function(e){this.history.go(e)},qe.prototype.back=function(){this.go(-1)},qe.prototype.forward=function(){this.go(1)},qe.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},qe.prototype.resolve=function(e,t,n){var i=q(e,t=t||this.history.current,n,this),r=this.match(i,t),o=r.redirectedFrom||r.fullPath;return{location:i,route:r,href:function(e,t,n){var i="hash"===n?"#"+t:t;return e?k(e+"/"+i):i}(this.history.base,o,this.mode),normalizedTo:i,resolved:r}},qe.prototype.getRoutes=function(){return this.matcher.getRoutes()},qe.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},qe.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==g&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(qe.prototype,ze);var We=qe;function Ue(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}qe.install=function e(t){if(!e.installed||z!==t){e.installed=!0,z=t;var n=function(e){return void 0!==e},i=function(e,t){var i=e.$options._parentVnode;n(i)&&n(i=i.data)&&n(i=i.registerRouteInstance)&&i(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,i(this,this)},destroyed:function(){i(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",_),t.component("RouterLink",U);var r=t.config.optionMergeStrategies;r.beforeRouteEnter=r.beforeRouteLeave=r.beforeRouteUpdate=r.created}},qe.version="3.6.5",qe.isNavigationFailure=ke,qe.NavigationFailureType=be,qe.START_LOCATION=g,Z&&window.Vue&&window.Vue.use(qe);n(68);n(134),n(16);var He={"components/AlgoliaSearchBox":()=>Promise.all([n.e(0),n.e(18)]).then(n.bind(null,472)),"components/Common":()=>Promise.all([n.e(0),n.e(2),n.e(1),n.e(3)]).then(n.bind(null,402)),"components/DropdownLink":()=>Promise.all([n.e(0),n.e(19)]).then(n.bind(null,385)),"components/DropdownTransition":()=>Promise.all([n.e(0),n.e(34)]).then(n.bind(null,361)),"components/Footer":()=>Promise.all([n.e(0),n.e(24)]).then(n.bind(null,439)),"components/FriendLink":()=>Promise.all([n.e(0),n.e(29)]).then(n.bind(null,407)),"components/Home":()=>Promise.all([n.e(0),n.e(25)]).then(n.bind(null,440)),"components/MobShare":()=>n.e(37).then(n.bind(null,473)),"components/NavLink":()=>n.e(30).then(n.bind(null,359)),"components/NavLinks":()=>Promise.all([n.e(0),n.e(16)]).then(n.bind(null,403)),"components/Navbar":()=>Promise.all([n.e(0),n.e(2),n.e(1)]).then(n.bind(null,469)),"components/NoteAbstract":()=>Promise.all([n.e(0),n.e(17)]).then(n.bind(null,368)),"components/NoteAbstractItem":()=>Promise.all([n.e(0),n.e(22)]).then(n.bind(null,362)),"components/Page":()=>Promise.all([n.e(0),n.e(23)]).then(n.bind(null,441)),"components/PageInfo":()=>Promise.all([n.e(0),n.e(26)]).then(n.bind(null,356)),"components/Password":()=>Promise.all([n.e(0),n.e(21)]).then(n.bind(null,438)),"components/PersonalInfo":()=>Promise.all([n.e(0),n.e(27)]).then(n.bind(null,405)),"components/SearchBox":()=>Promise.all([n.e(0),n.e(28)]).then(n.bind(null,474)),"components/Sidebar":()=>Promise.all([n.e(0),n.e(15)]).then(n.bind(null,437)),"components/SidebarButton":()=>Promise.all([n.e(0),n.e(35)]).then(n.bind(null,444)),"components/SidebarGroup":()=>Promise.all([n.e(0),n.e(8)]).then(n.bind(null,404)),"components/SidebarLink":()=>Promise.all([n.e(0),n.e(36)]).then(n.bind(null,386)),"components/SidebarLinks":()=>Promise.all([n.e(0),n.e(8)]).then(n.bind(null,383)),"components/SubSidebar":()=>Promise.all([n.e(0),n.e(32)]).then(n.bind(null,445)),"components/TagList":()=>Promise.all([n.e(0),n.e(33)]).then(n.bind(null,378)),"global-components/Badge":()=>Promise.all([n.e(0),n.e(11)]).then(n.bind(null,481)),"layouts/404":()=>Promise.all([n.e(0),n.e(9)]).then(n.bind(null,475)),"layouts/Category":()=>Promise.all([n.e(0),n.e(2),n.e(1),n.e(3),n.e(7)]).then(n.bind(null,476)),"layouts/Layout":()=>Promise.all([n.e(0),n.e(2),n.e(1),n.e(3),n.e(4)]).then(n.bind(null,477)),"layouts/Tag":()=>Promise.all([n.e(0),n.e(2),n.e(1),n.e(3),n.e(5)]).then(n.bind(null,478)),"layouts/Tags":()=>Promise.all([n.e(0),n.e(2),n.e(1),n.e(3),n.e(6)]).then(n.bind(null,479)),"layouts/TimeLines":()=>Promise.all([n.e(0),n.e(2),n.e(1),n.e(3),n.e(10)]).then(n.bind(null,480)),"components/HomeBlog/index":()=>Promise.all([n.e(0),n.e(14)]).then(n.bind(null,442)),"components/Mode/ModePicker":()=>Promise.all([n.e(0),n.e(31)]).then(n.bind(null,406)),"components/Mode/index":()=>Promise.all([n.e(0),n.e(20)]).then(n.bind(null,436)),NotFound:()=>Promise.all([n.e(0),n.e(9)]).then(n.bind(null,475)),Category:()=>Promise.all([n.e(0),n.e(2),n.e(1),n.e(3),n.e(7)]).then(n.bind(null,476)),Layout:()=>Promise.all([n.e(0),n.e(2),n.e(1),n.e(3),n.e(4)]).then(n.bind(null,477)),Tag:()=>Promise.all([n.e(0),n.e(2),n.e(1),n.e(3),n.e(5)]).then(n.bind(null,478)),Tags:()=>Promise.all([n.e(0),n.e(2),n.e(1),n.e(3),n.e(6)]).then(n.bind(null,479)),TimeLines:()=>Promise.all([n.e(0),n.e(2),n.e(1),n.e(3),n.e(10)]).then(n.bind(null,480))},Ze={"v-4183bb16":()=>n.e(38).then(n.bind(null,482)),"v-e036fc76":()=>n.e(40).then(n.bind(null,483)),"v-1bd7dae5":()=>n.e(41).then(n.bind(null,484)),"v-6b1ef14d":()=>n.e(39).then(n.bind(null,485)),"v-0b5fe9dd":()=>n.e(42).then(n.bind(null,486)),"v-58bff654":()=>n.e(43).then(n.bind(null,487)),"v-efc7f32a":()=>n.e(44).then(n.bind(null,488)),"v-105c5085":()=>n.e(45).then(n.bind(null,489)),"v-06d169e5":()=>n.e(46).then(n.bind(null,490)),"v-3d944647":()=>n.e(47).then(n.bind(null,491)),"v-4ca1d2a5":()=>n.e(48).then(n.bind(null,492)),"v-5994e6f6":()=>n.e(51).then(n.bind(null,493)),"v-076839e5":()=>n.e(50).then(n.bind(null,494)),"v-13a2da45":()=>n.e(49).then(n.bind(null,495)),"v-1373082e":()=>n.e(52).then(n.bind(null,496)),"v-5b9244da":()=>n.e(53).then(n.bind(null,497)),"v-454203f6":()=>n.e(54).then(n.bind(null,498)),"v-3d8fb96f":()=>n.e(56).then(n.bind(null,499)),"v-b7443a36":()=>n.e(55).then(n.bind(null,500)),"v-06286ab6":()=>n.e(57).then(n.bind(null,501))};function Je(e){const t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}const Ke=/-(\w)/g,Ye=Je(e=>e.replace(Ke,(e,t)=>t?t.toUpperCase():"")),Xe=/\B([A-Z])/g,et=Je(e=>e.replace(Xe,"-$1").toLowerCase()),tt=Je(e=>e.charAt(0).toUpperCase()+e.slice(1));function nt(e,t){if(!t)return;if(e(t))return e(t);return t.includes("-")?e(tt(Ye(t))):e(tt(t))||e(et(t))}const it=Object.assign({},He,Ze),rt=e=>it[e],ot=e=>Ze[e],at=e=>He[e],st=e=>i.b.component(e);function lt(e){return nt(ot,e)}function ct(e){return nt(at,e)}function ut(e){return nt(rt,e)}function pt(e){return nt(st,e)}function ft(...e){return Promise.all(e.filter(e=>e).map(async e=>{if(!pt(e)&&ut(e)){const t=await ut(e)();i.b.component(e,t.default)}}))}function dt(e,t){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=t)}var ht=n(128),mt=n.n(ht),gt=n(129),vt=n.n(gt),yt={created(){if(this.siteMeta=this.$site.headTags.filter(([e])=>"meta"===e).map(([e,t])=>t),this.$ssrContext){const t=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=t)?e.map(e=>{let t="<meta";return Object.keys(e).forEach(n=>{t+=` ${n}="${vt()(e[n])}"`}),t+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=It(this.$canonicalUrl)}var e},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const e=this.getMergedMetaTags();this.currentMetaTags=St(e,this.currentMetaTags)},getMergedMetaTags(){const e=this.$page.frontmatter.meta||[];return mt()([{name:"description",content:this.$description}],e,this.siteMeta,_t)},updateCanonicalLink(){bt(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",It(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){St(null,this.currentMetaTags),bt()}};function bt(){const e=document.querySelector("link[rel='canonical']");e&&e.remove()}function It(e=""){return e?`<link href="${e}" rel="canonical" />`:""}function St(e,t){if(t&&[...t].filter(e=>e.parentNode===document.head).forEach(e=>document.head.removeChild(e)),e)return e.map(e=>{const t=document.createElement("meta");return Object.keys(e).forEach(n=>{t.setAttribute(n,e[n])}),document.head.appendChild(t),t})}function _t(e){for(const t of["name","property","itemprop"])if(e.hasOwnProperty(t))return e[t]+t;return JSON.stringify(e)}n(271);
/*! medium-zoom 1.1.0 | MIT License | https://github.com/francoischalifour/medium-zoom */var Dt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},Lt=function(e){return"IMG"===e.tagName},kt=function(e){return e&&1===e.nodeType},wt=function(e){return".svg"===(e.currentSrc||e.src).substr(-4).toLowerCase()},Tt=function(e){try{return Array.isArray(e)?e.filter(Lt):function(e){return NodeList.prototype.isPrototypeOf(e)}(e)?[].slice.call(e).filter(Lt):kt(e)?[e].filter(Lt):"string"==typeof e?[].slice.call(document.querySelectorAll(e)).filter(Lt):[]}catch(e){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},Ct=function(e){var t=document.createElement("div");return t.classList.add("medium-zoom-overlay"),t.style.background=e,t},Pt=function(e){var t=e.getBoundingClientRect(),n=t.top,i=t.left,r=t.width,o=t.height,a=e.cloneNode(),s=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,l=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return a.removeAttribute("id"),a.style.position="absolute",a.style.top=n+s+"px",a.style.left=i+l+"px",a.style.width=r+"px",a.style.height=o+"px",a.style.transform="",a},xt=function(e,t){var n=Dt({bubbles:!1,cancelable:!1,detail:void 0},t);if("function"==typeof window.CustomEvent)return new CustomEvent(e,n);var i=document.createEvent("CustomEvent");return i.initCustomEvent(e,n.bubbles,n.cancelable,n.detail),i};!function(e,t){void 0===t&&(t={});var n=t.insertAt;if(e&&"undefined"!=typeof document){var i=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===n&&i.firstChild?i.insertBefore(r,i.firstChild):i.appendChild(r),r.styleSheet?r.styleSheet.cssText=e:r.appendChild(document.createTextNode(e))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var Ot=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=window.Promise||function(e){function t(){}e(t,t)},r=function(e){var t=e.target;t!==k?-1!==b.indexOf(t)&&m({target:t}):h()},o=function(){if(!S&&L.original){var e=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(_-e)>D.scrollOffset&&setTimeout(h,150)}},a=function(e){var t=e.key||e.keyCode;"Escape"!==t&&"Esc"!==t&&27!==t||h()},s=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e;if(e.background&&(k.style.background=e.background),e.container&&e.container instanceof Object&&(t.container=Dt({},D.container,e.container)),e.template){var n=kt(e.template)?e.template:document.querySelector(e.template);t.template=n}return D=Dt({},D,t),b.forEach((function(e){e.dispatchEvent(xt("medium-zoom:update",{detail:{zoom:w}}))})),w},l=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e(Dt({},D,t))},c=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];var i=t.reduce((function(e,t){return[].concat(e,Tt(t))}),[]);return i.filter((function(e){return-1===b.indexOf(e)})).forEach((function(e){b.push(e),e.classList.add("medium-zoom-image")})),I.forEach((function(e){var t=e.type,n=e.listener,r=e.options;i.forEach((function(e){e.addEventListener(t,n,r)}))})),w},u=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];L.zoomed&&h();var i=t.length>0?t.reduce((function(e,t){return[].concat(e,Tt(t))}),[]):b;return i.forEach((function(e){e.classList.remove("medium-zoom-image"),e.dispatchEvent(xt("medium-zoom:detach",{detail:{zoom:w}}))})),b=b.filter((function(e){return-1===i.indexOf(e)})),w},p=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return b.forEach((function(i){i.addEventListener("medium-zoom:"+e,t,n)})),I.push({type:"medium-zoom:"+e,listener:t,options:n}),w},f=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return b.forEach((function(i){i.removeEventListener("medium-zoom:"+e,t,n)})),I=I.filter((function(n){return!(n.type==="medium-zoom:"+e&&n.listener.toString()===t.toString())})),w},d=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.target,n=function(){var e={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},t=void 0,n=void 0;if(D.container)if(D.container instanceof Object)t=(e=Dt({},e,D.container)).width-e.left-e.right-2*D.margin,n=e.height-e.top-e.bottom-2*D.margin;else{var i=(kt(D.container)?D.container:document.querySelector(D.container)).getBoundingClientRect(),r=i.width,o=i.height,a=i.left,s=i.top;e=Dt({},e,{width:r,height:o,left:a,top:s})}t=t||e.width-2*D.margin,n=n||e.height-2*D.margin;var l=L.zoomedHd||L.original,c=wt(l)?t:l.naturalWidth||t,u=wt(l)?n:l.naturalHeight||n,p=l.getBoundingClientRect(),f=p.top,d=p.left,h=p.width,m=p.height,g=Math.min(Math.max(h,c),t)/h,v=Math.min(Math.max(m,u),n)/m,y=Math.min(g,v),b="scale("+y+") translate3d("+((t-h)/2-d+D.margin+e.left)/y+"px, "+((n-m)/2-f+D.margin+e.top)/y+"px, 0)";L.zoomed.style.transform=b,L.zoomedHd&&(L.zoomedHd.style.transform=b)};return new i((function(e){if(t&&-1===b.indexOf(t))e(w);else{if(L.zoomed)e(w);else{if(t)L.original=t;else{if(!(b.length>0))return void e(w);var i=b;L.original=i[0]}if(L.original.dispatchEvent(xt("medium-zoom:open",{detail:{zoom:w}})),_=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,S=!0,L.zoomed=Pt(L.original),document.body.appendChild(k),D.template){var r=kt(D.template)?D.template:document.querySelector(D.template);L.template=document.createElement("div"),L.template.appendChild(r.content.cloneNode(!0)),document.body.appendChild(L.template)}if(L.original.parentElement&&"PICTURE"===L.original.parentElement.tagName&&L.original.currentSrc&&(L.zoomed.src=L.original.currentSrc),document.body.appendChild(L.zoomed),window.requestAnimationFrame((function(){document.body.classList.add("medium-zoom--opened")})),L.original.classList.add("medium-zoom-image--hidden"),L.zoomed.classList.add("medium-zoom-image--opened"),L.zoomed.addEventListener("click",h),L.zoomed.addEventListener("transitionend",(function t(){S=!1,L.zoomed.removeEventListener("transitionend",t),L.original.dispatchEvent(xt("medium-zoom:opened",{detail:{zoom:w}})),e(w)})),L.original.getAttribute("data-zoom-src")){L.zoomedHd=L.zoomed.cloneNode(),L.zoomedHd.removeAttribute("srcset"),L.zoomedHd.removeAttribute("sizes"),L.zoomedHd.removeAttribute("loading"),L.zoomedHd.src=L.zoomed.getAttribute("data-zoom-src"),L.zoomedHd.onerror=function(){clearInterval(o),console.warn("Unable to reach the zoom image target "+L.zoomedHd.src),L.zoomedHd=null,n()};var o=setInterval((function(){L.zoomedHd.complete&&(clearInterval(o),L.zoomedHd.classList.add("medium-zoom-image--opened"),L.zoomedHd.addEventListener("click",h),document.body.appendChild(L.zoomedHd),n())}),10)}else if(L.original.hasAttribute("srcset")){L.zoomedHd=L.zoomed.cloneNode(),L.zoomedHd.removeAttribute("sizes"),L.zoomedHd.removeAttribute("loading");var a=L.zoomedHd.addEventListener("load",(function(){L.zoomedHd.removeEventListener("load",a),L.zoomedHd.classList.add("medium-zoom-image--opened"),L.zoomedHd.addEventListener("click",h),document.body.appendChild(L.zoomedHd),n()}))}else n()}}}))},h=function(){return new i((function(e){if(!S&&L.original){S=!0,document.body.classList.remove("medium-zoom--opened"),L.zoomed.style.transform="",L.zoomedHd&&(L.zoomedHd.style.transform=""),L.template&&(L.template.style.transition="opacity 150ms",L.template.style.opacity=0),L.original.dispatchEvent(xt("medium-zoom:close",{detail:{zoom:w}})),L.zoomed.addEventListener("transitionend",(function t(){L.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(L.zoomed),L.zoomedHd&&document.body.removeChild(L.zoomedHd),document.body.removeChild(k),L.zoomed.classList.remove("medium-zoom-image--opened"),L.template&&document.body.removeChild(L.template),S=!1,L.zoomed.removeEventListener("transitionend",t),L.original.dispatchEvent(xt("medium-zoom:closed",{detail:{zoom:w}})),L.original=null,L.zoomed=null,L.zoomedHd=null,L.template=null,e(w)}))}else e(w)}))},m=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.target;return L.original?h():d({target:t})},g=function(){return D},v=function(){return b},y=function(){return L.original},b=[],I=[],S=!1,_=0,D=n,L={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(t)?D=t:(t||"string"==typeof t)&&c(t),D=Dt({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},D);var k=Ct(D.background);document.addEventListener("click",r),document.addEventListener("keyup",a),document.addEventListener("scroll",o),window.addEventListener("resize",h);var w={open:d,close:h,toggle:m,update:s,clone:l,attach:c,detach:u,on:p,off:f,getOptions:g,getImages:v,getZoomedImage:y};return w},At={data:()=>({zoom:null}),mounted(){this.updateZoom()},updated(){this.updateZoom()},methods:{updateZoom(){setTimeout(()=>{this.zoom&&this.zoom.detach(),this.zoom=Ot(".theme-reco-content :not(a) > img",void 0)},1e3)}}},Et=n(42),Ft=n.n(Et),Nt={mounted(){Ft.a.configure({showSpinner:!1}),this.$router.beforeEach((e,t,n)=>{e.path===t.path||i.b.component(e.name)||Ft.a.start(),n()}),this.$router.afterEach(()=>{Ft.a.done(),this.isSidebarOpen=!1})}},Vt=n(130),jt=n.n(Vt),Rt={mounted(){jt.a.polyfill()}},Qt={props:{parent:Object,code:String,options:{align:String,color:String,backgroundTransition:Boolean,backgroundColor:String,successText:String,staticIcon:Boolean}},data:()=>({success:!1,originalBackground:null,originalTransition:null}),computed:{alignStyle(){let e={};return e[this.options.align]="7.5px",e},iconClass(){return this.options.staticIcon?"":"hover"}},mounted(){this.originalTransition=this.parent.style.transition,this.originalBackground=this.parent.style.background},beforeDestroy(){this.parent.style.transition=this.originalTransition,this.parent.style.background=this.originalBackground},methods:{hexToRgb(e){let t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null},copyToClipboard(e){if(navigator.clipboard)navigator.clipboard.writeText(this.code).then(()=>{this.setSuccessTransitions()},()=>{});else{let e=document.createElement("textarea");document.body.appendChild(e),e.value=this.code,e.select(),document.execCommand("Copy"),e.remove(),this.setSuccessTransitions()}},setSuccessTransitions(){if(clearTimeout(this.successTimeout),this.options.backgroundTransition){this.parent.style.transition="background 350ms";let e=this.hexToRgb(this.options.backgroundColor);this.parent.style.background=`rgba(${e.r}, ${e.g}, ${e.b}, 0.1)`}this.success=!0,this.successTimeout=setTimeout(()=>{this.options.backgroundTransition&&(this.parent.style.background=this.originalBackground,this.parent.style.transition=this.originalTransition),this.success=!1},500)}}},$t=(n(272),n(2)),Bt=Object($t.a)(Qt,(function(){var e=this,t=e._self._c;return t("div",{staticClass:"code-copy"},[t("svg",{class:e.iconClass,style:e.alignStyle,attrs:{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},on:{click:e.copyToClipboard}},[t("path",{attrs:{fill:"none",d:"M0 0h24v24H0z"}}),e._v(" "),t("path",{attrs:{fill:e.options.color,d:"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"}})]),e._v(" "),t("span",{class:e.success?"success":"",style:e.alignStyle},[e._v("\n        "+e._s(e.options.successText)+"\n    ")])])}),[],!1,null,"49140617",null).exports,Mt=(n(273),{updated(){this.update()},methods:{update(){setTimeout(()=>{document.querySelectorAll('div[class*="language-"] pre').forEach(e=>{if(e.classList.contains("code-copy-added"))return;let t=new(i.b.extend(Bt));t.options={align:"bottom",color:"#27b1ff",backgroundTransition:!0,backgroundColor:"#0075b8",successText:"Copied!",staticIcon:!1},t.code=e.innerText,t.parent=e,t.$mount(),e.classList.add("code-copy-added"),e.appendChild(t.$el)})},100)}}}),Gt=n(131),qt=[yt,At,Nt,Rt,Mt,{mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:n.n(Gt)()((function(){this.setActiveHash()}),300),setActiveHash(){const e=[].slice.call(document.querySelectorAll(".sidebar-link")),t=[].slice.call(document.querySelectorAll(".header-anchor")).filter(t=>e.some(e=>e.hash===t.hash)),n=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),i=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),r=window.innerHeight+n;for(let e=0;e<t.length;e++){const o=t[e],a=t[e+1],s=0===e&&0===n||n>=o.parentElement.offsetTop+10&&(!a||n<a.parentElement.offsetTop-10),l=decodeURIComponent(this.$route.hash);if(s&&l!==decodeURIComponent(o.hash)){const n=o;if(r===i)for(let n=e+1;n<t.length;n++)if(l===decodeURIComponent(t[n].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(n.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}}],zt={name:"GlobalLayout",computed:{layout(){const e=this.getLayout();return dt("layout",e),i.b.component(e)}},methods:{getLayout(){if(this.$page.path){const e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},Wt=Object($t.a)(zt,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,t,n){switch(t){case"components":e[t]||(e[t]={}),Object.assign(e[t],n);break;case"mixins":e[t]||(e[t]=[]),e[t].push(...n);break;default:throw new Error("Unknown option name.")}}(Wt,"mixins",qt);const Ut=[{name:"v-4183bb16",path:"/",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-4183bb16").then(n)}},{path:"/index.html",redirect:"/"},{name:"v-e036fc76",path:"/document/V3.x/C++/1-changelog.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-e036fc76").then(n)}},{name:"v-1bd7dae5",path:"/document/V3.x/C++/2-information.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-1bd7dae5").then(n)}},{name:"v-6b1ef14d",path:"/document/SUMMARY.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-6b1ef14d").then(n)}},{name:"v-0b5fe9dd",path:"/document/V3.x/C++/3-QA.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-0b5fe9dd").then(n)}},{name:"v-58bff654",path:"/document/V3.x/C++/",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-58bff654").then(n)}},{path:"/document/V3.x/C++/index.html",redirect:"/document/V3.x/C++/"},{name:"v-efc7f32a",path:"/document/V3.x/C++/demo.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-efc7f32a").then(n)}},{name:"v-105c5085",path:"/document/V3.x/C++/details.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-105c5085").then(n)}},{name:"v-06d169e5",path:"/document/V3.x/C++/install.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-06d169e5").then(n)}},{name:"v-3d944647",path:"/document/V3.x/C++/quickstart.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-3d944647").then(n)}},{name:"v-4ca1d2a5",path:"/document/V3.x/C++/turorials.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-4ca1d2a5").then(n)}},{name:"v-5994e6f6",path:"/document/V3.x/Python3/3-QA.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-5994e6f6").then(n)}},{name:"v-076839e5",path:"/document/V3.x/Python3/2-information.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-076839e5").then(n)}},{name:"v-13a2da45",path:"/document/V3.x/Python3/1-changelog.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-13a2da45").then(n)}},{name:"v-1373082e",path:"/document/V3.x/Python3/",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-1373082e").then(n)}},{path:"/document/V3.x/Python3/index.html",redirect:"/document/V3.x/Python3/"},{name:"v-5b9244da",path:"/document/V3.x/Python3/demo.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-5b9244da").then(n)}},{name:"v-454203f6",path:"/document/V3.x/Python3/details.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-454203f6").then(n)}},{name:"v-3d8fb96f",path:"/document/V3.x/Python3/quickstart.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-3d8fb96f").then(n)}},{name:"v-b7443a36",path:"/document/V3.x/Python3/install.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-b7443a36").then(n)}},{name:"v-06286ab6",path:"/document/V3.x/Python3/turorials.html",component:Wt,beforeEnter:(e,t,n)=>{ft("Layout","v-06286ab6").then(n)}},{name:"v-b1564aac",path:"/tag/",component:Wt,beforeEnter:(e,t,n)=>{ft("Tags","v-b1564aac").then(n)},meta:{pid:"tags",id:"tags"}},{path:"/tag/index.html",redirect:"/tag/"},{name:"v-ef9325c4",path:"/categories/",component:Wt,beforeEnter:(e,t,n)=>{ft("FrontmatterKey","v-ef9325c4").then(n)},meta:{pid:"categories",id:"categories"}},{path:"/categories/index.html",redirect:"/categories/"},{name:"v-6319eb4e",path:"/timeline/",component:Wt,beforeEnter:(e,t,n)=>{ft("TimeLines","v-6319eb4e").then(n)},meta:{pid:"timeline",id:"timeline"}},{path:"/timeline/index.html",redirect:"/timeline/"},{path:"*",component:Wt}],Ht={title:"二次开发",description:"Just playing around",base:"/vuepress/",headTags:[["link",{rel:"icon",href:"/vuepress/logo.png"}]],pages:[{title:"简介",frontmatter:{},regularPath:"/",relativePath:"README.md",key:"v-4183bb16",path:"/",headers:[{level:2,title:"1. 二次开发能做什么",slug:"_1-二次开发能做什么"},{level:2,title:"2. 研发背景",slug:"_2-研发背景"},{level:2,title:"3. API支持语言",slug:"_3-api支持语言"},{level:2,title:"4. 接口架构",slug:"_4-接口架构"},{level:2,title:"5. 范例说明",slug:"_5-范例说明"},{level:3,title:"5.1 增加窗体控件",slug:"_5-1-增加窗体控件"},{level:3,title:"5.2 改变路网元素展示内容",slug:"_5-2-改变路网元素展示内容"},{level:3,title:"5.3. 控制车辆驾驶行为",slug:"_5-3-控制车辆驾驶行为"},{level:3,title:"5.4. 在路段和连接段中间任意位置发车",slug:"_5-4-在路段和连接段中间任意位置发车"}],content:' 简介 \n 1. 二次开发能做什么 \n 2. 研发背景 \n TESS NG微观交通仿真系统融合了交通工程、软件工程、系统仿真等交叉学科领域的最新技术研发而成，主要特点为：完全自主知识产权、便捷快速的建模能力，开放的外部接口模块以及定制化的用户服务等。 \n TESS NG强化设计，在软件功能扩展、项目建设过程中对大量功能的实现进行抽象，将抽象的逻辑过程在TESS NG内部与核心功能相融合。这些抽象的逻辑细化成接口方法，抽象接口方法的具体实现留给具体运用。在此架构设计下，开发出车路协同、在线仿真、微宏观一体化仿真等插件模块。目前这些抽象接口的设计和运用已经成熟。 \n TESS NG的二次开发通过用户编写代码与TESS NG交互来实现能力扩张与功能定制。 \n TESS NG python API与C++API功能完全一致。python API是在C++API基础上封装的，由于python语法与C++相比存在一些差别，为了使python API 的调用方式尽可能与C++ API调用方式保持一致，对少数几个C++ 方法进行了调整，最终C++ API 与 python API 在功能上完全一致，只是python少数几个方法名不同（避免重载带来复杂性）。 \n 用户可以通过二次开发实现高度自动化，定制化的业务场景仿真，是实现交通数字孪生，学术实验的有效方法之一。 \n 3. API支持语言 \n TESSNG 目前支持C++, Python两种语言的二次开发接口；其中python版本建议使用python3.6。 \n 4. 接口架构 \n TESS NG和插件相互调用，实现对TESS NG运行过程从精细到粗放各个层次的控制。 \n \n ​    TESS NG通过实现TessInterface及其三个子接口，将自身主要功能暴露给用户，用户启动TESS NG后可以通过tessngIFace()方法获取TESS NG的顶层接口，再通过顶层接口获取三个子接口，调用子接口方法。TESS NG加载插件后可以调用python实现的插件接口方法，用户可以在插件方法中通过TessInterface及其子接口控制仿真运行，及仿真过程中车辆驾驶行为、信号灯色、路径车辆分配等等。 \n 5. 范例说明 \n 范例“TESS NG PYAPI EXAMPLE”展示了在窗体界面、路网展示、仿真过程三个方面如何对TESS NG施加影响。 \n 范例启动时从内存加载插件，企业版用户可成功加载插件，之后加载路网。如果成功加载了插件，插件会检测路网上的路段数，如果没有路段会创建几条路段、连接段以及发车点。之后TESS NG 再根据config参数"__simuafterload"值决定是否起动仿真。 \n 5.1 增加窗体控件 \n 在窗体界面上的影响：范例在窗体放置一个QDockWidget对象，QDockWidget对象包含了自定义界面，自定义界面上放置一些控件，通过这些控件操作TESS NG的路网加载、仿真运行，如下图如示： \n 5.2 改变路网元素展示内容 \n 在路网展示上的影响：范例在加载路网后判断路网上是否有路段，如果没有则创建几条路段、连接段和几个发车点。其中名称为“曹安路”的路段的标签显示路段名，其它路段标签显示ID，连接段标签显示的都是名称，如下图所示： \n 5.3. 控制车辆驾驶行为 \n 在仿真过程上的影响：范例在仿真过程的影响包括初始化车辆车道、位置、速度，从几个方面改变车辆速度，以及控制自由变道，如下图所示： \n \n 通过车辆对象设置车辆长度函数setLength(self, len:float, bRestWidth:bool)中，如果bRestWidth为“True”，则车身宽度会随长度等比例变化，如果设为False，则车身宽度不会改变。 \n 5.4. 在路段和连接段中间任意位置发车 \n 在仿真过程上的影响：范例在仿真过程动态从路段及连接段上距起点一定距离的位置发车，无需发车点发车，如下图所示： \n \n'},{title:"变更记录",frontmatter:{},regularPath:"/document/V3.x/C++/1-changelog.html",relativePath:"document/V3.x/C++/1-changelog.md",key:"v-e036fc76",path:"/document/V3.x/C++/1-changelog.html",headers:[{level:2,title:"接口变更列表",slug:"接口变更列表"}],content:" 变更记录 \n 接口变更列表 \n 【 2023-12-22 】 \n TESSNG内核由V2.1升级到V3.1. V2.x， V3.x二次开发版本分别对应V2.1及V3.0以下, V3.0及以上专业版基础功能。V3.x相对V2.x有的变更如下： \n \n 【新增】IRoadNet对象新增获取路网说明信息，路网中心点坐标接口 \n 【新增】ISection路段与连接段的父对象，支持获取路段，连接段信息；提供了供分布式环境下对路段连接段操作的接口 \n 【新增】ILaneObject车道与车道连接器的父对象，支持获取车道，车道连接器信息；支持计算距离车道起终点距离 \n 【新增】IVehicleDrivInfoCollector数据采集器对象：支持获取编号，名称，位置，轮廓，绑定的路网关系，工作时间，聚合时间间隔等信息 \n 【新增】IVehicleQueueCounter排队计数器接口：支持获取编号，名称，位置，轮廓，绑定的路网关系，工作时间，聚合时间间隔等信息 \n 【新增】IVehicleTravelDetector行程时间检测器接口：支持获取编号，名称，位置，轮廓，绑定的路网关系，工作时间，聚合时间间隔等信息 \n 【新增】IGuidArrow导向箭头|车道箭头接口：支持获取编号，长度，位置，轮廓，所在车道等信息 \n 【新增】IAccidentZone事故区接口：支持获取编号，名称，位置，长度，路段绑定关系，所在路段的类型，车道信息，事故等级，持续时间，是否需需要救援，救援车发车时间，救援耗时等信息 \n 【新增】IRoadWorkZone施工区接口：支持获取编号，名称，位置，施工区长度，施工区相邻车道限速，施工持续时间，施工区关联路段信息，施工区类型，车道属性 \n 【修改】ILink对象中新增：返回link类型，link高程，设置修改路段类型，车道类型，获取车道对象，link上下游拓扑信息，路段几何计算，获取link轮廓数据等接口 \n 【修改】ILane对象中新增：车道类型，所属link,chedao kuandu ,车道拓扑，车道左右边线数据，车道轮廓数据，车道局部坐标计算等接口 \n 【修改】IConnector对象新增：获取连接段类型，长度，高程，名称，拓扑，轮廓信息，设置其他属性的接口 \n 【修改】ILaneConnector对象新增：获取车道连接器ID，类型，所在连接段，所属车道section, 拓扑，左右边线，中心线，轮廓信息，支持局部坐标计算，其他属性设置的接口 \n 【修改】IConnectorArea对象新增：连接段面域中心点，分布式环境下的标识信息等接口 \n 【修改】IDispatchPoint对象新增：发车点轮廓信息，动态修改发车信息等接口 \n 【修改】IDecisionPoint对象新增：决策点距路段起点距离（路段局部坐标），相关决策路径，决策点轮廓信息，支持动态修改决策点信息等接口 \n 【修改】IRouting对象新增：决策点编号信息，道路是否属于当前路径，路径上道路的上下游关联信息等接口 \n 【修改】ISignalLamp对象新增：设置信号灯名称，设置信号灯位置，获取信号灯轮廓信息等接口 \n 【修改】ISignalPhase对象新增：获取相位灯色列表，设置信号灯列表，设置相位序号，设置相位名称等接口 \n 【修改】ISignalGroup对象新增：设置信号灯组名称，设置信号方案周期时间，设置方案生效的起终止时间等接口 \n 【修改】IBusLine对象新增：设置公交线路名称，线路发车间隔，发车时刻，线路期望速度，线路始发站初始载客人数等信息 \n 【修改】IBusStation对象新增：设置公交站点位置，站点名称，站点长度、轮廓、类型等接口 \n 【修改】IVehicle对象新增：支持查询车辆所在路段、车道连接器信息，支持获取车辆名称，车辆距前车时距，距后车时距；支持获取车辆当前路径，支持获取，修改车辆本身显示信息，以及新增车辆动态属性信息 \n 【修改】IVehicleDriving对象新增：获取当前车辆信息，车辆下一仿真步位置，车速为零持续时间，当前车辆是否在决策点附近，当前车辆的跟驰类型，车辆的欧拉角，车辆所在当前路段和下游路段，支持初始化轨迹，计算轨迹长度，支持计算带高程的轨迹，支持设置车辆路径，强制车辆移动等接口 \n 【修改】TessInterface对象新增：支持获取设置全局配置，支持卸载释放插件 \n 【修改】NetInterface对象新增：支持专业数据库加载路网，获取路网对象，支持操作背景图，支持所有路段，连接器，面域，导向箭头，信号灯，公交站点等路网元素的查找，支持创建路径，操作检测器，排队器，车道连接器之间的交叉点（冲突点），增删改查其他交通元素 \n 【修改】SimuInterface对象新增：支持仿真时长设置，支持设置工作线程数，获取仿真批次，获取车辆编号，创建公交，操作快照等接口 \n 【修改】PyCustomerNet对象新增：支持用户修改路网文件，新增路网数据库表和对数据库的增删改查，支持自定义道路颜色等接口 \n 【修改】PyCustomerSimulator对象新增：支持公交车辆创建预处理工作，新增自由变道参数修改，设置跟驰类型，跟驰参数，计算车辆三维属性，修改车辆外观，判断车辆当前是否经过施工区、限速区，支持快照恢复仿真等接口 \n \n \n"},{title:"注意事项",frontmatter:{},regularPath:"/document/V3.x/C++/2-information.html",relativePath:"document/V3.x/C++/2-information.md",key:"v-1bd7dae5",path:"/document/V3.x/C++/2-information.html",headers:[{level:2,title:"软件激活及试用期",slug:"软件激活及试用期"},{level:2,title:"度量单位",slug:"度量单位"},{level:2,title:"插件函数被TESSNG调用频次设置",slug:"插件函数被tessng调用频次设置"}],content:' 注意事项 \n 软件激活及试用期 \n 用户在首次使用Python环境运行范例或开发文件时，也需要激活，具体激活界面如下： \n \n ​    试用用户与首次激活软件流程相同，采用安装包的Cert文件夹下的JidaTraffic_key激活即可。 \n ​    软件的试用期为30天，以前激活过软件的客户激活V3.0.1版本时重新延长30天试用期（识别激活电脑的物理地址）。试用期结束后将无法调用接口的二次开发功能。 \n ​    商业版用户使用不受限制。 \n 度量单位 \n TESS NG在运行过程涉及的度量单位有多种，有基本的度量单位，如：长度单位，复合型度量单位，如：速度单位。在启动TESS NG后需要设置长度基本度量单位，默认基本度量单位是像素，像素与米存在转换关系，这个关系通常在画路网前设置像素比时就已确定。 \n ​    在二次开发过程中需要根据说明将大部分与长度有关的单位改成像素。像素与米制的相互转换方法如下，默认情况下1个像素表示1米： \n ​    米制转换像素：def m2p(value:float) -> float: \n ​    像素转换米制：def p2m(value:float) -> float: \n 插件函数被TESSNG调用频次设置 \n TESSNG调用插件方法的频次是指对插件实现的PyCustomerSimulator接口方法调用频次。 \n 可以在PyCustomerSimulator的initVehicle(self, pIVehicle:Tessng.IVehicle)方法里通过pIVehicle设置TESSNG对PyCustomerSimulator不同方法调用频次及是否允许插件重绘车辆。 \n 是否允许对车辆重绘方法的调用：默认为False，如果允许，可以传入True，如：pIVehicle.setIsPermitForVehicleDraw(True)。可以通过pIVehicle得到该车辆类型及ID等信息来确定是否允许对该车辆重绘。 \n 当"__custsimubysteps"设置为True时， 默认调用频次比较低，很多低到毫无意义，只为减少调用次数，不至于影响仿真运行效率 。如果某方法被实现，需要对该方法调用频次进行调整。可参见范例。 \n 假设仿真精度是steps，即每秒计算steps次，各方法默认调用频次如下： \n \n \n 车辆相关方法调用频次 \n \n 计算下一位置前处理方法beforeNextPoint被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次； \n 具体车辆一个步长计算完成后的处理方法afterStep被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次； \n 确定是否停止车辆运行并移出路网方法isStopDriving调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次； \n \n \n \n 驾驶行为相关方法调用频次 \n \n 重新设置期望速度方法reCalcdesirSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次，如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 计算最大限速方法calcMaxLimitedSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 计算限制车道方法calcLimitedLaneNumber被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 计算车道限速方法calcSpeedLimitByLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 计算安全变道方法calcChangeLaneSafeDist被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 重新计算是否可以左强制变道方法reCalcToLeftLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 重新计算是否可以右强制变道方法reCalcToRightLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 重新计算是否可以左自由变道方法reCalcToLeftFreely被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 重新计算是否可以右自由变道方法reCalcToRightFreely被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 计算跟驰类型后处理方法afterCalcTracingType被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 连接段上汇入到车道前处理方法beforeMergingToLane被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 重新计算跟驰状态参数方法reSetFollowingType被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 计算加速度方法calcAcce被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 重新计算加速度方法reSetAcce被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 重置车速方法reSetSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 重新计算角度方法reCalcAngle被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 计算后续道路前处理方法beforeNextRoad被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n \n \n \n \n'},{title:"Summary",frontmatter:{},regularPath:"/document/SUMMARY.html",relativePath:"document/SUMMARY.md",key:"v-6b1ef14d",path:"/document/SUMMARY.html",headers:[{level:2,title:"简介",slug:"简介"},{level:2,title:"更新日志",slug:"更新日志"},{level:2,title:"V3版本接口",slug:"v3版本接口"},{level:2,title:"注意事项",slug:"注意事项"},{level:2,title:"问答列表",slug:"问答列表"},{level:2,title:"链接",slug:"链接"}],content:" Summary \n 简介 \n \n 简介 \n 更新日志 \n \n 更新日志 \n V3版本接口 \n \n C++ \n \n 软件安装 \n 快速入门 \n 接口详解 \n 典型接口案例 \n 行业案例 \n \n \n Python3 \n \n 软件安装 \n 快速入门 \n 接口详解 \n 典型接口案例 \n 行业案例 \n 注意事项 \n \n 注意事项 \n 问答列表 \n \n 问答列表 \n 链接 \n \n TESSNG 官网 \n GitHub地址 \n \n"},{title:"二次开发用户问答",frontmatter:{},regularPath:"/document/V3.x/C++/3-QA.html",relativePath:"document/V3.x/C++/3-QA.md",key:"v-0b5fe9dd",path:"/document/V3.x/C++/3-QA.html",headers:[{level:3,title:"1. 打开TESSNG时出现以下错误如何解决？",slug:"_1-打开tessng时出现以下错误如何解决"},{level:3,title:"2. 在V3系列二次开发中如出现以下错误如何解决？",slug:"_2-在v3系列二次开发中如出现以下错误如何解决"},{level:3,title:"3. 在python二次开发中，出现以下问题如何解决？",slug:"_3-在python二次开发中-出现以下问题如何解决"},{level:3,title:"4. 在python二次开发中，如出现以下问题如何解决？",slug:"_4-在python二次开发中-如出现以下问题如何解决"},{level:3,title:"5. 为什么设置背景图后，鼠标在边界无法拖动？",slug:"_5-为什么设置背景图后-鼠标在边界无法拖动"},{level:3,title:"6. 我绘制了两个路段，但是和仿真底图不重合，这个我怎么调整呢？",slug:"_6-我绘制了两个路段-但是和仿真底图不重合-这个我怎么调整呢"},{level:3,title:"7. 我二次开发写在MySimulator自带的一些函数中的代码为什么没有生效？",slug:"_7-我二次开发写在mysimulator自带的一些函数中的代码为什么没有生效"},{level:3,title:"8. 我安装了TESSNG V3.1，为什么没有TESSPythonAPIEXAMPLE这个文件夹？",slug:"_8-我安装了tessng-v3-1-为什么没有tess-pythonapi-example这个文件夹"},{level:3,title:"9. 为什么我这里输入1（小客车），但是实际仿真中却有两种车型呢？",slug:"_9-为什么我这里输入1-小客车-但是实际仿真中却有两种车型呢"},{level:3,title:"10. 这个 self.mSimuCount 的作用是什么呢？",slug:"_10-这个-self-msimucount-的作用是什么呢"},{level:3,title:"11. 我想实现这样一种场景：所有的货车行驶过程中，当到达某一指定地点后都需要停车一定时间（比如5min）卸货，然后再按照既定路线行驶。可以使直接停，也可以是慢慢停。",slug:"_11-我想实现这样一种场景-所有的货车行驶过程中-当到达某一指定地点后都需要停车一定时间-比如5min-卸货-然后再按照既定路线行驶。可以使直接停-也可以是慢慢停。"},{level:3,title:"12. 我想让TESSNG不要每次都弹窗，能做到吗？",slug:"_12-我想让tessng不要每次都弹窗-能做到吗"}],content:" 二次开发用户问答 \n 1. 打开TESSNG时出现以下错误如何解决？ \n \n 答：  此问题可能是由于该动态库损坏或win7 sp1以下系统设备问题，用户可下载该动态库后复制覆盖到本机对应位置(64位系统为C:\\Windows\\System32)，如仍未解决，则建议升级系统，升级后再次点击进入即可。 \n 2. 在V3系列二次开发中如出现以下错误如何解决？ \n \n \n \n \n 答：  此问题均有可能是C:\\windows\\system32中缺少libcrypto-1_1-x64.dll库，将TESSNG安装目录下的该库复制到system32下即可。 \n 3. 在python二次开发中，出现以下问题如何解决？ \n \n 答：  解释器的Python版本并非3.6，需要更改python版本。 \n 4. 在python二次开发中，如出现以下问题如何解决？ \n \n 答：  该问题是由于试用版的激活码已过期，python试用版支持一个月，可更换电脑后运行。 \n 5. 为什么设置背景图后，鼠标在边界无法拖动？ \n 答：  场景大小未设置，点击基本参数按钮，调整场景大小为对应大小。或导入背景图后设置场景比例尺。 \n 6. 我绘制了两个路段，但是和仿真底图不重合，这个我怎么调整呢？ \n 答：  可以选中断点，然后在想要调整的路段上右键添加断点，通过拖动断点来使路段拟合底图。 \n 7. 我二次开发写在MySimulator自带的一些函数中的代码为什么没有生效？ \n 答：  可能是因为试用期已过，没有权限加载插件。 \n 8. 我安装了TESSNG V3.1，为什么没有TESS_PythonAPI_EXAMPLE这个文件夹？ \n 答：  案例代码文件夹需要下载V3系列二次开发版本获取。 \n 9. 为什么我这里输入1（小客车），但是实际仿真中却有两种车型呢？ \n \n 答：  请看下车辆类型1里面是否包含了小客车和大客车，这个方法中的第一个参数指的是车型组成的ID，不是车辆类型的ID。 \n 10. 这个 self.mSimuCount 的作用是什么呢？ \n \n 答：  是案例中记录仿真次数的，点击开始仿真后，点击结束，这个参数会加一。 \n 11. 我想实现这样一种场景：所有的货车行驶过程中，当到达某一指定地点后都需要停车一定时间（比如5min）卸货，然后再按照既定路线行驶。可以使直接停，也可以是慢慢停。 \n 答：  在MySimulator中有ref_reSetSpeed和ref_reCalcdesirSpeed函数，前者控制车辆速度，后者控制车辆期望速度。这两个函数会在计算完成车辆下一帧的状态后进入，此时可以在这两个函数中进行判断，若车辆为货车且到达指定地点，将其速度或期望速度降为0。 \n def   ref_reSetSpeed ( self ,  vehi ,  ref_inOutSpeed ) : \n若当前车辆为货车，且到达指定地点(假设距路段1起点100-120m处为指定停车地点),将车辆速度设置为0 \n     if  vehi . vehicleTypeCode ( )   ==   4   and  vehi . roadId ( )   ==   1   and   100   <=  vehi . vehicleDriving ( ) . distToStartPoint ( )   <=   120 : \n        ref_inOutSpeed . value  =   0 \n         return   True \n     return   False \n 12. 我想让TESSNG不要每次都弹窗，能做到吗？ \n 答：  可以在config中将参数__allowspopup设置为false \n \n \n"},{title:"简介",frontmatter:{},regularPath:"/document/V3.x/C++/",relativePath:"document/V3.x/C++/README.md",key:"v-58bff654",path:"/document/V3.x/C++/",headers:[{level:2,title:"1. 二次开发能做什么",slug:"_1-二次开发能做什么"},{level:2,title:"2. 研发背景",slug:"_2-研发背景"},{level:2,title:"3. API支持语言",slug:"_3-api支持语言"},{level:2,title:"4. 接口架构",slug:"_4-接口架构"},{level:2,title:"5. 范例说明",slug:"_5-范例说明"},{level:3,title:"5.1 增加窗体控件",slug:"_5-1-增加窗体控件"},{level:3,title:"5.2 改变路网元素展示内容",slug:"_5-2-改变路网元素展示内容"},{level:3,title:"5.3. 控制车辆驾驶行为",slug:"_5-3-控制车辆驾驶行为"},{level:3,title:"5.4. 在路段和连接段中间任意位置发车",slug:"_5-4-在路段和连接段中间任意位置发车"}],content:' 简介 \n 1. 二次开发能做什么 \n 2. 研发背景 \n TESS NG微观交通仿真系统融合了交通工程、软件工程、系统仿真等交叉学科领域的最新技术研发而成，主要特点为：完全自主知识产权、便捷快速的建模能力，开放的外部接口模块以及定制化的用户服务等。 \n TESS NG强化设计，在软件功能扩展、项目建设过程中对大量功能的实现进行抽象，将抽象的逻辑过程在TESS NG内部与核心功能相融合。这些抽象的逻辑细化成接口方法，抽象接口方法的具体实现留给具体运用。在此架构设计下，开发出车路协同、在线仿真、微宏观一体化仿真等插件模块。目前这些抽象接口的设计和运用已经成熟。 \n TESS NG的二次开发通过用户编写代码与TESS NG交互来实现能力扩张与功能定制。 \n TESS NG python API与C++API功能完全一致。python API是在C++API基础上封装的，由于python语法与C++相比存在一些差别，为了使python API 的调用方式尽可能与C++ API调用方式保持一致，对少数几个C++ 方法进行了调整，最终C++ API 与 python API 在功能上完全一致，只是python少数几个方法名不同（避免重载带来复杂性）。 \n 用户可以通过二次开发实现高度自动化，定制化的业务场景仿真，是实现交通数字孪生，学术实验的有效方法之一。 \n 3. API支持语言 \n TESSNG 目前支持C++, Python两种语言的二次开发接口；其中python版本建议使用python3.6。 \n 4. 接口架构 \n TESS NG和插件相互调用，实现对TESS NG运行过程从精细到粗放各个层次的控制。 \n \n ​    TESS NG通过实现TessInterface及其三个子接口，将自身主要功能暴露给用户，用户启动TESS NG后可以通过tessngIFace()方法获取TESS NG的顶层接口，再通过顶层接口获取三个子接口，调用子接口方法。TESS NG加载插件后可以调用python实现的插件接口方法，用户可以在插件方法中通过TessInterface及其子接口控制仿真运行，及仿真过程中车辆驾驶行为、信号灯色、路径车辆分配等等。 \n 5. 范例说明 \n 范例“TESS NG PYAPI EXAMPLE”展示了在窗体界面、路网展示、仿真过程三个方面如何对TESS NG施加影响。 \n 范例启动时从内存加载插件，企业版用户可成功加载插件，之后加载路网。如果成功加载了插件，插件会检测路网上的路段数，如果没有路段会创建几条路段、连接段以及发车点。之后TESS NG 再根据config参数"__simuafterload"值决定是否起动仿真。 \n 5.1 增加窗体控件 \n 在窗体界面上的影响：范例在窗体放置一个QDockWidget对象，QDockWidget对象包含了自定义界面，自定义界面上放置一些控件，通过这些控件操作TESS NG的路网加载、仿真运行，如下图如示： \n 5.2 改变路网元素展示内容 \n 在路网展示上的影响：范例在加载路网后判断路网上是否有路段，如果没有则创建几条路段、连接段和几个发车点。其中名称为“曹安路”的路段的标签显示路段名，其它路段标签显示ID，连接段标签显示的都是名称，如下图所示： \n 5.3. 控制车辆驾驶行为 \n 在仿真过程上的影响：范例在仿真过程的影响包括初始化车辆车道、位置、速度，从几个方面改变车辆速度，以及控制自由变道，如下图所示： \n \n 通过车辆对象设置车辆长度函数setLength(self, len:float, bRestWidth:bool)中，如果bRestWidth为“True”，则车身宽度会随长度等比例变化，如果设为False，则车身宽度不会改变。 \n 5.4. 在路段和连接段中间任意位置发车 \n 在仿真过程上的影响：范例在仿真过程动态从路段及连接段上距起点一定距离的位置发车，无需发车点发车，如下图所示： \n \n'},{title:"经典业务案例",frontmatter:{},regularPath:"/document/V3.x/C++/demo.html",relativePath:"document/V3.x/C++/demo.md",key:"v-efc7f32a",path:"/document/V3.x/C++/demo.html",content:" 经典业务案例 \n 见 Python开发文档demo章节 \n \n"},{title:"接口详情",frontmatter:{},regularPath:"/document/V3.x/C++/details.html",relativePath:"document/V3.x/C++/details.md",key:"v-105c5085",path:"/document/V3.x/C++/details.html",headers:[{level:2,title:"1. 配置文件 config.json 及插件方法调用频次",slug:"_1-配置文件-config-json-及插件方法调用频次"},{level:3,title:"1.1. 配置文件config.json属性详解",slug:"_1-1-配置文件config-json属性详解"},{level:3,title:"1.2. 插件方法调用频次控制",slug:"_1-2-插件方法调用频次控制"},{level:2,title:"2. 路网基本元素",slug:"_2-路网基本元素"},{level:3,title:"2.1 IRoadNet",slug:"_2-1-iroadnet"},{level:3,title:"2.2 ISection",slug:"_2-2-isection"},{level:3,title:"2.3 ILaneObject",slug:"_2-3-ilaneobject"},{level:3,title:"2.4 ILink",slug:"_2-4-ilink"},{level:3,title:"2.5 ILane",slug:"_2-5-ilane"},{level:3,title:"2.6 IConnector",slug:"_2-6-iconnector"},{level:3,title:"2.7 ILaneConnector",slug:"_2-7-ilaneconnector"},{level:3,title:"2.8 IConnectorArea",slug:"_2-8-iconnectorarea"},{level:3,title:"2.9 IDispatchPoint",slug:"_2-9-idispatchpoint"},{level:3,title:"2.10 IDecisionPoint",slug:"_2-10-idecisionpoint"},{level:3,title:"2.11 IRouting",slug:"_2-11-irouting"},{level:3,title:"2.12 ISignalLamp",slug:"_2-12-isignallamp"},{level:3,title:"2.13 ISignalPhase",slug:"_2-13-isignalphase"},{level:3,title:"2.14 ISignalGroup",slug:"_2-14-isignalgroup"},{level:3,title:"2.15 IBusLine",slug:"_2-15-ibusline"},{level:3,title:"2.16 IBusStation",slug:"_2-16-ibusstation"},{level:3,title:"2.17 IBusStationLine",slug:"_2-17-ibusstationline"},{level:3,title:"2.18  IVehicleDrivInfoCollector",slug:"_2-18-ivehicledrivinfocollector"},{level:3,title:"2.19  IVehicleQueueCounter",slug:"_2-19-ivehiclequeuecounter"},{level:3,title:"2.20  IVehicleTravelDetector",slug:"_2-20-ivehicletraveldetector"},{level:3,title:"2.21  IGuidArrow",slug:"_2-21-iguidarrow"},{level:3,title:"2.22 IAccidentZone",slug:"_2-22-iaccidentzone"},{level:3,title:"2.23 IRoadWorkZone",slug:"_2-23-iroadworkzone"},{level:2,title:"3   车辆及驾驶行为",slug:"_3-车辆及驾驶行为"},{level:3,title:"2.1 IVehicle",slug:"_2-1-ivehicle"},{level:3,title:"2.2 IVehicleDriving",slug:"_2-2-ivehicledriving"},{level:2,title:"4  TessInterface",slug:"_4-tessinterface"},{level:3,title:"4.1 NetInterface",slug:"_4-1-netinterface"},{level:3,title:"4.2 SimuInterface",slug:"_4-2-simuinterface"},{level:3,title:"4.3 GuiInterface",slug:"_4-3-guiinterface"},{level:2,title:"1.4   TessPlugin",slug:"_1-4-tessplugin"},{level:3,title:"1.4.1 CustomerNet",slug:"_1-4-1-customernet"},{level:3,title:"1.4.2 CustomerSimulator",slug:"_1-4-2-customersimulator"}],content:' 接口详情 \n 1. 配置文件 config.json 及插件方法调用频次 \n 1.1. 配置文件config.json属性详解 \n 在TESSNG.exe相同路径下有一配置文件config.json，文本文件配置了一些重要信息，说明如下： \n {\n\t"__netfilepath":"xxx.tess",\t\t\n\t"__simuafterload":false,\n\t"__timebycpu":false,\n\t"__writesimuresult":true,\n\t"__custsimubysteps":false\n}\n\n \n "__netfilepath"：指定TESSNG启动后加载的路网文件的全路径名； \n "__simuafterload"：指定TESSNG加载路网文件（指定的路网文件或临时空白路网文件）后是否启动仿真； \n "__timebycpu"：指定每个仿真周期时间计算依据，是cpu时钟确定的时长（现实时长），还是由仿真精度确定的时长。在线仿真且算力吃紧时可以尝试设置此属性为true； \n "__writesimuresult":是否输出仿真结果，默认为true，如果设为false，仿真结束后不会将仿真结果写文件，而且在仿真过程中当车辆驰出路网一段时间后会将车辆回收到可用队列，减少内存占用。 \n "__custsimubysteps"：设置TESSNG对插件方法调用频次的依据，设为false表示每个计算周期调用一次，即不依据插件端设置的调用频次；设为true时TESSNG依据插件设置的调用频次对插件实现的CustomerSimulator方法进行调用。 \n C++二次开发环境下，绝大多数情况下"__custsimubysteps"设为false不会影响计算效率。 \n 1.2. 插件方法调用频次控制 \n TESSNG调用插件方法的频次是指对插件实现的PyCustomerSimulator接口方法调用频次。 \n 当"__custsimubysteps"设置为True时， 默认调用频次比较低，很多低到毫无意义，只为减少调用次数，不至于影响仿真运行效率 。如果某方法被实现，需要对该方法调用频次进行调整。可参见范例。 \n 假设仿真精度是steps，即每秒计算steps次，各方法默认调用频次如下： \n 1）、车辆相关方法调用频次 \n 计算下一位置前处理方法beforeNextPoint被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次； \n 具体车辆一个步长计算完成后的处理方法afterStep被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次； \n 确定是否停止车辆运行并移出路网方法isStopDriving调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次； \n 2）、驾驶行为相关方法调用频次 \n TESSNG调用插件方法的频次是指对插件实现的CustomerSimulator接口方法调用频次。 \n 可以在CustomerSimulator::initVehicle(IVehicle *pIVehicle)方法里通过参数IVehicle设置TESSNG对不同方法调用频次。 \n 当"__custsimubysteps"设置为true时，默认调用频次比较低，需要进行适当调整。 \n 假设仿真精度是steps，即每秒计算steps次，默认设置如下： \n 1）、车辆相关方法调用频次 \n #是否允许对车辆重绘方法的调用 \n pIVehicle ->setIsPermitForVehicleDraw(false) \n 计算下一位置前处理方法beforeNextPoint被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。 \n 计算下一位置方法nextPoint被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。 \n 具体车辆一个步长计算完成后的处理方法afterStep被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。 \n 确定是否停止车辆运行并移出路网方法isStopDriving调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。 \n 2）、驾驶行为相关方法调用频次 \n 重新设置期望速度方法reCalcdesirSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。 \n 计算最大限速方法calcMaxLimitedSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。 \n 计算限制车道方法calcLimitedLaneNumber被调用频次：每steps个仿真周期调用一次，即每秒调用一次。 \n 计算车道限速方法calcSpeedLimitByLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。 \n 计算到限速区距离方法isCalcDistToReduceArea被调用频次：每steps个仿真周期调用一次，即每秒调用一次。 \n 计算安全变道方法calcChangeLaneSafeDist被调用频次：每steps个仿真周期调用一次，即每秒调用一次。 \n 重新计算是否可以左强制变道方法reCalcToLeftLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。 \n 重新计算是否可以右强制变道方法reCalcToRightLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。 \n 重新计算是否可以左自由变道方法reCalcToLeftFreely被调用频次：每steps个仿真周期调用一次，即每秒调用一次。 \n 重新计算是否可以右自由变道方法reCalcToRightFreely被调用频次：每steps个仿真周期调用一次，即每秒调用一次。 \n 计算跟驰类型后处理方法afterCalcTracingType被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。 \n 连接段上汇入到车道前处理方法beforeMergingToLane被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。 \n 重新计算跟驰状态参数方法reSetFollowingType被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。 \n 计算加速度方法calcAcce被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。 \n 重新计算加速度方法reSetAcce被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次 \n 重置车速方法reSetSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次 \n 重新计算角度方法reCalcAngle被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次 \n 计算后续道路前处理方法beforeNextRoad被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。 \n 2. 路网基本元素 \n 2.1 IRoadNet \n 路网基本信息接口，设计此接口的目的是为了TESS NG在导入外源路网时能够保存这些路网的属性，如路网中心点坐标、路网大地坐标等。 \n 接口文件：IRoadNet.h \n 接口方法： \n Ø  long id() \n 路网ID \n Ø  QString netName() \n 路网名称 \n Ø  QString url() \n 源数据路径，可以是本地文件，可以是网络地址 \n Ø  QString type() \n 来源分类："TESSNG"表示TESSNG自建；"OpenDrive"表示由OpenDrive数据导入；"GeoJson"表示由geojson数据导入 \n Ø  QString bkgUrl() \n 背景路径 \n Ø  QJsonObject otherAttrs() \n Ø 其它属性json数据 QString explain() \n 获取路网说明 \n Ø  QPointF centerPoint() \n 获取路网中心点位置 \n 2.2 ISection \n 路段与连接段的父类接口 \n 接口文件：ISection.h \n 接口方法： \n Ø  int gtype() \n 类型，GLinkType 或 GConnectorType。在文件Plugin/_netitemtype.h中定义了一批常量，每一个数值代表路网上一种元素类型。如：GLinkType代表路段、GConnectorType代表连接段。 \n Ø  bool isLink() \n 是否是路段 \n Ø  long id() \n 获取ID，如果是Link，id是Link的ID，如果是连接段，id是连接段ID \n Ø  long sectionId() \n 获取ID，如果是Link，id是Link的ID，如果是连接段，id是连接段ID+10000000，从而区分路段与连接段 \n Ø  QString name() \n 获取Section名称，路段名或连接段名 \n Ø  void setName(QString name) \n 设置Section名称 \n Ø  qreal v3z() \n 获取Section高程 \n Ø  qreal length() \n 获取Section长度，默认单位：像素 \n Ø  QList< ILaneObject*> laneObjects() \n 车道与“车道连接”的父类接口列表 \n 举例： \n if   ( pConn )   { \n\t\t\t //连接段车道连接列表 \n\t\t\tQList <  ILaneObject * >  lConnLaneObjs ; \n\t\t\tlConnLaneObjs  =  pConn -> laneObjects ( ) ; \n\t\t\t for   ( ILaneObject * &  pLaneObj  :  lConnLaneObjs )   { \n\t\t\t\t qDebug ( )   <<   "上游车道ID"   <<  pLaneObj -> fromLaneObject ( ) -> id ( )   <<   "下游车道ID"   <<  pLaneObj -> toLaneObject ( ) -> id ( )   <<  endl ; \n\t\t\t } \n\t\t } \n \n Ø  ISection* fromSection(long id) \n 根据ID获取上游Section。如果当前是路段, id 为 0 返回空指针，否则返回上游指定ID的连接段；如果当前是连接段，id 为 0 返回上游路段，否则返回空指针。 \n 举例： \n //根据id获取路段5上游id为2的连接段 \nISection *  pSectionLink  =  gpTessInterface -> netInterface ( ) -> findLink ( 5 ) ; \n\tISection *  pSectionConnector  =  pSectionLink  -> fromSection ( 2 ) ; \n\t if   ( pSectionConnector )   { \n\t\t if   ( pSectionConnector  -> gtype ( )   ==  NetItemType :: GConnectorType )   { \n\t\t\t qDebug ( )   <<   "路段5上游id为2的section为："   <<  pSectionConnector  -> id ( )   <<  endl ; \n\t\t } \n\t } \n \n Ø  ISection* toSection(long id) \n 根据ID获取下游 Sction。如果当前是路段, id 为 0 返回空指针，否则返回下游指定ID的连接段；如果当前是连接段，id 为 0 返回下游路段，否则返回空指针。 \n Ø  void setOtherAttr(QJsonObject otherAttr) \n 设置路段或连接段其它属性 \n Ø  ILink* castToLink() \n 转换成ILink，如果当前为连接段则返回空指针 \n 举例： \n QList <  ISection * >  lLinksAndConnector  =   createExampleLinkAndConnector ( QStringLiteral ( "信控编辑" ) ,   - 50 ) ; \n\tILink *  pLink1  =  lLinksAndConnector . front ( ) -> castToLink ( ) ; \n \n Ø  IConnector* castToConnector() \n 转换成IConnector，如果当前为路段则返回空指针 \n 举例： \n IConnector *  pConn  =  lLinksAndConnector . back ( ) -> castToConnector ( ) ; \n \n Ø  QPolygonF polygon() \n 获取Section的多边型轮廓顶点构成的多边形 \n Ø  int workerKey() \n Worker节点标识，在分布式环境可用 \n Ø  void setWorkerKey(int key) \n 设置Worker节点，在分布式环境可用 \n Ø  int fromWorkerKey() \n 上游Worker节点标识，在分布式环境可用 \n Ø  void setFromWorkerKey(int key) \n 设置上游Worker节点标识，在分布式环境可用 \n 2.3 ILaneObject \n 车道与车道连接的父类接口 \n 接口文件：ILaneObject.h \n 接口方法： \n Ø  int gtype() \n 类型，GLaneType或GLaneConnectorType \n Ø  bool isLane() \n 是否车道 \n Ø  long id() \n 获取ID，如果是Lane，id是Lane的ID， 如果是车道连接，id是“车道连接”ID \n Ø  qreal length() \n 获取车道或“车道连接”长度，默认单位：像素 \n Ø  ISection* section() \n 获取所属的ISection \n Ø  ILaneObject* fromLaneObject(long id) \n 根据ID获取上游 LaneObject。如果当前是车道, id 为 0 返回空指针，否则返回上游指定ID的“车道连接”；如果当前是连接段，id 为 0 返回上游车道，否则返回空指针。 \n Ø  ILaneObject* toLaneObject(long id) \n 根据ID获取下游 LaneObject。如果当前是车道, id 为 0 返回空指针，否则返回下游指定ID的“车道连接”；如果当前是连接段，id 为 0 返回下游车道，否则返回空指针。 \n Ø  QList< QPointF> centerBreakPoints() \n 车道或“车道连接”中心线断点集 \n Ø  QList< QPointF> leftBreakPoints() \n 车道或“车道连接”左侧线断点集 \n Ø  QList< QPointF> rightBreakPoints() \n 车道或“车道连接”右侧线断点集 \n Ø  QList< QVector3D> centerBreakPoint3Ds() \n 车道或“车道连接”中心线断点(三维)集 \n Ø  QList< QVector3D> leftBreakPoint3Ds() \n 车道或“车道连接”左侧线断点(三维)集 \n Ø  QList< QVector3D> rightBreakPoint3Ds() \n 车道或“车道连接”右侧线断点(三维)集 \n Ø  QList< QVector3D> leftBreak3DsPartly(QPointF fromPoint, QPointF toPoint) \n 车道或“车道连接”左侧部分断点(三维)集 \n 参数： \n [in] fromPoint：中心线上某一点作为起点 \n [in] toPoint：中心线上某一点作为终点 \n Ø  QList< QVector3D> rightBreak3DsPartly(QPointF fromPoint, QPointF toPoint) \n 车道或“车道连接”右侧部分断点(三维)集 \n 参数： \n [in] fromPoint：中心线上某一点作为起点 \n [in] toPoint：中心线上某一点作为终点 \n Ø  qreal distToStartPoint(const QPointF p) \n 中心线上一点到起点距离 \n Ø  qreal distToStartPointWithSegmIndex(const QPointF p, int segmIndex, bool bOnCentLine) \n 中心线上一点到起点距离，附加条件是该点所在车道上的分段序号 \n 参数： \n [in] p：当前中心线上点或附近点的坐标 \n [in] segmIndex：参数p点所在车道上的分段序号 \n [in] bOnCentLine：参数p点是否在中心线上 \n Ø  bool getPointAndIndexByDist(qreal dist, QPointF& outPoint, int& outIndex) \n 求中心线起点向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回false，否则返回true \n 参数： \n [in] dist：中心线起点向前延伸的距离 \n [out] outPoint：中心线起点向前延伸dist距离后所在点 \n [out] outIndex：中心线起点向前延伸dist距离后所在分段序号 \n 举例： \n //路段5最左侧车道向前延伸140米后所在点及分段序号 \nILink *  pLink  =  gpTessInterface -> netInterface ( ) -> findLink ( 5 ) ; \n\tILaneObject *  pLaneObjLeft  =  pLink  -> laneObjects ( ) . back ( ) ; \n\tQPointF outPoint ; \n\t int  outIndex ; \n\tqreal dist  =   m2p ( 140 ) ; \n\t if   ( pLaneObjLeft  -> getPointAndIndexByDist ( dist ,  outPoint ,  outIndex ) )   { \n qDebug ( )   <<   "路段5最左侧车道向前延伸140米后所在点坐标为：("   <<  outPoint . x ( )   << "," <<  outPoint . y ( )   << ")，分段序号为："   <<  outIndex  <<  endl ; \n\t } \n \n Ø  bool getPointByDist(qreal dist, QPointF& outPoint) \n 求中心线起点向前延伸dist距离后所在点, 如果目标点不在中心线上返回false，否则返回true \n Ø  void setOtherAttr(QJsonObject attr) \n 设置车道或“车道连接”其它属性 \n Ø  ILane* castToLane() \n 将ILaneObject转换为ILane，如果当前ILaneObject是“车道连接”则返回空指针 \n Ø  ILaneConnector* castToLaneConnector() \n 将ILaneObject转换为ILaneConnector，如果当前ILaneObject是车道则返回空指针 \n 2.4 ILink \n 路段接口 \n 接口文件：ilink.h \n 接口方法： \n Ø  int gtype() \n 类型，返回GLinkType \n Ø  long id() \n 获取路段ID \n Ø  qreal length() \n 获取路段长度，默认单位：像素 \n Ø  qreal width() \n 获取路段宽度，默认单位：像素 \n Ø  qreal z() \n 获取路段高程 \n Ø  qreal v3z() \n 获取路段高程，过载ISection的方法 \n Ø  QString name() \n 获取路段名称 \n Ø  void setName(QString name) \n 设置路段名称 \n Ø  QString linkType() \n 获取路段类型，如：城市主干道、城市次干道、人行道等 \n Ø  void setType(QString type) \n 设置路段类型，路段类型有10种，分别为：高速路、城市快速路、匝道、城市主要干道、次要干道、地方街道、非机动车道、人行道、公交专用道和机非共享 \n Ø  int laneCount() \n 获取车道数 \n Ø  double limitSpeed() \n 获取路段最高限速，单位：千米/小时 \n Ø  void setLimitSpeed(qreal speed) \n 设置最高限速 \n 参数： \n [in] speed：最高限速，单位：千米/小时 \n 举例： \n //以L5路段为例 \n\t if   ( planNumber  ==   3 )   { \n\t\tILink *  pLink5  =  gpTessInterface -> netInterface ( ) -> findLink ( 5 ) ; \n\t\tqreal minSpeedOfLink5  =  pLink5 -> minSpeed ( ) ; \n\t\t if   ( limitSpeed  >=  minSpeedOfLink5 )   { \n\t\t\tpLink5 -> setLimitSpeed ( static_cast < qreal > ( limitSpeed ) ) ; \n\t\t } \n\t } \n\n \n Ø  qreal minSpeed() \n 最低限速，单位：千米/小时 \n 举例： \n qreal minSpeedOfLink5 = pLink5->minSpeed();\n \n Ø  QList< ILane*> lanes() \n 车道接口列表 \n Ø  QList< ILaneObject*> laneObjects() \n 车道及“车道连接”的接口列表 \n Ø  QList< QPointF> centerBreakPoints() \n 路段中心线断点集 \n Ø  QList< QPointF> leftBreakPoints() \n 路段左侧线断点集 \n Ø  QList< QPointF> rightBreakPoints() \n 路段右侧线断点集 \n Ø  QList< QVector3D> centerBreakPoint3Ds() \n 路段中心线断点(三维)集 \n Ø  QList< QVector3D> leftBreakPoint3Ds() \n 路段左侧线断点(三维)集 \n Ø  QList< QVector3D> rightBreakPoint3Ds() \n 路段右侧线断点(三维)集 \n Ø  QList< IConnector*> fromConnectors() \n 上游连接段列表 \n Ø  QList< IConnector*> toConnectors() \n 下游连接段列表 \n Ø  ISection* fromSection(long id) \n 根据ID获取上游Section。如果当前是路段, id 为 0 返回空指针，否则返回上游指定ID的连接段；如果当前是连接段，id 为 0 返回上游路段，否则返回空指针。 \n Ø  ISection* toSection(long id) \n 根据ID获取下游 Sction。如果当前是路段, id 为 0 返回空指针，否则返回下游指定ID的连接段；如果当前是连接段，id 为 0 返回下游路段，否则返回空指针。 \n Ø  void setOtherAttr(QJsonObject otherAttr) \n 设置路段其它属性 \n Ø  void setLaneTypes(QList< QString> lType) \n 设置车道属性，属性类型包括："机动车道"、"机非共享"、"非机动车道"、"公交专用道" \n Ø  void setLaneOtherAtrrs(QList< QJsonObject> lAttrs) \n 设置车道其它属性 \n Ø  qreal distToStartPoint(const QPointF p) \n 中心线上一点到起点距离 \n Ø  bool getPointAndIndexByDist(qreal dist, QPointF& outPoint, int& outIndex) \n 求中心线起点向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回false，否则返回true \n 参数： \n [in] dist：中心线起点向前延伸的距离 \n [out] outPoint：中心线起点向前延伸dist距离后所在点 \n [out] outIndex：中心线起点向前延伸dist距离后所在分段序号 \n Ø  bool getPointByDist(qreal dist, QPointF& outPoint) \n 求中心线起点向前延伸dist距离后所在点, 如果目标点不在中心线上返回false，否则返回true \n Ø  QPolygonF polygon() \n 获取路段的多边型轮廓顶点 \n 2.5 ILane \n 车道接口 \n 接口文件：ILane.h \n 接口方法： \n Ø  int gtype() \n 类型，车道类型为GLaneType \n Ø  long id() \n 获取车道ID \n Ø  ILink *link() \n 获取车道所在路段 \n Ø  ISection* section() \n 获取车道所属Section \n Ø  qreal length() \n 获取车道长度，默认单位：像素 \n Ø  qreal width() \n 获取车道宽度，默认单位：像素 \n Ø  int number() \n 获取车道序号，从0开始（自外侧往内侧） \n Ø  QString actionType() \n 获取车道的行为类型 \n Ø  ILaneObject* fromLaneObject(long id) \n 根据ID获取上游 LaneObject。id 为 0 返回空指针，否则返回上游指定ID的“车道连接 \n Ø  ILaneObject* toLaneObject(long id) \n 根据ID获取下游 LaneObject。id 为 0 返回空指针，否则返回下游指定ID的“车道连接” \n Ø  QList< QPointF> centerBreakPoints() \n 获取车道中心点断点集，断点坐标用像素表示 \n Ø  QList< QPointF> leftBreakPoints() \n 车道左侧线断点集 \n Ø  QList< QPointF> rightBreakPoints() \n 车道右侧线断点集 \n Ø  QList< QVector3D> centerBreakPoint3Ds() \n 车道中心线断点(三维)集 \n Ø  QList< QVector3D> leftBreakPoint3Ds() \n 车道左侧线断点(三维)集 \n Ø  QList< QVector3D> rightBreakPoint3Ds() \n 车道右侧线断点(三维)集 \n Ø  QList< QVector3D> leftBreak3DsPartly(QPointF fromPoint, QPointF toPoint) \n 车道左侧部分断点(三维)集 \n 参数： \n [in] fromPoint：中心线上某一点作为起点 \n [in] toPoint：中心线上某一点作为终点 \n Ø  QList< QVector3D> rightBreak3DsPartly(QPointF fromPoint, QPointF toPoint) \n 车道右侧部分断点(三维)集 \n 参数： \n [in] fromPoint：中心线上某一点作为起点 \n [in] toPoint：中心线上某一点作为终点 \n Ø  qreal distToStartPoint(const QPointF p) \n 中心线上一点到起点距离 \n Ø  qreal distToStartPointWithSegmIndex(const QPointF p, int segmIndex = 0, bool bOnCentLine = true) \n 中心线上一点到起点距离，附加条件是该点所在车道上的分段序号 \n 参数： \n [in] p：当前中心线上该点坐标 \n [in] segmIndex：该点所在车道上的分段序号 \n [in] bOnCentLine：是否在中心线上 \n Ø  bool getPointAndIndexByDist(qreal dist, QPointF& outPoint, int& outIndex) \n 求中心线起点向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回false，否则返回true \n 参数： \n [in] dist：中心线起点向前延伸的距离 \n [out] outPoint：中心线起点向前延伸dist距离后所在点 \n [out] outIndex：中心线起点向前延伸dist距离后所在分段序号 \n Ø  bool getPointByDist(qreal dist, QPointF& outPoint) \n 求中心线起点向前延伸dist距离后所在点, 如果目标点不在中心线上返回false，否则返回true \n Ø  void setOtherAttr(QJsonObject attr) \n 设置车道其它属性 \n Ø  void setLaneType(QString type) \n 设置车道类型 \n 参数： \n [in] type：车道类型，选下列几种类型其中一种："机动车道"、"机非共享"、"非机动车道"、"公交专用道" \n Ø  QPolygonF polygon() \n 获取车道的多边型轮廓顶点 \n 2.6 IConnector \n 连接段接口 \n 接口文件：IConnector.h \n 接口方法： \n Ø  int gtype() \n 类型，连接段类型为GConnectorType \n Ø  long id() \n 获取连接段ID \n Ø  qreal length() \n 获取连接段长度 \n Ø  qreal z() \n 获取连接段高程 \n Ø  qreal v3z() \n 获取连接段高程，继承自ISection的方法 \n Ø  QString name() \n 获取连接段名称 \n Ø  void setName(QString name) \n 设置连接段名称 \n Ø  Link* fromLink() \n 获取起始路段 \n Ø  Link* toLink() \n 获取目标路段 \n Ø  ISection* fromSection(long id) \n 根据ID获取上游Section。如果当前是路段, id 为 0 返回空指针，否则返回上游指定ID的连接段；如果当前是连接段，id 为 0 返回上游路段，否则返回空指针。 \n Ø  ISection* toSection(long id) \n 根据ID获取下游 Sction。如果当前是路段, id 为 0 返回空指针，否则返回下游指定ID的连接段；如果当前是连接段，id 为 0 返回下游路段，否则返回空指针。 \n Ø  qreal limitSpeed() \n 获取最高限速，以起始路段的最高限速作为连接段的最高限速 \n Ø  qreal minSpeed() \n 获取最低限速，以起始路段的最低限速作为连接段的最低限速 \n Ø  QList< ILaneConnector*> laneConnectors() \n 获取车道连接列表 \n Ø  QList< ILaneObject*> laneObjects() \n 车道及“车道连接”的接口列表 \n 举例： \n if   ( pConn )   { \n\t\t\t //连接段车道连接列表 \n\t\t\tQList <  ILaneObject * >  lConnLaneObjs ; \n\t\t\tlConnLaneObjs  =  pConn -> laneObjects ( ) ; \n\t\t\t for   ( ILaneObject * &  pLaneObj  :  lConnLaneObjs )   { \n\t\t\t\t qDebug ( )   <<   "上游车道ID"   <<  pLaneObj -> fromLaneObject ( ) -> id ( )   <<   "下游车道ID"   <<  pLaneObj -> toLaneObject ( ) -> id ( )   <<  endl ; \n\t\t\t } \n\t\t } \n \n Ø  void setLaneConnectorOtherAtrrs(QList< QJsonObject> lAttrs) \n 设置包含的“车道连接”其它属性 \n Ø  void setOtherAttr(QJsonObject otherAttr) \n 设置连接段其它属性 \n Ø  QPolygonF polygon() \n 获取连接段的多边型轮廓顶点 \n 2.7 ILaneConnector \n “车道连接”接口 \n 接口文件：ILaneConnector.h \n 接口方法： \n Ø  int gtype() \n 类型，GLaneType或GLaneConnectorType，车道连接段为GLaneConnectorType \n Ø  long id() \n 获取车道连接ID \n Ø  IConnector* connector() \n 获取车道连接所在连接段 \n Ø  ISection* section() \n 获取车道所属Section \n Ø  ILane *fromLane() \n 上游车道 \n Ø  ILane *toLane() \n 下游车道 \n Ø  ILaneObject* fromLaneObject(long id) \n 根据ID获取上游 LaneObject。id 为 0 返回空指针，否则返回上游指定ID的“车道连接 \n 举例： \n if   ( pConn )   { \n\t\t\t //连接段车道连接列表 \n\t\t\tQList <  ILaneObject * >  lConnLaneObjs ; \n\t\t\tlConnLaneObjs  =  pConn -> laneObjects ( ) ; \n\t\t\t for   ( ILaneObject * &  pLaneObj  :  lConnLaneObjs )   { \n\t\t\t\t qDebug ( )   <<   "上游车道ID"   <<  pLaneObj -> fromLaneObject ( ) -> id ( )   <<   "下游车道ID"   <<  pLaneObj -> toLaneObject ( ) -> id ( )   <<  endl ; \n\t\t\t } \n\t\t } \n \n Ø  ILaneObject* toLaneObject(long id) \n 根据ID获取下游 LaneObject。id 为 0 返回空指针，否则返回下游指定ID的“车道连接” \n 举例： \n for   ( ILaneObject * &  pLaneObj  :  lConnLaneObjs )   { \n\t\t\t\t qDebug ( )   <<   "上游车道ID"   <<  pLaneObj -> fromLaneObject ( ) -> id ( )   <<   "下游车道ID"   <<  pLaneObj -> toLaneObject ( ) -> id ( )   <<  endl ; \n\t\t\t } \n \n Ø  qreal length() \n “车道连接”长度 \n Ø  QList< QPointF> centerBreakPoints() \n 获取“车道连接”中心线断点集，断点坐标用像素表示 \n Ø  QList< QPointF> leftBreakPoints() \n “车道连接”左侧线断点集 \n Ø  QList< QPointF> rightBreakPoints() \n “车道连接”右侧线断点集 \n Ø  QList< QVector3D> centerBreakPoint3Ds() \n “车道连接”中心线断点(三维)集 \n Ø  QList< QVector3D> leftBreakPoint3Ds() \n “车道连接”左侧线断点(三维)集 \n Ø  QList< QVector3D> rightBreakPoint3Ds() \n “车道连接”右侧线断点(三维)集 \n Ø  QList< QVector3D> leftBreak3DsPartly(QPointF fromPoint, QPointF toPoint) \n “车道连接”左侧部分断点(三维)集 \n Ø  QList< QVector3D> rightBreak3DsPartly(QPointF fromPoint, QPointF toPoint) \n “车道连接”右侧部分断点(三维)集 \n Ø  qreal distToStartPoint(const QPointF p) \n 中心线上一点到起点距离 \n Ø  qreal distToStartPointWithSegmIndex(const QPointF p, int segmIndex = 0, bool bOnCentLine = true) \n 中心线上一点到起点距离，附加条件是该点所在车道上的分段序号 \n 参数： \n [in] p：当前中心线上该点坐标 \n [in] segmIndex：该点所在车道上的分段序号 \n [in] bOnCentLine：是否在中心线上 \n Ø  bool getPointAndIndexByDist(qreal dist, QPointF& outPoint, int& outIndex) \n 求中心线起始point向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回false，否则返回true \n 参数： \n [in] dist：中心线起点向前延伸的距离 \n [out] outPoint：中心线起点向前延伸dist距离后所在点 \n [out] outIndex：中心线起点向前延伸dist距离后所在分段序号 \n Ø  bool getPointByDist(qreal dist, QPointF& outPoint) \n 求中心线起始point向前延伸dist距离后所在点, 如果目标点不在中心线上返回false，否则返回true \n Ø  void setOtherAttr(QJsonObject attr) \n 设置车道连接其它属性 \n 2.8 IConnectorArea \n 面域接口 \n 接口文件：IConnectorArea.h \n 接口方法： \n Ø  long id() \n 面域ID \n Ø  QList< IConnector*> allConnector() \n 面域相关所有连接段 \n Ø  QPointF centerPoint() \n 面域中心点 \n Ø  int workerKey() \n 获取Worker 标识符，分布式环境可用 \n Ø  void setWorkerKey(int key) \n 设置 Worker 标识符，分布式环境可用 \n 2.9 IDispatchPoint \n 发车点接口 \n 接口文件：IDispatchPoint.h \n 接口方法： \n Ø  long id() \n 获取发车点ID \n Ø  QString name() \n 获取发车名称 \n Ø  ILink *link() \n 获取发车点所在路段 \n Ø  long addDispatchInterval(long vehiCompId, int interval, int vehiCount) \n 为发车点增加发点间隔 \n 参数： \n vehicCompId：车型组成ID \n interval：时间段，单位：秒 \n vehiCount：发车数 \n 返回值： \n 返回发车间隔ID \n 举例： \n if   ( pLink1 )   { \n\t\t //创建发车点 \n\t\tIDispatchPoint *  pDp  =  gpTessInterface -> netInterface ( ) -> createDispatchPoint ( pLink1 ) ; \n\t\t if   ( pDp )   { \n\t\t\tpDp -> addDispatchInterval ( 1 ,   200 ,   400 ) ; //200秒400辆车 \n\t\t } \n\t } \n\n \n Ø  void setDynaModified(bool bModified) \n 设置是否被动态修改，默认情况下发车信息被动态修改后，整个文件不能保存，以免破坏原有发车设置 \n Ø  QPolygonF polygon() \n 获取发车点多边型轮廓的顶点 \n 2.10 IDecisionPoint \n 决策点接口 \n 接口文件：IDecisionPoint.h \n 接口方法： \n Ø  long id() \n 决策点ID \n Ø  QString name() \n 决策点名称 \n Ø  ILink *link() \n 决策点所在路段 \n Ø  qreal distance() \n 距路段起点距离，默认单位：像素 \n Ø  QList< IRouting*> routings() \n 相关决策路径 \n Ø  void setDynaModified(bool bModified) \n 设置是否被动态修改，默认情况下发车信息被动态修改后，整个文件不能保存，以免破坏原有发车设置 \n 参数： \n [in] bModified：是否被动态修改，true为被动态修改，false为未被动态修改 \n Ø  QPolygonF polygon() \n 决策点多边型轮廓的顶点 \n 2.11 IRouting \n 路径接口 \n 接口文件：IRouting.h \n 接口方法： \n Ø  long id() \n 路径ID \n Ø  qreal calcuLength() \n 计算路径长度 \n Ø  QList< ILink*> getLinks() \n 获取路段序列 \n Ø  long deciPointId() \n 所属决策点ID \n Ø  bool contain(ISection* pRoad) \n 根据所给道路判断是否在当前路径上 \n Ø  ISection* nextRoad(ISection* pRoad) \n 根据所给道路求下一条道路 \n 参数： \n [in] pRoad：路段或连接段 \n 2.12 ISignalLamp \n 信号灯接口 \n 接口文件：isignallamp.h \n 接口方法： \n Ø  long id() \n 获取信号灯ID \n Ø  void setName(QString name) \n 设置信号灯名称 \n Ø  void setLampColor(QString colorStr) \n 设置信号灯颜色 \n 参数： \n colorStr：字符串表达的颜色，有四种可选，分别是"红"、"绿"、"黄"、"灰"，，或者是"R"、"G"、"Y"、"grey"。 \n Ø  ISignalGroup *signalGroup() \n 获取信号灯组 \n Ø  ISignalPhase* signalPhase() \n 获取相位 \n Ø  void setDistToStart(qreal dist) \n 设置信号灯距车道起点（或“车道连接”起点）距离，默认单位：像素 \n Ø  QPolygonF polygon() \n 获取信号灯多边型轮廓的顶点 \n 2.13 ISignalPhase \n 信号灯相位 \n 接口文件：ISignalPhase.h \n 接口方法： \n Ø  long id() \n 相位ID \n Ø  int number() \n 相位序号 \n Ø  QString phaseName() \n 相位名称 \n Ø  ISignalGroup* signalGroup() \n 相位所在信号灯组 \n Ø  QList< ISignalLamp*> signalLamps() \n 相关信号灯列表 \n Ø  QList< Online::ColorInterval> listColor() \n 相位灯色列表 \n Ø  void setColorList(QList< Online::ColorInterval> lColor) \n 设置信号灯列表 \n 参数： \n [in] lColor：灯色时长信息，包含信号灯颜色和信号灯时长 \n 举例： \n // 以L12路段相位直行信号灯相位为例（ID为7），由红90绿32黄3红25改为红10绿110黄3红28 \n\t if   ( planNumber  ==   2 )   { \n\t\tISignalPhase *  pSignalPhase7OfL12  =  gpTessInterface -> netInterface ( ) -> findSignalPhase ( 7 ) ; \n\t\tOnline :: ColorInterval  redIntervalFront ( "红" ,   10 ) ,   greenInterval ( "绿" ,   110 ) ,   yellowInterval ( "黄" ,   3 ) ,   redIntervalBack ( "红" ,   28 ) ; \n\t\tpSignalPhase7OfL12 -> setColorList ( QList <  Online :: ColorInterval > ( )   <<  redIntervalFront  <<  greenInterval  <<  yellowInterval  <<  redIntervalBack ) ; \n\t } \n \n Ø  void setNumber(int number) \n 设置相位序号 \n Ø  void setPhaseName(QString name) \n 设置相位名称 \n 2.14 ISignalGroup \n 信号灯组 \n 接口文件：ISignalGroup.h \n Ø  long id() \n 灯组ID \n Ø  QString groupName () \n 灯组名 \n Ø  int periodTime() \n 信号周期 秒 \n Ø  long fromTime() \n 起始时间，单位：秒 \n Ø  long toTime() \n 结束时间 单位：秒 \n Ø  QList< ISignalPhase*> phases() \n 相位列表 \n Ø  void setName(QString name) \n 设置信号灯组名称 \n Ø  void setPeriodTime(int period) \n 设置信号周期 \n 参数： \n [in] period：信号周期，单位：秒 \n Ø  void setFromTime(long time) \n 设置起始时间，单位：秒 \n Ø  void setToTime(long time) \n 设置结束时间，单位：秒 \n 2.15 IBusLine \n 公交线路接口 \n 接口文件：IBusLine.h \n 接口方法： \n Ø  long id() \n 获取公交线路ID \n Ø  QString name() \n 线路名称 \n Ø  double length() \n 长度,单位：像素 \n Ø  int dispatchFreq() \n 发车间隔(秒) \n Ø  int dispatchStartTime() \n 发车开始时间(秒) \n Ø  int dispatchEndTime() \n 发车结束时间(秒) \n Ø  qreal desirSpeed() \n 期望速度(km/h) \n Ø  int passCountAtStartTime() \n 起始载客人数 \n Ø  QList< ILink*> links() \n 公交线路经过的路段 \n Ø  QList< IBusStation*> stations() \n 线路所有站点 \n Ø  QList< IBusStationLine*> stationLines() \n 公交站点线路，当前线路相关站点的上下客等参数 \n Ø  void setName(QString name) \n 设置线路名称 \n Ø  void setDispatchFreq(int freq) \n 设置发车间隔，单位：秒 \n Ø  void setDispatchStartTime(int startTime) \n 设置开始发车时间 \n Ø  void setDispatchEndTime(int endTime) \n 设置结束发车时间 \n Ø  void setDesirSpeed(qreal desirSpeed) \n 设置线路的期望速度 \n 举例： \n //创建公交线路 \nIBusLine *  pBusLine  =  gpTessInterface -> netInterface ( ) -> createBusLine ( QList <  ILink * > ( )   <<  pLink10  <<  pLink11 ) ; \n if   ( pBusLine )   { \n\t\t\tpBusLine -> setDesirSpeed ( m2p ( 60 ) ) ; \n } \n\n \n Ø  void setPassCountAtStartTime(int count) \n 设置起始载客人数 \n 2.16 IBusStation \n 公交站点接口 \n 接口文件：IBusStation.h \n 接口方法： \n Ø  long id() \n 获取公交站点ID \n Ø  QString name() \n 线路名称 \n Ø  int laneNumber() \n 公交站点所在车道序号 \n Ø  qreal x() \n 位置X \n Ø  qreal y() \n 位置Y \n Ø  qreal length() \n 长度 \n Ø  int stationType() \n 站点类型 1：路边式、2：港湾式 \n Ø  ILink* link() \n 公交站点所在路段 \n Ø  ILane* lane() \n 公交站点所在车道 \n Ø  qreal distance() \n 公交站点的起始位置距路段起点距离，默认单位：像素 \n Ø  void setName(QString name) \n 设置站点名称 \n Ø  void setDistToStart(qreal dist) \n 设置站点起始点距车道起点距离，默认单位：像素 \n 参数： \n [in] dist：距车道起点距离 \n Ø  void setLength(qreal length) \n 设置长度，默认单位：像素 \n Ø  void setType(int type) \n 设置站点类型 \n 参数： \n [in] type：站点类型，1 路侧式、2 港湾式 \n Ø  QPolygonF polygon() \n 公交站点多边型轮廓的顶点 \n 2.17 IBusStationLine \n 公交站点-线路接口，通过此接口可以获取指定线路某站点运行参数，如靠站时间、下客百分比等，还可以设置部分参数。 \n 接口文件：IBusStationLine.h \n 接口方法： \n Ø  long id() \n 获取公交“站点-线路”ID \n Ø  long stationId() \n 公交站点ID \n Ø  long lineId() \n 公交线路ID \n Ø  int busParkingTime() \n 车辆停靠时间(秒) \n Ø  qreal getOutPercent() \n 下客百分比 \n Ø  qreal getOnTimePerPerson() \n 平均每位乘客上车时间 \n Ø  qreal getOutTimePerPerson() \n 平均每位乘客下车时间 \n Ø  void setBusParkingTime(int time) \n 设置车辆停靠时间(秒) \n 举例： \n QList <  IBusStationLine * >  lStationLine  =  pBusLine -> stationLines ( ) ; \n\t\t if   ( ! lStationLine . isEmpty ( ) ) \n\t\t { \n\t\t\tIBusStationLine *  pStationLine  =  lStationLine . first ( ) ; \n\t\t\t // 设置车辆停靠时间(秒) \n\t\t\tpStationLine -> setBusParkingTime ( 20 ) ; \n\t\t } \n } \n \n Ø  void setGetOutPercent(qreal percent) \n 设置下客百分比 \n Ø  void setGetOnTimePerPerson(qreal time) \n 设置平均每位乘客上车时间 \n Ø  void setGetOutTimePerPerson(qreal time) \n 设置平均每位乘客下车时间 \n 2.18  IVehicleDrivInfoCollector \n 数据采集器接口 \n 接口文件：IVehicleDrivInfoCollector.h \n 接口方法： \n Ø  long id() \n 获取采集器ID \n Ø  QString collName() \n 获取采集器名称 \n Ø  bool onLink() \n 是否在路段上，如果true则connector()返回nullptr \n Ø  ILink* link() \n 采集器所在路段 \n Ø  IConnector* connector() \n 采集器所在连接段 \n Ø  ILane* lane() \n 如果采集器在路段上则lane()返回所在车道，laneConnector()返回nullptr \n Ø  ILaneConnector* laneConnector() \n 如果采集器在连接段上则laneConnector返回“车道连接”,lane()返回nullptr \n Ø  qreal distToStart() \n 采集器距离起点距离，默认单位：像素 \n Ø  QPointF point() \n 采集器所在点 \n Ø  long fromTime() \n 采集器工作起始时间，单位：秒 \n Ø  long toTime() \n 采集器工作停止时间，单位：秒 \n Ø  long aggregateInterval() \n 集计数据时间间隔，单位：秒 \n Ø  void setName(QString name) \n 设置采集器名称 \n Ø  void setDistToStart(qreal dist) \n 设置采集器距车道起点（或“车道连接”起点）距离 \n 参数： \n [in] dist：采集器距离车道起点（或“车道连接”起点）的距离，默认单位：像素 \n 举例： \n IVehicleDrivInfoCollector *  pCollector  =  gpTessInterface -> netInterface ( ) -> createVehiCollectorOnLink ( pLeftLane ,  dist ) ; \n // 将采集器设置到距路段起点400米处 \npCollector -> setDistToStart ( m2p ( 400 ) ) ; \n \n Ø  void setFromTime(long time) \n 设置工作起始时间(秒) \n Ø  void setToTime(long time) \n 设置工作结束时间(秒) \n Ø  void setAggregateInterval(int interval) \n 设置集计数据时间间隔(秒) \n Ø  QPolygonF polygon() \n 获取采集器的多边型轮廓顶点 \n 2.19  IVehicleQueueCounter \n 排队计数器接口 \n 接口文件：IVehicleQueueCounter.h \n 接口方法： \n Ø  long id() \n 获取计数器ID \n Ø  QString counterName() \n 获取计数器名称 \n Ø  bool onLink() \n 是否在路段上，如果true则connector()返回nullptr \n Ø  ILink* link() \n 计数器所在路段 \n Ø  IConnector* connector() \n 计数器所在连接段 \n Ø  ILane* lane() \n 如果计数器在路段上则lane()返回所在车道，laneConnector()返回nullptr \n Ø  ILaneConnector* laneConnector() \n 如果计数器在连接段上则laneConnector返回“车道连接”,lane()返回nullptr \n Ø  qreal distToStart() \n 计数器距离起点距离，默认单位：像素 \n Ø  QPointF point() \n 计数器所在点 \n 举例： \n //在路段9最左侧车道100米处创建排队计数器 \nIVehicleQueueCounter *  pCounter  =  gpTessInterface -> netInterface ( ) -> createVehiQueueCounterOnLink ( pLeftLane ,  dist ) ; \n qDebug ( )   <<   "计数器所在点坐标为：("   <<  pCounter -> point ( ) . x ( )   << "," <<  pCounter -> point ( ) . y ( ) << ")"   <<  endl ; \n \n Ø  long fromTime() \n 计数器工作起始时间，单位：秒 \n Ø  long toTime() \n 计数器工作停止时间，单位：秒 \n Ø  long aggregateInterval() \n 计数集计数据时间间隔，单位：秒 \n Ø  void setName(QString name) \n 设置计数器名称 \n Ø  void setDistToStart(qreal dist) \n 设置计数器距车道起点（或“车道连接”起点）距离 \n 参数： \n [in] dist：计数器距离车道起点（或“车道连接”起点）的距离，默认单位：像素 \n Ø  void setFromTime(long time) \n 设置工作起始时间(秒) \n Ø  void setToTime(long time) \n 设置工作结束时间(秒) \n Ø  void setAggregateInterval(int interval) \n 设置集计数据时间间隔(秒) \n Ø  QPolygonF polygon() \n 获取计数器的多边型轮廓顶点 \n 2.20  IVehicleTravelDetector \n 行程时间检测器接口 \n 接口文件：IVehicleTravelDetector.h \n 接口方法： \n Ø  long id() \n 获取检测器ID \n Ø  QString detectorName() \n 获取检测器名称 \n Ø  bool isStartDetector() \n 是否检测器起始点 \n Ø  bool isOnLink_startDetector() \n 检测器起点是否在路段上，如果否，则起点在连接段上 \n Ø  bool isOnLink_endDetector() \n 检测器终点是否在路段上，如果否，则终点在连接段上 \n Ø  ILink* link_startDetector() \n 如果检测器起点在路段上则link_startDetector()返回起点所在路段，laneConnector_startDetector()返回nullptr \n Ø  ILaneConnector* laneConnector_startDetector() \n 如果检测器起点在连接段上则laneConnector_startDetector()返回起点“车道连接”,link_startDetector()返回nullptr \n Ø  ILink* link_endDetector() \n 如果检测器终点在路段上则link_endDetector()返回终点所在路段，laneConnector_endDetector()返回nullptr \n Ø  ILaneConnector* laneConnector_endDetector() \n 如果检测器终点在连接段上则laneConnector_endDetector()返回终点“车道连接”,link_endDetector()返回nullptr \n Ø  qreal distance_startDetector() \n 检测器起点距离所在车道起点或“车道连接”起点距离，默认单位：像素 \n Ø  qreal distance_endDetector() \n 检测器终点距离所在车道起点或“车道连接”起点距离，默认单位：像素 \n Ø  QPointF point_startDetector() \n 检测器起点位置 \n Ø  QPointF point_endDetector() \n 检测器终点位置 \n Ø  long fromTime() \n 检测器工作起始时间，单位：秒 \n Ø  long toTime() \n 检测器工作停止时间，单位：秒 \n Ø  long aggregateInterval() \n 集计数据时间间隔，单位：秒 \n Ø  void setName(QString name) \n 设置检测器名称 \n Ø  void setDistance_startDetector(qreal dist) \n 设置检测器起点距车道起点（或“车道连接”起点）距离，默认单位：像素 \n Ø  void setDistance_endDetector(qreal dist) \n 设置检测器终点距车道起点（或“车道连接”起点）距离，默认单位：像素 \n Ø  void setFromTime(long time) \n 设置工作起始时间，单位：秒 \n 举例： \n QList <  IVehicleTravelDetector * >  lVehicleTravelDetector  =  gpTessInterface -> netInterface ( ) -> createVehicleTravelDetector_link2link ( link ,  link ,   m2p ( 50 ) ,   m2p ( 550 ) ) ; \n\t\t if   ( ! lVehicleTravelDetector . empty ( ) )   { \n\t\t\t for   ( IVehicleTravelDetector *  detector  :  lVehicleTravelDetector )   { \n\t\t\t\tdetector -> setFromTime ( 10 ) ; \n\t\t\t\tdetector -> setToTime ( 60 ) ; \n\t\t\t } \n\t\t } \n \n Ø  void setToTime(long time) \n 设置工作结束时间，单位：秒 \n Ø  void setAggregateInterval(int interval) \n 设置集计数据时间间隔，单位：秒 \n Ø  QPolygonF polygon_startDetector() \n 获取行程时间检测器起始点多边型轮廓的顶点 \n Ø  QPolygonF polygon_endDetector() \n 获取行程时间检测器终止点多边型轮廓的顶点 \n 2.21  IGuidArrow \n 导向箭头接口 \n 接口文件：IGuidArrow.h \n 接口方法： \n Ø  long id() \n 获取导向箭头ID \n Ø  ILane* lane() \n 获取导向箭头所在的车道 \n Ø  qreal length() \n 获取导向箭头的长度，默认单位：像素 \n Ø  qreal distToTerminal() \n 获取导向箭头到的终点距离，默认单位：像素 \n Ø  Online::GuideArrowType arrowType() \n 获取导向箭头的类型，导向箭头的类型分为：直行、左转、右转、直行或左转、直行或右转、直行左转或右转、左转或右转、掉头、直行或掉头和左转或掉头 \n 举例： \n IGuidArrow *  pGuideArrow  =  gpTessInterface -> netInterface ( ) -> createGuidArrow ( pRightLane ,  length ,  distToTerminal ,  arrowType ) ; \n\t qDebug ( )   <<   "导向箭头类型为："   <<  pGuideArrow -> arrowType ( )   <<  endl ; \n \n Ø  QPolygonF polygon() \n 获取导向箭头的多边型轮廓的顶点 \n 2.22 IAccidentZone \n 事故区接口 \n 接口文件：IAccidentZone.h \n 接口方法： \n Ø  long id() \n 获取事故区ID \n Ø  QString name() \n 获取事故区名称 \n Ø  qreal location() \n 获取事故区距所在路段起点的距离，默认单位：像素 \n Ø  qreal zoneLength() \n 获取事故区长度，默认单位：像素 \n Ø  ISection* section() \n 获取事故区所在的路段或连接段 \n Ø  long roadId() \n 获取事故区所在路段的ID \n Ø  QString roadType() \n 获取事故区所在的道路类型(路段或连接段) \n 举例： \n // 获取事故区所在的道路类型 \nIAccidentZone *  pAccidentZone  =  gpTessInterface -> netInterface ( ) -> createAccidentZone ( accidentZone ) ; \n qDebug ( )   <<  pAccidentZone ->   roadType ( )   <<  endl ; \n \n Ø  QList< ILaneObject*> laneObjects() \n 获取事故区占用的车道列表 \n Ø  int level() \n 事故等级，分4级，默认为未定等级(0级)持续时间未定，事故区不会自动移除，一般事故(1级)持续时间10分钟，普通事故(2)级持续时间1小时，重大事故(3级)持续时间3小时 \n Ø  long duration() \n 事故持续时间，单位：秒。如果值为0，事故持续时间由事故等级决定，大于0则由此值决定 \n Ø  int needRescue() \n 是否需要救援，如果为-1，由事故等级决定，重大事故需要求援，如为0不需救援，如果为1需要救援 \n Ø  long waitTimeBeforeRescue() \n 救援车辆发车时间距事故产生的时间，默认单位：秒，默认60秒 \n Ø  int rescueTime() \n 救援时间，默认60秒，即救援车辆停靠在事故区旁的时间，单位秒 \n 2.23 IRoadWorkZone \n 施工区接口 \n 接口文件：IRoadWorkZone.h \n 接口方法： \n Ø  long id() \n 获取施工区ID \n Ø  QString name() \n 获取施工区名称 \n Ø  qreal location() \n 获取施工区距所在路段起点的距离，默认单位：像素 \n Ø  qreal zoneLength() \n 获取施工区长度，默认单位：像素 \n Ø  qreal limitSpeed() \n 施工区限速（最大车速:像素/秒） \n Ø  long sectionId() \n 获取施工区所在路段或连接段的ID \n 举例： \n //获取路段9上施工区所在路段的ID \nIRoadWorkZone *  pWorkZone  =  gpTessInterface -> netInterface ( ) -> createRoadWorkZone ( workZone ) ; \n\t qDebug ( )   << "施工区所在路段或连接段ID为："   <<  pWorkZone -> sectionId ( )   <<  endl ; \n \n Ø  QString sectionName() \n 获取施工区所在路段或连接段的名称 \n Ø  QString sectionType() \n 获取施工区所在道路的道路类型，link:路段, connector:连接段 \n Ø  QList< ILaneObject*> laneObjects() \n 获取施工区所占的车道列表 \n Ø  long duration() \n 施工持续时间，单位：秒。自仿真过程创建后，持续时间大于此值，则移除 \n 3   车辆及驾驶行为 \n 2.1 IVehicle \n 车辆接口，用于访问、控制车辆。通过此接口可以读取车辆属性，初始化时设置车辆部分属性，仿真过程读取当前道路情况、车辆前后左右相邻车辆及与它们的距离，可以在车辆未驰出路网时停止车辆运行等。 \n 接口文件：ivehicle.h \n 接口方法： \n Ø  long id() \n 车辆ID，车辆ID的组成方式为 x * 100000 + y，每个发车点的x值不一样，从1开始递增，y是每个发车点所发车辆序号，从1开始递增。第一个发车点所发车辆ID从100001开始递增，第二个发车点所发车辆ID从200001开始递增。 \n Ø  ILink *startLink() \n 车辆进入路网时起始路段 \n Ø  long startSimuTime() \n 车辆进入路网时起始时间 \n Ø  long roadId() \n 车辆所在路段或连接段ID \n Ø  void *road() \n 道路，如果在路段上返回ILink, 如果在连接段上返回IConnector \n Ø  ISection* section() \n 车辆所在的Section，即路段或连接段 \n Ø  ILaneObject* laneObj() \n Ø 车辆所在的车道或“车道连接” int segmIndex() \n 车辆在当前LaneObject上分段序号 \n Ø  bool roadIsLink() \n 车辆所在道路是否路段 \n Ø  QString roadName() \n 道路名 \n Ø  qreal initSpeed(qreal speed = -1) \n 初始化车速 \n 参数： \n [in] speed：车速，如果大于0，车辆以指定的速度从发车点出发，单位：像素/秒 \n Ø  void initLane(int laneNumber, qreal dist = -1, qreal speed = -1) \n 初始化车辆, laneNumber:车道序号，从0开始；dist，距起点距离，单位像素；speed：车速，像素/秒 \n 参数： \n [in] laneNumber：车道序号，从0开始 \n [in] dist：距离路段起点距离，单位：像素 \n [in] speed：起动时的速度，单位：像素/秒 \n 举例： \n //初始化飞机位置 \n if   ( tmpId  ==   1 )   { \n\t\t\tpIVehicle -> setVehiType ( 12 ) ; \n\t\t\tpIVehicle -> initLane ( 3 ,   m2p ( 105 ) ,   0 ) ; \n\t\t } \n \n Ø  void initLaneConnector(int laneNumber, int toLaneNumber, qreal dist = -1, qreal speed = -1) \n 初始化车辆, laneNumber: “车道连接”起始车道在所在路段的序号，从0开始自右往左； toLaneNumber :“车道连接”目标车道在所在路段的序号，从0开始自右往左， dist，距起点距离，单位像素；speed：车速，像素/秒 \n 参数： \n [in] laneNumber：车道序号，从0开始自右侧至左侧 \n [in] toLaneNumber：车道序号，从0开始自右侧至左侧 \n [in] dist：距离路段起点距离，单位：像素 \n Ø [in] speed：起动时的速度，单位：像素/秒 void setVehiType(int code) \n 设置车辆类型，车辆被创建时已确定了类型，通过此方法可以改变车辆类型 \n 参数： \n [in] code：车辆类型编码 \n Ø  void setColor(QString color) \n 设置车辆颜色 \n 参数： \n [in] color：颜色RGB，如："#EE0000" \n Ø  qreal length() \n 车辆长度，单位：像素 \n Ø  void setLength(qreal len , bool bRestWidth = false) \n 设置车辆长度 \n 参数： \n [in] len：车辆长度，单位：像素 \n [in] bRestWidth：是否同比例约束宽度，默认为false \n Ø  long laneId() \n 如果toLaneId() 小于等于0，那么laneId()获取的是当前所在车道ID，如果toLaneId()大于0，则车辆在“车道连接”上，laneId()获取的是上游车道ID \n Ø  long toLaneId() \n 下游车道ID。如果小于等于0，车辆在路段的车道上，否则车辆在连接段的“车道连接”上 \n Ø  ILane *lane() \n 获取当前车道，如果车辆在“车道连接”上，获取的是“车道连接”的上游车道 \n Ø  ILane *toLane() \n 如果车辆在“车道连接”上，返回“车道连接”的下游车道，如果当前不在“车道连接”上，返回空指针 \n Ø  ILaneConnector* laneConnector() \n 获取当前“车道连接”，如果在车道上，返回空指针 \n Ø  long currBatchNumber() \n 当前仿真计算批次 \n Ø  int roadType() \n 车辆所在道路类型。在文件Plugin/_netitemtype.h中定义了一批常量，每一个数值代表路网上一种元素类型。如：GLinkType代表路段、GConnectorType代表连接段。 \n Ø  qreal limitMaxSpeed() \n 车辆所在路段或连接段最大限速，兼顾到车辆的期望速度，单位：像素/秒 \n Ø  qreal limitMinSpeed() \n 车辆所在路段或连接段最小限速，兼顾到车辆的期望速度，单位：像素/秒 \n Ø  long vehicleTypeCode() \n 车辆类型编码。打开TESSNG，通过菜单“车辆”->“车辆类型”打开车辆类型编辑窗体，可以看到不同类型车辆的编码 \n Ø  QString vehicleTypeName() \n 获取车辆类型名，如“小客车” \n Ø  QString name() \n 获取车辆名称 \n Ø  IVehicleDriving* vehicleDriving() \n 获取车辆驾驶行为接口 \n Ø  void driving() \n 驱动车辆。在每个运算周期，每个在运行的车辆被调用一次该方法 \n Ø  QPointF pos() \n 当前位置，横纵坐标单位：像素 \n Ø  float zValue() \n 当前高程，单位：像素 \n Ø  qreal acce() \n 当前加速度，单位：像素/秒^2 \n Ø  qreal currSpeed() \n 当前速度，单位：像素/秒 \n Ø  qreal angle() \n 当前角度，北向0度顺时针 \n Ø  bool isStarted() \n 是否在运行，如果返回false，表明车辆已驰出路网或尚未上路 \n Ø  IVehicle *vehicleFront() \n 前车 \n Ø  IVehicle *vehicleRear() \n 后车 \n Ø  IVehicle *vehicleLFront( \n 左前车 \n Ø  IVehicle *vehicleLRear() \n 左后车 \n Ø  IVehicle *vehicleRFront() \n 右前车 \n Ø  IVehicle *vehicleRRear() \n 右后车 \n Ø  qreal vehiDistFront() \n 前车间距，单位：像素 \n Ø  qreal vehiSpeedFront() \n 前车速度，单位：像素/秒 \n Ø  qreal vehiHeadwayFront() \n 距前车时距 \n Ø  qreal vehiDistRear() \n 后车间距，单位：像素 \n Ø  qreal vehiSpeedRear() \n 后车速度，单位：像素/秒 \n Ø  qreal vehiHeadwaytoRear() \n 距后车时距 \n Ø  qreal vehiDistLLaneFront() \n 相邻左车道前车间距，单位：像素 \n Ø  qreal vehiSpeedLLaneFront() \n 相邻左车道前车速度，单位：像素/秒 \n Ø  qreal vehiDistLLaneRear() \n 相邻左车道后车间距，单位：像素 \n Ø  qreal vehiSpeedLLaneRear( \n 相邻左车道后车速度，单位：像素/秒 \n Ø  qreal vehiDistRLaneFront() \n 相邻右车道前车间距，单位：像素 \n Ø  qreal vehiSpeedRLaneFront() \n 相邻右车道前车速度，单位：像素/秒 \n Ø  qreal vehiDistRLaneRear() \n 相邻右车道后车间距，单位：像素 \n Ø  qreal vehiSpeedRLaneRear() \n 相邻右车道后车速度，单位：像素/秒 \n Ø  void setDynaInfo(void *pDynaInfo) \n 设置动态信息 \n Ø  void *dynaInfo() \n 获取动态信息 \n Ø  QList< QPointF> lLaneObjectVertex() \n 车道或车道连接中心线内点集 \n Ø  IRouting *routing() \n 当前路径 \n Ø  Vehicle *vehicle() \n 车辆 \n Ø  QPicture picture() \n 获取车辆图片 \n Ø  QPolygonF boundingPolygon() \n 获取车辆由方向和长度决定的四个拐角构成的多边型 \n Ø  void setTag(long tag) \n 设置标签表示的状态 \n Ø  long tag() \n 获取标签表示的状态 \n Ø  void setTextTag(QString text) \n 设置文本信息，用于在运行过程保存临时信息，方便开发 \n Ø  QString textTag() \n 文本信息，运行过程临时保存的信息，方便开发 \n Ø  void setJsonInfo(QJsonObject info) \n 设置json格式数据 \n Ø  QJsonObject jsonInfo() \n 返回json格式数据 \n Ø  QVariant jsonProperty(QString propName) \n 返回json字段值 \n Ø  void setJsonProperty(QString key, QVariant value) \n 设置json数据属性 \n 2.2 IVehicleDriving \n 驾驶行为接口，通过此接口可以控制车辆的左右变道、设置车辆角度，对车辆速度、坐标位置等进行控制，可以在路网中间停止车辆运行，将车辆移出路网，等等。 \n 接口文件：ivehicledriving.h \n 接口方法： \n Ø  IVehicle *vehicle() \n 当前驾驶车辆 \n Ø  long getRandomNumber() \n 获取随机数 \n Ø  bool nextPoint() \n 计算下一点位置，过程包括计算车辆邻车关系、公交车是否进站是否出站、是否变道、加速度、车速、移动距离、跟驰类型、轨迹类型等 \n Ø  long zeroSpeedInterval() \n 当前车速为零持续时间(毫秒) \n Ø  bool isHavingDeciPointOnLink() \n 当前是否在路段上且有决策点 \n Ø  int followingType() \n 跟驰车辆的类型，即当前车辆前车的类型，分为：0：停车，1: 正常，5：急减速，6：急加速，7：汇入， 8：穿越，9：协作减速，10：协作加速，11：减速待转，12：加速待转 \n Ø  bool isOnRouting() \n 当前是否在路径上 \n Ø  void stopVehicle() \n 停止运行，将车辆移出路网 \n Ø  qreal angle() \n 旋转角，北向0度顺时针 \n Ø  void setAngle(qreal angle) \n 设置车辆旋转角 \n 参数： \n [in] angle：旋转角，一周360度 \n 举例： \n //9. 修改车辆航向角，以L5路段为例 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   9 )   { \n\t\t if   ( pIVehicle -> roadId ( )   ==   5 )   { \n\t\t\tpIVehicle -> vehicleDriving ( ) -> setAngle ( 45 ) ; \n\t\t } \n\t } \n \n Ø  QVector3D euler(bool bPositive = false) \n 返回车辆欧拉角 \n 参数： \n [in] bPositive：车头方向是否正向计算，如果bPosiDire为false则反向计算 \n Ø  qreal desirSpeed() \n 当前期望速度，与车辆自身期望速度和道路限速有关，不大于道路限速，单位：像素/秒 \n Ø  ISection* getCurrRoad() \n 返回当前所在路段或连接段 \n Ø  ISection* getNextRoad() \n 下一路段或连接段 \n Ø  int differToTargetLaneNumber() \n 与目标车道序号的差值，不等于0表示有强制变道意图，大于0有左变道意图，小于0有右变道意图，绝对值大于0表示需要强制变道次数 \n Ø  void toLeftLane( bool   bFource   =   false ) \n 左变道 \n 参数： \n [in] bFource：是否强制変道，默认为false \n Ø  void toRightLane( bool   bFource   =   false ) \n 右变道 \n 参数： \n [in] bFource：是否强制変道，默认为false \n Ø  int laneNumber() \n 当前车道序号，最右侧序号为0 \n Ø  void initTrace() \n 初始化轨迹 \n Ø  void setTrace(QList< QPointF> &lPoint) \n 设置轨迹 \n 参数： \n [in] lPoint：轨迹点坐标集合 \n Ø  void calcTraceLength() \n 计算轨迹长度 \n Ø  int tracingType() \n 返回轨迹类型，分为：0：跟驰，1：左变道，2：右变道，3：左虚拟変道，4：右虚拟变道，5：左转待转，6：右转待转，7：入湾，8：出湾 \n Ø  void setTracingType(int type) \n 设置轨迹类型 \n Ø  void setLaneNumber(int number) \n 设置当前车道序号 \n 参数： \n [in] number：车道序号 \n Ø  qreal currDistanceInRoad() \n 当前路段或连接段上已行驶距离，单位：像素 \n Ø  void setCurrDistanceInRoad(qreal dist) \n 设置当前路段或连接段已行驶距离 \n 参数： \n [in] dist：距离，单位：像素 \n Ø  void setVehiDrivDistance(qreal dist) \n 设置当前已行驶总里程 \n 参数： \n Ø [in] dist：总里程，单位：像素 qreal getVehiDrivDistance() \n 已行驶总里程 \n Ø  qreal currDistanceInSegment() \n 当前分段已行驶距离 \n Ø  void setCurrDistanceInSegment(qreal dist) \n 设置当前分段已行驶的距离 \n Ø  void setSegmentIndex(int index) \n 设置分段序号 \n Ø  void setCurrDistanceInTrace(qreal dist) \n 设置曲化轨迹上行驶的距离 \n Ø  void setIndexOfSegmInTrace(int index) \n 设置曲化轨迹上的分段序号 \n Ø  void setChangingTracingType(bool b) \n 设置是否改变轨迹，当设为true时会对轨迹初始化，如设轨迹分段序号为0，等 \n Ø  qreal currDistance() \n 当前时间段移动距离 \n Ø  setX(qreal posX) \n 设置横坐标 \n 参数： \n [in] posX：横坐标：单位：像素 \n Ø  setY(qreal posY) \n 设置纵坐标 \n 参数： \n [in] posY：纵坐标：单位：像素 \n Ø  void setV3z(qreal v3z) \n 设置高程坐标 \n 参数： \n [in] v3z：高程坐标：单位：像素 \n Ø  QList< QPointF> changingTrace() \n 变轨点集，车辆不在车道中心线或“车道连接”中心线上时的轨迹，如变道过程的轨迹点集 \n Ø  qreal changingTraceLength() \n 变轨长度 \n Ø  qreal distToStartPoint(bool fromVehiHead = false, bool bOnCentLine = true) \n 在车道或车道连接上到起点距离 \n 参数： \n [in] fromVehiHead：是否从车头计算，如果为false，从车辆中心点计算，默认值为false \n [in] bOnCentLine：当前是否在中心线上 \n Ø  qreal distToEndpoint(bool fromVehiHead = false) \n 在车道或“车道连接”上车辆到终端距离 \n 参数： \n [in] fromVehiHead：是否从车头计算，如果为false，从车辆中心点计算，默认值为false \n Ø  bool setRouting(IRouting *pRouting) \n 设置路径，外界设置的路径不一定有决策点，可能是临时创建的，如果车辆不在此路径上则设置不成功并返回false \n 举例： \n // 修改车辆路径，将L1路段所有车辆修改为右转路径 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   4 )   { \n\t\t for   ( IVehicle * &  vehi  :  lAllVehi )   { \n\t\t\t if   ( vehi -> roadId ( )   ==   1 )   { \n\t\t\t\tQList <  IDecisionPoint * >  lDecisionPoint  =  gpTessInterface -> netInterface ( ) -> decisionPoints ( ) ; \n\t\t\t\tIDecisionPoint *  pDecisionPointInLink1  =   nullptr ; \n\t\t\t\t for   ( IDecisionPoint * &  pDecisionPoint  :  lDecisionPoint )   { \n\t\t\t\t\t if   ( pDecisionPoint -> link ( ) -> id ( )   ==   1 )   { \n\t\t\t\t\t\tpDecisionPointInLink1  =  pDecisionPoint ; \n\t\t\t\t\t\t break ; \n\t\t\t\t\t } \n\t\t\t\t } \n\t\t\t\tQList <  IRouting * >  lRoutingsOfDecisionPointInLink1 ; \n\t\t\t\t if   ( pDecisionPointInLink1 )   { \n\t\t\t\t\tlRoutingsOfDecisionPointInLink1  =  pDecisionPointInLink1 -> routings ( ) ; \n\t\t\t\t } \n\t\t\t\t if   ( ! lRoutingsOfDecisionPointInLink1 . isEmpty ( ) )   { \n\t\t\t\t\t if   ( vehi -> routing ( )   !=  lRoutingsOfDecisionPointInLink1 . back ( ) )   { \n\t\t\t\t\t\t if   ( vehi -> vehicleDriving ( ) -> setRouting ( lRoutingsOfDecisionPointInLink1 . back ( ) ) )   { \n\t\t\t\t\t\t\tmRunInfo  =   QStringLiteral ( "L1路段所有车辆路径修改为右转！" ) ; \n\t\t\t\t\t\t\t emit ( forRunInfo ( mRunInfo ) ) ; \n\t\t\t\t\t\t } \n\t\t\t\t\t } \n\t\t\t\t } \n\t\t\t } \n\t\t } \n\t } \n \n Ø  IRouting* routing() \n 当前路径 \n Ø  bool moveToLane(ILane* pLane, const qreal dist) \n 将车辆移到另一条车道上 \n 参数： \n [in] pLane：目标车道 \n [in] dist：到目标车道起点距离，单位：像素 \n Ø  bool moveToLaneConnector(ILaneConnector* pLaneConnector, const qreal dist) \n 将车辆移到另一条车道连接上 \n 参数： \n [in] pLaneConnector：目标车道 \n [in] dist：到目标车道起点距离，单位：像素 \n 举例： \n //20秒时，移动飞机 \n if   ( simuTime  ==   20   *   1000 )   { \n\t\t //查找飞机和id为1的车道 \n\t\tIVehicle *  pPlane  =  gpTessInterface -> simuInterface ( ) -> getVehicle ( 100001 ) ; \n\t\tILane *  pLane  =  gpTessInterface -> netInterface ( ) -> findLane ( 1 ) ; \n\t\t if   ( pPlane  -> vehicleDriving ( ) -> moveToLane ( pLane ,   m2p ( 400 ) ) )   { \n\t\t\t qDebug ( )   <<   "移动飞机成功"   <<  endl ; \n\t\t } \n\t } \n\n \n Ø  bool move(ILaneObject* pILaneObject, const qreal dist) \n 移动车辆到到另一条车道或“车道连接” \n 参数： \n [in] pILaneObject：目标车道或“车道连接” \n [in] dist：到目标车道起点距离，单位：像素 \n 举例： \n // 车辆移动测试时，将L5路段车辆移动过路口的各个车道 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   2 )   { \n\t\t for   ( int  i  =   0 ;  i  <  lAllVehi . size ( ) ;   ++ i )   { \n\t\t\t if   ( lAllVehi [ i ] -> roadId ( )   ==   5 )   { \n\t\t\t\tILink *  nextLink  =  gpTessInterface -> netInterface ( ) -> findLink ( 9 ) ; \n\t\t\t\tQList <  ILaneObject * >  lNextLinkLaneObj  =  nextLink -> laneObjects ( ) ; \n\t\t\t\t if   ( lAllVehi [ i ] -> vehicleDriving ( ) -> move ( lNextLinkLaneObj [ i  %  lNextLinkLaneObj . size ( ) ] ,   static_cast < double > ( i  %   100 ) ) )   { \n\t\t\t\t\tmRunInfo  =   QStringLiteral ( "L5路段车辆转移成功！" ) ; \n\t\t\t\t\t emit ( forRunInfo ( mRunInfo ) ) ; \n\t\t\t\t } \n\t\t\t } \n\t\t } \n\t\tmpSecondDevCasesObj -> mActionControlMethodNumber  =   0 ; \n\t } \n 4  TessInterface \n TessInterface 是TESSN对外暴露的顶级接口，下面有三个子接口：NetInterface、SimuInterface、GuiInterface，分别用于访问或控制路网、仿真过程和用户交互界面。 \n 下面是几个接口方法的说明： \n Ø  QJsonObject config() \n 获取json对象，其中保存了config.json配置文件中的信息。 \n 每次加载路网时会重新加载配置信息，上次通过setConfigProperty()方法设置的属性会在重新加载路网后丢失。 \n Ø  void setConfigProperty(QString key, QVariant value) \n 设置配置属性 \n Ø  void releasePlugins() \n 卸载并释放插件 \n Ø  NetInterface *netInterface() \n 返回用于访问控制路网的接口NetInterface \n Ø  SimuInterface *simuInterface() \n 返回用于控制仿真过程的接口SimuInterface \n Ø  GuiInterface *guiInterface() \n 返回用于访问控制用户介面的接口GuiInterface \n Ø  Bool loadPluginFromMem() \n 从内存加载插件，此方法便于用户基于API进行二次开发。 \n 下面对三个子接口进行详解： \n 4.1 NetInterface \n 接口文件：netinterface.h \n NetInterface是TessInterface的子接口，用于访问、控制路网的接口，通过这个接口可以从文件加载路网、创建路段、连接段、发车点等。 \n 下面对NetInterface接口方法作详细解释。 \n Ø  void openNetFle(QString filePath) \n 打开保存在文件中的路网 \n 参数： \n [in] filePath：路网文件全路径名 \n 举例： \n openNetFile ( QString :: fromLocal8Bit ( "C:/TESSNG/Example/杭州武林门区域路网公交优先方案.tess" ) ) ; \n \n Ø  void openNetByNetId(long netId) \n 从专业数据库加载路网 \n Ø  void saveRoadNet() \n 保存路网 \n Ø  QString netFilePath() \n 获取路网文件全路径名，如果是专业数据保存的路网，返回的是路网ID \n Ø  IRoadNet* roadNet() \n 获取路网对象 \n Ø  IRoadNet* netAttrs() \n 获取路网对象，如果路网是从opendrive导入的，此路网对象可能保存了路网中心点所在的经纬度坐标，以及大地坐标等信息 \n Ø  IRoadNet* setNetAttrs (QString name, QString sourceType = QString("TESSNG"), QPointF centerPoint = QPointF(), QString backgroundUrl = QString(), QJsonObject otherAttrsJson = QJsonObject()) \n 设置路网基本信息 \n 参数： \n [in] name:路网名称 \n [in] centerPoint:中心点坐标所在路网，默认为(0,0)，用户也可以将中心点坐标保存到otherAttrsJson字段里 \n [in] sourceType:数据来源分类，默认为 “TESSNG”，表示路网由TESSNG软件直接创建。取值“OPENDRIVE”，表示路网是经过opendrive路网导入而来 \n [in] backgroundUrl：底图路径 \n [in] otherAttrsJson:保存在json对象中的其它属性，如大地坐标等信息。 \n Ø  QGraphicsScene* graphicsScene() \n 获取场景对象指针 \n Ø  QGraphicsView* graphicsView() \n 获取视图对象指针 \n Ø  qreal sceneScale() \n 场景中的像素比，单位：米/像素 \n Ø  void setSceneSize(qreal w, qreal h) \n 设置场景大小，参数w及h分别是场景宽度和高度，单位：米 \n Ø  qreal sceneWidth() \n 场景宽度，单位：米 \n Ø  qreal sceneHeigth() \n 场景高度，单位：米 \n Ø  QByteArray backgroundMap() \n 背景图 \n Ø  QList< ISection*> sections() \n 所有Section \n Ø  QList< long> linkIds() \n 路段ID集 \n Ø  int linkCount() \n 路段数 \n Ø  int QList< ILink*> links() \n 路段集 \n Ø  ILink *findLink(long id) \n 根据路段ID查找路段 \n 举例： \n // 根据路段ID获取路段 \n\t\tILink *  pLink3  =  gpTessInterface -> netInterface ( ) -> findLink ( 3 ) ; \n\t\tILink *  pLink10  =  gpTessInterface -> netInterface ( ) -> findLink ( 10 ) ; \n\t\tILink *  pLink6  =  gpTessInterface -> netInterface ( ) -> findLink ( 6 ) ; \n\t\tILink *  pLink7  =  gpTessInterface -> netInterface ( ) -> findLink ( 7 ) ; \n\t\tILink *  pLink8  =  gpTessInterface -> netInterface ( ) -> findLink ( 8 ) ; \n \n Ø  ILane* findLane(long id) \n 根据车道ID查找车道 \n Ø  ILaneConnector* findLaneConnector(long id) \n 根据“车道连接”ID查找“车道连接” \n Ø  QList< long> connectorIds() \n 连接段ID集 \n Ø  int connectorCount() \n 连接段数 \n Ø  QList< IConnector*> connectors() \n 连接段集 \n Ø  IConnector *findConnector(long id) \n 根据连接段ID查找连接段 \n Ø  IConnectorArea* findConnectorArea(long id) \n 根据面域ID查找面域 \n Ø  IConnector* findConnectorByLinkIds(long fromLinkId, long toLinkId) \n 根据起始路段ID及目标路段ID查找连接段 \n Ø  ILaneConnector * findLaneConnector(long fromLaneId, long toLaneId) \n 根据起始车道ID及目标车道ID查找“车道连接” \n Ø  int guidArrowCount() \n 导向箭头数 \n Ø  QList< long> guidArrowIds() \n 导向箭头ID集 \n Ø  QList< IGuidArrow*> guidArrows() \n 导向箭头集 \n Ø  IGuidArrow* findGuidArrow(long id) \n 根据ID查询导向箭头 \n Ø  int signalLampCount() \n 信号灯数 \n Ø  QList< long> signalLampIds() \n 信号灯ID集 \n Ø  QList< ISignalLamp*> signalLamps() \n 信号灯集 \n Ø  ISignalLamp* findSignalLamp(long id) \n 根据信号灯ID查找信号灯 \n Ø  ISignalPhase* findSignalPhase(long id) \n 根据信号相位ID查找信号相位 \n 举例： \n ISignalPhase *   pSignalPhase7OfL12  =   gpTessInterface -> netInterface ( ) -> findSignalPhase ( 7 ) ;   \n \n Ø  int signalGroupCount() \n 信号灯组数 \n Ø  QList< long> signalGroupIds() \n 信号灯组ID集 \n Ø  QList< ISignalGroup*> signalGroups() \n 信号灯组集 \n Ø  ISignalGroup* findSignalGroup(long id) \n 根据信号灯组ID查找信号灯组 \n Ø  QList< IDispatchPoint*> dispatchPoints() \n 发车点集。 \n Ø  IDispatchPoint* findDispatchPoint(long id) \n 根据发车点ID查找发车点 \n 参数： \n [in] id：发车点ID \n Ø  QList< IBusLine*> buslines() \n 公交线路集 \n Ø  IBusLine *findBusline(long buslineId) \n 根据公交线路ID查找公交线路 \n 参数： \n [in] buslineId：公交线路ID \n Ø  IBusLine *findBuslineByFirstLinkId(long linkId) \n 根据公交线路起始路段ID查找公交线路 \n 参数： \n [in] linkId：公交线路起始段ID \n Ø  QList< IBusStation*> busStations() \n 公交站点集 \n Ø  IBusStation* findBusStation(long stationId) \n 根据公交站点ID查询公交站点 \n Ø  QList< IBusStationLine*> findBusStationLineByStationId(long stationId) \n 根据公交站点ID查询相关BusLineStation \n Ø  QList< IConnectorArea*> allConnectorArea() \n 面域集 \n Ø  QList< QPointF> laneCenterPoints(long laneId) \n 指定车道中心线断点集 \n 参数：­ \n [in]laneId：指定车道ID \n Ø  QList< QPointF> linkCenterPoints(long linkId) \n 指定路段中心线断点集 \n 参数： \n [in]linkId：指定路段ID \n Ø  bool judgeLinkToCross(long linkId) \n 判断路段去向是否进入交叉口，以面域是否存在多连接段以及当前路段与后续路段之间的角度为依据 \n Ø  long getIDByItemName(QString name) \n 根据路网元素名获取自增ID \n 参数： \n [in] name：路网元素名。路网元素名的定义在文件plugin/_netitem.h中定义 \n Ø  ILink* createLink(QList< QPointF> lCenterPoint, int laneCount, QString linkName = QString(), bool bAddToScene = true) \n 创建路段 \n 参数： \n [in] lCenterPoint：路段中心线断点集 \n [in] laneCount：车道数 \n [in] linkName：路段名，默认为空，将以路段ID作为路段名 \n [in] bAddToScene：创建后是否放入路网场景，默认为true \n 举例： \n //创建两条路段 \n\tQPointF startPoint1  =   QPointF ( m2p ( - 300 ) ,   m2p ( Posy ) ) ; //m2p(数字)后的坐标可以对上原点在中心的坐标，TESSNG中的坐标始终是像素 \n\tQPointF endPoint1  =   QPointF ( m2p ( - 50 ) ,   m2p ( Posy ) ) ; \n\tQList <  QPointF >  lPoint1 ; \n\tlPoint1  <<  startPoint1  <<  endPoint1 ; \n\tILink *  pLink1  =  gpTessInterface -> netInterface ( ) -> createLink ( lPoint1 ,   3 ,  LinkName  +   QStringLiteral ( "路段1" ) ) ; \n\n\tQPointF startPoint2  =   QPointF ( m2p ( 50 ) ,   m2p ( Posy ) ) ; //m2p(数字)后的坐标可以对上原点在中心的坐标，TESSNG中的坐标始终是像素 \n\tQPointF endPoint2  =   QPointF ( m2p ( 300 ) ,   m2p ( Posy ) ) ; \n\tQList <  QPointF >  lPoint2 ; \n\tlPoint2  <<  startPoint2  <<  endPoint2 ; \n\tILink *  pLink2  =  gpTessInterface -> netInterface ( ) -> createLink ( lPoint2 ,   3 ,  LinkName  +   QStringLiteral ( "路段2" ) ) ; \n \n 返回：路段对象指针。 \n Ø  ILink* createLink3D(QList< QVector3D> lCenterV3, int laneCount, QString linkName = QString(), bool bAddToScene = true) \n 创建路段 \n 参数： \n [in] lCenterV3：路段中心线断点序列，每个断点都是三维空间的点 \n [in] laneCount：车道数 \n [in] linkName：路段名 \n 返回：路段对象指针。 \n Ø  ILink* createLinkWithLaneWidth(QList< QPointF> lCenterPoint, QList< qreal> lLaneWidth, QString linkName = QString(), bool bAddToScene = true) \n 创建路段 \n 参数： \n [in] lCenterPoint：路段中心线断点序列 \n [in] lLaneWidth：车道宽度列表 \n [in] linkName：路段名 \n [in] bAddToScene：是否加入场景，默认为true \n 返回：路段对象指针。 \n Ø  ILink* createLink3DWithLaneWidth(QList< QVector3D> lCenterV3, QList< qreal> lLaneWidth, QString linkName = QString(), bool bAddToScene = true) \n 创建路段 \n 参数： \n [in] lCenterV3：路段中心线断点序列，每个断点都是三维空间的点 \n [in] lLaneWidth：车道宽度列表 \n [in] linkName：路段名 \n [in] bAddToScene：是否加入场景，默认为true \n 返回：路段对象指针。 \n Ø  ILink* createLink3DWithLanePoints(QList< QVector3D> lCenterLineV3, QList< QMap<QString, QList< QVector3D>>> lanesWithPoints, QString linkName = QString(), bool bAddToScene = true) \n 创建路段 \n 参数： \n [in] lCenterLineV3：路段中心点集(对应TESSNG路段中心点)，每个[in\\点都是三维空间的 \n [in] lanesWithPoints：车道数据集合，每个成员是QMap<QString, QList< QVector3D>>类型数据，有三个key，分别是“left”、“center”、“right”、分别表示一条车道左、中、右侧断点序列。 \n [in] linkName：路段名，默认为路段ID \n [in] bAddToScene：是否加入路网，默认true表示加入 \n 返回：路段对象指针 \n Ø  IConnector* createConnector(long fromLinkId, long toLinkId, QList< int> lFromLaneNumber, QList< int> lToLaneNumber, QString connName = QString(), bool bAddToScene = true) \n 创建连接段 \n 参数： \n [in] fromLinkId：起始路段ID \n [in] toLinkId：目标路段ID \n [in] lFromLaneNumber：连接段起始车道序号集 \n [in] LToLaneNumber：连接段目标车道序号集 \n [in] connName：连接段名，默认为空，将以两条路段的ID连接起来作为名称 \n [in] bAddToScene：创建后是否放入路网场景，默认为true \n 举例： \n //创建连接段 \n\t if   ( pLink1  &&  pLink2 )   { \n\t\tQList <   int >  lFromLaneNumber  =   QList <   int > ( )   <<   1   <<   2   <<   3 ; \n\t\tQList <   int >  lToLaneNumber  =   QList <   int > ( )   <<   1   <<   2   <<   3 ; \n\t\tpConn  =  gpTessInterface -> netInterface ( ) -> createConnector ( pLink1 -> id ( ) ,  pLink2 -> id ( ) ,  lFromLaneNumber ,  lToLaneNumber ,  LinkName  +   QStringLiteral ( "连接段" ) ) ; \n } \n \n Ø  IConnector* createConnector3DWithPoints(long fromLinkId, long toLinkId, QList< int> lFromLaneNumber, QList< int> lToLaneNumber, QList< QMap<QString, QList< QVector3D>>> laneConnectorWithPoints, QString connName = QString(), bool bAddToScene = true); \n 创建连接段，创建连接段后将“车道连接”中自动计算的断点集用参数laneConnectorWithPoints断点替换 \n 参数： \n [in] fromLinkId：起始路段ID \n [in] toLinkId：目标路段ID \n [in] lFromLaneNumber：起始路段参于连接的车道序号 \n [in] lToLaneNumber：目标路段参于连接的车道序号 \n [in] laneConnectorWithPoints：“车道连接”数据列表，成员是QMap<QString, QList< QVector3D>>类型数据，有三种key，分别是“left”、“center”、“right”，表示一条“车道连接”左、中、右侧断点序列 \n [in] connName：连接段名，默认将起始路段ID和目标路段ID用“_”连接表示连接段名，如“100_101”。 \n [in] bAddToScene：是否加入到场景，默认为true \n 返回：连接段对象指针 \n Ø  IDispatchPoint* createDispatchPoint(ILink *pLink, QString dpName = QString(), bool bAddToScene = true) \n 创建发车点 \n 参数： \n [in] pLink：路段，在其上创建发车点 \n [in] dpName：发车点名称，默认为空，将以发车点ID作为名称 \n [in] bAddToScene：创建后是否放入路网场景，默认为true \n 举例： \n if   ( pLink1 )   { \n\t\t //创建发车点 \n\t\tIDispatchPoint *  pDp  =  gpTessInterface -> netInterface ( ) -> createDispatchPoint ( pLink1 ) ; \n\t\t if   ( pDp )   { \n\t\t\tpDp -> addDispatchInterval ( 1 ,   200 ,   400 ) ; //200秒400辆车 \n\t\t } \n\t } \n \n Ø  long createVehicleComposition(QString name, QList< Online::VehicleComposition> lVehiComp) \n 创建车型组成，如果车型组成名已存在或相关车型编码不存在或相关车型占比小于0则返回-1，否则新建车型组成，并返回车型组成编码 \n 参数： \n [in] name：车型组成名 \n [in] lVehiComp：不同车型占比列表 \n 举例： \n // 创建车辆组成及指定车辆类型 \n\t\tQList <  Online :: VehiComposition >  lVehiTypeProportion ; \n\t\t // 车型组成：小客车0.3，大客车0.2，公交车0.1，货车0.4 \n\t\tlVehiTypeProportion . push_back ( Online :: VehiComposition ( 1 ,   0.3 ) ) ; \n\t\tlVehiTypeProportion . push_back ( Online :: VehiComposition ( 2 ,   0.2 ) ) ; \n\t\tlVehiTypeProportion . push_back ( Online :: VehiComposition ( 3 ,   0.1 ) ) ; \n\t\tlVehiTypeProportion . push_back ( Online :: VehiComposition ( 4 ,   0.4 ) ) ; \n\t\t int  vehiCompositionID  =  gpTessInterface -> netInterface ( ) -> createVehicleComposition ( "动态创建车型组成" ,  lVehiTypeProportion ) ; \n\t\t if   ( vehiCompositionID  !=   - 1 )   { \n\t\t\t qDebug ( )   <<   "车型组成创建成功，id为："   <<  vehiCompositionID  <<  endl ; \n\t\t\t // 新建发车点,车型组成ID为动态创建的，600秒发300辆车 \n\t\t\t if   ( pLink1 )   { \n\t\t\t\tIDispatchPoint *  dp  =  gpTessInterface -> netInterface ( ) -> createDispatchPoint ( pLink1 ) ; \n\t\t\t\t if   ( dp )   { \n\t\t\t\t\tdp -> addDispatchInterval ( vehiCompositionID ,   600 ,   300 ) ; \n\t\t\t\t\tbVehiCompositionFlag  =   true ; \n\t\t\t\t } \n\t\t\t } \n\t\t } \n \n Ø  IRouting *shortestRouting(ILink* pFromLink, ILink* pToLink) \n 计算最短路径 \n 参数： \n [in] pFromLink：起始路段 \n [in] pToLink：目标路段 \n 返回：最短路径对象，包含经过的路段对象序列 \n Ø  IRouting *createRouting(QList< ILink*> lILink) \n 用连续通达的路段序列创建路径 \n 参数： \n [in] lILink：路段对象序列 \n 返回：路径对象 \n Ø  QList< IDecisionPoint*> decisionPoints() \n 决策点列表 \n Ø  IDecisionPoint* findDecisionPoint(long id) \n 根据ID查找决策点 \n [in] id：决策点ID \n 返回：决策点对象 \n Ø  QList< IVehicleDrivInfoCollector*> vehiInfoCollectors() \n 所有车辆检测器 \n Ø  IVehicleDrivInfoCollector* findVehiInfoCollector(long id) \n 根据ID查询车辆检测器 \n 参数： \n [in] id：车辆检测器ID \n 返回：车辆检测器对象 \n Ø  QList< IVehicleQueueCounter*> vehiQueueCounters() \n 所有排队计数器 \n Ø  IVehicleQueueCounter* findVehiQueueCounter(long id) \n 根据ID查询车辆排队计数器 \n 参数： \n [in] id：排队计数器ID \n 返回：排队计数器对象 \n Ø  QList< IVehicleTravelDetector*> vehiTravelDetectors() \n 所有车辆行程时间检测器，返回列表中的每一个元素是一对行程时间检测器的起始检测器 \n Ø  IVehicleTravelDetector* findVehiTravelDetector(long id) \n 根据ID查询车辆行程时间检测器，返回一对行程时间检测器中起始检测器 \n 参数： \n [in] id：行程时间检测器ID \n 返回：行程时间检测器对象 \n Ø  IRouting* findRouting(long id) \n 根据路径ID查找路径 \n Ø  QList< Online::CrossPoint> crossPoints(ILaneConnector* pLaneConnector) \n 当前“车道连接”穿过其它“车道连接”形成的交叉点列表 \n 参数： \n [in] pLaneConnector：“车道连接”对象 \n 返回：交叉点列表 \n 举例： \n //当前“车道连接”穿过其它“车道连接”形成的交叉点列表 \nILaneConnector *  pLaneConnector  =  gpTessInterface -> netInterface ( ) -> findConnector ( 6 ) -> laneConnectors ( ) [ 2 ] ; \n\tQList <  Online :: CrossPoint >  crossPoints  =  gpTessInterface -> netInterface ( ) -> crossPoints ( pLaneConnector ) ; \n\t for   ( Online :: CrossPoint crossPoint  :  crossPoints )   { \n\t\t qDebug ( )   <<   "主车道连接，即被交叉的“车道连接”："   <<  crossPoint . mpLaneConnector -> id ( ) ; \n\t qDebug ( )   <<   "交叉点坐标为：("   <<  crossPoint . mCrossPoint . x ( )   <<   ","   <<  crossPoint . mCrossPoint . y ( )   <<   ")" << endl ; \n\t } \n \n Ø  bool createEmptyNetFile(QString filePath, long dbver = 5) \n 创建空白路网 \n 参数： \n [in] filePath：空白路网全路径名 \n [in] dbver:：数据库版本 \n Ø  ILink* createLink3DWithLanePointsAndAttrs(QList< QVector3D> lCenterLineV3, QList< QMap<QString, QList< QVector3D>>> lanesWithPoints, QList< QString> lLaneType, QList< QJsonObject> lAttr = QList< QJsonObject>(), QString linkName = QString(), bool bAddToScene = true) \n 创建路段 \n 参数： \n [in] lCenterLineV3：路段中心点集(对应TESSNG路段中心点) \n [in] lanesWithPoints：车道点集的集合 \n [in] lLaneType:车道类型集 \n [in] lAttr:车道附加属性集 \n [in] linkName：路段名，默认为路段ID, \n [in] bAddToScene：是否加入路网，默认true表示加入 \n 返回：路段对象 \n Ø  void removeLink(ILink* pLink) \n 移除路段，从场景中移除pLink，但不从文件中删除，保存路网后才会从路网文件中删除 \n 参数： \n [in] pLink：将要移除的路段 \n Ø  ILink* updateLink(_Link link, QList< _Lane> lLane = QList< _Lane>(), QList< QPointF> lPoint = QList< QPointF>()) \n 更新路段，更新后返回路段对象 \n 参数： \n [in] link：更新的路段数据 \n [in] lLink：更新的车道列表数据 \n [in] lPoint：更新的断点集合 \n 返回：更新后的路段对象 \n Ø  void removeConnector(IConnector* pConnector) \n 移除连接段，从场景中移除pLink，但不从文件中删除，保存路网后才会从路网文件中删除 \n 参数： \n [in] pConnector：连接段对象 \n Ø  IConnector* updateConnector(_Connector connector) \n 更新连接段，更新后返回连接段对象 \n 参数： \n [in] connector：连接段数据 \n 返回：更新后的连接段对象 \n Ø  IGuidArrow* createGuidArrow(ILane* pLane, qreal length, qreal distToTerminal, Online::GuideArrowType arrowType) \n 创建导向箭头 \n 参数： \n [in] pLane:车道 \n [in] length:长度，默认单位：像素 \n [in] distToTerminal：到车道终点距离，默认单位：像素 \n [in] arrowType：箭头类型 \n 返回：导向箭头对象 \n 举例： \n //在路段4的最右侧车道上添加直行或右转箭头,导向箭头距离路段起终点不能小于9米 \n\tILink *  pLink  =  gpTessInterface -> netInterface ( ) -> findLink ( 4 ) ; \n\t if   ( pLink )   { \n\t\tILane *  pRightLane  =  pLink -> lanes ( ) . front ( ) ; \n\t\tqreal length  =   m2p ( 4.0 ) ; \n\t\tqreal distToTerminal  =   m2p ( 50 ) ; \n\t\tOnline :: GuideArrowType arrowType  =  Online :: GuideArrowType :: StraightRight ; \n\t\t if   ( pRightLane )   { \nIGuidArrow *  pGuideArrow  =  gpTessInterface -> netInterface ( ) -> createGuidArrow ( pRightLane ,  length ,  distToTerminal ,  arrowType ) ; \n\t\t\t qDebug ( )   <<   "创建箭头成功，箭头所在车道为："   <<  pGuideArrow -> lane ( ) -> id ( )   <<  endl ; \n\t\t } \n } \n \n Ø  void removeGuidArrow(IGuidArrow *pArrow) \n 移除导向箭头 \n 参数： \n [in] pArrow：导向箭头对象 \n Ø  bool removeDispatchPoint(IDispatchPoint* pDispPoint) \n 移除发车点 \n 参数： \n [in] pDispPoint：发车点对象 \n Ø  bool createVehicleType(VehicleType _vt) \n 创建车型，如果创建成功，会将新创建的车辆类型存放到全局数据里供使用 \n 参数： \n [in] vt：车辆类型数据 \n Ø  bool removeVehicleComposition(long vehiCompId) \n 移除车型组成 \n 参数： \n [in] vehiCompId：车型组成ID \n Ø  IDecisionPoint* createDecisionPoint(ILink* pLink, qreal distance, QString name = QString()) \n 创建决策点 \n 参数： \n [in] pLink：决策点所在的路段 \n [in] distance：决策点距离路段起点的距离，默认单位：像素 \n [in] name：决策点的名称 \n 返回：决策点对象 \n 举例： \n //创建决策点 \n\t\tmpDecisionPoint  =  gpTessInterface -> netInterface ( ) -> createDecisionPoint ( pLink3 ,   m2p ( 30 ) ) ; \n \n Ø  IRouting* createDeciRouting(IDecisionPoint *pDeciPoint, QList< ILink*> lILink) \n 创建决策路径 \n 参数： \n [in] pDeciPoint：决策点 \n [in] lILink：决策路径所包含的路段集合 \n 举例： \n //创建路径(左，直，右) \n\t\tIRouting *  decisionRoutingLeft  =  gpTessInterface -> netInterface ( ) -> createDeciRouting ( mpDecisionPoint ,   QList <  ILink * > ( )   <<  pLink3  <<  pLink10  <<  pLink6 ) ; \n\t\tIRouting *  decisionRoutingStraight  =  gpTessInterface -> netInterface ( ) -> createDeciRouting ( mpDecisionPoint ,   QList <  ILink * > ( )   <<  pLink3  <<  pLink10  <<  pLink8 ) ; \n\t\tIRouting *  decisionRoutingRight  =  gpTessInterface -> netInterface ( ) -> createDeciRouting ( mpDecisionPoint ,   QList <  ILink * > ( )   <<  pLink3  <<  pLink10  <<  pLink7 ) ; \n \n Ø  bool removeDeciRouting(IDecisionPoint* pDeciPoint, IRouting* pRouting) \n 删除决策路径 \n 参数： \n [in] pDeciPoint：决策点 \n [in] pRouting：将要删除的路径 \n 举例： \n if   ( gpTessInterface -> netInterface ( ) -> removeDeciRouting ( mpDecisionPoint ,  mpDecisionPoint -> routings ( ) . back ( ) ) )   { \n\t\t\tbPlanNumberFlag2  =   true ; \n\t\t\t qDebug ( )   <<   "删除右转路径成功"   <<  endl ; \n\t\t } \n \n Ø  IDecisionPoint* updateDecipointPoint(_DecisionPoint deciPoint, QList< _RoutingFLowRatio> lFlowRatio = QList< _RoutingFLowRatio>()) \n 更新决策点及其各路径不同时间段流量比 \n 参数： \n [in] deciPoint：决策点数据 \n [in] lFlowRatio：各路径按时间段流量比的数据集合 \n 返回：更新后的决策点 \n 举例： \n //分配左直右流量比 \n\t\t_RoutingFLowRatio _flowRatioLeft ,  _flowRatioStraight ,  _flowRatioRight ; \n\t\t_flowRatioLeft . RoutingFLowRatioID  =   1 ; \n\t\t_flowRatioLeft . routingID  =  decisionRoutingLeft -> id ( ) ; \n\t\t_flowRatioLeft . startDateTime  =   0 ; \n\t\t_flowRatioLeft . endDateTime  =   999999 ; \n\t\t_flowRatioLeft . ratio  =   2.0 ; \n\t\t_flowRatioStraight . RoutingFLowRatioID  =   2 ; \n\t\t_flowRatioStraight . routingID  =  decisionRoutingStraight -> id ( ) ; \n\t\t_flowRatioStraight . startDateTime  =   0 ; \n\t\t_flowRatioStraight . endDateTime  =   999999 ; \n\t\t_flowRatioStraight . ratio  =   3.0 ; \n\t\t_flowRatioRight . RoutingFLowRatioID  =   3 ; \n\t\t_flowRatioRight . routingID  =  decisionRoutingRight -> id ( ) ; \n\t\t_flowRatioRight . startDateTime  =   0 ; \n\t\t_flowRatioRight . endDateTime  =   999999 ; \n\t\t_flowRatioRight . ratio  =   1.0 ; \n\t\t // 决策点数据 \n\t\t_DecisionPoint _decisionPointData ; \n\t\t_decisionPointData . deciPointID  =  mpDecisionPoint -> id ( ) ; \n\t\t_decisionPointData . deciPointName  =  mpDecisionPoint -> name ( ) ; \n\t\tQPointF decisionPointPos ; \n\t\t if   ( mpDecisionPoint -> link ( ) -> getPointByDist ( mpDecisionPoint -> distance ( ) ,  decisionPointPos ) )   { \n\t\t\t_decisionPointData . X  =  decisionPointPos . x ( ) ; \n\t\t\t_decisionPointData . Y  =  decisionPointPos . y ( ) ; \n\t\t\t_decisionPointData . Z  =  mpDecisionPoint -> link ( ) -> z ( ) ; \n\t\t } \n\t\t //更新决策点及其各路径不同时间段流量比 \n\t\tmpDecisionPoint  =  gpTessInterface -> netInterface ( ) -> updateDecipointPoint ( _decisionPointData ,   QList <  _RoutingFLowRatio > ( )   <<  _flowRatioLeft  <<  _flowRatioStraight  <<  _flowRatioRight ) ; \n \n Ø  IVehicleDrivInfoCollector* createVehiCollectorOnLink(ILane* pLane, qreal dist) \n 在路段的车道上创建车辆采集器 \n 参数： \n [in] pLane：车道对象 \n [in] dist：路车道起点距离，默认单位：像素 \n 返回：车辆采集器 \n 举例： \n //在路段9最左侧车道100米处创建车辆采集器 \nILink *  pLink  =  gpTessInterface -> netInterface ( ) -> findLink ( 9 ) ; \n\t if   ( pLink )   { \n\t\tILane *  pLeftLane  =  pLink -> lanes ( ) . back ( ) ; \n\t\tqreal dist  =   m2p ( 100 ) ; \n\t\tIVehicleDrivInfoCollector *  pCollector  =  gpTessInterface -> netInterface ( ) -> createVehiCollectorOnLink ( pLeftLane ,  dist ) ; } \n \n Ø  IVehicleDrivInfoCollector* createVehiCollectorOnConnector(ILaneConnector* pLaneConnector, qreal dist) \n 在连接段的“车道连接”上创建采集器 \n 参数： \n [in] pLaneConnector：“车道连接”对象 \n [in] dist：距“车道连接”起点距离，单位像素 \n Ø  bool removeVehiCollector(IVehicleDrivInfoCollector* pCollector) \n 移除车辆信息采集器 \n 参数： \n [in] pCollector：车辆信息采集器 \n Ø  IVehicleQueueCounter* createVehiQueueCounterOnLink(ILane* pLane, qreal dist) \n 在路段的车道上创建车辆排队计数器 \n 参数： \n [in] pLane：车道对象 \n [in] dist：默认单位：像素 \n 返回：排队计数器对象 \n 举例： \n //在路段9最左侧车道100米处创建排队计数器 \nILink *  pLink  =  gpTessInterface -> netInterface ( ) -> findLink ( 9 ) ; \n if   ( pLink )   { \n\t\tILane *  pLeftLane  =  pLink -> lanes ( ) . back ( ) ; \n\t\tqreal dist  =   m2p ( 100 ) ; \n\t\tIVehicleQueueCounter *  pCounter  =  gpTessInterface -> netInterface ( ) -> createVehiQueueCounterOnLink ( pLeftLane ,  dist ) ; } \n \n Ø  IVehicleQueueCounter* createVehiQueueCounterOnConnector(ILaneConnector* pLaneConnector, qreal dist) \n 在连接段的车道连接上创建车辆排队计数器 \n 参数： \n [in] pLaneConnector：“车道连接”对象 \n [in] dist：距“车道连接”起点距离，默认单位：像素 \n 返回：排队计数器对象 \n Ø  QList< IVehicleTravelDetector*> createVehicleTravelDetector_link2link(ILink* pStartLink, ILink* pEndLink, qreal dist1, qreal dist2) \n 创建行程时间检测器，起点和终点都在路段上 \n 参数： \n [in] dist1：检测器起点距所在路段起始点距离，默认单位：像素 \n [in] dist2：检测器终点距所在路段起始点距离，默认单位：像素 \n 举例： \n //在路段9 50-550米处创建行程检测器 \nILink *  pLink  =  gpTessInterface -> netInterface ( ) -> findLink ( 9 ) ; \n if   ( pLink )   { \nQList <  IVehicleTravelDetector * >  pDetector  =  gpTessInterface -> netInterface ( ) -> createVehicleTravelDetector_link2link ( pLink ,  pLink ,   m2p ( 50 ) ,   m2p ( 550 ) ) ; } \n \n Ø  QList< IVehicleTravelDetector*> createVehicleTravelDetector_link2conn(ILink* pStartLink, ILaneConnector* pEndLaneConnector, qreal dist1, qreal dist2) \n 创建行程时间检测器，起点在路段上，终点都在连接段的“车道连接”上 \n 参数： \n [in] pStartLink：检测器起点所在路段对象 \n [in] pEndLaneConnector：检测器终点所在“车道连接”对象 \n [in] dist1：检测器起点距所在路段起始点距离，默认单位：像素 \n [in] dist2：检测器终点距所在“车道连接”起始点距离，默认单位：像素 \n 返回：行程时间检测器对象 \n Ø  QList< IVehicleTravelDetector*> createVehicleTravelDetector_conn2link(ILaneConnector* pStartLaneConnector, ILink* pEndLink, qreal dist1, qreal dist2) \n 创建行程时间检测器，起点在连接段的“车道连接”上，终点在路段上 \n 参数： \n [in] pStartLaneConnector：检测器起点所在“车道连接”对象 \n [in] pEndLink：检测器终点所在路段对象 \n [in] dist1：检测器起点距所在"车道连接”起始点距离，默认单位：像素 \n [in] dist2：检测器终点距所在路段起始点距离，默认单位：像素 \n 返回：行程时间检测器对象 \n Ø  QList< IVehicleTravelDetector*> createVehicleTravelDetector_conn2conn(ILaneConnector* pStartLaneConnector, ILaneConnector* pEndLaneConnector, qreal dist1, qreal dist2) \n 创建行程时间检测器，起点和终点都在连接段的“车道连接”上 \n 参数： \n [in] pStartLaneConnector：检测器起点所在“车道连接”对象 \n [in] pEndLaneConnector：检测器终点所在“车道连接”对象 \n [in] dist1：检测器起点距所在"车道连接”起始点距离，默认单位：像素 \n [in] dist2：检测器终点距所在“车道连接”起始点距离，默认单位：像素 \n 返回：行程时间检测器对象 \n Ø  ISignalGroup* createSignalGroup(QString name, int period, long fromTime, long toTime) \n 创建信号灯组 \n 参数： \n [in] name：灯组名称 \n [in] period：周期，默认单位：秒 \n [in] fromTime：起始时间，默认单位：秒 \n [in] toTime:结束时间,默认单位：秒 \n 返回：信号灯组对象 \n 举例： \n //创建信号灯组 \n\tISignalGroup *  pSignalGroup  =  gpTessInterface -> netInterface ( ) -> createSignalGroup ( QObject :: tr ( "信号灯组1" ) ,   60 ,   1 ,   3600 ) ; \n \n Ø  ISignalPhase* createSignalPhase(ISignalGroup* pGroup, QString name, QList< Online::ColorInterval> lColor) \n 创建相位 \n 参数： \n [in] pGroup：信号灯组 \n [in] name：相位名称 \n [in] lColor：相位灯色序列，新建相位排在已有相位序列的最后 \n 返回：信号相位对象 \n 举例： \n //创建相位,40秒绿灯，黄灯3秒，全红3秒 \n\tOnline :: ColorInterval  green ( "绿" ,   40 ) ,   yellow ( "黄" ,   3 ) ,   red ( "红" ,   3 ) ; \n\tISignalPhase *  pSignalPhase  =  gpTessInterface -> netInterface ( ) -> createSignalPhase ( pSignalGroup ,   QObject :: tr ( "信号灯组1相位1" ) ,   QList <  Online :: ColorInterval > ( )   <<  green  <<  yellow  <<  red ) ; \n \n Ø  void removeSignalPhase(ISignalGroup* pGroup, long phaseId) \n 移除已有相位，相位移除后，原相位序列自动重排, \n 参数： \n [in] pGroup：信号灯组对象 \n [in] phaseId：将要移除的相位ID \n Ø  ISignalLamp* createSignalLamp(ISignalPhase* pPhase, QString name, long laneId, long toLaneId, qreal distance) \n 创建信号灯 \n 参数： \n [in] pPhase：相位对象 \n [in] name：信号灯名称 \n [in] laneId：信号灯所在车道ID，或所在“车道连接”上游车道ID \n [in] toLaneId：信号灯所在“车道连接”下游车道ID \n [in] distance：信号灯距车道或“车道连接”起点距离，默认单位：像素 \n 返回：信号灯对象 \n 举例： \n //创建信号灯 \n\t for   ( int  i  =   0 ,  size  =  lConnLaneObjs . size ( ) ;  i  <  size ;   ++ i )   { \n\t\tISignalLamp *  pSignalLamp  =  gpTessInterface -> netInterface ( ) -> createSignalLamp ( pSignalPhase ,   QObject :: tr ( "信号灯%1" ) . arg ( i  +   1 ) ,  lConnLaneObjs [ i ] -> fromLaneObject ( ) -> id ( ) ,   lConnLaneObjs [ i ] -> toLaneObject ( ) -> id ( ) ,   m2p ( 2.0 ) ) ; \n\t } \n \n Ø  IBusLine* createBusLine(QList< ILink*> lLink) \n 创建公交线路，lLink列表中相邻两路段可以是路网上相邻两路段，也可以不相邻，如果不相邻，TESSNG会在它们之间创建一条最短路径。如果lLink列表中相邻路段在路网上不相邻并且二者之间不存在最短路径，则相邻的第二条路段及后续路段无效。 \n 参数： \n [in] lLink，公交线路经过的路段对象集 \n 返回：公交线路对象 \n 举例： \n //创建公交线路 \nIBusLine *  pBusLine  =  gpTessInterface -> netInterface ( ) -> createBusLine ( QList <  ILink * > ( )   <<  pLink10  <<  pLink11 ) ; \n if   ( pBusLine )   { \n\t\t\tpBusLine -> setDesirSpeed ( m2p ( 60 ) ) ; \n } \n \n Ø  bool removeBusLine(IBusLine* pBusLine) \n 移除公交线路 \n 参数： \n [in] pBusLine：将要移除的公交线路对象 \n Ø  IBusStation* createBusStation(ILane* pLane, qreal length, qreal dist, QString name = QString()) \n 创建公交站点 \n 参数： \n [in] pLane：车道 \n [in] length:站点长度(单位像素) \n [in] dist:站点起始点距车道起点距离(单位像素) \n 返回：公交站点对象 \n 举例： \n //创建公交线路 \nIBusLine *  pBusLine  =  gpTessInterface -> netInterface ( ) -> createBusLine ( QList <  ILink * > ( )   <<  pLink10  <<  pLink11 ) ; \n if   ( pBusLine )   { \n\t\t\tpBusLine -> setDesirSpeed ( m2p ( 60 ) ) ; \n\t\t\tIBusStation *  pBusStation1  =  gpTessInterface -> netInterface ( ) -> createBusStation ( pLink10 -> lanes ( ) [ 0 ] ,   m2p ( 30 ) ,   m2p ( 50 ) ,   "公交站1" ) ; \n\t\t\tIBusStation *  pBusStation2  =  gpTessInterface -> netInterface ( ) -> createBusStation ( pLink11 -> lanes ( ) [ 0 ] ,   m2p ( 15 ) ,   m2p ( 50 ) ,   "公交站2" ) ; \n } \n \n Ø  bool removeBusStation(IBusStation* pStation) \n 移除公交站点 \n 参数： \n [in] pStation：公交站点对象 \n Ø  bool addBusStationToLine(IBusLine* pBusLine, IBusStation* pStation) \n 将公交站点关联到公交线路上 \n 参数： \n [in] pBusLine：公交线路 \n [in] pStation：公交站点 \n 举例： \n //创建公交线路 \n if   ( pBusStation1  &&  gpTessInterface -> netInterface ( ) -> addBusStationToLine ( pBusLine ,  pBusStation1 ) )   { \n\t\t\t\tpBusStation1 -> setType ( 2 ) ; \n\t\t\t\t qDebug ( )   <<   "公交站1已关联到公交线路"   <<  endl ; \n\t\t\t } \n if   ( pBusStation2  &&  gpTessInterface -> netInterface ( ) -> addBusStationToLine ( pBusLine ,  pBusStation2 ) )   { \n\t\t\t\t qDebug ( )   <<   "公交站2已关联到公交线路"   <<  endl ; \n\t\t\t } \n \n Ø  bool removeBusStationFromLine(IBusLine* pBusLine, IBusStation* pStation) \n 将公交站点与公交线路的关联关系解除 \n 参数： \n [in] pBusLine：公交线路 \n [in] pStation：公交站点 \n Ø  bool initSequence(QString schemaName = QString()) \n 初始化数据库序列，对保存路网的专业数据库序列进行初始化，目前支持PostgreSql \n 参数： \n [in] schemaName：数据库的schema名称 \n Ø  void addCustomerItem(CustomerGraphicsObject* pCustObj) \n 将客户路网元素添加到场景 \n 参数： \n [in] pCustObj：客户定义的路网元素 \n Ø  void removeCustomerItem(CustomerGraphicsObject* pCustObj) \n 从场景移除客户路网元素 \n 参数： \n [in] pCustObj：将要移除的路网元素 \n Ø  void buildNetGrid(qreal width = 25) \n 路网的网格化 \n 参数： \n [in] width：单元格宽度，默认单位：米 \n Ø  QList< ISection*> findSectionOn1Cell(QPointF point) \n 根据point查询所在单元格所有经过的ISection \n 参数： \n [in] point：路网场景中的点 \n 返回：ISection列表 \n Ø  QList< ISection*> findSectionOn4Cell(QPointF point) \n 根据point查询最近4个单元格所有经过的ISection \n 参数： \n [in] point：路网场景中的一个点 \n 返回：ISection列表 \n Ø  QList< ISection*> findSectionOn9Cell(QPointF point) \n 根据point查询最近9个单元格所有经过的ISection \n 参数： \n [in] point：路网场景中的一个点 \n 返回：ISection列表 \n Ø  QList< Online::Location> locateOnSections(QPointF point, QList< ISection*> lSection, qreal referDistance = 0) \n 根据point对lSection列表中每一个Section所有LaneObject求最短距离，返回Location列表，列表按最短距离排序，从小到大 \n 参数： \n [in] point：路网场景中的一个点 \n [in] lSection：section列表 \n [in] referDistance：LaneObject上与point最近的点到LaneObject起点距离，默认单位：像素，是大约数，只为提高计算效率，默认值为0 \n 返回：Online::Location列表 \n 举例： \n //根据point对lSection列表中每一个Section所有LaneObject求最短距离 \nQList <  ISection * >  lSections  =  gpTessInterface -> netInterface ( ) -> sections ( ) ; \n\tQPointF  point ( 0 ,   0 ) ; \n\tQList <  Online :: Location >  locations  =  gpTessInterface -> netInterface ( ) -> locateOnSections ( point ,  lSections ) ; \n\t for   ( Online :: Location &  location  :  locations )   { \n\t\t qDebug ( )   <<   "相关车道或“车道连接”为："   <<  location . pLaneObject -> id ( ) ; \n\t qDebug ( )   <<   "pLaneObject上的最近点为：("   <<  location . point . x ( )   <<   ","   <<  location . point . y ( )   <<   ")" ; \n\t\t qDebug ( )   <<   "到最近点的最短距离为："   <<  location . leastDist ; \n\t\t qDebug ( )   <<   "最近点到起点的里程："   <<  location . distToStart ; \n\t\t qDebug ( )   <<   "最近点所在分段序号："   <<  location . segmIndex  <<  endl ; \n\t } \n \n Ø  QList< Online::Location> locateOnCrid(QPointF point, int cellCount = 1) \n point周围若干个单元格里查询LaneObject \n 参数： \n [in] point：路网场景中的一个点 \n [in] cellCount：单元格数，小于1时默认为1，大于1小于4时默认为4，大于4时默认为9 \n 返回：Online::Location列表 \n Ø  QRectF boundingRect() \n 路网外围Rect，用以获取路网边界 \n Ø  IRoadWorkZone* createRoadWorkZone(Online::DynaRoadWorkZoneParam param) \n 创建施工区 \n 参数： \n [in] param：动态施工区信息，数据类型在文件 Plugin/_datastruct.h中定义 \n 举例： \n Online :: DynaRoadWorkZoneParam workZone ; \n //道路ID \nworkZone . roadId  =   9 ; \n //施工区名称 \nworkZone . name  =   "施工区，限速60" ; \n //位置，距路段或连接段起点距离，单位米 \nworkZone . location  =   m2p ( 200 ) ; \n //施工区长度，单位米 \nworkZone . length  =   m2p ( 200 ) ; \n //车辆经过施工区的最大车速，单位千米/小时 \nworkZone . limitSpeed  =   m2p ( 60 ) ; \n //施工区施工时长，单位秒 \nworkZone . duration  =   50 ; \n //施工区起始车道 \nworkZone . mlFromLaneNumber . append ( 2 ) ; \n //创建施工区 \nIRoadWorkZone *  pZone  =  gpTessInterface -> netInterface ( ) -> createRoadWorkZone ( workZone ) ; \n \n Ø  void removeRoadWorkZone(IRoadWorkZone* pIRoadWorkZone) \n 移除施工区 \n 参数： \n Ø [in] pIRoadWorkZone：将要移除的施工区对象 QList< IRoadWorkZone*> roadWorkZones() \n Ø 获取所有施工区 IRoadWorkZone* findRoadWorkZone(long roadWorkZoneId) \n 根据ID查询施工区 \n 参数： \n [in] roadWorkZoneId：施工区ID \n 返回：施工区对象 \n Ø  IAccidentZone* createAccidentZone(Online::DynaAccidentZoneParam param) \n 创建事故区 \n 参数： \n [in] param：动态事故区信息，数据类型在文件 Plugin/_datastruct.h中定义 \n 举例： \n Online :: DynaAccidentZoneParam accidentZone ; \n\t //道路ID \n\taccidentZone . roadId  =   9 ; \n\t //事故区名称 \n\taccidentZone . name  =   "最左侧车道发生事故" ; \n\t //位置，距路段或连接段起点距离，单位米 \n\taccidentZone . location  =   m2p ( 200 ) ; \n\t //事故区长度，单位米 \n\taccidentZone . length  =   m2p ( 50 ) ; \n\t //事故区起始车道序号列表 \n\taccidentZone . mlFromLaneNumber . append ( 2 ) ; \n\t //事故等级 \n\taccidentZone . level  =   1 ; \n\t //创建事故区 \n\tIAccidentZone *  pZone  =  gpTessInterface -> netInterface ( ) -> createAccidentZone ( accidentZone ) ; \n \n Ø  void removeAccidentZone(IAccidentZone* pIAccidentZone) \n 移除事故区 \n Ø  QList< IAccidentZone*> accidentZones() \n 获取所有事故区 \n Ø  IAccidentZone* findAccidentZone(long accidentZoneId) \n 根据ID查询事故区 \n 参数： \n [in] accidentZoneId：事故区ID \n 4.2 SimuInterface \n 接口文件： simuinterface.h \n SimuInterface是TessInterface的子接口， 通过此接口可以启动、暂停、停止仿真，可以设置仿真精度，获取仿真过程车辆对象、车辆状态（包括位置信息），获取几种检测器检测的样本数据和集计数据，等等。 \n 下面对SimuInterface接口方法作详细解释。 \n Ø  bool byCpuTime() \n 仿真时间是否由现实时间确定。 \n 一个计算周期存在两种时间，一种是现实经历的时间，另一种是由仿真精度决定的仿真时间，如果仿真精度为每秒20次，仿真一次相当于仿真了50毫秒。默认情况下，一个计算周期的仿真时间是由仿真精度决定的。在线仿真时如果算力不够，按仿真精度确定的仿真时间会与现实时间存在时差。 \n Ø  void setByCpuTime(bool bByCpuTime) \n 设置是否由现实时间确定仿真时间，如果设为true，每个仿真周期现实经历的时间作为仿真时间，这样仿真时间与现实时间相吻合。 \n 参数： \n [in] bByCpuTime：是否由现实时间确定仿真时间 \n Ø  void startSimu() \n 启动仿真 \n 举例： \n /*\n\t\'\'\'1. 启动、暂停、恢复、停止仿真\'\'\'\n\t*/ \n\t if   ( planNumber  ==   float ( 1.1 ) )   { \n\t\tgpTessInterface -> simuInterface ( ) -> startSimu ( ) ; \n\t } \n\t if   ( planNumber  ==   float ( 1.2 ) )   { \n\t\tgpTessInterface -> simuInterface ( ) -> pauseSimu ( ) ; \n\t } \n\t if   ( planNumber  ==   float ( 1.3 ) )   { \n\t\tgpTessInterface -> simuInterface ( ) -> stopSimu ( ) ; \n\t } \n\t if   ( planNumber  ==   float ( 1.4 ) )   { \n\t\tgpTessInterface -> simuInterface ( ) -> pauseSimuOrNot ( ) ; \n\t } \n\n \n Ø  void pauseSimu() \n 暂停仿真 \n Ø  void stopSimu() \n 停止仿真运行 \n Ø  void pauseSimuOrNot() \n 暂停或恢复仿真。如果当前处于仿真运行状态，此方法暂停仿真，如果当前处于暂停状态，此方法继续仿真 \n Ø  bool isRunning() \n 仿真是否在进行 \n Ø  bool isPausing() \n 仿真是否处于暂停状态 \n Ø  bool isRecordTrace() \n 仿真是否记录车辆轨迹 \n Ø  void setIsRecordTrace(bool bRecord) \n 设置是否记录车辆轨迹 \n 参数： \n [in] bRecord：是否记录车辆轨迹 \n Ø  long simuIntervalScheming() \n 预期仿真时长，即仿真设置窗口设置的仿真时间 \n Ø  void setSimuIntervalScheming(long interval) \n 设置预期仿真时长 \n 参数： \n [in] interval：预期仿真时长，默认单位：秒 \n 举例： \n gpTessInterface -> simuInterface ( ) -> setSimuIntervalScheming ( 30 ) ;  \n \n Ø  int simuAccuracy() \n 获取仿真精度 \n Ø  void setSimuAccuracy(int accuracy) \n 设置仿真精度，即每秒计算次数 \n 参数： \n [in] accuracy：每秒计算次数 \n 举例： \n   gpTessInterface -> simuInterface ( ) -> setSimuAccuracy ( 10 ) ;  \n \n Ø  int acceMultiples() \n 获取加速倍数 \n Ø  void setAcceMultiples(int multiples) \n 设置加速倍数 \n 参数： \n [in] multiples 加速倍数 \n 举例： \n   gpTessInterface -> simuInterface ( ) -> setAcceMultiples ( 10 ) ;  \n \n Ø  void setThreadCount(int count) \n 设置工作线程数 \n Ø  long batchNumber() \n 当前仿真批次 \n Ø  qreal batchIntervalReally() \n 当前批次实际时间 \n Ø  qint64 startMSecsSinceEpoch() \n 获取仿真开始的现实时间 \n Ø  qint64 stopMSecsSinceEpoch() \n 仿真结束的现实时间 \n Ø  long simuTimeIntervalWithAcceMutiples() \n 获取当前已仿真时间 \n Ø  long vehiCountTotal() \n 车辆总数，包括已创建尚未进入路网的车辆、正在运行的车辆、已驶出路网的车辆 \n Ø  long vehiCountRunning() \n 正在运行车辆数 \n Ø  IVehicle* getVehicle(long vehiId) \n 根据车辆ID获取车辆对象 \n 参数： \n [in] vehiId：车辆ID \n 举例： \n //2.3 根据车辆id获取具体的车辆信息,以id为300001的车辆为例 \n\t if   ( planNumber  ==   float ( 2.3 ) )   { \n\t\tIVehicle *  vehi300001  =  gpTessInterface -> simuInterface ( ) -> getVehicle ( 300001 ) ; \n\t\t if   ( vehi300001 )   { \n\t\t\tQString runInfoOfVehi  =   QStringLiteral ( "%0车辆信息为:\\n" ) . arg ( vehi300001 -> id ( ) ) ; \n\t\t\trunInfoOfVehi  +=   QStringLiteral ( "所在路段ID:%0\\n" ) . arg ( vehi300001 -> roadId ( ) ) ; \n\t\t\trunInfoOfVehi  +=   QStringLiteral ( "所在车道序号:%0\\n" ) . arg ( vehi300001 -> lane ( ) -> number ( )   +   1 ) ; \n\t\t\trunInfoOfVehi  +=   QStringLiteral ( "当前车速:%0\\n" ) . arg ( vehi300001 -> currSpeed ( ) ) ; \n\t\t\trunInfoOfVehi  +=   QStringLiteral ( "当前加速度:%0\\n" ) . arg ( vehi300001 -> acce ( ) ) ; \n\t\t\trunInfoOfVehi  +=   QStringLiteral ( "当前角度:%0\\n" ) . arg ( vehi300001 -> angle ( ) ) ; \n\t\t\trunInfoOfVehi  +=   QStringLiteral ( "当前位置:(%1,%2)\\n" ) . arg ( vehi300001 -> pos ( ) . x ( ) ) . arg ( vehi300001 -> pos ( ) . y ( ) ) ; \n\t\t\trunInfoOfVehi  +=   QStringLiteral ( "其它：......\\n" ) ; \n\t\t\t emit ( showDynaInfo ( runInfoOfVehi ) ) ; \n\t\t } \n\t } \n \n Ø  QList< IVehicle*> allVehiStarted() \n 所有正在运行车辆 \n 举例： \n if   ( planNumber  ==   float ( 2.1 ) )   { \n\t\t //所有在运行车辆 \n\t\tQList <  IVehicle * >  lAllVehi  =  gpTessInterface -> simuInterface ( ) -> allVehiStarted ( ) ; \n\t\tQString runInfo  =   QStringLiteral ( "路网在途车辆共%0辆，ID为:\\n" ) . arg ( lAllVehi . size ( ) ) ; \n\t\t for   ( IVehicle * &  vehi  :  lAllVehi )   { \n\t\t\trunInfo  +=   QStringLiteral ( "车辆%0,当前坐标(%1,%2)\\n" ) . arg ( vehi -> id ( ) ) . arg ( vehi -> pos ( ) . x ( ) ) . arg ( vehi -> pos ( ) . y ( ) ) ; \n\t\t } \n\t\t emit ( showDynaInfo ( runInfo ) ) ; \n\t } \n \n Ø  QList< IVehicle*> allVehicle() \n 所有车辆 \n Ø  QList< Online::VehicleStatus> getVehisStatus() \n 获取所有正在运行的车辆状态，包括轨迹 \n 返回：车辆状态列表，包括轨迹。数据结构“Online::VehicleStatus”在文件 Plugin/_datastruct.h中定义 \n 举例： \n QList <  Online :: VehicleStatus >  lVehiStatus  =   gpTessInterface -> simuInterface ( ) -> getVehisStatus   ( ) ;  \n \n Ø  QList< Online::VehiclePosition> getVehiTrace(long vehiId) \n 获取指定车辆运行轨迹 \n 参数： \n [in] vehiId：车辆ID \n 返回：车辆运行轨迹。数据结构Online::VehiclePosition在文件Plugin/ _datastruct.h中定义 \n 举例： \n QList <  Online :: VehiclePosition >   lVp  =  gpTessInterface -> simuInterface ( ) -> getVehiTrace   ( 100 ) ;   \n \n Ø  QList< Online::SignalPhaseColor> getSignalPhasesColor() \n 获取当前所有信号灯组相位颜色 \n 返回:当前相位颜色列表，包括各相位当前颜色设置的时间和已持续时间，数据结构Online::SignalPhaseColor在文件Plugin/ _datastruct.h中定义 \n 为了实现动态信号控制，可以在插件接口实现的方法bool CustomerSimulator::calcDynaSignalContralParameters()中通过getSignalPhasesColor方法获取当前信号灯相位颜色及持续时间，再根据当前交通状态重新计算信号控制参数，并返回计算后的信号控制参数。 \n Ø  QList< Online::VehiInfoCollected> getVehisInfoCollected() \n 获取当前完成穿越车辆数据采集器的所有车辆信息 \n 返回：采集的车辆信息列表。数据结构Online::VehiInfoCollected在文件Plugin/_datastruct.h中定义。 \n 举例： \n  QList <  Online :: VehiInfoCollected >  lVehiInfo  =   gpTessInterface -> simuInterface ( ) -> getVehisInfoCollected ( ) ;  \n \n Ø  QList< Online::VehiInfoAggregated> getVehisInfoAggregated() \n 获取最近集计时间段内采集器采集的所有车辆集计信息 \n 返回：采集器集计数据列表。数据结构Online:: VehiInfoAggregated在文件Plugin/_datastruct.h中定义； \n 举例： \n QList <  Online :: VehiInfoAggregated >  lVInfo  =   gpTessInterface -> simuInterface ( ) -> getVehisInfoAggregated ( ) ; \n \n Ø  QList< Online::VehiQueueCounted> getVehisQueueCounted() \n 获取当前排队计数器计数的车辆排队信息 \n 返回：车辆排队信息。数据结构Online::VehiQueueCounted在文件Plugin/_datastruct.h中定义； \n 举例： \n QList <  Online :: VehiQueueCounted >  lVehiQueue  =   gpTessInterface -> simuInterface ( ) -> getVehisQueueCounted ( ) ;  \n \n Ø  QList< Online::VehiQueueAggregated> getVehisQueueAggregated() \n 获取最近集计时间段内排队计数器集计数据 \n 参数： \n 返回：排队计数器集计数据列表 \n 举例： \n QList <  Online :: VehiQueueAggregated >  lVqa  =   gpTessInterface -> simuInterface ( ) -> getVehisQueueAggregated ( ) ;   \n \n Ø  QList< Online::VehiTravelDetected > getVehisTravelDetected() \n ​    获取当前行程时间检测器完成的行程时间检测信息 \n 参数： \n 返回：行程时间检测器数据 \n 举例： \n QList <  Online :: VehiTravelDetected >  lVTravel  =   gpTessInterface -> simuInterface ( ) -> getVehisTravelDetected ( ) ;   \n \n Ø  QList< Online::VehiInfoAggregated> getVehisInfoAggregated() \n 获取最近集计时间段内行程时间检测器集计数据 \n 返回：行程时间集计数据列表 \n 举例： \n  QList <  Online :: VehiTravelAggregated >  lVT  =   gpTessInterface -> simuInterface ( ) -> getVehisTravelAggregated ( ) ;  \n \n Ø  IVehicle* createGVehicle(Online::DynaVehiParam dynaVehi) \n 动态创建车辆 \n 参数 **😗* \n [in]: dynaVehi：动态车辆信息，数据类型在文件 Plugin/_datastruct.h中定义举例： \n Online :: DynaVehiParam dvpLane0 ,  dvpLane1 ,  dvpLane2 ; \n\t\t\t // 在指定车道和位置动态加载车辆(示例：在0,1,2车道不同位置动态加载车辆) \n\t\t\tdvpLane0 . vehiTypeCode  =   1 ; \n\t\t\tdvpLane1 . vehiTypeCode  =   2 ; \n\t\t\tdvpLane2 . vehiTypeCode  =   3 ; \n\t\t\tdvpLane0 . roadId  =  pLink3 -> id ( ) ; \n\t\t\tdvpLane1 . roadId  =  pLink3 -> id ( ) ; \n\t\t\tdvpLane2 . roadId  =  pLink3 -> id ( ) ; \n\t\t\tdvpLane0 . laneNumber  =   0 ; \n\t\t\tdvpLane1 . laneNumber  =   1 ; \n\t\t\tdvpLane2 . laneNumber  =   2 ; \n\t\t\tdvpLane0 . dist  =   m2p ( 50 ) ; \n\t\t\tdvpLane1 . dist  =   m2p ( 100 ) ; \n\t\t\tdvpLane2 . dist  =   m2p ( 50 ) ; \n\t\t\tdvpLane0 . speed  =   20 ; \n\t\t\tdvpLane1 . speed  =   30 ; \n\t\t\tdvpLane2 . speed  =   40 ; \n\t\t\tdvpLane0 . color  =   "#FF0000" ; \n\t\t\tdvpLane1 . color  =   "#008000" ; \n\t\t\tdvpLane2 . color  =   "#0000FF" ; \n\t\t\t auto  vehi_lane0  =  gpTessInterface -> simuInterface ( ) -> createGVehicle ( dvpLane0 ) ; \n\t\t\t auto  vehi_lane1  =  gpTessInterface -> simuInterface ( ) -> createGVehicle ( dvpLane1 ) ; \n\t\t\t auto  vehi_lane2  =  gpTessInterface -> simuInterface ( ) -> createGVehicle ( dvpLane2 ) ; \n\n \n Ø  IVehicle* createBus(IBusLine* pBusLine, qreal startSimuDateTime) \n 动态创建公交车 \n 参数： \n [in] pBusLine：公交线路 \n [in] startSimuDateTime：发车时间，单位毫秒 \n 举例： \n // 动态创建公交车   \nIVehicle *  pBus  =   gpTessInterface -> simuInterface ( ) -> createBus ( pBusLine ,   10   *   1000 ) ; \n \n Ø  QString catchSnapshotAsString() \n 创建快照，需要分布式组件支持 \n Ø  bool loadSnapshotFromString(QString data) \n 加载快照，需要分布式组件支持 \n 参数： \n [in] data：快照数据 \n Ø  void stopVehicleDriving(IVehicle *pVehicle) \n 停止指定车辆的仿真运行，车辆被移出路网 \n 参数： \n [in] pVehicle：车辆对象 \n Ø  QList< IVehicle*> vehisInLink(long linkId) \n 指定ID路段上的车辆 \n 参数 \n [in] linkId：路段ID \n 返回：车辆列表 \n 举例： \n //2.2 根据路段|车道获取车辆list,以L5路段，lane20车道为例。 \n\t if   ( planNumber  ==   float ( 2.2 ) )   { \n\t\tQList <  IVehicle * >  lVehiOnLink5  =  gpTessInterface -> simuInterface ( ) -> vehisInLink ( 5 ) ; \n\t\tQString runInfoOfLinkAndLane  =   QStringLiteral ( "L5路段车辆共%0辆，ID为:\\n" ) . arg ( lVehiOnLink5 . size ( ) ) ; \n\t\t for   ( IVehicle * &  vehi  :  lVehiOnLink5 )   { \n\t\t\trunInfoOfLinkAndLane  +=   QStringLiteral ( "车辆%0,当前坐标(%1,%2)\\n" ) . arg ( vehi -> id ( ) ) . arg ( vehi -> pos ( ) . x ( ) ) . arg ( vehi -> pos ( ) . y ( ) ) ; \n\t\t } \n\t\tQList <  IVehicle * >  lVehiOnLane20  =  gpTessInterface -> simuInterface ( ) -> vehisInLane ( 20 ) ; \n\t\trunInfoOfLinkAndLane  +=   QStringLiteral ( "Lane20车道车辆共%0辆，ID为:\\n" ) . arg ( lVehiOnLane20 . size ( ) ) ; \n\t\t for   ( IVehicle * &  vehi  :  lVehiOnLane20 )   { \n\t\t\trunInfoOfLinkAndLane  +=   QStringLiteral ( "车辆%0,当前坐标(%1,%2)\\n" ) . arg ( vehi -> id ( ) ) . arg ( vehi -> pos ( ) . x ( ) ) . arg ( vehi -> pos ( ) . y ( ) ) ; \n\t\t } \n\t\t emit ( showDynaInfo ( runInfoOfLinkAndLane ) ) ; \n\t } \n \n Ø  QList< IVehicle*> vehisInLane(long laneId) \n 指定ID车道上的车辆 \n 参数： \n [in] laneId：车道ID \n 返回：车辆列表 \n Ø  QList< IVehicle*> vehisInConnector(long connectorId) \n 指定ID连接段上的车辆 \n 参数： \n [in] connectorId：连接段ID \n 返回：车辆列表 \n Ø  QList< IVehicle*> vehisInLaneConnector(long connectorId, long fromLaneId, long toLaneId) \n 指定连接段ID及上游车道ID和下游车道ID相关“车道连接”上的车辆 \n 参数： \n [in] connectorId: 连接段ID \n [in] fromLaneId：上游车道ID \n [in] toLaneId：下游车道ID \n 返回：车辆列表 \n 4.3 GuiInterface \n 接口文件：guiinterface.h \n GuiInterface是TessInterface的子接口， 通过此接口可以访问控制TESSNG主窗体，在主窗体上创建菜单、自定义窗体等。 \n Ø  QMainWindow *mainWindow() \n TESSNG主窗体 \n 1.4   TessPlugin \n TessPlugin是用户开发的插件顶级接口，下面有三个子接口：CustomerNet、CustomerSimulator、CustomerGui。TESS NG通过这三个子接口分别在路网、仿真过程、窗体这三个方面与用户插件进行交互。 \n 虽然用户可以通过接口TessInterface下的三个子接口仿真控制TESS NG的路网、仿真过程及窗体，但用户只能调用接口方法，不能深入接口方法内部改变运行逻辑。通过实现接口TessPlugin子接口的方法，用户可以在TESS NG的方法内部施加影响，改变运行逻辑。 \n TessPlugin下的子接口CustomerNet、CustomerSimulator可以让用户较多地参于加载路网及仿真过程，改变TESSNG内部运行逻辑。比如，通过实现CustomerNet、CustomerSimulator接口方法可以让用户加载路网后进行必要的处理，点击仿真按钮后根据需要确定是否继续仿真或者放弃，还可以在仿真过程对部分或全部车辆的速度施加影响，主动干预车辆的自由变道，等等。 \n 插件的三个子接口CustomerNet、CustomerSimulator、CustomerGui的所有方法都有默认实现，用户可以根据需要实现其中部分方法或全部方法，这些方法都由TESSNG在加载并初化插件、打开路网前后、仿真前、仿真过程中、仿真结束后进行调用，正是通过TESS NG对这些接口方法的调用达到控制或影响TESS NG运行的目的。 \n 由于插件接口方法调用的场景、目的都不一样，为了统一对插件接口方法理解，很多方法采用如下结构形式： \n virtual   bool   method ( type  & outParam )   { return   false ; } \n \n TESS NG在调用这些方法时作以下理解：如果返加值为false，视为用户没有反应，忽略。如果返回值为true，表明用户有反应，这时再视参数outParam值进行处理。举范例中的一个例子，曹安路上的车辆排成方正，飞机后的车辆速度重新设置，保持与飞机相同的速度。CustomerSimulator的子类MySimulator实现了reSetSpeed方法如下： \n bool   MySimulator :: reSetSpeed ( IVehicle  * pIVehicle ,  qreal  & inOutSpeed )   { \n\n    long  tmpId  =  pIVehicle -> id ( )   %   100000 ; \n\n   QString roadName  =  pIVehicle -> roadName ( ) ; \n\n    if   ( roadName  ==   QString :: fromLocal8Bit ( "曹安路" ) )   { \n\n        if   ( tmpId  ==   1 )   { \n\n            mrSpeedOfPlane  =  pIVehicle -> currSpeed ( ) ; \n\n        } \n\n        else   if   ( mrSpeedOfPlane  >=   0 )   { \n\n            inOutSpeed  =  mrSpeedOfPlane ; \n\n             * * return   true ; * * \n\n        } \n\n    } \n\n    * * return   false ; * * \n\n } \n \n TESS NG在计算车辆的速度后会调用插件的reSetSpeed方法，如果该方法返回true，视插件对此方法作出响应，这时再用outSpeed值取代原先计算的车速。TESS NG调用插件reSetSpeed方法的过程如下： \n if   ( gpTessPlugin  &&  gpTessPlugin -> customerSimulator ( ) ) { \n\n   qreal outSpeed  =  mrCurrSpeed ; \n\n    if   ( gpTessPlugin -> customerSimulator ( ) -> reSetSpeed ( mpGVehicle ,  outSpeed ) ) { \n\n       mrCurrSpeed  =  outSpeed ; \n\n    } \n\n } \n \n 下面对CustomerNet、CustomerSimulator两个子接口进行详解 \n 1.4.1 CustomerNet \n 接口文件：Plugin/ customernet.h \n CustomerNet是TessPlugin子接口，用户实现这个接口，TESSNG在加载路网前后会调用用户实现的接口方法。范例在加载临时路网后创建路段、连接段和发车点。TESSNG在绘制部分路网元素时也会调用CustomerNet实现类相关方法。范例通过实现方法labelNameAndFont让部分路段和连接段用路段名（默认为ID）绘制标签。 \n 下面对NetInterface接口方法作详细解释。 \n Ø  bool netFileSuffix(QString &suffix) \n 路网文件后缀，由用户通过参数suffix设置 \n 参数： \n [out] suffix：路网文件后缀名 \n Ø  QMap<QString, QString> customerTableDDL() \n 添加用户设计的表 \n 返回：用户数据库的表定义map，key为表名，value为表的定义 \n Ø  void insertCustomerData() \n 插入用户插件创建的表数据 \n Ø  void deleteCustomerData() \n 删除用户插件创建的表数据 \n Ø  void beforeLoadNet() \n 打开路网前调用，用户可以通过此方法在加载路网前作必要的初始化准备工作 \n Ø  void afterLoadNet() \n 加载路网后调用。 \n 举例： \n 范例加载路网后读路段数，如果路段数为 0 创建路段、连接段和发车点，创建完成后启动仿真。\n void   MyNet :: afterLoadNet ( )   { \n\t //读路段数 \n\t if   ( gpTessInterface -> netInterface ( ) -> linkCount ( )   >   0 )   { \n\t\t return ; \n\t } \n\t //创建路网 \n\t createNet ( ) ; \n\t //启动仿真 \n\tgpTessInterface -> simuInterface ( ) -> startSimu ( ) ; \n } \n \n Ø  bool removeItemFromScene(CustomerGraphicsObject *pItem) \n 从场景中移除插件创建的对象 \n 参数： \n [in] pItem：将表移除的路网对象，由二次开发创建 \n Ø  bool linkType(QList< QString> &lType) \n 路段类型 \n 参数： \n [out] lType：用户定义的路段类型列表 \n Ø  bool laneType(QList< QString> &lType) \n 车道类型 \n 参数： \n [out] lType：用户定义的车道类型列表 \n Ø  bool linkBuildGLanes(ILink *pILink) \n 创建车道 \n 参数： \n [in] pILink：路段对象 \n 返回：如果返回true，表示用户已创建了车道，TESSNG不再创建 \n Ø  bool isPermitForCustDraw() \n Ø 默认为true，是否允许调用客户绘制，默认为true。本方法的目的是在python环境减少不必要的对python代码调用，消除对运行效率的负面影响，在C++环境可以不考虑实现此方法。 bool linkBrushColor(long linkId, QColor& color) \n 路段笔刷颜色 \n 参数： \n [in] linkId：路段ID \n [out] color：笔刷颜色 \n 返回：如果返回false，TESSNG会忽略，否则用color颜色绘制路段 \n Ø  bool paint(int itemType, long itemId, QPainter *painter) \n 绘制路网元素 \n 参数： \n [in] itemType：路网元素类型，在plugin/_netitemtype.h文件中定义 \n [in] itemId：路网元素ID \n [in] painter：QPainter指针 \n 返回：如果返回true，TESSNG认为插件已绘制，TESSNG不再绘制，否则TESSNG进行绘制。 \n Ø  bool paintLaneObject(ILaneObject* pILaneObj, QPainter* painter) \n 绘制车道或车道连接 \n 参数： \n [in] pILaneObj：车道或车道连接 \n [in] painter：QPainter指针 \n Ø  bool laneBrushAndPen(long laneId, QBrush &brush, QPen &pen) \n 根据指定车道ID设置绘制车道的笔刷 \n [in] laneId：车道ID \n [out] brush：绘刷 \n [out] pen：绘笔 \n 返回：false 忽略，true 用brush及pen参数绘制ID等于laneId的车道 \n Ø  bool connectorAreaBrushColor(long connAreaId, QColor& color) \n 面域笔刷颜色 \n 参数： \n [in] connAreaId：面域ID \n [out] color：笔刷颜色 \n 返回：false：忽略，true：TESSNG用color绘制面域 \n Ø  bool labelNameAndFont(int itemType, long itemId, GraphicsItemPropName &outPropName, qreal &outFontSize) \n 根据路网元素类型及ID确定用标签用ID或名称作为绘制内容。 \n 参数： \n [in] itemType：路段元素类型，类型常量在文件Plugin/_netitemtype.h中定义； \n [in] itemId：路网元素ID； \n [out] outPropName：枚举值，在文件Plugin/_netitem.h中定义，如果赋值GraphicsItemPropName::Id，则用ID作为绘制内容，如果赋值GraphicsItemPropName::Name，则用路网元素名作为绘制内容； \n [out] outFontSize：字体大小，单位：米。假设车道宽度是3米，如果赋给outFontSize的值是6，绘出的文字将占用两个车道的宽度。 \n 返回：false 忽略，true 则根据设定的outPropName 值确定用ID或名称绘制标签，并且用指定大小绘制。 \n 举例： \n // 范例中的路段和连接段的标签内容部分是名称，部分是ID。 \n bool   MyNet :: labelNameAndFont ( int  itemType ,   long  itemId ,  GraphicsItemPropName  & outPropName ,  qreal  & outFontSize )   { \n\t if   ( itemType  ==  GConnectorType )   { \n\t\toutPropName  =  GraphicsItemPropName :: Name ; \n\t\toutFontSize  =   6 ; \n\t\t return   true ; \n\t } \n\t else   if   ( itemType  ==  GLinkType )   { \n\t\t if   ( itemId  ==   1   ||  itemId  ==   5   ||  itemId  ==   6 )   { \n\t\t\toutPropName  =  GraphicsItemPropName :: Name ; \n\t\t\toutFontSize  =   6 ; \n\t\t\t return   true ; \n\t\t } \n\t } \n\t return   false ; \n } \n \n Ø  bool isDrawLinkCenterLine(long linkId) \n 是否绘制路段中心线 \n 参数： \n [in] linkId：路段ID； \n 返回值：true绘制，false不绘制。 \n Ø  bool isDrawLinkCorner(long linkId) \n 是否绘制路段四个拐角的圆形和正方型。 \n 参数： \n [in] linkId：路段ID； \n 返回值：true绘制，false不绘制。 \n Ø  bool isDrawLaneCenterLine(long laneId) \n 是否绘制车道中心线。 \n 参数： \n [in] laneId：车道ID； \n 返回值：true绘制，false不绘制。 \n Ø  void afterViewKeyReleaseEvent(QKeyEvent *event) \n QGraphicsView的keyReleaseEvent事件后行为，用户可以根据自己的需要接入键盘事件，实现自身业务逻辑。 \n Ø  void afterViewMouseDoubleClickEvent(QMouseEvent * event) \n QGraphicsView的mouseDoubleClickEvent事件后的行为，用户可以根据自己的需要编写鼠标双击事件响应代码。 \n Ø  void afterViewMouseMoveEvent(QMouseEvent *event) \n QGraphicsView的mouseMoveEvent事件后的行为，用户可以根据自己的需要编写鼠标移动事件响应代码。 \n Ø  void afterViewMousePressEvent(QMouseEvent *event) \n QGraphicsView的mousePressEvent事件后的行为，用户可以根据自己的需要编写鼠标点击事件响应代码。 \n Ø  void afterViewMouseReleaseEvent(QMouseEvent *event) \n QGraphicsView的mouseReleaseEvent事件后的行为，用户可以根据自己的需要编写鼠标释放事件响应代码。 \n Ø  void afterViewResizeEvent(QResizeEvent *event) \n QGraphicsView的resizeEvent事件后的行为，用户可以根据自己的需要编写屏幕缩放事件响应代码。 \n Ø  void afterViewWheelEvent(QWheelEvent *event) \n QGraphicsView的鼠标滚动事件后的行为，用户可以根据自己的需要编写鼠标滚动事件后响应代码。 \n Ø  void afterViewScrollContentsBy(int dx, int dy) \n QGraphicsView滚动条移动事件后的行为，用户可以根据自己的需要实现视窗滚动条移动后响应代码。 \n 1.4.2 CustomerSimulator \n 接口文件：Plugin/customersimulator.h \n CustomerSimulator是TessPlugin子接口，用户实现这个接口。TESS NG在仿真前后以及仿真过程中调用这个接口实现的方法，达到与插件交互的目的，用户可以通过这个接口的实现在仿真前后以及仿真运算过程中对TESS NG的仿真进行干预，大到可以控制仿真是否进行，小到干预某一车辆的驾驶行为。 \n 用户对车辆驾驶行为的干预主要通过车速和变道来实现。对车速的干预主要有以下几个方法： \n 1）重新计算车速； \n 2）修改路段限速； \n 3）重新计算加速度； \n 4）修改跟驰安全距离和安全时距、重新设置前车距 \n 以上几个方法的优先级依次降低。在没有插件干预的情况下，车辆行驶的最高速度受到道路的最高速度限制；在有插件的干预下，如果直接修改了车速，则不受道路最高限速的限制。 \n 下面对CustomerSimulator接口方法作详细解释。 \n Ø  void beforeStart(bool &keepOn) \n 仿真前的准备。如果需要，用户可通过设置keepOn为false来放弃仿真。 \n 参数： \n [out] keepOn：是否继续，默认为true； \n Ø  void afterStart() \n 启动仿真后的操作。这个方法的处理时间尽量短，否则影响仿真时长的计算，因为调用这个方法的过程仿真已经计时。仿真前的操作尽可能放到beforeStart方法中处理。 \n Ø  void afterStop() \n 仿真结束后的操作，如果需要，用户可以在此方法释放资源。 \n Ø  bool calcSimuConfig(Online::SimuConfig& config) \n 计算仿真参数 \n 参数： \n [out] config：仿真参数信息。数据结构Online::SimuConfig 在文件Plugin/_datastruct.h中定义。 \n 返回：false：忽略，true：用config中的参数更新仿真参数，如果仿真已启动，仿真精度及线程数不能更新，仿真时长及加速倍数可以更新 \n Ø  QList< Online::DispatchInterval> calcDynaDispatchParameters() \n 计算动态发车信息，用来修改发车点相关参数，此方法可以用来实现实时动态仿真。 \n 返回：动态发车信息列表。数据结构Online::DispatchInterval在文件Plugin/_datastruct.h中定义。 \n 举例： \n QList <  Online :: DispatchInterval >   MySimulator :: calcDynaDispatchParameters ( ) \n { \n\tQList <  Online :: DispatchInterval >  lDispatchInterval ; \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   1 ) \n\t { \n\t\tQTime t  =   QTime :: currentTime ( ) ; \n\t\t qDebug ( )   <<  t ; \n\t\t long  currSecs  =  t . hour ( )   *   3600   +  t . minute ( )   *   60   +  t . second ( ) ; \n\t\tOnline :: DispatchInterval di  =   Online :: DispatchInterval ( ) ; \n\t\tdi . dispatchId  =   11 ; \n\t\tdi . fromTime  =  currSecs ; \n\t\tdi . toTime  =  di . fromTime  +   300   -   1 ; \n\t\tdi . vehiCount  =   300 ; \n\t\tdi . mlVehicleConsDetail  <<   Online :: VehiComposition ( 1 ,   90 )   <<   Online :: VehiComposition ( 2 ,   10 ) ; \n\t\tlDispatchInterval  <<  di ; \n\t\tmpSecondDevCasesObj -> mActionControlMethodNumber  =   0 ; \n\t } \n\t return  lDispatchInterval ; \n } \n \n Ø  QList< Online::DecipointFlowRatioByInterval> calcDynaFlowRatioParameters() \n 一个或一次数据来源里保存的所有决策点在一个时间间隔的路径流量分配信息，此方法可以用来实现实时动态仿真。 \n 返回：决策点流量分配信息，数据结构Online::DecipointFlowRatioByInterval在文件Plugin/_datastruct.h中定义。 \n Ø  QList< Online::SignalContralParam> calcDynaSignalContralParameters() \n 一个或一次数据来源里保存的所有信号灯组的信号控制信息。 \n 返回：信号灯组控制信息列表，数据结构Online::SignalContralParam在文件Plugin/_datastruct.h中定义。 \n Ø  void initVehicle(IVehicle *pIVehicle) \n 初始化车辆，此方法在车辆起动加入路网时被调用，用户可以在这个方法里调用IVehicle的setVehiType方法重新设置类型，调用initLane或initLaneConnector方法对车辆的车道序号、起始位置、车辆大小进行初始化。 \n 参数： \n [in] pIVehicle：车辆对象 \n 举例： \n bool   MySimulator :: initVehicle ( IVehicle  * pIVehicle )   { \n\t long  tmpId  =  pIVehicle -> id ( )   %   100000 ; \n\tQString roadName  =  pIVehicle -> roadName ( ) ; \n\t if   ( roadName  ==   QString :: fromLocal8Bit ( "曹安路" ) )   { \n\t\t //飞机 \n\t\t if   ( tmpId  ==   1 )   { \n\t\t\tpIVehicle -> setVehiType ( 12 ) ; \n\t\t\tpIVehicle -> initLane ( 3 ,   m2p ( 105 ) ,   0 ) ; \n\t\t } \n\t\t //工程车 \n\t\t else   if   ( tmpId  >=   2   &&  tmpId  <=   8 )   { \n\t\t\tpIVehicle -> setVehiType ( 8 ) ; \n\t\t\tpIVehicle -> initLane ( ( tmpId  -   2 )   %   7 ,   m2p ( 80 ) ,   0 ) ; \n\t\t } \n\t\t //消防车 \n\t\t else   if   ( tmpId  >=   9   &&  tmpId  <=   15 )   { \n\t\t\tpIVehicle -> setVehiType ( 9 ) ; \n\t\t\tpIVehicle -> initLane ( ( tmpId  -   2 )   %   7 ,   m2p ( 65 ) ,   0 ) ; \n\t\t } \n\t\t //救护车 \n\t\t else   if   ( tmpId  >=   16   &&  tmpId  <=   22 )   { \n\t\t\tpIVehicle -> setVehiType ( 10 ) ; \n\t\t\tpIVehicle -> initLane ( ( tmpId  -   2 )   %   7 ,   m2p ( 50 ) ,   0 ) ; \n\t\t } \n\t\t //最后两队列小车 \n\t\t else   if   ( tmpId  ==   23 )   { \n\t\t\tpIVehicle -> setVehiType ( 1 ) ; \n\t\t\tpIVehicle -> initLane ( 1 ,   m2p ( 35 ) ,   0 ) ; \n\t\t } \n\t\t else   if   ( tmpId  ==   24 )   { \n\t\t\tpIVehicle -> setVehiType ( 1 ) ; \n\t\t\tpIVehicle -> initLane ( 5 ,   m2p ( 35 ) ,   0 ) ; \n\t\t } \n\t\t else   if   ( tmpId  ==   25 )   { \n\t\t\tpIVehicle -> setVehiType ( 1 ) ; \n\t\t\tpIVehicle -> initLane ( 1 ,   m2p ( 20 ) ,   0 ) ; \n\t\t } \n\t\t else   if   ( tmpId  ==   26 )   { \n\t\t\tpIVehicle -> setVehiType ( 1 ) ; \n\t\t\tpIVehicle -> initLane ( 5 ,   m2p ( 20 ) ,   0 ) ; \n\t\t } \n\t\t else   if   ( tmpId  ==   27 )   { \n\t\t\tpIVehicle -> setVehiType ( 1 ) ; \n\t\t\tpIVehicle -> initLane ( 1 ,   ( 5 ) ,   0 ) ; \n\t\t } \n\t\t else   if   ( tmpId  ==   28 )   { \n\t\t\tpIVehicle -> setVehiType ( 1 ) ; \n\t\t\tpIVehicle -> initLane ( 5 ,   ( 5 ) ,   0 ) ; \n\t\t } \n\t\t if   ( tmpId  >=   23   &&  tmpId  <=   28 )   { \n\t\t\tpIVehicle -> setLength ( m2p ( 4.5 ) ,   true ) ; \n\t\t } \n } \n } \n\n \n Ø  void beforeCreateGVehiclesForBusLine(IBusLine* pBusLine, bool& keepOn) \n 创建公交车辆前的预处理 \n 参数： \n [in] pBusLine：公交线路 \n [in、out] keepOn：是否继续执行创建公交车辆，如果KeepOn被赋值为false，TESSNG不再创建公交车辆 \n Ø  bool beforeCalcLampColor(bool& keepOn) \n 计算信号灯色前的预处理。 \n 参数： \n [in、out] 是否断续计算 \n 返回：如果返回 true，且keepOn等于false，TESSNG不再计算信号灯色。 \n Ø  bool calcLampColor(ISignalLamp *pSignalLamp) \n 计算信号灯的灯色。ISignalLamp有设置信号灯颜色方法。 \n 参数： \n [in] pSignalLamp：信号灯对象； \n 返回值： \n 如果返回true，表明用户已修改了信号灯颜色，TESS NG不再计算灯色。 \n 举例： \n bool   MySimulator :: calcLampColor ( ISignalLamp *  pSignalLamp )   { \n\t if   ( mpSecondDevCasesObj -> mContorlMeasureMethodNumber  ==   1 )   { \n\t\t // 将所有信号灯变为绿色 \n\t\tpSignalLamp -> setLampColor ( "绿" ) ; \n\t\t return   true ; \n\t } \n\t return   false ; \n } \n \n Ø  bool reCalcToLeftLane(IVehicle *pIVehicle) \n 计算是否要左强制变道，TESS NG在移动车辆时计算强制左变道的条件，当条件不足时让插件计算，如果返回值为true，强制左变道。 \n 参数： \n [in] pIVehicle：车辆对象。 \n 返回：false：忽略，true：强制左变道 \n Ø  bool reCalcToRightLane(IVehicle *pIVehicle) \n 计算是否要右强制变道，TESS NG在移动车辆时计算强制右变道的条件，当条件不足时让插件计算，如果返回值为true，强制右变道。 \n 参数： \n [in] pIVehicle：车辆对象 \n 返回：false：忽略，true：强制右变道 \n Ø  void beforeToLeftFreely(IVehicle* pIVehicle, bool &bKeepOn) \n 自由左变道前处理，如果bKeepOn被赋值为false，TESSNG不再计算是否自由左变道 \n 参数： \n [in] pIVehicle：车辆 \n [in、out] bKeepOn：是否继续，如果设为false，不再计算是否可以左自由变道 \n Ø  void beforeToRightFreely(IVehicle* pIVehicle, bool& bKeepOn) \n 自由右变道前处理，如果bKeepOn被赋值为false，TESSNG不再计算是否自由右变道 \n [in] pIVehicle：车辆 \n [in、out] bKeepOn：是否继续，如果设为false，不再计算是否可以右自由变道 \n 举例： \n // 自由左变道前处理 \n\t void   MySimulator :: beforeToLeftFreely ( IVehicle *  pIVehicle ,   bool &  bKeepOn )   { \n\t if   ( pIVehicle -> roadId ( )   ==   9 )   { \n\t\tpIVehicle -> setColor ( "#0000FF" ) ; \n\t\t } \n } \n //自由右变道前处理 \n void    MySimulator :: beforeToRightFreely ( IVehicle *  pIVehicle ,   bool &  bKeepOn )   { \n\t if   ( pIVehicle -> roadId ( )   ==   9 )   { \n\t\tpIVehicle -> setColor ( "#EE0000" ) ; \n\t } \n } \n \n Ø  bool reCalcToLeftFreely(IVehicle *pIVehicle) \n 重新计算是否要自由左变道。TESS NG在移动车辆时计算自由左变道条件，当条件不足时让插件计算，如果返回值为true，自由左变道。 \n [in] pIVehicle：车辆 \n 返回：false：忽略，true：左自由変道，但在一些特殊场景也会放弃变道，如危险 \n Ø  bool reCalcToRightFreely(IVehicle *pIVehicle) \n 重新计算是否要自由右变道。TESS NG在移动车辆时计算自由右变道条件，当条件不足时让插件计算，如果返回值为true，自由右变道。 \n 参数： \n [in] pIVehicle：车辆对象 \n 返回：false：忽略，true：右自由変道，但在一些特殊场景也会放弃变道，如危险 \n Ø  bool reCalcDismissChangeLane(IVehicle* pIVehicle) \n 重新计算是否撤销变道，通过pIVehicle获取到自身条件数据及当前周边环境条件数据，判断是否要撤销正在进行的变道。 \n 参数： \n [in] pIVehicle：车辆 \n 返回：true 如果当前变道完成度不超过三分之一，则撤销当前变道行为；false 忽略。 \n 举例： \n bool   MySimulator :: reCalcDismissChangeLane ( IVehicle *  pIVehicle )   { \n\t //强制车辆不变道，禁止L2路段所有车辆右变道 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   5 ) \n\t { \n\t\t if   ( pIVehicle -> roadId ( )   ==   2 )   { \n\t\t\t if   ( mpSecondDevCasesObj -> judgeVehicleLaneChangeDirection ( pIVehicle )   ==   QStringLiteral ( "right" ) )   { \n\t\t\t\t return   true ; \n\t\t\t } \n\t\t } \n\t } \n\t //强制L5路段中间车道向右变道 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   6 )   { \n\t\t if   ( pIVehicle -> roadId ( )   ==   5   &&   ( pIVehicle -> lane ( ) -> number ( )   ==   0   ||  pIVehicle -> lane ( ) -> number ( )   ==   1 ) )   { \n\t\t\t if   ( mpSecondDevCasesObj -> judgeVehicleLaneChangeDirection ( pIVehicle )   ==   QStringLiteral ( "left" ) )   { \n\t\t\t\t return   true ; \n\t\t\t } \n\t\t } \n\t } \n\t return   false ; \n } \n \n Ø  bool reCalcdesirSpeed(IVehicle *pIVehicle, qreal &inOutDesirSpeed) \n 重新计算期望速度，TESS NG调用此方法时将车辆当前期望速度赋给inOutDesirSpeed，如果需要，用户可在此方法重新计算期望速度，并赋给inOutDesirSpeed。 \n 参数： \n [in] pIVehicle：车辆对象； \n [in、out] inOutDesirSpeed：重新设置前后的车辆期望速度，单位：像素/秒； \n 举例： \n /* 范例中飞机的期望速度被重新计算，仿真前5秒期望速度为0，飞机处于静止状态，5至10秒飞机的期望速度是20km/h，10秒后期望速度是40km/h。这段代码展示如何通过重新设置期望速度来控制车速。代码如下 */ ：\n bool   MySimulator :: reCalcdesirSpeed ( IVehicle  * pIVehicle ,  qreal  & inOutDesirSpeed )   { \n\t long  tmpId  =  pIVehicle -> id ( )   %   100000 ; \n\tQString roadName  =  pIVehicle -> roadName ( ) ; \n\t if   ( roadName  ==   QString :: fromLocal8Bit ( "曹安路" ) )   { \n\t\t if   ( tmpId  <=  mrSquareVehiCount )   { \n\t\t\t //当前已仿真时间 \n\t\t\t long  simuTime  =  gpTessInterface -> simuInterface ( ) -> simuTimeIntervalWithAcceMutiples ( ) ; \n\t\t\t if   ( simuTime  <   5   *   1000 )   { \n\t\t\t\tinOutDesirSpeed  =    0 ; \n\t\t\t } \n\t\t\t else   if   ( simuTime  <   10   *   1000 )   { \n\t\t\t\tinOutDesirSpeed  =   m2p ( 20   /   3.6 ) ; \n\t\t\t } \n\t\t\t else   { \n\t\t\t\tinOutDesirSpeed  =   m2p ( 40   /   3.6 ) ; \n\t\t\t } \n\t\t\t return   true ; \n\t\t } \n\t } \n\t return   false ; \n } \n \n Ø  bool reSetFollowingType(IVehicle* pIVehicle, int& outTypeValue) \n 重新设置跟驰类型，在计算加速度的过程中被调用 \n 参数： \n [in] pIVehicle：车辆对象 \n [out] outTypeValue：跟驰类型，0：停车，1: 正常，5：急减速，6：急加速，7：汇入, 8：穿越，9：协作减速，10：协作加速，11：减速待转，12：加速待转 \n 返回：false：忽略，true：用outTypeValue设置车辆驾驶行为的跟驰类型 \n Ø  bool reSetFollowingParam(IVehicle *pIVehicle, qreal &inOutSafeInterval, qreal &inOutSafeDistance) \n 重新设置跟驰模型的安全间距和安全时距。 \n 参数： \n [in] pIVehicle：车辆对象； \n [in、out] inOutSafeInterval：安全时距，单位：秒； \n [in、out] inOutSafeDistance：安全间距：单位：像素； \n 返回：false：忽略，true：用inOutSafeInterval设置安全时距，用inOutSafeDistance设置安全间距 \n 举例： \n 范例将第二条连接段上的车辆跟车安全间距设为 30 米。代码如下：\n bool   MySimulator :: reSetFollowingParams ( IVehicle  * pIVehicle ,  qreal  & inOutSi ,  qreal  & inOutSd )   { \n\tQString roadName  =  pIVehicle -> roadName ( ) ; \n\t if   ( roadName  ==   QString :: fromLocal8Bit ( "连接段2" ) )   { \n\t\tinOutSd  =   m2p ( 30 ) ; \n\t\t return   true ; \n\t } \n\t return   false ; \n } \n \n Ø  QList< Online::FollowingModelParam> reSetFollowingParams() \n 重新设置跟驰模型参数，影响所有车辆。此方法被TESSNG调用，用得到跟驰模型数据取代当前仿真正在采用的跟驰模型。 \n 返回：跟驰参数列表，可对机动车和非机车的跟驰参数重新设置，设置以后会一直被采用，直到被新的参数所代替。 \n Ø  bool reSetDistanceFront(IVehicle* pIVehicle, qreal& distance, qreal& s0) \n 重新设置前车距及安全跟车距离 \n 参数： \n [in] pIVehicle：车辆对象 \n [in、out] distance：当前车辆与前车的距离，默认单位：像素 \n [in、out] s0：安全跟车距离，默认单位：像素 \n 返回：false：忽略，true：用distance设置前车距，用s0设置安全跟车距离 \n Ø  bool reSetSpeed(IVehicle *pIVehicle, qreal &inOutSpeed) \n 重新设置车速。TESS NG调用此方法时将当前计算所得车速赋给inOutSpeed，如果需要，用户可以在此方法重新计算车速并赋给inOutSpeed。 \n 参数： \n [in] pIVehicle：车辆对象； \n [in、out] inOutSpeed：重新计算前后的车速，单位：像素/秒。 \n 返回：false：忽略，true：用inOutSpeed设置车辆当前速度 \n 举例： \n //重新设置速度 \n bool   MySimulator :: reSetSpeed ( IVehicle *  pIVehicle ,  qreal &  inOutSpeed )   { \n\t // 3. 修改车辆速度，将L5路段车辆修改为0 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   3 )   { \n\t\t if   ( pIVehicle -> roadId ( )   ==   5 )   { \n\t\t\tinOutSpeed  =   0 ; \n\t\t\t return   true ; \n\t\t } \n\t } \n\t // 7.强制车辆闯红灯,让L12等待的车辆强制闯红灯 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   7 )   { \n\t\t if   ( pIVehicle -> roadId ( )   ==   12 )   { \n\t\t\tqreal vehiCurrSpeed  =  pIVehicle -> currSpeed ( ) ; \n\t\t\tqreal vehiCurrentDistToEnd  =  pIVehicle -> vehicleDriving ( ) -> distToEndpoint ( true ) ; \n\t\t\t if   ( m2p ( vehiCurrSpeed )   <   20   &&   p2m ( vehiCurrentDistToEnd )   <   3 )   { \n\t\t\t\t // 生成一个随机浮点数，范围在 [0.0, 1.0) \n\t\t\t\t double  randomNumber  =   QRandomGenerator :: global ( ) -> generateDouble ( ) ; \n\t\t\t\t if   ( randomNumber  <   0.8 )   { \n\t\t\t\t\tinOutSpeed  =   m2p ( 15 ) ; \n\t\t\t\t\t return   true ; \n\t\t\t\t } \n\t\t\t } \n\t\t } \n\t } \n\t return   false ; \n } \n \n Ø  void beforeMergingToLane(IVehicle *pIVehicle, bool &keepOn) \n 在“车道连接”上汇入车道前的计算，可以让TESS NG放弃汇入计算，以便于用户实现自己的汇入逻辑。 \n 参数： \n [in] pIVehicle：车辆对象； \n [out] keepOn：是否放弃，默认为true。赋值keepOn为false，TESSNG则放弃汇入。 \n Ø  void afterOneStep () \n 一个计算批次后的计算，这个时候所有车辆都完成同一个批次的计算。通常在这个方法中获取车辆轨迹、检测器数据、进行必要的小计等。在这个方法中进行的计算基本不影响仿真结果的一致性，但效率不高，如果计算量大对仿真效率会有影响。 \n 举例： \n // 范例中在这个方法中获取车辆对象和轨迹等信息。代码如下： \n void   MySimulator ::   afterOneStep   ( )   { \n\t //当前仿真计算批次 \n\t long  batchNum  =  gpTessInterface -> simuInterface ( ) -> batchNumber ( ) ; \n\t //当前已仿真时间，单位：毫秒 \n\t long  simuTime  =  gpTessInterface -> simuInterface ( ) -> simuTimeIntervalWithAcceMutiples ( ) ; \n\t //ID为1的路段上所有已启动车辆 \n\tQList <  IVehicle * >  lVehi  =  gpTessInterface -> simuInterface ( ) -> vehisInLink ( 1 ) ; \n\t //车辆轨迹 \n\tQList <  Online :: VehicleStatus >  lVehiStatus ; \n\tgpTessInterface -> simuInterface ( ) -> getAllVehicleStatus ( lVehiStatus ) ; \n\t //车辆数据采集信息 \n\tQList <  Online :: VehiInfoCollected >  lOutVehiInfo ; \n\tgpTessInterface -> simuInterface ( ) -> getVehisInfoCollected ( simuTime ,  lOutVehiInfo ) ; \n } \n \n Ø  void duringOneStep() \n 该方法在各个工作线程进行同一批次的计算过程中调用，这时存在部分车辆计算完成，部分车辆仍在计算过程中。这个方法中的计算不够安全，但效率较高。 \n Ø  void beforeNextRoad(IVehicle* pIVehicle, QGraphicsItem*& pRoad, bool& keepOn) \n 计算下一道路前的处理 \n 参数： \n [in] pIVehicle：车辆 \n [in] pRoad：暂不使用 \n [in、out] keepOn：是否继续计算，false：TESSNG不再计算后续道路，true：继续计算 \n Ø  QList< ILaneConnector*> candidateLaneConnectors(IVehicle* pIVehicle, QList< ILaneConnector*> lInLC) \n 计算当车辆离开路段时后续可经过的“车道连接”, lLaneConnector是已计算出的当前车道可达的所有“车道连接”，用户可以从中筛选或重新计算。如果车辆有路径，则忽略 \n 返回：后续可达的“车道连接”列表 \n Ø  ILaneConnector* candidateLaneConnector(IVehicle* pIVehicle, ILaneConnector* pCurrLaneConnector) \n 计算车辆后续“车道连接”，此时车辆正跨出当前路段，将驶到pCurrLaneConnector。此方法可以改变后续“车道连接”。如果返回的“车道连接”为空，TESSNG会忽略此方法的调用。如果返回的“车道连接”不在原有路径上，或者此方法设置了新路径且新路径不经过返回的“车道连接”，TESSNG调用此方法后会将路径设为空。 \n Ø  void beforeNextPoint(IVehicle *pIVehicle, bool &keepOn) \n 计算车辆移动到下一点前的操作，用户可以通过此方法让TESSNG放弃对指定车辆到下一点的计算。 \n 参数： \n [in] pIVehicle：车辆对象； \n [out] keepOn：是否继续, 默认为true，如果keepOn赋值为false，TESSNG放弃移动到下一点的计算，但不移出路网。 \n Ø  QList< int> calcLimitedLaneNumber(IVehicle* pIVehicle) \n 计算限制车道序号：如管制、危险等，最右侧编号为0。 \n 参数： \n [in] pVehicle：车辆对象； \n 返回：车道序号集，保存车辆不可以驰入的车道序号。 \n Ø  bool calcSpeedLimitByLane(ILink* pILink, int laneNumber, qreal& outSpeed) \n 由车道确定的限制车速（最高速度, 公里/小时） \n 参数： \n [in] pILink：路段 \n [in] laneNumber：,laneNumber:车道序号，最右侧编号为0 \n [in、out] outSpeed：限制速度，公里/小时 \n 返回：false：忽略，true：用outSpeed限制指定车道速度 \n Ø  bool calcMaxLimitedSpeed(IVehicle *pIVehicle, qreal &inOutLimitedSpeed) \n 重新计算车辆当前最大限速，不受道路限速的影响。在没有插件干预的情况下，车辆速度大于道路限度时按道路最大限速行驶，在此方法的干预下，可以提高限速，让车辆大于道路限速行驶。 \n TESS NG调用此方法时将当前最高限速赋给inOutLimitedSpeed，如果需要，用户可以在方法里重新设置inOutLimitedSpeed值。 \n 参数： \n [in] pIVehicle：车辆对象； \n [in、out] inOutLimitedSpeed：计算前后的最大限速，单位：像素/秒。 \n 返回结果： \n ​    如果返回false则忽略，否则取inOutLimitedSpeed为当前道路最大限速： \n 举例： \n //下面代码，如果车辆pIVehicle所处当前道路最高限速小于50km/h，则将最高限速设为50km/h。 \n bool   MySimulator :: calcMaxLimitedSpeed ( IVehicle  * pIVehicle ,  qreal  & inOutLimitedSpeed ) { \n\t if   ( inOutLimitedSpeed  <   m2p ( 50   /   3.6 ) ) { \n\t\tinOutLimitedSpeed  =   m2p ( 50   /   3.6 ) ; \n\t\t return   true ; \n\t } \n\t return   false ; \n } \n \n Ø  bool calcDistToEventObj(IVehicle* pIVehicle, qreal& dist) \n 计算到事件对象距离，如到事故区、施工区的距离 \n 参数： \n [in] pIVehicle：车辆 \n [in、out] dist：车辆中心点距事件对象距离，单位像素 \n 返回：false：忽略，true：用dist计算安全变道距离等 \n Ø  bool calcChangeLaneSafeDist(IVehicle* pIVehicle, qreal& dist) \n 计算安全变道距离。 \n 参数： \n [in] pIVehicle：车辆，计算该车辆安全变道距离。 \n [in、out] dist：安全变道距离，保存了TESSNG已算得的值，用户可以在此方法重新计算。 \n 返回：false 忽略，true TESSNG取dist作为安全变道距离 \n Ø  void busArriving(IVehicle* pIVehicle, IBusStationLine* pStationLine, int alightingCount, int alightingTime, int boardingCount, int boardingTime) \n 公交到站 \n 参数： \n [in] pIVehicle：车辆对象 \n [in] pStationLine：站点线路 \n [in] alightingCount：下客人数 \n [in] alightingTime：下客所需总时间，默认单位：秒 \n [in] boardingCount：上客人数 \n [in] boardingTime：上客所需总时间，默认单位：秒 \n Ø  void afterStep (IVehicle *pIVehicle) \n 完成车辆pIVehicle“一个批次计算”后的处理。可以在此获取车辆当前信息，如当前道路、位置、方向角、速度、期望速度、前后左右车辆等。 \n 参数： \n [in] pIVehicle：车辆对象； \n Ø  bool calcAcce(IVehicle *pIVehicle, qreal &acce) \n 计算加速度 \n [in] pIVehicle：待计算加速度的车辆 \n [out] acce：计算结果 \n 返回：false 忽略，true 则TESNG用调用此方法后所得acce作为当前车辆的加速度。 \n Ø  bool isCalcVehicleVector3D() \n 是否计算车辆3D属性，如欧拉角等 \n Ø  QVector3D calcVehicleEuler(IVehicle* pIVehicle, bool bPosiDire = true) \n 计算欧拉角 \n 参数： \n [in] pIVehicle：车辆对象 \n [in] bPosiDire：车头方向是否正向计算，如果bPosiDire为false则反向计算 \n Ø  bool reSetAcce(IVehicle *pIVehicle, qreal &inOutAcce) \n 重新计算加速度。TESS NG调用此方法时将当前计算所得加速度赋给inOutAcce，如果需要，用户可以在此方法中重新计算加速度并赋给inOutAcce。 \n 参数： \n [in] pIVehicle：车辆对象； \n [in、out] inOutAcce：重新计算前后的加速度，单位：像素/秒^2； \n 返回结果： \n 如果返回false则忽略，如果返回true，则将inOutAcce作为当前加速度。 \n 举例： \n // 范例中车辆在第一条连接段上的加速度被重新计算。代码如下： \n bool   MySimulator :: reSetAcce ( IVehicle  * pIVehicle ,  qreal  & inOutAcce )   { \n\tQString roadName  =  pIVehicle -> roadName ( ) ; \n\t if   ( roadName  ==   QString :: fromLocal8Bit ( "连接段1" ) )   { \n\t\t //如果车速大于20km/h，加速度设为-5m/s/s \n\t\t if   ( pIVehicle -> currSpeed ( )   >   m2p ( 20   /   3.6 )   )   { \n\t\t\tinOutAcce  =   m2p ( - 5 ) ; \n\t\t\t return   true ; \n\t\t } \n\t\t //如果车速大于10km/h，加速度设为-1m/s/s \n\t\t else   if   ( pIVehicle -> currSpeed ( )   >   m2p ( 20   /   3.6 )   )   { \n\t\t\tinOutAcce  =   m2p ( - 1 ) ; \n\t\t\t return   true ; \n\t\t } \n\t } \n\t return   false ; \n } \n \n Ø  void afterCalcTracingType(IVehicle* pIVehicle) \n 计算跟驰类型后处理 \n 参数： \n [in] pIVehicle：车辆 \n Ø  bool travelOnChangingTrace(IVehicle* pIVehicle) \n 是否在变轨迹上 \n 参数： \n [in] pIVehicle：车辆 \n Ø  bool boundingRect(IVehicle* pIVehicle, QRectF& outRect) const \n 获取车辆边界矩形 \n 参数： \n [in] pIVehicle：车辆对象 \n [out] outRect：车辆边界矩形 \n Ø  bool shape(IVehicle* pIVehicle, QPainterPath& outShape) const \n 获取车辆图形路径 \n 参数： \n [in] pIVehicle：车辆对象 \n [out] outShape：车辆形状路径 \n Ø  bool paintVehicle(IVehicle* pIVehicle, QPainter* painter) \n 绘制车辆 \n 参数： \n [in] pIVehicle：车辆对象 \n [in] painter：笔刷 \n 返回：true，TESSNG不再绘制车辆，false，TESSNG认为用户没有绘制，继续绘制 \n Ø  bool paintVehicleWithRotation(IVehicle* pIVehicle, QPainter* painter, qreal& inOutRotation) \n 绘制车辆，绘制前将车辆对象旋转指定角度 \n 参数： \n [in] pIVehicle：车辆对象 \n [in] painter：QPainter指针 \n [in] inOutRotation：旋转的角度 \n 返回：true，TESSNG不再绘制车辆，false，TESSNG认为用户没有绘制，继续绘制 \n Ø  void rePaintVehicle(IVehicle* pIVehicle, QPainter* painter) \n 绘制车辆后的再绘制，客户可在此方法增加绘制内容 \n 参数： \n [in] pIVehicle，要重绘制的车辆 \n [in] painter，QPainter对象 \n Ø  bool reCalcAngle(IVehicle *pIVehicle, qreal &inOutAngle) \n 重新计算角度。TESS NG调用此方法时将当前算得的角度赋给inOutAngle，如果需要，用户可在此方法中重新计算车辆角度，并将算得的角度赋给inOutAngle。 \n 参数： \n [in] pIVehicle：车辆对象； \n [in、out] inOutAngle：重新计算前后角度，北向0度顺时针； \n Ø  bool isStopDriving(IVehicle *pIVehicle) \n 是否停车运行，TESS NG在计算下一点位置后调用，判断是否要停止车辆pIVehicle的运行。 \n 参数： \n [in] pIVehicle：车辆对象； \n 返回结果： \n 如果返回true，则停止该车辆运行，移出路网。 \n Ø  bool isPassbyEventZone(IVehicle* pIVehicle) \n 是否正在经过事件区（如：施工区、限速区等） \n 参数： \n [in] pIVehicle：车辆对象； \n Ø  void beforeStopVehicle(IVehicle *pIVehicle) \n 车辆停止运行前的处理。 \n 参数： \n [in] pIVehicle：车辆对象； \n Ø  void afterStopVehicle(IVehicle *pIVehicle) \n 车辆停止运行后的处理 \n 参数： \n [in] pIVehicle：车辆对象。 \n 举例： \n //8. 强制清除车辆,以L5路段为例，清除所有小客车 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   8 )   { \n\t\t for   ( IVehicle * &  pIVehicle  :  lAllVehi )   { \n\t\t\t if   ( pIVehicle -> roadId ( )   ==   5   &&  pIVehicle -> vehicleTypeCode ( )   ==   1 )   { \n\t\t\t\tpIVehicle -> vehicleDriving ( ) -> stopVehicle ( ) ; \n\t\t\t } \n\t\t } \n\t } \n \n Ø  bool recoveredSnapshot() \n 用快照恢复仿真场景，分布式环境可用 \n Ø  QString vehiRunInfo(IVehicle* pIVehicle) \n 车辆运行信息。在仿真过程中如果某辆车被单选，按ctrl+i 会弹出被单选车辆运行状态，其中文本框中的“其它信息”就是当前方法返回的，开发者可以借此对实现的业务逻辑进行了解，用户可以了解仿真过程中具体车辆的一些特殊信息。 \n \n \n'},{title:"软件安装",frontmatter:{},regularPath:"/document/V3.x/C++/install.html",relativePath:"document/V3.x/C++/install.md",key:"v-06d169e5",path:"/document/V3.x/C++/install.html",headers:[{level:2,title:"下载",slug:"下载"},{level:2,title:"安装与激活",slug:"安装与激活"}],content:' 软件安装 \n 下载 \n win10系统:  TESSNG V3.1 二次开发包 \n Linux系统:  TESSNG V3.1 二次开发包 \n 安装与激活 \n 第一步：下载TESSNG Python二次开发包   TESSNG V3.1 二次开发包 并解压 \n \n 开发包位于软件根目录下，主要文件截图如下： \n \n 第二步：TESS NG的C++ API运行环境配置 \n TESS NG的API可以在VS环境下编译，同时也可以在QT Creator环境下编译。范例工程的源码都是utf-8字符编码，工程文件TESS_API_EXAMPLE.pro是Qt Creator 工程文件，在Qt 5.15.9环境下编译通过，TESS_API_EXAMPLE.vcxproj是VS工程文件，在Visual Studio 2019 + Qt Visual Studio Tools + Qt 5.15.9环境编译通过。  两种环境的配置说明如下： \n （1）VS编译环境配置 \n (1.1)安装QT5.15.9； \n (1.2)安装Visual C++2019，并在此环境下安装插件Qt Visual Studio Tools及Force UTF-8(No BOM)。QT VS Tools安装完成并完成QT的路径设置后，应确认该插件是否识别了正确的QT版本，打开菜单栏Qt VS Tools 下的QT Project Settings选项，在弹出窗口中检查右侧Qt Installation的版本名称与之前选择安装路径的Qt版本是否一致，如不一致，查看Qt Installation下拉框中是否有其他可选版本，如果没有其他选项，建议在QT VS Tools下的Qt Options中重新导入Qt路径； \n (1.3) 用Visual C++2019打开范例工程，属性“c/c++”的命令行增加：/utf-8。 \n （2）Qt Creator编译环境配置 \n 用户在仅安装QT 5.15.9的情况下，也可以在QT环境实现编译，用户可以根据自己实现的环境，选择平台进行编译测试，QT平台的编译状态如下： \n \n 第三步：启动TESSNG \n TESS NG二次开发非常方便，在main.cpp文件中加入简单几行代码就可以启动TESSSNG。代码如下： \ninclude   <QtWidgets/QApplication> \ninclude   <QTextCodec> \ninclude   <QLibrary> \ninclude   "tessinterface.h" \n\n int   main ( int  argc ,   char   * argv [ ] ) \n { \n\tQString qtPluginDir  =   QString :: fromLocal8Bit ( "C:/TESSNG/plugins" ) ; \n\t QCoreApplication :: addLibraryPath ( qtPluginDir ) ; \n\tQApplication  a ( argc ,  argv ) ; \n\tQMainWindow  * pWindow  =   tessng ( ) ; \n\t if   ( pWindow ) { \n\t\tpWindow -> showMaximized   ( ) ; \n\t } \n\t bool  result  =  a . exec ( ) ; \n\t if   ( pWindow )   { \n\t\t delete  pWindow ; \n\t } \n\t return  result ; \n } \n \n 结果如下： \n \n 如果打开TESSNG时自动加载指定路网文件，可以将代码换成： \n QMainWindow  * pWindow  =   tessng ( ) ; \nQString netFilePath  =   QString :: fromLocal8Bit ( "C:/TESSNG/Example/上海虹桥机场.tess" ) ; \nQMainWindow  * pWindow  =   tessng ( netFilePath ) ; \n \n 或者在配置文件config.json设置"__netfilepath"属性值为路网文件的全路径名。 \n 结果如下： \n \n API打开文件 \n 注意：以上两种自动加载路网的方法不能同时使用。 \n 第四步：激活TESSNG软件license \n 用户在首次使用二次开发包时需要激活软件；激活方式：运行项目，弹出激活弹窗，选择激活license文件。 \n 试用用户与首次激活软件流程相同，采用安装包的Cert文件夹下的JidaTraffic_key激活即可。 \n ​    软件的试用期为30天，以前激活过软件的客户激活V3.0.1版本时重新延长30天试用期（识别激活电脑的物理地址）。试用期结束后将无法调用接口的二次开发功能。 \n ​    商业版用户使用不受限制。 \n 第五步： 激活后关闭弹窗，重新运行项目即可运行范例 \n \n \n'},{title:"快速入门",frontmatter:{},regularPath:"/document/V3.x/C++/quickstart.html",relativePath:"document/V3.x/C++/quickstart.md",key:"v-3d944647",path:"/document/V3.x/C++/quickstart.html",headers:[{level:2,title:"1 运行DEMO",slug:"_1-运行demo"},{level:3,title:"1.1. 启动TESSNG",slug:"_1-1-启动tessng"},{level:3,title:"1.2. 通过插件与TESS NG交互",slug:"_1-2-通过插件与tess-ng交互"},{level:2,title:"2 度量单位",slug:"_2-度量单位"},{level:2,title:"3 接口架构",slug:"_3-接口架构"},{level:2,title:"4 范例简介",slug:"_4-范例简介"},{level:3,title:"4.1 增加窗体控件",slug:"_4-1-增加窗体控件"},{level:3,title:"4.2 改变路网元素展示内容",slug:"_4-2-改变路网元素展示内容"},{level:3,title:"4.3 控制车辆驾驶行为",slug:"_4-3-控制车辆驾驶行为"},{level:3,title:"4.4 在路段和连接段中间任意位置发车",slug:"_4-4-在路段和连接段中间任意位置发车"}],content:' 快速入门 \n 1 运行DEMO \n 用户需要将安装包目录下的 TESS_CppAPI_EXAMPLE 下的具体的C++头文件和源文件加入工程，并核查文件路径即可运行项目。 注：如果路径错误，会加载默认路网及出现其它异常情况。 \n 1.1. 启动TESSNG \n 1.1.1 简单启动 \n ​    在配置完毕TESS NG环境后，启动TESS NG二次开发非常方便，在main.cpp文件中加入简单几行代码就可以启动TESSSNG。代码如下： \ninclude   <QtWidgets/QApplication> \ninclude   <QTextCodec> \ninclude   <QLibrary> \ninclude   "tessinterface.h" \n\n int   main ( int  argc ,   char   * argv [ ] ) \n { \n\tQString qtPluginDir  =   QString :: fromLocal8Bit ( "C:/TESSNG/plugins" ) ; \n\t QCoreApplication :: addLibraryPath ( qtPluginDir ) ; \n\tQApplication  a ( argc ,  argv ) ; \n\tQMainWindow  * pWindow  =   tessng ( ) ; \n\t if   ( pWindow ) { \n\t\tpWindow -> showMaximized   ( ) ; \n\t } \n\t bool  result  =  a . exec ( ) ; \n\t if   ( pWindow )   { \n\t\t delete  pWindow ; \n\t } \n\t return  result ; \n } \n \n 结果如下： \n \n 如果打开TESSNG时自动加载指定路网文件，可以将代码换成： \n QMainWindow  * pWindow  =   tessng ( ) ; \nQString netFilePath  =   QString :: fromLocal8Bit ( "C:/TESSNG/Example/上海虹桥机场.tess" ) ; \nQMainWindow  * pWindow  =   tessng ( netFilePath ) ; \n \n 或者在配置文件config.json设置"__netfilepath"属性值为路网文件的全路径名。 \n 结果如下： \n \n 注意：以上两种自动加载路网的方法不能同时使用。 \n 1.1.2 通过配置文件加载路网、加载后仿真计算 \n 在TESSNG.exe文件相同路径创建一文本文件config.json。在此文件中增加两个属性如下： \n {\n\t"__netfilepath":"C:/TESSNG_2.2.0/Examles/杭州武林门区域路网公交优先方案.tess",\t\n\t"__simuafterload":true\n}\n\n \n 其中"__netfilepath"指定TESS NG启动时加载的文件路径，"__simuafterload"指定TESS NG启动加载路网文件（指定的路网文件或临时空白路网文件）后是否立即仿真计算。 \n 1.2. 通过插件与TESS NG交互 \n ​    与TESS NG交互、对TESS NG施加控制，主要是通过插件方式实现的，插件可以是符合TESS NG插件规范的动态连接库，由TESS NG启动时加载，也可以直接在内存中创建，启动TESS NG时主动加载。 \n 范例通过插件在TESS NG主窗体增加一个QDockWidget对象， QDockWidget对象包含一个用户创建的QWidget，在这个QWidget上可以创建按钮、信息框等组件，用于和TESS NG进行交互。将QDockWidget对象加入TESS NG主窗体是通过调用TessInterface子接口GuiInterface的方法addDockWidgetToMainWindow来实现的，范例在TessPlugin的实现方法initGui()中来完成。范例实现TessPlugin的initGui()代码如下： \n void   MyPlugin :: initGui ( )   { \n\tmpExampleWindow  =   new   TESS_API_EXAMPLE ( ) ; \n\tQDockWidget  * pDockWidget  =   new   QDockWidget ( QString :: fromLocal8Bit ( "TESSNG API 范例" ) ,   ( QWidget  * ) gpTessInterface -> guiInterface ( ) -> mainWindow ( ) ) ; \n\tpDockWidget -> setObjectName ( QStringLiteral ( "mainDockWidget" ) ) ; \n\tpDockWidget -> setFeatures ( QDockWidget :: NoDockWidgetFeatures ) ; \n\tpDockWidget -> setAllowedAreas ( Qt :: LeftDockWidgetArea ) ; \n\tpDockWidget -> setWidget ( mpExampleWindow -> centralWidget ( ) ) ; \n\tgpTessInterface -> guiInterface ( ) -> addDockWidgetToMainWindow ( static_cast < Qt :: DockWidgetArea > ( 1 ) ,  pDockWidget ) ; \n } \n\n \n 范例实例化插件后从内存加载插件，代码如下： \n //创建插件实例 \nMyPlugin  * p  =   new   MyPlugin ( ) ; \np -> initGui ( ) ; \np -> initCustNet ( ) ; \np -> initCustSimu ( ) ; \n //加载插件 \ngpTessInterface -> loadPluginFromMem ( p ) ; \n\n \n 启动TESS NG结果如下： \n \n 范例在自定义界面上按放了几个按钮，其中按钮“启动仿真”的槽函数里用下列代码启动仿真： \n void   TESS_API_EXAMPLE :: startSimu ( )   { \n\t if   ( ! gpTessInterface -> simuInterface ( ) -> isRunning ( )   ||  gpTessInterface -> simuInterface ( ) -> isPausing ( ) )   { \n\t\tgpTessInterface -> simuInterface ( ) -> startSimu ( ) ; \n\t } \n } \n 2 度量单位 \n TESS NG在运行过程涉及的度量单位有多种，有基本的度量单位，如：长度单位，复合型度量单位，如：速度单位。在启动TESS NG后需要设置长度基本度量单位，目前只支持像素，像素与米存在转换关系，这个关系通常在画路网前设置像素比时就已确定。设置方法是#include “UnitChange.h”后，调用setUnitOfMeasure方法，如范例： \n setUnitOfMeasure ( UnitOfMeasure :: Pixel ) ; \n \n 在二次开发过程中需要根据说明将大部分与长度有关的单位改成像素。像素与米制的相互转换方法如下： \n ​    米制转换像素：qreal m2p(qreal value); \n ​    像素转换米制：qreal p2m(qreal value); \n 3 接口架构 \n TESS NG和插件相互调用，实现对TESS NG运行过程从精细到粗放各个层次的控制。 \n \n TESS NG通过实现TessInterface及其三个子接口，将自身主要功能暴露给用户，用户启动TESS NG后可以通过全局指针变量gpTessInterface获取三个子接口，调用子接口方法。TESS NG加载插件后可以调用插件实现的方法，用户可以在插件方法中通过TessInterface及其子接口控制仿真运行，及仿真过程中车辆驾驶行为、信号灯色、路径车辆分配等等。 \n 4 范例简介 \n 范例“TESS NG API EXAMPLE”展示了在窗体界面、路网展示、仿真过程三个方面如何对TESS NG施加影响。范例工程基于Qt5.15环境创建，源代码在TESS NG3.x安装路径子文件夹/TESS_API_EXAMPLE下。其中TESS_API_EXAMPLE.pro是Qt Creator 工程文件，在Qt5.15环境下编译通过，TESS_API_EXAMPLE.vcxproj是VS工程文件，在Visual Studio 2019 + Qt Visual Studio Tools + Qt5.15环境编译通过。 \n 企业版可以使用二次开发功能，试用版可以在一个月内正常使用。 \n 范例启动时从内存加载插件，之后加载路网。如果成功加载了插件，插件会检测路网上的路段数，如果没有路段会创建几条路段、连接段以及发车点，如果配置文件config.json属性"__simuafterload"设为true加载路网后立即启动仿真。 \n 4.1 增加窗体控件 \n 在窗体界面上的影响：范例在窗体放置一个QDockWidget对象，QDockWidget对象包含了自定义界面，自定义界面上放置一些控件，通过这些控件操作TESS NG的路网加载、仿真运行，如下图如示： \n 4.2 改变路网元素展示内容 \n 在路网展示上的影响：范例在加载路网后判断路网上是否有路段，如果没有则创建几条路段、连接段和几个发车点。其中名称为“曹安路”的路段的标签显示路段名，其它路段标签显示ID，连接段标签显示的都是名称，如下图所示： \n 4.3 控制车辆驾驶行为 \n 在仿真过程上的影响：范例在仿真过程的影响包括初始化车辆车道、位置、速度，从几个方面改变车辆速度，以及控制自由变道，如下图所示： \n 4.4 在路段和连接段中间任意位置发车 \n 在仿真过程上的影响：范例在仿真过程动态从路段及连接段上距起点一定距离的位置发车，无需发车点发车，如下图所示： \n \n \n'},{title:"高频接口实战",frontmatter:{},regularPath:"/document/V3.x/C++/turorials.html",relativePath:"document/V3.x/C++/turorials.md",key:"v-4ca1d2a5",path:"/document/V3.x/C++/turorials.html",headers:[{level:2,title:"1. 界面交互",slug:"_1-界面交互"},{level:3,title:"1.1. 增加菜单及菜单项",slug:"_1-1-增加菜单及菜单项"},{level:3,title:"1.2. 获取车辆在路网二维平面上所有可移动的轨迹",slug:"_1-2-获取车辆在路网二维平面上所有可移动的轨迹"},{level:3,title:"1.3. 增加车辆显示内容",slug:"_1-3-增加车辆显示内容"},{level:2,title:"2. 路网编辑",slug:"_2-路网编辑"},{level:3,title:"2.1.  代码新建路网",slug:"_2-1-代码新建路网"},{level:3,title:"2.2. 地图转TESSNG路网",slug:"_2-2-地图转tessng路网"},{level:3,title:"2.3. 修改路网元素",slug:"_2-3-修改路网元素"},{level:3,title:"2.4. 编辑路网附着物",slug:"_2-4-编辑路网附着物"},{level:2,title:"3. 信控编辑",slug:"_3-信控编辑"},{level:3,title:"3.1. 新建信号灯",slug:"_3-1-新建信号灯"},{level:3,title:"3.2.  编辑信号灯组",slug:"_3-2-编辑信号灯组"},{level:3,title:"3.3. 信控方案下发",slug:"_3-3-信控方案下发"},{level:2,title:"4. 需求加载与管理",slug:"_4-需求加载与管理"},{level:3,title:"4.1. 流量加载",slug:"_4-1-流量加载"},{level:3,title:"4.2.  路径管理",slug:"_4-2-路径管理"},{level:3,title:"4.3.  路径重构",slug:"_4-3-路径重构"},{level:2,title:"5. 仿真运行",slug:"_5-仿真运行"},{level:3,title:"5.1. 倒车入库",slug:"_5-1-倒车入库"},{level:3,title:"5.2. 循环仿真",slug:"_5-2-循环仿真"},{level:3,title:"5.3. 流程控制",slug:"_5-3-流程控制"},{level:3,title:"5.4.  动作控制",slug:"_5-4-动作控制"},{level:3,title:"5.5. 管控手段控制",slug:"_5-5-管控手段控制"},{level:2,title:"6. 底层模型修改",slug:"_6-底层模型修改"},{level:3,title:"6.1 跟驰模型",slug:"_6-1-跟驰模型"},{level:3,title:"",slug:""},{level:3,title:"6.2. 换道模型",slug:"_6-2-换道模型"},{level:3,title:"6.3. 冲突交互模型",slug:"_6-3-冲突交互模型"},{level:3,title:"6.4.  车辆汇入模型",slug:"_6-4-车辆汇入模型"},{level:3,title:"6.5. 车辆穿越模型",slug:"_6-5-车辆穿越模型"},{level:2,title:"7. 仿真输出",slug:"_7-仿真输出"},{level:3,title:"7.1. 获取路网几何线性数据",slug:"_7-1-获取路网几何线性数据"},{level:3,title:"7.2. 检测器|采集器|排队计数器编辑",slug:"_7-2-检测器-采集器-排队计数器编辑"},{level:3,title:"7.3. 输出控制",slug:"_7-3-输出控制"},{level:2,title:"8. 特殊应用场景",slug:"_8-特殊应用场景"},{level:3,title:"8.1. 公交系统",slug:"_8-1-公交系统"}],content:' 高频接口实战 \n \n \n \n 大类 \n 功能点 \n \n \n \n \n 仿真窗口操作 \n 自定义菜单栏；自定义按钮事件 \n \n \n 路网编辑 \n 新建路网 \n \n \n \n 获取，修改，删除路网 \n \n \n \n 新增编辑路网上的附着物 \n \n \n 信控编辑 \n 新建信号灯 \n \n \n \n 信号灯组新建，编辑 \n \n \n \n 双环信控方案下发 \n \n \n 需求加载与管理 \n 流量加载 \n \n \n \n 路径管理 \n \n \n \n 路径重构 \n \n \n 仿真运行 \n 流程控制 \n \n \n \n 动作控制 \n \n \n \n 管控手段控制 \n \n \n 底层模型修改 \n 跟驰模型 \n \n \n \n 换道模型 \n \n \n \n 冲突交互模型（暂不支持二次开发） \n \n \n \n 车辆汇入模型 \n \n \n \n 车辆穿越模型 \n \n \n 仿真输出 \n 检测器编辑 \n \n \n \n 采集器编辑 \n \n \n \n 输出控制 \n \n \n 特殊应用场景 \n 公交系统 \n \n \n \n 行人系统 \n \n \n \n 停车场系统 \n \n \n \n 收费站系统 \n \n \n \n 本章所有接口范例均可在安装包《安装目录/SecondaryDevCases/SecondaryDevCases.h》中找到；用户可以到GitHub下载 \n GitHub \n 官网下载 : \n 1. 界面交互 \n 1.1. 增加菜单及菜单项 \n 可以在main()方法中实例化TESS NG后创建菜单及菜单项，代码如下: \n QMainWindow  * pWindow  =   tessng ( ) ; \n\t if   ( pWindow ) \n\t { \n\t\tQMenuBar  * pMenuBar  =  gpTessInterface -> guiInterface ( ) -> menuBar ( ) ; \n\t\tQMenu  * pMenu  =   new   QMenu ( pMenuBar ) ; \n\t\tpMenu -> setObjectName ( QString :: fromUtf8 ( "menuExample" ) ) ; \n\t\tpMenuBar -> addAction ( pMenu -> menuAction ( ) ) ; \n\t\tpMenu -> setTitle ( QString :: fromLocal8Bit ( "范例菜单" ) ) ; \n\n\t\tQAction  * pActionOk  =   new   QAction ( pMenuBar -> parent ( ) ) ; \n\t\tpActionOk -> setObjectName ( "actionExample" ) ; \n\t\tpActionOk -> setText ( QString :: fromLocal8Bit ( "范例菜单项" ) ) ; \n\t\tpActionOk -> setCheckable ( true ) ; \n\n\t\tpMenu -> addAction ( pActionOk ) ; \n\n\t\t QObject :: connect ( pActionOk ,   & QAction :: triggered ,   [ ] ( )   { \n\t\t\t QMessageBox :: information ( gpTessInterface -> guiInterface ( ) -> mainWindow ( ) ,   QString :: fromLocal8Bit ( "提示" ) ,   QString ( "is ok!" ) ) ; \n\t\t } ) ; \n\t } \n \n 结果如下： \n \n 点击菜单项“范例菜单项”弹出对话框： \n \n 如果希望增加菜单的功能放到插件的动态库中，让TESS NG加载插件时创建菜单，则上述代码需要移至插件接口的实现代码中，如范例；将上述代码放到TessPlugin的initGui()方法中。 \n 1.2.  获取车辆在路网二维平面上所有可移动的轨迹 \n 路网二维平面主要由路段连接段组成，路段由路段自身和车道组成，连接段由连接段自身和“车道连接”组成，路段、车道、“车道连接”都存在中心线断点序列，车辆都是在这些点构成的线上移动的。取得这些断点序列的步骤如下： \n 1）获取所有路段； \n 2）获取路段的所有车道； \n 3）获取车道的中心线断点序列 \n 4）获取所有连接段 \n 5）获取连接段的所有“车道连接” \n 6）获取“车道连接”中心线断点序列 \n 实现的代码如下： \n //获取所有路段 \n\tQList < ILink * >  lLink  =  gpTessInterface -> netInterface ( ) -> links ( ) ; \n\t foreach ( ILink  * pLink ,  lLink )   { \n\t\tQList < ILane * >  lLane  =  pLink -> lanes ( ) ; \n\t\t foreach ( ILane  * pLane ,  lLane )   { \n\t\t\tQList < QPointF >  lPoint =  pLane -> centerBreakPoints ( ) ; \n\t\t } \n\t } \n //获取所有连接段 \n\tQList < IConnector * >  lConn  =  gpTessInterface -> netInterface ( ) -> connectors ( ) ; \n\t foreach ( IConnector  * pConn ,  lConn )   { \n\t\tQList < ILaneConnector * >  lLaneConn  =  pConn -> laneConnectors ( ) ; \n\t\t foreach ( ILaneConnector  * pLC ,  lLaneConn )   { \n\t\t\tQList < QPointF >  lPoint  =  pLC -> centerBreakPoints ( ) ; \n\t\t } \n\t } \n 1.3.  增加车辆显示内容 \n 下图展示自动驾驶车辆，雷达探测范围100米。 \n \n 为了增添车辆展示的内容，可以实现接口CustomerSimulator的如下方法： \n void   rePaintVehicle   ( IVehicle  * pIVehicle ,  QPainter  * painter ) \n 2. 路网编辑 \n 2.1.  代码新建路网 \n 1- 新建link \n 2- 新建connector \n //第一条路段 \n\tQPointF startPoint  =   QPointF ( m2p ( - 300 ) ,   0 ) ; \n\tQPointF endPoint  =   QPointF ( m2p ( 300 ) ,   0 ) ; \n\tQList < QPointF >  lPoint ; \n\tlPoint  <<  startPoint ; \n\tlPoint  <<  endPoint ; \n\tILink  * pLink1  =  gpTessInterface -> netInterface ( ) -> createLink ( lPoint ,   7 ,   "曹安公路" ) ; \n\t if   ( pLink1 )   { \n\t\t //创建发车点 \n\t\tIDispatchPoint  * pDp  =  gpTessInterface -> netInterface ( ) -> createDispatchPoint ( pLink1 ) ; \n\t\t if   ( pDp )   { \n\t\t\tpDp -> addDispatchInterval ( 1 ,   2 ,   28 ) ; \n\t\t } \n\t } \n\n\t //创建第二条路段 \n\tstartPoint  =   QPointF ( m2p ( - 300 ) ,   m2p ( - 25 ) ) ; \n\tendPoint  =   QPointF ( m2p ( 300 ) ,   m2p ( - 25 ) ) ; \n\tlPoint . clear ( ) ; \n\tlPoint  <<  startPoint ; \n\tlPoint  <<  endPoint ; \n\tILink  * pLink2  =  gpTessInterface -> netInterface ( ) -> createLink ( lPoint ,   3 ,   "次干道" ) ; \n\t if   ( pLink2 )   { \n\t\t //创建发车点 \n\t\tIDispatchPoint  * pDp  =  gpTessInterface -> netInterface ( ) -> createDispatchPoint ( pLink2 ) ; \n\t\t if   ( pDp )   { \n\t\t\tpDp -> addDispatchInterval ( 1 ,   3600 ,   3600 ) ; \n\t\t } \n\t\t //修改车道类型 \n\t\tpLink2 -> lanes ( ) [ 0 ] -> setLaneType ( QObject :: tr ( "公交专用道" ) ) ; \n\t } \n\n\t //创建第三条路段 \n\tstartPoint  =   QPointF ( m2p ( - 300 ) ,   m2p ( 25 ) ) ; \n\tendPoint  =   QPointF ( m2p ( - 150 ) ,   m2p ( 25 ) ) ; \n\tlPoint . clear ( ) ; \n\tlPoint  <<  startPoint ; \n\tlPoint  <<  endPoint ; \n\tILink  * pLink3  =  gpTessInterface -> netInterface ( ) -> createLink ( lPoint ,   3 ) ; \n\t if   ( pLink3 )   { \n\t\t //创建发车点 \n\t\tIDispatchPoint  * pDp  =  gpTessInterface -> netInterface ( ) -> createDispatchPoint ( pLink3 ) ; \n\t\t if   ( pDp )   { \n\t\t\tpDp -> addDispatchInterval ( 1 ,   3600 ,   3600 ) ; \n\t\t } \n\t } \n\n\t //创建第四条路段 \n\tstartPoint  =   QPointF ( m2p ( - 50 ) ,   m2p ( 25 ) ) ; \n\tendPoint  =   QPointF ( m2p ( 50 ) ,   m2p ( 25 ) ) ; \n\tlPoint . clear ( ) ; \n\tlPoint  <<  startPoint ; \n\tlPoint  <<  endPoint ; \n\tILink  * pLink4  =  gpTessInterface -> netInterface ( ) -> createLink ( lPoint ,   3 ) ; \n\n\t //创建第五条路段 \n\tstartPoint  =   QPointF ( m2p ( 150 ) ,   m2p ( 25 ) ) ; \n\tendPoint  =   QPointF ( m2p ( 300 ) ,   m2p ( 25 ) ) ; \n\tlPoint . clear ( ) ; \n\tlPoint  <<  startPoint ; \n\tlPoint  <<  endPoint ; \n\tILink  * pLink5  =  gpTessInterface -> netInterface ( ) -> createLink ( lPoint ,   3 ,   "自定义限速路段" ) ; \n\t if   ( pLink5 )   { \n\t\tpLink5 -> setLimitSpeed ( 30 ) ; \n\t } \n\n\t //创建第六条路段 \n\tstartPoint  =   QPointF ( m2p ( - 300 ) ,   m2p ( 50 ) ) ; \n\tendPoint  =   QPointF ( m2p ( 300 ) ,   m2p ( 50 ) ) ; \n\tlPoint . clear ( ) ; \n\tlPoint  <<  startPoint ; \n\tlPoint  <<  endPoint ; \n\tILink  * pLink6  =  gpTessInterface -> netInterface ( ) -> createLink ( lPoint ,   3 ,   "动态发车路段" ) ; \n\t if   ( pLink6 )   { \n\t\tpLink6 -> setLimitSpeed ( 80 ) ; \n\t } \n\n\t //创建第七条路段 \n\tstartPoint  =   QPointF ( m2p ( - 300 ) ,   m2p ( 75 ) ) ; \n\tendPoint  =   QPointF ( m2p ( - 250 ) ,   m2p ( 75 ) ) ; \n\tlPoint . clear ( ) ; \n\tlPoint  <<  startPoint ; \n\tlPoint  <<  endPoint ; \n\tILink  * pLink7  =  gpTessInterface -> netInterface ( ) -> createLink ( lPoint ,   3 ) ; \n\t if   ( pLink7 )   { \n\t\tpLink7 -> setLimitSpeed ( 80 ) ; \n\t } \n\n\t //创建第八条路段 \n\tstartPoint  =   QPointF ( m2p ( - 50 ) ,   m2p ( 75 ) ) ; \n\tendPoint  =   QPointF ( m2p ( 300 ) ,   m2p ( 75 ) ) ; \n\tlPoint . clear ( ) ; \n\tlPoint  <<  startPoint ; \n\tlPoint  <<  endPoint ; \n\tILink  * pLink8  =  gpTessInterface -> netInterface ( ) -> createLink ( lPoint ,   3 ) ; \n\t if   ( pLink8 )   { \n\t\tpLink8 -> setLimitSpeed ( 80 ) ; \n\t } \n\n\t //创建第一条连接段 \n\t if   ( pLink3  &&  pLink4 )   { \n\t\tQList < int >  lFromLaneNumber  =   QList < int > ( )   <<   1   <<   2   <<   3 ; \n\t\tQList < int >  lToLaneNumber  =   QList < int > ( )   <<   1   <<   2   <<   3 ; \n\t\tIConnector  * pConn1  =  gpTessInterface -> netInterface ( ) -> createConnector ( pLink3 -> id ( ) ,  pLink4 -> id ( ) ,  lFromLaneNumber ,  lToLaneNumber\n\t\t\t ,   "连接段1" ) ; \n\t } \n\n\t //创建第二条连接段 \n\t if   ( pLink4  &&  pLink5 )   { \n\t\tIConnector  * pConn2  =  gpTessInterface -> netInterface ( ) -> createConnector ( pLink4 -> id ( ) ,  pLink5 -> id ( ) ,   QList < int > ( )   <<   1   <<   2   <<   3 ,   QList < int > ( )   <<   1   <<   2   <<   3 ,   "连接段2" ) ; \n\t } \n\n\t //创建第三条连接段 \n\t if   ( pLink7  &&  pLink8 )   { \n\t\tIConnector  * pConn3  =  gpTessInterface -> netInterface ( ) -> createConnector ( pLink7 -> id ( ) ,  pLink8 -> id ( ) ,   QList < int > ( )   <<   1   <<   2   <<   3 ,   QList < int > ( )   <<   1   <<   2   <<   3 ,   "动态发车连接段" ) ; \n\t } \n 2.2. 地图转TESSNG路网 \n 需要使用到Python工具，导入opendrive， osm shapely生成tessng路网；直接使用pytessng的工具代码; \n 截图： \n \n 工具链接： pytessng \n 安装命令： \n pip install pytessng\n 2.3. 修改路网元素 \n 1-修改删除link编号，名称，形状，长度，宽度等属性 \n 2-修改connector的laneconnector连接关系，形状； \n 3- 获取link, connector, connectorarea, laneconnector形状，属性 \n 用户可以先获取目标对象，在修改对象属性 \n 详见 接口详解 \n 2.4. 编辑路网附着物 \n 1-新建删除车道导向箭头； \n IGuidArrow* pGuideArrow = gpTessInterface->netInterface()->createGuidArrow(pRightLane, length, distToTerminal, arrowType);\n    qDebug() << "导向箭头类型为：" << pGuideArrow->arrowType() << endl;\n\n \n 2-限速区：指定车道位置设置，限速区的长度，生效时间, 速度值 \n //重新计算期望速度 \n bool   MySimulator :: reCalcdesirSpeed ( IVehicle *  pIVehicle ,  qreal &  inOutDesirSpeed )   { \n\t // L5最右侧车道50-100m处，限速10，持续30s \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   10 )   { \n\t\t //当前已仿真时间，单位：秒 \n\t\t long  simuTime  =  gpTessInterface -> simuInterface ( ) -> simuTimeIntervalWithAcceMutiples ( )   /   1000 ; \n\t\t if   ( ! mpSecondDevCasesObj -> reCalcdesirSpeedFlag )   { \n\t\t\t //当前已仿真时间，单位：毫秒 \n\t\t\tmpSecondDevCasesObj -> reCalcdesirSpeedStartTime  =  gpTessInterface -> simuInterface ( ) -> simuTimeIntervalWithAcceMutiples ( )   /   1000 ; \n\t\t\tmpSecondDevCasesObj -> reCalcdesirSpeedFlag  =   true ; \n\t\t\tmRunInfo  =   QStringLiteral ( "L5路段最右侧车道50-100m处设置限速区，限速10km/h，持续时间30s！" ) ; \n\t\t\t emit ( forRunInfo ( mRunInfo ) ) ; \n\t\t } \n\t\t if   ( pIVehicle -> vehicleDriving ( ) -> laneNumber ( )   ==   0   &&  pIVehicle -> roadId ( )   ==   5 )   { \n\t\t\t if   ( pIVehicle -> vehicleDriving ( ) -> distToStartPoint ( )   <   m2p ( 100 )   &&  pIVehicle -> vehicleDriving ( ) -> distToStartPoint ( )   >   m2p ( 50 ) )   { \n\t\t\t\tinOutDesirSpeed  =   10 ; \n\t\t\t } \n\t\t } \n\t\t if   ( simuTime  -  mpSecondDevCasesObj -> reCalcdesirSpeedStartTime  >=   30 )   { \n\t\t\tmRunInfo  =   QStringLiteral ( "L5路段最右侧车道50-100m处限速区已关闭，车辆正常行驶！" ) ; \n\t\t\t emit ( forRunInfo ( mRunInfo ) ) ; \n\t\t\tmpSecondDevCasesObj -> mActionControlMethodNumber  =   0 ; \n\t\t } \n\t\t return   true ; \n\t } \n\t return   false ; \n } \n \n 3-施工区：根据车辆序号和位置，施工区长度新建 \n Online :: DynaRoadWorkZoneParam workZone ; \n\t //道路ID \n\tworkZone . roadId  =   9 ; \n\t //施工区名称 \n\tworkZone . name  =   "施工区，限速60" ; \n\t //位置，距路段或连接段起点距离，单位米 \n\tworkZone . location  =   m2p ( 200 ) ; \n\t //施工区长度，单位米 \n\tworkZone . length  =   m2p ( 200 ) ; \n\t //车辆经过施工区的最大车速，单位千米/小时 \n\tworkZone . limitSpeed  =   m2p ( 60 ) ; \n\t //施工区施工时长，单位秒 \n\tworkZone . duration  =   50 ; \n\t //施工区起始车道 \n\tworkZone . mlFromLaneNumber . append ( 2 ) ; \n\t //创建施工区 \n\tIRoadWorkZone *  pZone  =  gpTessInterface -> netInterface ( ) -> createRoadWorkZone ( workZone ) ; \n \n 5-事故区：根据车道序号，位置，影响范围新建 \n Online :: DynaAccidentZoneParam accidentZone ; \n\t //道路ID \n\taccidentZone . roadId  =   9 ; \n\t //事故区名称 \n\taccidentZone . name  =   "最左侧车道发生事故" ; \n\t //位置，距路段或连接段起点距离，单位米 \n\taccidentZone . location  =   m2p ( 200 ) ; \n\t //事故区长度，单位米 \n\taccidentZone . length  =   m2p ( 50 ) ; \n\t //事故区起始车道序号列表 \n\taccidentZone . mlFromLaneNumber . append ( 2 ) ; \n\t //事故等级 \n\taccidentZone . level  =   1 ; \n\t //创建事故区 \n\tIAccidentZone *  pZone  =  gpTessInterface -> netInterface ( ) -> createAccidentZone ( accidentZone ) ; \n\n \n 6-公交站：根据车道序号，位置，长度，类型设置； \n //创建公交线路 \nIBusLine *  pBusLine  =  gpTessInterface -> netInterface ( ) -> createBusLine ( QList < ILink * > ( )   <<  pLink10  <<  pLink11 ) ; \n if   ( pBusLine )   { \n\t\t\tpBusLine -> setDesirSpeed ( m2p ( 60 ) ) ; \n } \n\n \n 详见接口详解 \n 3. 信控编辑 \n 3.1. 新建信号灯 \n 1- 根据车道序号，位置新建信号灯 \n //创建信号灯 \n\t for   ( int  i  =   0 ,  size  =  lConnLaneObjs . size ( ) ;  i  <  size ;   ++ i )   { \n\t\tISignalLamp *  pSignalLamp  =  gpTessInterface -> netInterface ( ) -> createSignalLamp ( pSignalPhase ,   QObject :: tr ( "信号灯%1" ) . arg ( i  +   1 ) ,  lConnLaneObjs [ i ] -> fromLaneObject ( ) -> id ( ) ,   lConnLaneObjs [ i ] -> toLaneObject ( ) -> id ( ) ,   m2p ( 2.0 ) ) ; \n\t } \n 3.2.  编辑信号灯组 \n 2- 新建信号灯组，设置信号相位相序和灯色 \n 核心代码 \n //创建示例路段和连接段 \nQList < ISection * >   SecondaryDevCases :: createExampleLinkAndConnector ( QString LinkName ,   int  Posy )   { \n\t //创建两条路段 \n\tQPointF startPoint1  =   QPointF ( m2p ( - 300 ) ,   m2p ( Posy ) ) ; //m2p(数字)后的坐标可以对上原点在中心的坐标，TESSNG中的坐标始终是像素 \n\tQPointF endPoint1  =   QPointF ( m2p ( - 50 ) ,   m2p ( Posy ) ) ; \n\tQList < QPointF >  lPoint1 ; \n\tlPoint1  <<  startPoint1  <<  endPoint1 ; \n\tILink *  pLink1  =  gpTessInterface -> netInterface ( ) -> createLink ( lPoint1 ,   3 ,  LinkName  +   QStringLiteral ( "路段1" ) ) ; \n\n\tQPointF startPoint2  =   QPointF ( m2p ( 50 ) ,   m2p ( Posy ) ) ; //m2p(数字)后的坐标可以对上原点在中心的坐标，TESSNG中的坐标始终是像素 \n\tQPointF endPoint2  =   QPointF ( m2p ( 300 ) ,   m2p ( Posy ) ) ; \n\tQList < QPointF >  lPoint2 ; \n\tlPoint2  <<  startPoint2  <<  endPoint2 ; \n\tILink *  pLink2  =  gpTessInterface -> netInterface ( ) -> createLink ( lPoint2 ,   3 ,  LinkName  +   QStringLiteral ( "路段2" ) ) ; \n\tIConnector *  pConn  =   nullptr ; \n\t //创建连接段 \n\t if   ( pLink1  &&  pLink2 )   { \n\t\tQList < int >  lFromLaneNumber  =   QList < int > ( )   <<   1   <<   2   <<   3 ; \n\t\tQList < int >  lToLaneNumber  =   QList < int > ( )   <<   1   <<   2   <<   3 ; \n\t\tpConn  =  gpTessInterface -> netInterface ( ) -> createConnector ( pLink1 -> id ( ) ,  pLink2 -> id ( ) ,  lFromLaneNumber ,  lToLaneNumber ,  LinkName  +   QStringLiteral ( "连接段" ) ) ; \n\t\t if   ( pConn )   { \n\t\t\t //连接段车道连接列表 \n\t\t\tQList < ILaneObject * >  lConnLaneObjs ; \n\t\t\tlConnLaneObjs  =  pConn -> laneObjects ( ) ; \n\t\t\t for   ( ILaneObject * &  pLaneObj  :  lConnLaneObjs )   { \n\t\t\t\t qDebug ( )   <<   "上游车道ID"   <<  pLaneObj -> fromLaneObject ( ) -> id ( )   <<   "下游车道ID"   <<  pLaneObj -> toLaneObject ( ) -> id ( )   <<  endl ; \n\t\t\t } \n\t\t } \n\t } \n\t return   QList < ISection * > ( )   <<  pLink1  <<  pLink2  <<  pConn ; \n } \n\n //信控编辑 \n void   SecondaryDevCases :: signalControllerEdit ( )   { \n\n\tQList < ISection * >  lLinksAndConnector  =   createExampleLinkAndConnector ( QStringLiteral ( "信控编辑" ) ,   - 50 ) ; \n\tILink *  pLink1  =  lLinksAndConnector . front ( ) -> castToLink ( ) ; \n\tIConnector *  pConn  =  lLinksAndConnector . back ( ) -> castToConnector ( ) ; \n\t //连接段车道连接列表 \n\tQList < ILaneObject * >  lConnLaneObjs ; \n\tlConnLaneObjs  =  pConn -> laneObjects ( ) ; \n\t //创建发车点 \n\t if   ( pLink1 )   { \n\t\t //创建发车点 \n\t\tIDispatchPoint *  pDp  =  gpTessInterface -> netInterface ( ) -> createDispatchPoint ( pLink1 ) ; \n\t\t if   ( pDp )   { \n\t\t\tpDp -> addDispatchInterval ( 1 ,   200 ,   400 ) ; //200秒400辆车 \n\t\t } \n\t } \n\t //创建信号灯组 \n\tISignalGroup *  pSignalGroup  =  gpTessInterface -> netInterface ( ) -> createSignalGroup ( QObject :: tr ( "信号灯组1" ) ,   60 ,   1 ,   3600 ) ; \n\t //创建相位,40秒绿灯，黄灯3秒，全红3秒 \n\tOnline :: ColorInterval  green ( "绿" ,   40 ) ,   yellow ( "黄" ,   3 ) ,   red ( "红" ,   3 ) ; \n\tISignalPhase *  pSignalPhase  =  gpTessInterface -> netInterface ( ) -> createSignalPhase ( pSignalGroup ,   QObject :: tr ( "信号灯组1相位1" ) , \n\t\t QList < Online :: ColorInterval > ( )   <<  green  <<  yellow  <<  red ) ; \n\t //创建信号灯 \n\t for   ( int  i  =   0 ,  size  =  lConnLaneObjs . size ( ) ;  i  <  size ;   ++ i )   { \n\t\tISignalLamp *  pSignalLamp  =  gpTessInterface -> netInterface ( ) -> createSignalLamp ( pSignalPhase ,   QObject :: tr ( "信号灯%1" ) . arg ( i  +   1 ) , \n\t\t\tlConnLaneObjs [ i ] -> fromLaneObject ( ) -> id ( ) ,  lConnLaneObjs [ i ] -> toLaneObject ( ) -> id ( ) ,   m2p ( 2.0 ) ) ; \n\t } \n } \n 3.3. 信控方案下发 \n 3- 支持双环结构信控方案下发（前提是已正确新建信号灯；已知一个路口所有进口道的流向及车道对应的信号灯id） \n 核心代码 \n //双环信控方案下发 \n void   SecondaryDevCases :: doubleRingSignalControl ( long  currentSimuTime )   { \n\t // 读取方案数据 \n\tQFile  jsonFile ( "./Data/Signal_Plan_Data_1109.json" ) ; \n\t if   ( ! jsonFile . open ( QIODevice :: ReadOnly  |  QIODevice :: Text ) )   { \n\t\t qDebug ( )   <<   "Error: Could not open Signal_Plan_Data_1109.json" ; \n\t\t return ; \n\t } \n\tQByteArray jsonData  =  jsonFile . readAll ( ) ; \n\tjsonFile . close ( ) ; \n\tQJsonDocument doc  =   QJsonDocument :: fromJson ( jsonData ) ; \n\tQJsonObject signalGroupsDict  =  doc . object ( ) ; \n\t for   ( QJsonObject :: iterator it  =  signalGroupsDict . begin ( ) ;  it  !=  signalGroupsDict . end ( ) ;   ++ it )   { \n\t\tQString groupName  =  it . key ( ) ; \n\t\tQJsonObject group  =  it . value ( ) . toObject ( ) ; \n\t\tISignalGroup *  pCurrentSignalGroup  =   nullptr ; \n\t\t // 通过灯组名称查询到灯组 \n\t\tQList < ISignalGroup * >  lAllSignalGroups  =  gpTessInterface -> netInterface ( ) -> signalGroups ( ) ; \n\t\t for   ( ISignalGroup * &  pSignalGroup  :  lAllSignalGroups )   { \n\t\t\t if   ( pSignalGroup -> groupName ( )   ==  groupName )   { \n\t\t\t\tpCurrentSignalGroup  =  pSignalGroup ; \n\t\t\t\t break ; \n\t\t\t } \n\t\t } \n\t\t if   ( ! pCurrentSignalGroup )   { \n\t\t\t qDebug ( )   <<   "FindError: The signalGroup not in current net." ; \n\t\t\t break ; \n\t\t } \n\t\t //获取当前灯组相位 \n\t\tQList < ISignalPhase * >  lCurrentSignalGroupPhases  =  pCurrentSignalGroup -> phases ( ) ; \n\t\t // 获取所有灯组的起始时间 \n\t\tQStringList lSignalGroupStartTime  =  group . keys ( ) ; \n\t\t for   ( QJsonObject :: iterator it2  =  group . begin ( ) ;  it2  !=  group . end ( ) ;   ++ it2 )   { \n\t\t\tQString startTime  =  it2 . key ( ) ; \n\t\t\t // 获取下一个元素的迭代器 \n\t\t\tQJsonObject :: iterator nextIt  =  std :: next ( it2 ) ; \n\t\t\tQString endTime  =   ( nextIt  !=  group . end ( ) )   ?  nextIt . key ( )   :   "24:00" ; \n\t\t\t // 起始时间和结束时间的秒数表示 \n\t\t\t long  startTimeSeconds  =   Functions :: timeToSeconds ( startTime ) ; \n\t\t\t long  endTimeSeconds  =   Functions :: timeToSeconds ( endTime ) ; \n\t\t\t // 若当前仿真时间位于当前时段内，修改当前时段信号灯组的相位 \n\t\t\t if   ( startTimeSeconds  <=  currentSimuTime  &&  currentSimuTime  <  endTimeSeconds )   { \n\t\t\t\tQJsonObject currentGroupData  =  it2 . value ( ) . toObject ( ) ; \n\t\t\t\t int  periodTime  =  currentGroupData [ QStringLiteral ( "cycle_time" ) ] . toInt ( ) ; \n\t\t\t\t int  yellowInteral  =  currentGroupData [ QStringLiteral ( "yellow_interval" ) ] . toInt ( ) ; \n\t\t\t\tQJsonArray phases  =  currentGroupData [ QStringLiteral ( "phases" ) ] . toArray ( ) ; \n\t\t\t\t // 修改周期 \n\t\t\t\tpCurrentSignalGroup -> setPeriodTime ( periodTime ) ; \n\t\t\t\t for   ( const  QJsonValueRef &  phase  :  phases )   { \n\t\t\t\t\tQJsonObject phaseObj  =  phase . toObject ( ) ; \n\t\t\t\t\tQString phaseName  =  phaseObj [ QStringLiteral ( "phase_name" ) ] . toString ( ) ; \n\t\t\t\t\t int  phaseNumber  =  phaseObj [ QStringLiteral ( "phase_number" ) ] . toInt ( ) ; \n\t\t\t\t\t qDebug ( )   <<   "phaseName"   <<  phaseName  <<  phaseNumber  <<  endl ; \n\t\t\t\t\tQList < Online :: ColorInterval >  lColorInterval ; \n\t\t\t\t\tlColorInterval . append ( Online :: ColorInterval ( QStringLiteral ( "红" ) ,  phaseObj [ QStringLiteral ( "start_time" ) ] . toInt ( ) ) ) ; \n\t\t\t\t\tlColorInterval . append ( Online :: ColorInterval ( QStringLiteral ( "绿" ) ,  phaseObj [ QStringLiteral ( "green_time" ) ] . toInt ( ) ) ) ; \n\t\t\t\t\tlColorInterval . append ( Online :: ColorInterval ( QStringLiteral ( "黄" ) ,  yellowInteral ) ) ; \n\t\t\t\t\t int  remainingTime  =  periodTime  -  phaseObj [ QStringLiteral ( "start_time" ) ] . toInt ( )   -  phaseObj [ QStringLiteral ( "green_time" ) ] . toInt ( )   -  yellowInteral ; \n\t\t\t\t\t if   ( remainingTime  >   0 )   { \n\t\t\t\t\t\tlColorInterval . append ( Online :: ColorInterval ( QStringLiteral ( "红" ) ,  remainingTime ) ) ; \n\t\t\t\t\t } \n\t\t\t\t\t // 当前灯组包含的相位序号 \n\t\t\t\t\tISignalPhase *  pCurrentPhase  =   nullptr ; \n\t\t\t\t\t for   ( ISignalPhase * &  pCurrentSignalGroupPhase  :  lCurrentSignalGroupPhases )   { \n\t\t\t\t\t\t if   ( phaseNumber  ==  pCurrentSignalGroupPhase -> number ( ) )   { \n\t\t\t\t\t\t\tpCurrentPhase  =  pCurrentSignalGroupPhase ; \n\t\t\t\t\t\t\t break ; \n\t\t\t\t\t\t } \n\t\t\t\t\t } \n\t\t\t\t\t // 若已存在该相位，修改相位灯色顺序，否则添加相位 \n\t\t\t\t\t if   ( pCurrentPhase )   { \n\t\t\t\t\t\t // 修改相位 \n\t\t\t\t\t\tpCurrentPhase -> setColorList ( lColorInterval ) ; \n\t\t\t\t\t\t qDebug ( )   <<  pCurrentPhase -> id ( )   <<   "相位设置成功"   <<  endl ; \n\t\t\t\t\t } \n\t\t\t\t\t else   { \n\t\t\t\t\t\tISignalPhase *  pSignalPhase  =  gpTessInterface -> netInterface ( ) -> createSignalPhase ( pCurrentSignalGroup ,  phaseName ,  lColorInterval ) ; \n\t\t\t\t\t\t // 设置相位序号 \n\t\t\t\t\t\tpSignalPhase -> setNumber ( phaseNumber ) ; \n\t\t\t\t\t\t qDebug ( )   <<  pSignalPhase -> id ( )   <<   "相位创建成功"   <<  endl ; \n\t\t\t\t\t } \n\t\t\t\t\t // 设置相位包含的信号灯 \n\t\t\t\t\tQJsonArray lampList  =  phaseObj [ QStringLiteral ( "lamp_lst" ) ] . toArray ( ) ; \n\t\t\t\t\t for   ( const  QJsonValue &  lampId  :  lampList )   { \n\t\t\t\t\t\tISignalLamp *  pLamp  =  gpTessInterface -> netInterface ( ) -> findSignalLamp ( lampId . toInt ( ) ) ; \n\t\t\t\t\t\t if   ( ! pLamp )   { \n\t\t\t\t\t\t\t /*\n\t\t\t\t\t\t\t * 目前一个信号灯属于多个相位，相位间不交叉。\n\t\t\t\t\t\t\t * 因此如果要实际下发方案时，应按照仿真时间实时管理相位序号。\n\t\t\t\t\t\t\t */ \n\t\t\t\t\t\t\tpLamp -> setPhaseNumber ( phaseNumber ) ; \n\t\t\t\t\t\t\t qDebug ( )   <<  pLamp -> id ( )   <<   "序号信号灯相位设置成功"   <<  endl ; \n\t\t\t\t\t\t } \n\t\t\t\t\t\t else   { \n\t\t\t\t\t\t\t qDebug ( )   <<   "FindError:未查找到信号灯:"   <<  lampId . toInt ( ) ; \n\t\t\t\t\t\t } \n\t\t\t\t\t } \n\t\t\t\t } \n\t\t\t\t break ; \n\t\t\t } \n\n\t\t } \n\t } \n } \n\n \n 案例效果： \n 4. 需求加载与管理 \n 4.1. 流量加载 \n 支持多种方式加载车辆，供用户灵活使用 \n 1-新建发车点，设置发车流量时间间隔；设置发车分布；设置车辆组成，车辆类型（发车点已创建后无法修改车辆组成和车辆类型，可以创建车辆组成和车辆类型后设置发车点）； \n \n \n 2-动态发车：不设置发车点，在指定车道和位置处加载车辆（一辆一辆加载） \n \n 核心代码 \n //流量加载示例路段和连接段创建 \n void   SecondaryDevCases :: trafficLoadingPrePare ( )   { \n\tQList < ISection * >  lLinksAndConnector  =   createExampleLinkAndConnector ( QStringLiteral ( "流量加载" ) ,   - 50 ) ; \n\tILink *  pLink1  =  lLinksAndConnector . front ( ) -> castToLink ( ) ; \n\t /* 2.动态发车 */ \n\tQList < ISection * >  lLinksAndConnectorDynaVehi  =   createExampleLinkAndConnector ( QStringLiteral ( "动态发车" ) ,   - 25 ) ; \n\tILink *  pLink3  =  lLinksAndConnectorDynaVehi . front ( ) -> castToLink ( ) ; \n\tlTrafficLoadingSections  <<  pLink1 ; \n\tlTrafficLoadingSections  <<  pLink3 ; \n } \n\n //流量加载 \n void   SecondaryDevCases :: trafficLoading ( float  planNumber )   { \n\t static   bool  bVehiCompositionFlag  =   false ; \n\tILink *  pLink1  =   nullptr ; \n\tILink *  pLink3  =   nullptr ; \n\t if   ( ! lTrafficLoadingSections . isEmpty ( ) )   { \n\t\tpLink1  =  lTrafficLoadingSections . front ( ) -> castToLink ( ) ; \n\t\tpLink3  =  lTrafficLoadingSections . back ( ) -> castToLink ( ) ; \n\t } \n\t if   ( planNumber  ==   1   &&   ! bVehiCompositionFlag )   { \n\t\t // 创建车辆组成及指定车辆类型 \n\t\tQList < Online :: VehiComposition >  lVehiTypeProportion ; \n\t\t // 车型组成：小客车0.3，大客车0.2，公交车0.1，货车0.4 \n\t\tlVehiTypeProportion . push_back ( Online :: VehiComposition ( 1 ,   0.3 ) ) ; \n\t\tlVehiTypeProportion . push_back ( Online :: VehiComposition ( 2 ,   0.2 ) ) ; \n\t\tlVehiTypeProportion . push_back ( Online :: VehiComposition ( 3 ,   0.1 ) ) ; \n\t\tlVehiTypeProportion . push_back ( Online :: VehiComposition ( 4 ,   0.4 ) ) ; \n\t\t int  vehiCompositionID  =  gpTessInterface -> netInterface ( ) -> createVehicleComposition ( "动态创建车型组成" ,  lVehiTypeProportion ) ; \n\t\t if   ( vehiCompositionID  !=   - 1 )   { \n\t\t\t qDebug ( )   <<   "车型组成创建成功，id为："   <<  vehiCompositionID  <<  endl ; \n\t\t\t // 新建发车点,车型组成ID为动态创建的，600秒发300辆车 \n\t\t\t if   ( pLink1 )   { \n\t\t\t\tIDispatchPoint *  dp  =  gpTessInterface -> netInterface ( ) -> createDispatchPoint ( pLink1 ) ; \n\t\t\t\t if   ( dp )   { \n\t\t\t\t\tdp -> addDispatchInterval ( vehiCompositionID ,   600 ,   300 ) ; \n\t\t\t\t\tbVehiCompositionFlag  =   true ; \n\t\t\t\t } \n\t\t\t } \n\t\t } \n\t } \n\t else   if   ( planNumber  ==   2 )   { \n\t\t if   ( pLink3 )   { \n\t\t\tOnline :: DynaVehiParam dvpLane0 ,  dvpLane1 ,  dvpLane2 ; \n\t\t\t // 在指定车道和位置动态加载车辆(示例：在0,1,2车道不同位置动态加载车辆) \n\t\t\tdvpLane0 . vehiTypeCode  =   1 ; \n\t\t\tdvpLane1 . vehiTypeCode  =   2 ; \n\t\t\tdvpLane2 . vehiTypeCode  =   3 ; \n\t\t\tdvpLane0 . roadId  =  pLink3 -> id ( ) ; \n\t\t\tdvpLane1 . roadId  =  pLink3 -> id ( ) ; \n\t\t\tdvpLane2 . roadId  =  pLink3 -> id ( ) ; \n\t\t\tdvpLane0 . laneNumber  =   0 ; \n\t\t\tdvpLane1 . laneNumber  =   1 ; \n\t\t\tdvpLane2 . laneNumber  =   2 ; \n\t\t\tdvpLane0 . dist  =   m2p ( 50 ) ; \n\t\t\tdvpLane1 . dist  =   m2p ( 100 ) ; \n\t\t\tdvpLane2 . dist  =   m2p ( 50 ) ; \n\t\t\tdvpLane0 . speed  =   20 ; \n\t\t\tdvpLane1 . speed  =   30 ; \n\t\t\tdvpLane2 . speed  =   40 ; \n\t\t\tdvpLane0 . color  =   "#FF0000" ; \n\t\t\tdvpLane1 . color  =   "#008000" ; \n\t\t\tdvpLane2 . color  =   "#0000FF" ; \n\t\t\t auto  vehi_lane0  =  gpTessInterface -> simuInterface ( ) -> createGVehicle ( dvpLane0 ) ; \n\t\t\t auto  vehi_lane1  =  gpTessInterface -> simuInterface ( ) -> createGVehicle ( dvpLane1 ) ; \n\t\t\t auto  vehi_lane2  =  gpTessInterface -> simuInterface ( ) -> createGVehicle ( dvpLane2 ) ; \n\t\t } \n\t } \n } \n \n 3- 路径（veh path）加载：单车车辆路径（根据方式4间接实现） \n 或者通过IVehicleDriving类实现 \n // 修改车辆路径，将L1路段所有车辆修改为右转路径 \n\t for   ( IVehicle * &  vehi  :  lAllVehi )   { \n\t\t\t if   ( vehi -> roadId ( )   ==   1 )   { \n\t\t\t\tQList < IDecisionPoint * >  lDecisionPoint  =  gpTessInterface -> netInterface ( ) -> decisionPoints ( ) ; \n\t\t\t\tIDecisionPoint *  pDecisionPointInLink1  =   nullptr ; \n\t\t\t\t for   ( IDecisionPoint * &  pDecisionPoint  :  lDecisionPoint )   { \n\t\t\t\t\t if   ( pDecisionPoint -> link ( ) -> id ( )   ==   1 )   { \n\t\t\t\t\t\tpDecisionPointInLink1  =  pDecisionPoint ; \n\t\t\t\t\t\t break ; \n\t\t\t\t\t } \n\t\t\t\t } \n\t\t\t\tQList < IRouting * >  lRoutingsOfDecisionPointInLink1 ; \n\t\t\t\t if   ( pDecisionPointInLink1 )   { \n\t\t\t\t\tlRoutingsOfDecisionPointInLink1  =  pDecisionPointInLink1 -> routings ( ) ; \n\t\t\t\t } \n\t\t\t\t if   ( ! lRoutingsOfDecisionPointInLink1 . isEmpty ( ) )   { \n\t\t\t\t\t if   ( vehi -> routing ( )   !=  lRoutingsOfDecisionPointInLink1 . back ( ) )   { \n\t\t\t\t\t\t if   ( vehi -> vehicleDriving ( ) -> setRouting ( lRoutingsOfDecisionPointInLink1 . back ( ) ) )   { \n\t\t\t\t\t\t\tmRunInfo  =   QStringLiteral ( "L1路段所有车辆路径修改为右转！" ) ; \n\t\t\t\t\t\t\t emit ( forRunInfo ( mRunInfo ) ) ; \n\t\t\t\t\t\t } \n\t\t\t\t\t } \n\t\t\t\t } \n\t\t\t } \n\t\t } \n \n 4- flow 路径加载：发车点+静态路径 \n //路径加载 \n void   SecondaryDevCases :: flowLoading ( float  planNumber ,   long  currentTime )   { \n\t static   bool  bPlanNumberFlag1  =   false ; \n\t static   bool  bPlanNumberFlag2  =   false ; \n\t //标准四岔路口流量加载，L3-C2-L10为例 \n\t if   ( planNumber  ==   1   &&   ! bPlanNumberFlag1 )   { \n\t\t // 根据路段ID获取路段 \n\t\tILink *  pLink3  =  gpTessInterface -> netInterface ( ) -> findLink ( 3 ) ; \n\t\tILink *  pLink10  =  gpTessInterface -> netInterface ( ) -> findLink ( 10 ) ; \n\t\tILink *  pLink6  =  gpTessInterface -> netInterface ( ) -> findLink ( 6 ) ; \n\t\tILink *  pLink7  =  gpTessInterface -> netInterface ( ) -> findLink ( 7 ) ; \n\t\tILink *  pLink8  =  gpTessInterface -> netInterface ( ) -> findLink ( 8 ) ; \n\t\t //新建发车点 \n\t\t if   ( pLink3 )   { \n\t\t\tIDispatchPoint *  dp  =  gpTessInterface -> netInterface ( ) -> createDispatchPoint ( pLink3 ) ; \n\t\t\t if   ( dp )   { \n\t\t\t\tdp -> addDispatchInterval ( 1 ,   600 ,   300 ) ; \n\t\t\t } \n\t\t } \n\t\t //创建决策点 \n\t\tmpDecisionPoint  =  gpTessInterface -> netInterface ( ) -> createDecisionPoint ( pLink3 ,   m2p ( 30 ) ) ; \n\t\t //创建路径(左，直，右) \n\t\tIRouting *  decisionRoutingLeft  =  gpTessInterface -> netInterface ( ) -> createDeciRouting ( mpDecisionPoint ,   QList < ILink * > ( )   <<  pLink3  <<  pLink10  <<  pLink6 ) ; \n\t\tIRouting *  decisionRoutingStraight  =  gpTessInterface -> netInterface ( ) -> createDeciRouting ( mpDecisionPoint ,   QList < ILink * > ( )   <<  pLink3  <<  pLink10  <<  pLink8 ) ; \n\t\tIRouting *  decisionRoutingRight  =  gpTessInterface -> netInterface ( ) -> createDeciRouting ( mpDecisionPoint ,   QList < ILink * > ( )   <<  pLink3  <<  pLink10  <<  pLink7 ) ; \n\t\t //分配左直右流量比 \n\t\t_RoutingFLowRatio _flowRatioLeft ,  _flowRatioStraight ,  _flowRatioRight ; \n\t\t_flowRatioLeft . RoutingFLowRatioID  =   1 ; \n\t\t_flowRatioLeft . routingID  =  decisionRoutingLeft -> id ( ) ; \n\t\t_flowRatioLeft . startDateTime  =   0 ; \n\t\t_flowRatioLeft . endDateTime  =   999999 ; \n\t\t_flowRatioLeft . ratio  =   2.0 ; \n\t\t_flowRatioStraight . RoutingFLowRatioID  =   2 ; \n\t\t_flowRatioStraight . routingID  =  decisionRoutingStraight -> id ( ) ; \n\t\t_flowRatioStraight . startDateTime  =   0 ; \n\t\t_flowRatioStraight . endDateTime  =   999999 ; \n\t\t_flowRatioStraight . ratio  =   3.0 ; \n\t\t_flowRatioRight . RoutingFLowRatioID  =   3 ; \n\t\t_flowRatioRight . routingID  =  decisionRoutingRight -> id ( ) ; \n\t\t_flowRatioRight . startDateTime  =   0 ; \n\t\t_flowRatioRight . endDateTime  =   999999 ; \n\t\t_flowRatioRight . ratio  =   1.0 ; \n\t\t // 决策点数据 \n\t\t_DecisionPoint _decisionPointData ; \n\t\t_decisionPointData . deciPointID  =  mpDecisionPoint -> id ( ) ; \n\t\t_decisionPointData . deciPointName  =  mpDecisionPoint -> name ( ) ; \n\t\tQPointF decisionPointPos ; \n\t\t if   ( mpDecisionPoint -> link ( ) -> getPointByDist ( mpDecisionPoint -> distance ( ) ,  decisionPointPos ) )   { \n\t\t\t_decisionPointData . X  =  decisionPointPos . x ( ) ; \n\t\t\t_decisionPointData . Y  =  decisionPointPos . y ( ) ; \n\t\t\t_decisionPointData . Z  =  mpDecisionPoint -> link ( ) -> z ( ) ; \n\t\t } \n\t\t //更新决策点及其各路径不同时间段流量比 \n\t\tmpDecisionPoint  =  gpTessInterface -> netInterface ( ) -> updateDecipointPoint ( _decisionPointData ,   QList < _RoutingFLowRatio > ( )   <<  _flowRatioLeft  <<  _flowRatioStraight  <<  _flowRatioRight ) ; \n\t\tbPlanNumberFlag1  =   true ; \n\t } \n\t //移除右转路径 \n\t else   if   ( planNumber  ==   2   &&  bPlanNumberFlag1  &&   ! bPlanNumberFlag2 )   { \n\t\t if   ( gpTessInterface -> netInterface ( ) -> removeDeciRouting ( mpDecisionPoint ,  mpDecisionPoint -> routings ( ) . back ( ) ) )   { \n\t\t\tbPlanNumberFlag2  =   true ; \n\t\t\t qDebug ( )   <<   "删除右转路径成功"   <<  endl ; \n\t\t } \n\t } \n\t else   if   ( planNumber  ==   3 )   { \n\t\t flowLoadingSection ( currentTime ) ; \n\t } \n } \n\n \n 5- 断面流量+转向比例（路径比例）加载 \n //路径断面流量加载 \n void   SecondaryDevCases :: flowLoadingSection ( long  currentTime )   { \n\t // 读取方案数据 \n\tQFile  jsonFile ( "./Data/flow_ratio_quarter.json" ) ; \n\t if   ( ! jsonFile . open ( QIODevice :: ReadOnly  |  QIODevice :: Text ) )   { \n\t\t qDebug ( )   <<   "Error: Could not open flow_ratio_quarter.json" ; \n\t\t return ; \n\t } \n\tQByteArray jsonData  =  jsonFile . readAll ( ) ; \n\tjsonFile . close ( ) ; \n\tQJsonDocument doc  =   QJsonDocument :: fromJson ( jsonData ) ; \n\tQJsonObject flowRatioQuarterDict  =  doc . object ( ) ; \n\t for   ( QJsonObject :: iterator it  =  flowRatioQuarterDict . begin ( ) ;  it  !=  flowRatioQuarterDict . end ( ) ;   ++ it )   { \n\t\t int  linkId  =  it . key ( ) . toInt ( ) ; \n\t\tQJsonObject quarterRatios  =  it . value ( ) . toObject ( ) ; \n\t\tIDecisionPoint *  pCurrentDecisionPoint  =   nullptr ; \n\t\t //查找决策点 \n\t\tQList < IDecisionPoint * >  lDecisionPoints  =  gpTessInterface -> netInterface ( ) -> decisionPoints ( ) ; \n\t\t for   ( IDecisionPoint * &  pDecisionPoint  :  lDecisionPoints )   { \n\t\t\t if   ( pDecisionPoint -> link ( ) -> id ( )   ==  linkId )   { \n\t\t\t\tpCurrentDecisionPoint  =  pDecisionPoint ; \n\t\t\t\t break ; \n\t\t\t } \n\t\t } \n\t\t if   ( pCurrentDecisionPoint )   { \n\t\t\t for   ( QJsonObject :: iterator it2  =  quarterRatios . begin ( ) ;  it2  !=  quarterRatios . end ( ) ;   ++ it2 )   { \n\t\t\t\tQString quarterStartTime  =  it2 . key ( ) ; \n\t\t\t\t long  quarterStartTimeSeconds  =   Functions :: timeToSeconds ( quarterStartTime ) ; \n\t\t\t\tQJsonObject :: iterator nextIt  =  std :: next ( it2 ) ; \n\t\t\t\tQString quarterEndTime  =   ( nextIt  !=  quarterRatios . end ( ) )   ?  nextIt . key ( )   :   "24:00" ; \n\t\t\t\t long  quarterEndTimeSeconds  =   Functions :: timeToSeconds ( quarterEndTime ) ; \n\t\t\t\t if   ( currentTime  <  quarterEndTimeSeconds  &&  currentTime  >=  quarterStartTimeSeconds )   { \n\t\t\t\t\t qDebug ( )   <<  quarterStartTime  <<  quarterEndTimeSeconds  <<  endl ; \n\t\t\t\t\tQJsonObject quarterRatio  =  it2 . value ( ) . toObject ( ) ; \n\t\t\t\t\tQList < IRouting * >  lDecisionPointRoutings  =  pCurrentDecisionPoint -> routings ( ) ; \n\t\t\t\t\t if   ( lDecisionPointRoutings . size ( )   ==   3 )   { \n\t\t\t\t\t\t // 分配左、直、右流量比 \n\t\t\t\t\t\t_RoutingFLowRatio _flowRatioLeft ,  _flowRatioStraight ,  _flowRatioRight ; \n\t\t\t\t\t\t_flowRatioLeft . RoutingFLowRatioID  =  lDecisionPointRoutings [ 0 ] -> id ( ) ; \n\t\t\t\t\t\t_flowRatioLeft . routingID  =  lDecisionPointRoutings [ 0 ] -> id ( ) ; \n\t\t\t\t\t\t_flowRatioLeft . startDateTime  =   1 ; \n\t\t\t\t\t\t_flowRatioLeft . endDateTime  =   99999 ; \n\t\t\t\t\t\t_flowRatioLeft . ratio  =   static_cast < long > ( quarterRatio [ "left" ] . toInt ( ) ) ; \n\t\t\t\t\t\t_flowRatioStraight . RoutingFLowRatioID  =  lDecisionPointRoutings [ 1 ] -> id ( ) ; \n\t\t\t\t\t\t_flowRatioStraight . routingID  =  lDecisionPointRoutings [ 1 ] -> id ( ) ; \n\t\t\t\t\t\t_flowRatioStraight . startDateTime  =   1 ; \n\t\t\t\t\t\t_flowRatioStraight . endDateTime  =   99999 ; \n\t\t\t\t\t\t_flowRatioStraight . ratio  =   static_cast < long > ( quarterRatio [ "straight" ] . toInt ( ) ) ; \n\t\t\t\t\t\t_flowRatioRight . RoutingFLowRatioID  =  lDecisionPointRoutings [ 2 ] -> id ( ) ; \n\t\t\t\t\t\t_flowRatioRight . routingID  =  lDecisionPointRoutings [ 2 ] -> id ( ) ; \n\t\t\t\t\t\t_flowRatioRight . startDateTime  =   1 ; \n\t\t\t\t\t\t_flowRatioRight . endDateTime  =   99999 ; \n\t\t\t\t\t\t_flowRatioRight . ratio  =   static_cast < long > ( quarterRatio [ "right" ] . toInt ( ) ) ; \n\t\t\t\t\t\t // 决策点数据 \n\t\t\t\t\t\t_DecisionPoint _decisionPointData ; \n\t\t\t\t\t\t_decisionPointData . deciPointID  =  pCurrentDecisionPoint -> id ( ) ; \n\t\t\t\t\t\t_decisionPointData . deciPointName  =  pCurrentDecisionPoint -> name ( ) ; \n\t\t\t\t\t\tQPointF decisionPointPos ; \n\t\t\t\t\t\t if   ( pCurrentDecisionPoint -> link ( ) -> getPointByDist ( pCurrentDecisionPoint -> distance ( ) ,  decisionPointPos ) )   { \n\t\t\t\t\t\t\t_decisionPointData . X  =  decisionPointPos . x ( ) ; \n\t\t\t\t\t\t\t_decisionPointData . Y  =  decisionPointPos . y ( ) ; \n\t\t\t\t\t\t\t_decisionPointData . Z  =  pCurrentDecisionPoint -> link ( ) -> z ( ) ; \n\t\t\t\t\t\t } \n\t\t\t\t\t\t //更新决策点及其各路径不同时间段流量比 \n\t\t\t\t\t\tIDecisionPoint *  pUpdatedCurrentDecisionPoint  =  gpTessInterface -> netInterface ( ) -> updateDecipointPoint ( _decisionPointData ,   QList < _RoutingFLowRatio > ( )   <<  _flowRatioLeft  <<  _flowRatioStraight  <<  _flowRatioRight ) ; \n\t\t\t\t\t\t if   ( pUpdatedCurrentDecisionPoint )   { \n\t\t\t\t\t\t\t qDebug ( )   <<  quarterStartTime  <<   "流量更新成功"   <<  endl ; \n\t\t\t\t\t\t } \n\t\t\t\t\t } \n\t\t\t\t\t else \n\t\t\t\t\t { \n\t\t\t\t\t\t qDebug ( )   <<  pCurrentDecisionPoint -> id ( )   <<   "决策点需要包含3条路径"   <<  endl ; \n\t\t\t\t\t } \n\t\t\t\t\t break ; \n\t\t\t\t } \n\t\t\t } \n\t\t } \n\t } \n } \n 4.2.  路径管理 \n 1- 新建决策点；新建决策路径，编辑决策路径流量比例，时间，路径的link,connector，删除路径。 \n \t\t //创建决策点 \n\t\tmpDecisionPoint  =  gpTessInterface -> netInterface ( ) -> createDecisionPoint ( pLink3 ,   m2p ( 30 ) ) ; \n\t\t //创建路径(左，直，右) \n\t\tIRouting *  decisionRoutingLeft  =  gpTessInterface -> netInterface ( ) -> createDeciRouting ( mpDecisionPoint ,   QList < ILink * > ( )   <<  pLink3  <<  pLink10  <<  pLink6 ) ; \n\t\tIRouting *  decisionRoutingStraight  =  gpTessInterface -> netInterface ( ) -> createDeciRouting ( mpDecisionPoint ,   QList < ILink * > ( )   <<  pLink3  <<  pLink10  <<  pLink8 ) ; \n\t\tIRouting *  decisionRoutingRight  =  gpTessInterface -> netInterface ( ) -> createDeciRouting ( mpDecisionPoint ,   QList < ILink * > ( )   <<  pLink3  <<  pLink10  <<  pLink7 ) ; \n\t\t //分配左直右流量比 \n\t\t_RoutingFLowRatio _flowRatioLeft ,  _flowRatioStraight ,  _flowRatioRight ; \n\t\t_flowRatioLeft . RoutingFLowRatioID  =   1 ; \n\t\t_flowRatioLeft . routingID  =  decisionRoutingLeft -> id ( ) ; \n\t\t_flowRatioLeft . startDateTime  =   0 ; \n\t\t_flowRatioLeft . endDateTime  =   999999 ; \n\t\t_flowRatioLeft . ratio  =   2.0 ; \n\t\t_flowRatioStraight . RoutingFLowRatioID  =   2 ; \n\t\t_flowRatioStraight . routingID  =  decisionRoutingStraight -> id ( ) ; \n\t\t_flowRatioStraight . startDateTime  =   0 ; \n\t\t_flowRatioStraight . endDateTime  =   999999 ; \n\t\t_flowRatioStraight . ratio  =   3.0 ; \n\t\t_flowRatioRight . RoutingFLowRatioID  =   3 ; \n\t\t_flowRatioRight . routingID  =  decisionRoutingRight -> id ( ) ; \n\t\t_flowRatioRight . startDateTime  =   0 ; \n\t\t_flowRatioRight . endDateTime  =   999999 ; \n\t\t_flowRatioRight . ratio  =   1.0 ; \n\t\t // 决策点数据 \n\t\t_DecisionPoint _decisionPointData ; \n\t\t_decisionPointData . deciPointID  =  mpDecisionPoint -> id ( ) ; \n\t\t_decisionPointData . deciPointName  =  mpDecisionPoint -> name ( ) ; \n\t\tQPointF decisionPointPos ; \n\t\t if   ( mpDecisionPoint -> link ( ) -> getPointByDist ( mpDecisionPoint -> distance ( ) ,  decisionPointPos ) )   { \n\t\t\t_decisionPointData . X  =  decisionPointPos . x ( ) ; \n\t\t\t_decisionPointData . Y  =  decisionPointPos . y ( ) ; \n\t\t\t_decisionPointData . Z  =  mpDecisionPoint -> link ( ) -> z ( ) ; \n\t\t } \n\t\t //更新决策点及其各路径不同时间段流量比 \n\t\tmpDecisionPoint  =  gpTessInterface -> netInterface ( ) -> updateDecipointPoint ( _decisionPointData ,   QList < _RoutingFLowRatio > ( )   <<  _flowRatioLeft  <<  _flowRatioStraight  <<  _flowRatioRight ) ; \n\t\tbPlanNumberFlag1  =   true ; \n\t } \n\t //移除右转路径 \n\t else   if   ( planNumber  ==   2   &&  bPlanNumberFlag1  &&   ! bPlanNumberFlag2 )   { \n\t\t if   ( gpTessInterface -> netInterface ( ) -> removeDeciRouting ( mpDecisionPoint ,  mpDecisionPoint -> routings ( ) . back ( ) ) )   { \n\t\t\tbPlanNumberFlag2  =   true ; \n\t\t\t qDebug ( )   <<   "删除右转路径成功"   <<  endl ; \n\t\t } \n\t } \n\t else   if   ( planNumber  ==   3 )   { \n\t\t flowLoadingSection ( currentTime ) ; \n\t } \n \n 2 - 运行过程中编辑决策路径的属性（流量比例，时间段信息），暂时不要求新增，删除，修改已有路径的“路径”（link,connector） \n 见CustomerSimulator \n QList < Online :: DecipointFlowRatioByInterval >   MySimulator :: calcDynaFlowRatioParameters ( ) \n { \n\tQList < Online :: DecipointFlowRatioByInterval >  lDecipointFLowRatioByInterval ; \n\t long  batchNumber  =  gpTessInterface -> simuInterface ( ) -> batchNumber ( ) ; \n\t if   ( batchNumber  ==   100 * 1000 ) \n\t { \n\t\tOnline :: DecipointFlowRatioByInterval dfi  =   Online :: DecipointFlowRatioByInterval ( ) ; \n\t\tdfi . deciPointID  =   1 ; \n\t\tdfi . startDateTime  =   1 ; \n\t\tdfi . endDateTime  =   84000 ; \n\t\tOnline :: RoutingFlowRatio rfr1  =   Online :: RoutingFlowRatio ( 1 ,   10 ) ; \n\t\tOnline :: RoutingFlowRatio rfr2  =   Online :: RoutingFlowRatio ( 2 ,   1 ) ; \n\t\tdfi . mlRoutingFlowRatio  <<  rfr1 ; \n\t\tdfi . mlRoutingFlowRatio  <<  rfr2 ; \n\t\tlDecipointFLowRatioByInterval  <<  dfi ; \n\t } \n\t return  lDecipointFLowRatioByInterval ; \n } \n \n 以上两点需求可在流量加载中找到实现方式。 \n 4.3.  路径重构 \n 1- 断面流量+转向流量重构车辆路径，并加载到仿真中;(暂时忽略) \n 2- OD数据重构路径，并加载到仿真中(暂时忽略) \n 用户可以利用自有算法实现OD分配、路径重构，然后依据4.1中所述的流量加载方式实现TESSNG 软件加载路径重构结果 \n 5. 仿真运行 \n 5.1. 倒车入库 \n 在实现自动泊车的仿真及调度时需要展示车辆倒车入库的过程，这个过程可让车辆顺向前移，将车辆旋转180度，展现的便是倒着行驶状态。 \n \n 为了实现倒着行驶效果，可以实现CustomerSimulator的如下方法 \n bool   reCalcAngle ( IVehicle  * pIVehicle ,  qreal  & outAngle ) \n 5.2. 循环仿真 \n 对加载的路网启动仿真后，不需要人工干预的情况下重复仿真指定次数，且每次仿真前自动进行参数设置，仿真后输出仿真结果到文件。 \n 1）、仿真前判断当前仿真路网与上次仿真路网是否相同，如果不同设置仿真次数为1； \n 2）、仿真结束后判断仿真次数是否小于指定次数，如果小于指定次数则发送要求仿真的消息给TESSNG主窗体，TESSNG主窗体启动仿真。 \n //仿真结束后的处理 \n void   MySimulator :: afterStop ( )   { \n\t //QDateTime dt = QDateTime::fromMSecsSinceEpoch(mrStartMSecs); \n\t //QString dtStr = dt.toString("yyyy年MM月dd日 hh时mm分ss秒"); \n\t //QString startDtStr = QString("仿真开始现实时间:").append(dtStr); \n\n\t //dtStr = QDateTime::currentDateTime().toString("yyyy年MM月dd日 hh时mm分ss秒"); \n\t //QString endDtStr = QString("仿真结束现实时间:").append(dtStr); \n\n\t //QMessageBox::information(nullptr, QString(), QString().append(startDtStr).append("\\n").append(endDtStr)); \n\n\tmSimuCount ++ ; \n\tQString netfilePath  =  gpTessInterface -> netInterface ( ) -> netFilePath ( ) ; \n\t if   ( netfilePath . contains ( "深圳南海大道创业路交叉口CFI方案" )   &&  mSimuCount  <   3 ) \n\t { \n\t\t emit ( forReStartSimu ( ) ) ; \n\t } \n\n } \n 5.3. 流程控制 \n 1-开始仿真 \n 2- 暂停仿真 \n 3- 恢复仿真 \n 4-结束关闭仿真 \n 5-生成仿真快照 \n 6-加载仿真快照 \n //流程控制 \n void   SecondaryDevCases :: processControl ( float  planNumber )   { \n\t /*\n\t\'\'\'1. 启动、暂停、恢复、停止仿真\'\'\'\n\t*/ \n\t if   ( planNumber  ==   float ( 1.1 ) )   { \n\t\tgpTessInterface -> simuInterface ( ) -> startSimu ( ) ; \n\t } \n\t if   ( planNumber  ==   float ( 1.2 ) )   { \n\t\tgpTessInterface -> simuInterface ( ) -> pauseSimu ( ) ; \n\t } \n\t if   ( planNumber  ==   float ( 1.3 ) )   { \n\t\tgpTessInterface -> simuInterface ( ) -> stopSimu ( ) ; \n\t } \n\t if   ( planNumber  ==   float ( 1.4 ) )   { \n\t\tgpTessInterface -> simuInterface ( ) -> pauseSimuOrNot ( ) ; \n\t } \n\t /*\n\t\'\'\'2. 获取运动信息\'\'\'\n\t*/ \n\t //2.1 获取路网在途车辆 \n\t if   ( planNumber  ==   float ( 2.1 ) )   { \n\t\t //所有在运行车辆 \n\t\tQList < IVehicle * >  lAllVehi  =  gpTessInterface -> simuInterface ( ) -> allVehiStarted ( ) ; \n\t\tQString runInfo  =   QStringLiteral ( "路网在途车辆共%0辆，ID为:\\n" ) . arg ( lAllVehi . size ( ) ) ; \n\t\t for   ( IVehicle * &  vehi  :  lAllVehi )   { \n\t\t\trunInfo  +=   QStringLiteral ( "车辆%0,当前坐标(%1,%2)\\n" ) . arg ( vehi -> id ( ) ) . arg ( vehi -> pos ( ) . x ( ) ) . arg ( vehi -> pos ( ) . y ( ) ) ; \n\t\t } \n\t\t emit ( showDynaInfo ( runInfo ) ) ; \n\t } \n\t //2.2 根据路段|车道获取车辆list,以L5路段，lane20车道为例。 \n\t if   ( planNumber  ==   float ( 2.2 ) )   { \n\t\tQList < IVehicle * >  lVehiOnLink5  =  gpTessInterface -> simuInterface ( ) -> vehisInLink ( 5 ) ; \n\t\tQString runInfoOfLinkAndLane  =   QStringLiteral ( "L5路段车辆共%0辆，ID为:\\n" ) . arg ( lVehiOnLink5 . size ( ) ) ; \n\t\t for   ( IVehicle * &  vehi  :  lVehiOnLink5 )   { \n\t\t\trunInfoOfLinkAndLane  +=   QStringLiteral ( "车辆%0,当前坐标(%1,%2)\\n" ) . arg ( vehi -> id ( ) ) . arg ( vehi -> pos ( ) . x ( ) ) . arg ( vehi -> pos ( ) . y ( ) ) ; \n\t\t } \n\t\tQList < IVehicle * >  lVehiOnLane20  =  gpTessInterface -> simuInterface ( ) -> vehisInLane ( 20 ) ; \n\t\trunInfoOfLinkAndLane  +=   QStringLiteral ( "Lane20车道车辆共%0辆，ID为:\\n" ) . arg ( lVehiOnLane20 . size ( ) ) ; \n\t\t for   ( IVehicle * &  vehi  :  lVehiOnLane20 )   { \n\t\t\trunInfoOfLinkAndLane  +=   QStringLiteral ( "车辆%0,当前坐标(%1,%2)\\n" ) . arg ( vehi -> id ( ) ) . arg ( vehi -> pos ( ) . x ( ) ) . arg ( vehi -> pos ( ) . y ( ) ) ; \n\t\t } \n\t\t emit ( showDynaInfo ( runInfoOfLinkAndLane ) ) ; \n\t } \n\t //2.3 根据车辆id获取具体的车辆信息,以id为300001的车辆为例 \n\t if   ( planNumber  ==   float ( 2.3 ) )   { \n\t\tIVehicle *  vehi300001  =  gpTessInterface -> simuInterface ( ) -> getVehicle ( 300001 ) ; \n\t\t if   ( vehi300001 )   { \n\t\t\tQString runInfoOfVehi  =   QStringLiteral ( "%0车辆信息为:\\n" ) . arg ( vehi300001 -> id ( ) ) ; \n\t\t\trunInfoOfVehi  +=   QStringLiteral ( "所在路段ID:%0\\n" ) . arg ( vehi300001 -> roadId ( ) ) ; \n\t\t\trunInfoOfVehi  +=   QStringLiteral ( "所在车道序号:%0\\n" ) . arg ( vehi300001 -> lane ( ) -> number ( )   +   1 ) ; \n\t\t\trunInfoOfVehi  +=   QStringLiteral ( "当前车速:%0\\n" ) . arg ( vehi300001 -> currSpeed ( ) ) ; \n\t\t\trunInfoOfVehi  +=   QStringLiteral ( "当前加速度:%0\\n" ) . arg ( vehi300001 -> acce ( ) ) ; \n\t\t\trunInfoOfVehi  +=   QStringLiteral ( "当前角度:%0\\n" ) . arg ( vehi300001 -> angle ( ) ) ; \n\t\t\trunInfoOfVehi  +=   QStringLiteral ( "当前位置:(%1,%2)\\n" ) . arg ( vehi300001 -> pos ( ) . x ( ) ) . arg ( vehi300001 -> pos ( ) . y ( ) ) ; \n\t\t\trunInfoOfVehi  +=   QStringLiteral ( "其它：......\\n" ) ; \n\t\t\t emit ( showDynaInfo ( runInfoOfVehi ) ) ; \n\t\t } \n\t } \n\t // 3. 设置仿真精度 \n\t if   ( planNumber  ==   3 )   { \n\t\tgpTessInterface -> simuInterface ( ) -> setSimuAccuracy ( 10 ) ; \n\t } \n\t // 4. 设置仿真开始结束时间 \n\t if   ( planNumber  ==   4 )   { \n\t\tgpTessInterface -> simuInterface ( ) -> setSimuIntervalScheming ( 30 ) ; \n\t } \n\t // 5. 设置仿真加速比 \n\t if   ( planNumber  ==   5 )   { \n\t\tgpTessInterface -> simuInterface ( ) -> setAcceMultiples ( 10 ) ; \n\t } \n } \n 5.4.  动作控制 \n 运行过程中的操作： \n 1- 修改发车流量信息 \n \n \n QList < Online :: DispatchInterval >   MySimulator :: calcDynaDispatchParameters ( ) \n { \n\tQList < Online :: DispatchInterval >  lDispatchInterval ; \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   1 ) \n\t { \n\t\tQTime t  =   QTime :: currentTime ( ) ; \n\t\t qDebug ( )   <<  t ; \n\t\t long  currSecs  =  t . hour ( )   *   3600   +  t . minute ( )   *   60   +  t . second ( ) ; \n\t\tOnline :: DispatchInterval di  =   Online :: DispatchInterval ( ) ; \n\t\tdi . dispatchId  =   11 ; \n\t\tdi . fromTime  =  currSecs ; \n\t\tdi . toTime  =  di . fromTime  +   300   -   1 ; \n\t\tdi . vehiCount  =   300 ; \n\t\tdi . mlVehicleConsDetail  <<   Online :: VehiComposition ( 1 ,   90 )   <<   Online :: VehiComposition ( 2 ,   10 ) ; \n\t\tlDispatchInterval  <<  di ; \n\t\tmpSecondDevCasesObj -> mActionControlMethodNumber  =   0 ; \n\t } \n\t return  lDispatchInterval ; \n } \n \n 2- 修改限速区，事故区信息；删除减速区，限速区，事故区 \n \n \n //重新计算期望速度 \n bool   MySimulator :: reCalcdesirSpeed ( IVehicle *  pIVehicle ,  qreal &  inOutDesirSpeed )   { \n\t // L5最右侧车道50-100m处，限速10，持续30s \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   10 )   { \n\t\t //当前已仿真时间，单位：秒 \n\t\t long  simuTime  =  gpTessInterface -> simuInterface ( ) -> simuTimeIntervalWithAcceMutiples ( )   /   1000 ; \n\t\t if   ( ! mpSecondDevCasesObj -> reCalcdesirSpeedFlag )   { \n\t\t\t //当前已仿真时间，单位：毫秒 \n\t\t\tmpSecondDevCasesObj -> reCalcdesirSpeedStartTime  =  gpTessInterface -> simuInterface ( ) -> simuTimeIntervalWithAcceMutiples ( )   /   1000 ; \n\t\t\tmpSecondDevCasesObj -> reCalcdesirSpeedFlag  =   true ; \n\t\t\tmRunInfo  =   QStringLiteral ( "L5路段最右侧车道50-100m处设置限速区，限速10km/h，持续时间30s！" ) ; \n\t\t\t emit ( forRunInfo ( mRunInfo ) ) ; \n\t\t } \n\t\t if   ( pIVehicle -> vehicleDriving ( ) -> laneNumber ( )   ==   0   &&  pIVehicle -> roadId ( )   ==   5 )   { \n\t\t\t if   ( pIVehicle -> vehicleDriving ( ) -> distToStartPoint ( )   <   m2p ( 100 )   &&  pIVehicle -> vehicleDriving ( ) -> distToStartPoint ( )   >   m2p ( 50 ) )   { \n\t\t\t\tinOutDesirSpeed  =   10 ; \n\t\t\t } \n\t\t } \n\t\t if   ( simuTime  -  mpSecondDevCasesObj -> reCalcdesirSpeedStartTime  >=   30 )   { \n\t\t\tmRunInfo  =   QStringLiteral ( "L5路段最右侧车道50-100m处限速区已关闭，车辆正常行驶！" ) ; \n\t\t\t emit ( forRunInfo ( mRunInfo ) ) ; \n\t\t\tmpSecondDevCasesObj -> mActionControlMethodNumber  =   0 ; \n\t\t } \n\t\t return   true ; \n\t } \n\t return   false ; \n } \n \n 3-车辆位置移动 \n \n // 车辆移动测试时，将L5路段车辆移动过路口的各个车道 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   2 )   { \n\t\t for   ( int  i  =   0 ;  i  <  lAllVehi . size ( ) ;   ++ i )   { \n\t\t\t if   ( lAllVehi [ i ] -> roadId ( )   ==   5 )   { \n\t\t\t\tILink *  nextLink  =  gpTessInterface -> netInterface ( ) -> findLink ( 9 ) ; \n\t\t\t\tQList < ILaneObject * >  lNextLinkLaneObj  =  nextLink -> laneObjects ( ) ; \n\t\t\t\t if   ( lAllVehi [ i ] -> vehicleDriving ( ) -> move ( lNextLinkLaneObj [ i  %  lNextLinkLaneObj . size ( ) ] ,   static_cast < double > ( i  %   100 ) ) )   { \n\t\t\t\t\tmRunInfo  =   QStringLiteral ( "L5路段车辆转移成功！" ) ; \n\t\t\t\t\t emit ( forRunInfo ( mRunInfo ) ) ; \n\t\t\t\t } \n\t\t\t } \n\t\t } \n\t\tmpSecondDevCasesObj -> mActionControlMethodNumber  =   0 ; \n\t } \n \n 4-修改车辆速度 \n \n //重新设置速度 \n bool   MySimulator :: reSetSpeed ( IVehicle *  pIVehicle ,  qreal &  inOutSpeed )   { \n\t // 3. 修改车辆速度，将L5路段车辆修改为0 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   3 )   { \n\t\t if   ( pIVehicle -> roadId ( )   ==   5 )   { \n\t\t\tinOutSpeed  =   0 ; \n\t\t\t return   true ; \n\t\t } \n\t } \n\t return   false ; \n } \n\n \n 5-修改车辆路径 \n \n // 修改车辆路径，将L1路段所有车辆修改为右转路径 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   4 )   { \n\t\t for   ( IVehicle * &  vehi  :  lAllVehi )   { \n\t\t\t if   ( vehi -> roadId ( )   ==   1 )   { \n\t\t\t\tQList < IDecisionPoint * >  lDecisionPoint  =  gpTessInterface -> netInterface ( ) -> decisionPoints ( ) ; \n\t\t\t\tIDecisionPoint *  pDecisionPointInLink1  =   nullptr ; \n\t\t\t\t for   ( IDecisionPoint * &  pDecisionPoint  :  lDecisionPoint )   { \n\t\t\t\t\t if   ( pDecisionPoint -> link ( ) -> id ( )   ==   1 )   { \n\t\t\t\t\t\tpDecisionPointInLink1  =  pDecisionPoint ; \n\t\t\t\t\t\t break ; \n\t\t\t\t\t } \n\t\t\t\t } \n\t\t\t\tQList < IRouting * >  lRoutingsOfDecisionPointInLink1 ; \n\t\t\t\t if   ( pDecisionPointInLink1 )   { \n\t\t\t\t\tlRoutingsOfDecisionPointInLink1  =  pDecisionPointInLink1 -> routings ( ) ; \n\t\t\t\t } \n\t\t\t\t if   ( ! lRoutingsOfDecisionPointInLink1 . isEmpty ( ) )   { \n\t\t\t\t\t if   ( vehi -> routing ( )   !=  lRoutingsOfDecisionPointInLink1 . back ( ) )   { \n\t\t\t\t\t\t if   ( vehi -> vehicleDriving ( ) -> setRouting ( lRoutingsOfDecisionPointInLink1 . back ( ) ) )   { \n\t\t\t\t\t\t\tmRunInfo  =   QStringLiteral ( "L1路段所有车辆路径修改为右转！" ) ; \n\t\t\t\t\t\t\t emit ( forRunInfo ( mRunInfo ) ) ; \n\t\t\t\t\t\t } \n\t\t\t\t\t } \n\t\t\t\t } \n\t\t\t } \n\t\t } \n\t } \n \n 6-强制车辆不变道 \n \n bool   MySimulator :: reCalcDismissChangeLane ( IVehicle *  pIVehicle )   { \n\t //强制车辆不变道，禁止L2路段所有车辆右变道 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   5 ) \n\t { \n\t\t if   ( pIVehicle -> roadId ( )   ==   2 )   { \n\t\t\t if   ( mpSecondDevCasesObj -> judgeVehicleLaneChangeDirection ( pIVehicle )   ==   QStringLiteral ( "right" ) )   { \n\t\t\t\t return   true ; \n\t\t\t } \n\t\t } \n\t } \n\t return   false ; \n } \n\n \n 7-强制车辆变道 \n \n //计算是否要右自由变道 \n bool   MySimulator :: reCalcToRightFreely ( IVehicle *  pIVehicle )   { \n\t if   ( pIVehicle -> roadId ( )   ==   5   &&  pIVehicle -> lane ( ) -> number ( )   ==   1   &&  mpSecondDevCasesObj -> mActionControlMethodNumber  ==   6 )   { \n\t\t return   true ; \n\t } \n\t return   false ; \n } \n\n bool   MySimulator :: reCalcDismissChangeLane ( IVehicle *  pIVehicle )   { \n\t //强制L5路段中间车道向右变道 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   6 )   { \n\t\t if   ( pIVehicle -> roadId ( )   ==   5   &&   ( pIVehicle -> lane ( ) -> number ( )   ==   0   ||  pIVehicle -> lane ( ) -> number ( )   ==   1 ) )   { \n\t\t\t if   ( mpSecondDevCasesObj -> judgeVehicleLaneChangeDirection ( pIVehicle )   ==   QStringLiteral ( "left" ) )   { \n\t\t\t\t return   true ; \n\t\t\t } \n\t\t } \n\t } \n\t return   false ; \n } \n \n 8-强制车辆闯红灯 \n \n //重新设置速度 \n bool   MySimulator :: reSetSpeed ( IVehicle *  pIVehicle ,  qreal &  inOutSpeed )   { \n\t // 7.强制车辆闯红灯,让L12等待的车辆强制闯红灯 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   7 )   { \n\t\t if   ( pIVehicle -> roadId ( )   ==   12 )   { \n\t\t\tqreal vehiCurrSpeed  =  pIVehicle -> currSpeed ( ) ; \n\t\t\tqreal vehiCurrentDistToEnd  =  pIVehicle -> vehicleDriving ( ) -> distToEndpoint ( true ) ; \n\t\t\t if   ( m2p ( vehiCurrSpeed )   <   20   &&   p2m ( vehiCurrentDistToEnd )   <   3 )   { \n\t\t\t\t // 生成一个随机浮点数，范围在 [0.0, 1.0) \n\t\t\t\t double  randomNumber  =   QRandomGenerator :: global ( ) -> generateDouble ( ) ; \n\t\t\t\t if   ( randomNumber  <   0.8 )   { \n\t\t\t\t\tinOutSpeed  =   m2p ( 15 ) ; \n\t\t\t\t\t return   true ; \n\t\t\t\t } \n\t\t\t } \n\t\t } \n\t } \n\t return   false ; \n } \n \n 9-强制车辆停车 \n \n //重新设置速度 \n bool   MySimulator :: reSetSpeed ( IVehicle *  pIVehicle ,  qreal &  inOutSpeed )   { \n\t // 3. 修改车辆速度，将L5路段车辆修改为0 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   3 )   { \n\t\t if   ( pIVehicle -> roadId ( )   ==   5 )   { \n\t\t\tinOutSpeed  =   0 ; \n\t\t\t return   true ; \n\t\t } \n\t } \n\t return   false ; \n } \n \n 10-强制清除车辆（车辆消失） \n \n //8. 强制清除车辆,以L5路段为例，清除所有小客车 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   8 )   { \n\t\t for   ( IVehicle * &  pIVehicle  :  lAllVehi )   { \n\t\t\t if   ( pIVehicle -> roadId ( )   ==   5   &&  pIVehicle -> vehicleTypeCode ( )   ==   1 )   { \n\t\t\t\tpIVehicle -> vehicleDriving ( ) -> stopVehicle ( ) ; \n\t\t\t } \n\t\t } \n\t\tmpSecondDevCasesObj -> mActionControlMethodNumber  =   0 ; \n\t } \n \n 11-修改车辆航向角 \n \n void   MySimulator :: afterStep ( IVehicle *  pIVehicle )   { \n\t //9. 修改车辆航向角，以L5路段为例 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   9 )   { \n\t\t if   ( pIVehicle -> roadId ( )   ==   5 )   { \n\t\t\tpIVehicle -> vehicleDriving ( ) -> setAngle ( 45 ) ; \n\t\t } \n\t } \n } \n \n 12-修改车辆速度，加速度 \n //重新设置速度 \n bool   MySimulator :: reSetSpeed ( IVehicle *  pIVehicle ,  qreal &  inOutSpeed )   { \n\t // 3. 修改车辆速度，将L5路段车辆修改为0 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   3 )   { \n\t\t if   ( pIVehicle -> roadId ( )   ==   5 )   { \n\t\t\tinOutSpeed  =   0 ; \n\t\t\t return   true ; \n\t\t } \n\t } \n\t // 7.强制车辆闯红灯,让L12等待的车辆强制闯红灯 \n\t if   ( mpSecondDevCasesObj -> mActionControlMethodNumber  ==   7 )   { \n\t\t if   ( pIVehicle -> roadId ( )   ==   12 )   { \n\t\t\tqreal vehiCurrSpeed  =  pIVehicle -> currSpeed ( ) ; \n\t\t\tqreal vehiCurrentDistToEnd  =  pIVehicle -> vehicleDriving ( ) -> distToEndpoint ( true ) ; \n\t\t\t if   ( m2p ( vehiCurrSpeed )   <   20   &&   p2m ( vehiCurrentDistToEnd )   <   3 )   { \n\t\t\t\t // 生成一个随机浮点数，范围在 [0.0, 1.0) \n\t\t\t\t double  randomNumber  =   QRandomGenerator :: global ( ) -> generateDouble ( ) ; \n\t\t\t\t if   ( randomNumber  <   0.8 )   { \n\t\t\t\t\tinOutSpeed  =   m2p ( 15 ) ; \n\t\t\t\t\t return   true ; \n\t\t\t\t } \n\t\t\t } \n\t\t } \n\t } \n\t return   false ; \n } \n\n //计算加速度 \n bool   MySimulator :: calcAcce ( IVehicle  * pIVehicle ,  qreal  & acce ) \n { \n     if ( pIVehicle -> vehiDistFront ( )   <   m2p ( 5 ) ) \n     { \n         //前车距小于5米，让TESSNG计算加速度 \n         return   false ; \n     } \n     else   if   ( pIVehicle -> currSpeed ( )   >   m2p ( 10 ) ) \n     { \n        acce  =   m2p ( - 2 ) ; \n         return   true ; \n     } \n     else   if   ( pIVehicle -> currSpeed ( )   <   m2p ( 1 ) ) \n     { \n        acce  =   m2p ( 2 ) ; \n         return   true ; \n     } \n\t return   false ; \n } \n\n \n 13- 车道关闭，恢复 \n \n / 动作控制\n void   SecondaryDevCases :: actionControl ( float  planNumber )   { \n\t /*以动作控制案例-机动车交叉口路网的L5路段为例*/ \n\n\t /*\n\t\'\'\'1. 修改发车流量信息\'\'\'\n\t修改发车流量信息需在MySimulator中的calcDynaDispatchParameters函数\n\t*/ \n\t /*\n\t\'\'\'2. 车辆位置移动\'\'\'\n见MySimulator中的afterOneStep函数\n\t*/ \n\t /*\n\t\'\'\'3. 修改车辆速度\'\'\'\n见MySimulator中的reSetSpeed函数\n\t*/ \n\t /*\n\t\'\'\'4. 修改车辆路径\'\'\'\n以L1路段上的路径为例，见MySimulator中的afterOneStep函数\n\t*/ \n\t /*\n\t\'\'\'5. 强制车辆不变道\'\'\'\n以L2路段上的路径为例，见MySimulator中的afterOneStep函数\n\t*/ \n\t /*\n\t\'\'\'6. 强制车辆变道\'\'\'\n以L5路段上的路径为例，见MySimulator中的afterOneStep函数\n\t*/ \n\t /*\n\t\'\'\'7. 强制车辆闯红灯\'\'\'\n见MySimulator的reSetSpeed函数\n\t*/ \n\t /*\n\t\'\'\'8. 强制清除车辆\'\'\'\n以L5路段上的路径为例，见afterOneStep\n\t*/ \n\t /*\n\t\'\'\'9. 修改车辆航向角\'\'\'\n以L5路段上的路径为例，见afterStep\n\t*/ \n\t /*\n\t   10. 车道关闭和恢复\n可由强制变道和不变道实现。\n\t*/ \n\tmActionControlMethodNumber  =  planNumber ; \n } \n 5.5. 管控手段控制 \n 1- 修改信号灯灯色（直接修改某个直行方向的信号灯颜色，如红色直接切换为绿色） \n \n bool   MySimulator :: calcLampColor ( ISignalLamp *  pSignalLamp )   { \n\t if   ( mpSecondDevCasesObj -> mContorlMeasureMethodNumber  ==   1 )   { \n\t\t // 将所有信号灯变为绿色 \n\t\tpSignalLamp -> setLampColor ( "绿" ) ; \n\t\t return   true ; \n\t } \n\t return   false ; \n } \n \n 2- 修改信号灯组方案 \n //双环信控方案下发 \n void   SecondaryDevCases :: doubleRingSignalControl ( long  currentSimuTime )   { \n\t // 读取方案数据 \n\tQFile  jsonFile ( "./Data/Signal_Plan_Data_1109.json" ) ; \n\t if   ( ! jsonFile . open ( QIODevice :: ReadOnly  |  QIODevice :: Text ) )   { \n\t\t qDebug ( )   <<   "Error: Could not open Signal_Plan_Data_1109.json" ; \n\t\t return ; \n\t } \n\tQByteArray jsonData  =  jsonFile . readAll ( ) ; \n\tjsonFile . close ( ) ; \n\tQJsonDocument doc  =   QJsonDocument :: fromJson ( jsonData ) ; \n\tQJsonObject signalGroupsDict  =  doc . object ( ) ; \n\t for   ( QJsonObject :: iterator it  =  signalGroupsDict . begin ( ) ;  it  !=  signalGroupsDict . end ( ) ;   ++ it )   { \n\t\tQString groupName  =  it . key ( ) ; \n\t\tQJsonObject group  =  it . value ( ) . toObject ( ) ; \n\t\tISignalGroup *  pCurrentSignalGroup  =   nullptr ; \n\t\t // 通过灯组名称查询到灯组 \n\t\tQList < ISignalGroup * >  lAllSignalGroups  =  gpTessInterface -> netInterface ( ) -> signalGroups ( ) ; \n\t\t for   ( ISignalGroup * &  pSignalGroup  :  lAllSignalGroups )   { \n\t\t\t if   ( pSignalGroup -> groupName ( )   ==  groupName )   { \n\t\t\t\tpCurrentSignalGroup  =  pSignalGroup ; \n\t\t\t\t break ; \n\t\t\t } \n\t\t } \n\t\t if   ( ! pCurrentSignalGroup )   { \n\t\t\t qDebug ( )   <<   "FindError: The signalGroup not in current net." ; \n\t\t\t break ; \n\t\t } \n\t\t //获取当前灯组相位 \n\t\tQList < ISignalPhase * >  lCurrentSignalGroupPhases  =  pCurrentSignalGroup -> phases ( ) ; \n\t\t // 获取所有灯组的起始时间 \n\t\tQStringList lSignalGroupStartTime  =  group . keys ( ) ; \n\t\t for   ( QJsonObject :: iterator it2  =  group . begin ( ) ;  it2  !=  group . end ( ) ;   ++ it2 )   { \n\t\t\tQString startTime  =  it2 . key ( ) ; \n\t\t\t // 获取下一个元素的迭代器 \n\t\t\tQJsonObject :: iterator nextIt  =  std :: next ( it2 ) ; \n\t\t\tQString endTime  =   ( nextIt  !=  group . end ( ) )   ?  nextIt . key ( )   :   "24:00" ; \n\t\t\t // 起始时间和结束时间的秒数表示 \n\t\t\t long  startTimeSeconds  =   Functions :: timeToSeconds ( startTime ) ; \n\t\t\t long  endTimeSeconds  =   Functions :: timeToSeconds ( endTime ) ; \n\t\t\t // 若当前仿真时间位于当前时段内，修改当前时段信号灯组的相位 \n\t\t\t if   ( startTimeSeconds  <=  currentSimuTime  &&  currentSimuTime  <  endTimeSeconds )   { \n\t\t\t\tQJsonObject currentGroupData  =  it2 . value ( ) . toObject ( ) ; \n\t\t\t\t int  periodTime  =  currentGroupData [ QStringLiteral ( "cycle_time" ) ] . toInt ( ) ; \n\t\t\t\t int  yellowInteral  =  currentGroupData [ QStringLiteral ( "yellow_interval" ) ] . toInt ( ) ; \n\t\t\t\tQJsonArray phases  =  currentGroupData [ QStringLiteral ( "phases" ) ] . toArray ( ) ; \n\t\t\t\t // 修改周期 \n\t\t\t\tpCurrentSignalGroup -> setPeriodTime ( periodTime ) ; \n\t\t\t\t for   ( const  QJsonValueRef &  phase  :  phases )   { \n\t\t\t\t\tQJsonObject phaseObj  =  phase . toObject ( ) ; \n\t\t\t\t\tQString phaseName  =  phaseObj [ QStringLiteral ( "phase_name" ) ] . toString ( ) ; \n\t\t\t\t\t int  phaseNumber  =  phaseObj [ QStringLiteral ( "phase_number" ) ] . toInt ( ) ; \n\t\t\t\t\t qDebug ( )   <<   "phaseName"   <<  phaseName  <<  phaseNumber  <<  endl ; \n\t\t\t\t\tQList < Online :: ColorInterval >  lColorInterval ; \n\t\t\t\t\tlColorInterval . append ( Online :: ColorInterval ( QStringLiteral ( "红" ) ,  phaseObj [ QStringLiteral ( "start_time" ) ] . toInt ( ) ) ) ; \n\t\t\t\t\tlColorInterval . append ( Online :: ColorInterval ( QStringLiteral ( "绿" ) ,  phaseObj [ QStringLiteral ( "green_time" ) ] . toInt ( ) ) ) ; \n\t\t\t\t\tlColorInterval . append ( Online :: ColorInterval ( QStringLiteral ( "黄" ) ,  yellowInteral ) ) ; \n\t\t\t\t\t int  remainingTime  =  periodTime  -  phaseObj [ QStringLiteral ( "start_time" ) ] . toInt ( )   -  phaseObj [ QStringLiteral ( "green_time" ) ] . toInt ( )   -  yellowInteral ; \n\t\t\t\t\t if   ( remainingTime  >   0 )   { \n\t\t\t\t\t\tlColorInterval . append ( Online :: ColorInterval ( QStringLiteral ( "红" ) ,  remainingTime ) ) ; \n\t\t\t\t\t } \n\t\t\t\t\t // 当前灯组包含的相位序号 \n\t\t\t\t\tISignalPhase *  pCurrentPhase  =   nullptr ; \n\t\t\t\t\t for   ( ISignalPhase * &  pCurrentSignalGroupPhase  :  lCurrentSignalGroupPhases )   { \n\t\t\t\t\t\t if   ( phaseNumber  ==  pCurrentSignalGroupPhase -> number ( ) )   { \n\t\t\t\t\t\t\tpCurrentPhase  =  pCurrentSignalGroupPhase ; \n\t\t\t\t\t\t\t break ; \n\t\t\t\t\t\t } \n\t\t\t\t\t } \n\t\t\t\t\t // 若已存在该相位，修改相位灯色顺序，否则添加相位 \n\t\t\t\t\t if   ( pCurrentPhase )   { \n\t\t\t\t\t\t // 修改相位 \n\t\t\t\t\t\tpCurrentPhase -> setColorList ( lColorInterval ) ; \n\t\t\t\t\t\t qDebug ( )   <<  pCurrentPhase -> id ( )   <<   "相位设置成功"   <<  endl ; \n\t\t\t\t\t } \n\t\t\t\t\t else   { \n\t\t\t\t\t\tISignalPhase *  pSignalPhase  =  gpTessInterface -> netInterface ( ) -> createSignalPhase ( pCurrentSignalGroup ,  phaseName ,  lColorInterval ) ; \n\t\t\t\t\t\t // 设置相位序号 \n\t\t\t\t\t\tpSignalPhase -> setNumber ( phaseNumber ) ; \n\t\t\t\t\t\t qDebug ( )   <<  pSignalPhase -> id ( )   <<   "相位创建成功"   <<  endl ; \n\t\t\t\t\t } \n\t\t\t\t\t // 设置相位包含的信号灯 \n\t\t\t\t\tQJsonArray lampList  =  phaseObj [ QStringLiteral ( "lamp_lst" ) ] . toArray ( ) ; \n\t\t\t\t\t for   ( const  QJsonValue &  lampId  :  lampList )   { \n\t\t\t\t\t\tISignalLamp *  pLamp  =  gpTessInterface -> netInterface ( ) -> findSignalLamp ( lampId . toInt ( ) ) ; \n\t\t\t\t\t\t if   ( ! pLamp )   { \n\t\t\t\t\t\t\t /*\n\t\t\t\t\t\t\t * 目前一个信号灯属于多个相位，相位间不交叉。\n\t\t\t\t\t\t\t * 因此如果要实际下发方案时，应按照仿真时间实时管理相位序号。\n\t\t\t\t\t\t\t */ \n\t\t\t\t\t\t\tpLamp -> setPhaseNumber ( phaseNumber ) ; \n\t\t\t\t\t\t\t qDebug ( )   <<  pLamp -> id ( )   <<   "序号信号灯相位设置成功"   <<  endl ; \n\t\t\t\t\t\t } \n\t\t\t\t\t\t else   { \n\t\t\t\t\t\t\t qDebug ( )   <<   "FindError:未查找到信号灯:"   <<  lampId . toInt ( ) ; \n\t\t\t\t\t\t } \n\t\t\t\t\t } \n\t\t\t\t } \n\t\t\t\t break ; \n\t\t\t } \n\n\t\t } \n\t } \n } \n \n 3- 修改相位绿灯时间长度 \n \n if   ( planNumber  ==   2 )   { \n\t\tISignalPhase *  pSignalPhase7OfL12  =  gpTessInterface -> netInterface ( ) -> findSignalPhase ( 7 ) ; \n\t\tOnline :: ColorInterval  redIntervalFront ( "红" ,   10 ) ,   greenInterval ( "绿" ,   110 ) ,   yellowInterval ( "黄" ,   3 ) ,   redIntervalBack ( "红" ,   28 ) ; \n\t\tpSignalPhase7OfL12 -> setColorList ( QList < Online :: ColorInterval > ( )   <<  redIntervalFront  <<  greenInterval  <<  yellowInterval  <<  redIntervalBack ) ; \n\t } \n \n 5- 修改link, connector 限速 \n \n /*\n\t\'\'\'3. 修改路段限速\'\'\'\n\t*/ \n\t //以L5路段为例 \n\t if   ( planNumber  ==   3 )   { \n\t\tILink *  pLink5  =  gpTessInterface -> netInterface ( ) -> findLink ( 5 ) ; \n\t\tqreal minSpeedOfLink5  =  pLink5 -> minSpeed ( ) ; \n\t\t if   ( limitSpeed  >=  minSpeedOfLink5 )   { \n\t\t\tpLink5 -> setLimitSpeed ( static_cast < qreal > ( limitSpeed ) ) ; \n\t\t } \n\t } \n \n 6- 修改link, connector 允许的车辆类型（暂时无法实现） \n //管控手段控制 \n void   SecondaryDevCases :: controlMeasures ( float  planNumber ,   int  limitSpeed )   { \n\t /*\n\t\'\'\'1. 修改信号灯灯色\'\'\'\n\t见MySimulator的calcLampColor函数\n\t*/ \n\tmContorlMeasureMethodNumber  =  planNumber ; \n\t /*\n\t\'\'\'2. 修改信号灯灯色\'\'\'\n\t*/ \n\t // 以L12路段相位直行信号灯相位为例（ID为7），由红90绿32黄3红25改为红10绿110黄3红28 \n\t if   ( planNumber  ==   2 )   { \n\t\tISignalPhase *  pSignalPhase7OfL12  =  gpTessInterface -> netInterface ( ) -> findSignalPhase ( 7 ) ; \n\t\tOnline :: ColorInterval  redIntervalFront ( "红" ,   10 ) ,   greenInterval ( "绿" ,   110 ) ,   yellowInterval ( "黄" ,   3 ) ,   redIntervalBack ( "红" ,   28 ) ; \n\t\tpSignalPhase7OfL12 -> setColorList ( QList < Online :: ColorInterval > ( )   <<  redIntervalFront  <<  greenInterval  <<  yellowInterval  <<  redIntervalBack ) ; \n\t } \n\t /*\n\t\'\'\'3. 修改路段限速\'\'\'\n\t*/ \n\t //以L5路段为例 \n\t if   ( planNumber  ==   3 )   { \n\t\tILink *  pLink5  =  gpTessInterface -> netInterface ( ) -> findLink ( 5 ) ; \n\t\tqreal minSpeedOfLink5  =  pLink5 -> minSpeed ( ) ; \n\t\t if   ( limitSpeed  >=  minSpeedOfLink5 )   { \n\t\t\tpLink5 -> setLimitSpeed ( static_cast < qreal > ( limitSpeed ) ) ; \n\t\t } \n\t } \n } \n 6. 底层模型修改 \n 6.1 跟驰模型 \n 1-修改跟驰模型参数（机动车，非机动车） \n \n // 修改跟驰模型参数 \nQList < Online :: FollowingModelParam >   MySimulator :: reSetFollowingParams ( )   { \n\t if   ( mpSecondDevCasesObj -> mModelModifyMethodNumber  ==   1 )   { \n\t\tOnline :: FollowingModelParam followingModelParamMotor ,  followingModelParamNonmotor ; \n\t\t // 机动车 \n\t\tfollowingModelParamMotor . vtype  =  Online :: MotorOrNonmotor :: Motor ; \n\t\tfollowingModelParamMotor . alfa  =   5 ; \n\t\tfollowingModelParamMotor . beit  =   3 ; \n\t\tfollowingModelParamMotor . safeDistance  =   15 ; \n\t\tfollowingModelParamMotor . safeInterval  =   10 ; \n\t\t\n\t\t // 非机动车 \n\t\tfollowingModelParamNonmotor . vtype  =  Online :: MotorOrNonmotor :: Nonmotor ; \n\t\tfollowingModelParamNonmotor . alfa  =   3 ; \n\t\tfollowingModelParamNonmotor . beit  =   1 ; \n\t\tfollowingModelParamNonmotor . safeDistance  =   5 ; \n\t\tfollowingModelParamNonmotor . safeInterval  =   6 ; \n\n\t\t return   QList < Online :: FollowingModelParam > ( )   <<  followingModelParamMotor  <<  followingModelParamNonmotor ; \n\t } \n\t return   QList < Online :: FollowingModelParam > ( ) ; \n } \n \n 默认参数效果 \n \n 修改参数使车辆倾向变道 \n \n 修改参数使车辆不倾向变道 \n  \n 6.2. 换道模型 \n 1-选择变道类型：强制变道，压迫变道，自由变道 \n 暂不支持二次开发接口选择变道类型 \n 2- 设置强制变道，压迫变道参数(暂不支持，仅支持自有变道参数修改) \n /*\n重新设置自由变道参数，\n参数 safeTime : 安全操作时间，从驾驶员反应到实施变道(完成变道前半段)所需时间，默认4秒，\n\tultimateDist:安全变道(完成变道前半段)后距前车距离，小于此距离压迫感增强，触发驾驶员寻求变道，\n\ttargetRParm:目标车道后车影响系数，大于等于0小于等于1，此值越大目标车道后车距影响越大，反之则越小\n*/ \n bool   MySimulator :: reSetChangeLaneFreelyParam ( IVehicle *  pIVehicle ,   int &  safeTime ,  qreal &  ultimateDist ,  qreal &  targetRParam )   { \n\t if   ( mpSecondDevCasesObj -> mModelModifyMethodNumber  ==   2 )   { \n\t\t // 安全操作时间，从驾驶员反应到实施变道(完成变道前半段)所需时间，默认4秒 \n\t\tsafeTime  =   100 ; \n\t\t // 安全变道(完成变道前半段)后距前车距离，小于此距离压迫感增强，触发驾驶员寻求变道 \n\t\tultimateDist  =   50 ; \n\t\t // 目标车道后车影响系数，大于等于0小于等于1，此值越大目标车道后车距影响越大，反之则越小 \n\t\ttargetRParam  =   0.1 ; \n\t\t return   true ; \n\t } \n\t return   false ; \n } \n 6.3. 冲突交互模型 \n 1-根据link,车道序号|连接器编号获取冲突连接器对的优先关系 \n 2-修改连接器对的优先关系 \n 3- 修改连接器对的冲突模型参数 \n 4- 新增，修改，删除冲突模型参数 \n 5-获取所有冲突关系的冲突连接器对 \n 6- 一键设置同等路权的工具函数 \n 7- 重置优先关系 \n 8- 获取面域与连接器的映射关系 \n 目前版本暂不支持二次开发方式操作以上参数， 用户只能在建模阶段人工设置 \n 6.4.  车辆汇入模型 \n 暂不支持二次开发操作，用户可根据跟车模型，自由换道模型调整车辆运动行为 \n 6.5. 车辆穿越模型 \n 暂不支持二次开发操作，用户可根据跟车模型，自由换道模型，冲突交互模型调整车辆运动行为 \n 7. 仿真输出 \n 7.1. 获取路网几何线性数据 \n 路网二维平面主要由路段连接段组成，路段由路段自身和车道组成，连接段由连接段自身和“车道连接”组成，路段、车道、“车道连接”都存在中心线断点序列，车辆都是在这些点构成的线上移动的。取得这些断点序列的步骤如下： \n 1）获取所有路段； \n 2）获取路段的所有车道； \n 3）获取车道的中心线断点序列 \n 4）获取所有连接段 \n 5）获取连接段的所有“车道连接” \n 6）获取“车道连接”中心线断点序列 \n //加载完路网后的行为 \n void   MyNet :: afterLoadNet ( )   { \n\t if   ( gpTessInterface -> netInterface ( ) -> linkCount ( )   ==   0 )   { \n\t\t //软件打开后自动加载临时路网，因为临时路网上没有路段，所以下面创建路段等要素的语句得到执行 \n\t\t createNet ( ) ; \n\t } \n\n\t //获取所有路段 \n\tQList < ILink * >  lLink  =   gpTessInterface -> netInterface ( ) -> links ( ) ; \n\t int  minPointCount  =   10000 ; \n\t foreach ( ILink  *  pLink ,  lLink ) \n\t { \n\t\t //==============创建当前路段SVG================= \n\t\t //路段中心线断点集 \n\t\tQList < QPointF >  lPoints  =  pLink -> centerBreakPoints ( ) ; \n\t\t //路段左侧断点集 \n\t\tQList < QPointF >  lLeftPoints  =  pLink -> leftBreakPoints ( ) ; \n\t\t //路段右侧断点集 \n\t\tQList < QPointF >  lRightPoints  =  pLink -> rightBreakPoints ( ) ; \n\t\t //创建路段SVG,略 \n\n\t\t //===============创建当前路段所有车道SVG================ \n\t\t //路段的所有车道 \n\t\tQList < ILane * >  lLane  =  pLink -> lanes ( ) ; \n\t\t foreach ( ILane  *  pLane ,  lLane ) \n\t\t { \n\t\t\t if   ( pLane -> centerBreakPoint3Ds ( ) . size ( )   <  minPointCount ) \n\t\t\t { \n\t\t\t\tminPointCount  =  pLane -> centerBreakPoint3Ds ( ) . size ( ) ; \n\t\t\t } \n\t\t\t //车道中心线断点集 \n\t\t\tQList < QPointF >  lPoint  =  pLane -> centerBreakPoints ( ) ; \n\t\t\t //车道左侧断点集 \n\t\t\tQList < QPointF >  lLeftPoint  =  pLane -> leftBreakPoints ( ) ; \n\t\t\t //车道右侧断点集 \n\t\t\tQList < QPointF >  lRightPoint  =  pLane -> rightBreakPoints ( ) ; \n\t\t } \n\t } \n\t qDebug ( )   <<  minPointCount ; \n\n\t //获取所有连接段 \n\tQList < IConnector * >  lConnector  =  gpTessInterface -> netInterface ( ) -> connectors ( ) ; \n\t foreach ( IConnector *  pConn ,  lConnector ) \n\t { \n\t\tQList < ILaneConnector * >  lLC  =  pConn -> laneConnectors ( ) ; \n\t\t foreach ( ILaneConnector  *  pLC ,  lLC ) \n\t\t { \n\t\t\t //"车道连接”左侧断点集 \n\t\t\tQList < QPointF >  lLeftPoint  =  pLC -> leftBreakPoints ( ) ; \n\t\t\t //“车道连接”右侧点集 \n\t\t\tQList < QPointF >  lRightPoint  =  pLC -> rightBreakPoints ( ) ; \n\t\t\t //=========编制svg=========== \n\n\t\t } \n\t } \n\n\t //如果配置文件配置了加载后启动仿真，则TESSNG会启动仿真，本方法不用启动仿真，否则本方法启动仿真 \n\tQJsonObject config  =   gpTessPlugin -> tessngConfig ( ) ; \n\t if   ( config . value ( "__simuafterload" ) . isBool ( )   &&  config . value ( "__simuafterload" ) . toBool ( ) ) \n\t { \n\t\t return ; \n\t } \n\n } \n 7.2. 检测器|采集器|排队计数器编辑 \n 1-根据车道序号，位置新建排队计数器 \n //在路段9最左侧车道100米处创建排队计数器 \nIVehicleQueueCounter *  pCounter  =  gpTessInterface -> netInterface ( ) -> createVehiQueueCounterOnLink ( pLeftLane ,  dist ) ; \n qDebug ( )   <<   "计数器所在点坐标为：("   <<  pCounter -> point ( ) . x ( )   << "," <<  pCounter -> point ( ) . y ( ) << ")"   <<  endl ; \n\n \n 2-根据车道序号，位置新建行程时间检测器 \n //在路段9 50-550米处创建行程检测器 \nILink *  pLink  =  gpTessInterface -> netInterface ( ) -> findLink ( 9 ) ; \n if   ( pLink )   { \nQList < IVehicleTravelDetector * >  pDetector  =  gpTessInterface -> netInterface ( ) -> createVehicleTravelDetector_link2link ( pLink ,  pLink ,   m2p ( 50 ) ,   m2p ( 550 ) ) ; } \n\n \n 3-根据路段获取检测器 \n //3 - 根据路段，车道序号获取检测器(机动车交叉口案例：L5路段为起点，L9路段为终点) \n\tQList < IVehicleTravelDetector * >   lvehiTravelDetectors  =  gpTessInterface -> netInterface ( ) -> vehiTravelDetectors ( ) ; \n\t for   ( IVehicleTravelDetector * &  pVehicleTravelDetector  :  lvehiTravelDetectors )   { \n\t\tILink *  linkStartDetector  =  pVehicleTravelDetector -> link_startDetector ( ) ; \n\t\tILink *  linkEndDetector  =  pVehicleTravelDetector -> link_endDetector ( ) ; \n\t\t if   ( linkStartDetector )   { \n\t\t\t if   ( linkStartDetector -> id ( )   ==   5 )   { \n\t\t\t\t qDebug ( )   <<   "find the startVehicleTravelDetector in L5:"   <<  pVehicleTravelDetector -> id ( )   <<  endl ; \n\t\t\t } \n\t\t } \n\t\t if   ( linkEndDetector )   { \n\t\t\t if   ( linkEndDetector -> id ( )   ==   9 )   { \n\t\t\t\t qDebug ( )   <<   "find the endVehicleTravelDetector in L9:"   <<  pVehicleTravelDetector -> id ( )   <<  endl ; \n\t\t\t } \n\t\t } \n\t } \n \n 4- 根据检测器获取车道 \n 目前仅支持车道连接 \n 5-设置检测器属性，如检测开始结束时间，检测间隔 \n QList < IVehicleTravelDetector * >  lVehicleTravelDetector  =  gpTessInterface -> netInterface ( ) -> createVehicleTravelDetector_link2link ( link ,  link ,   m2p ( 50 ) ,   m2p ( 550 ) ) ; \n\t\t if   ( ! lVehicleTravelDetector . empty ( ) )   { \n\t\t\t for   ( IVehicleTravelDetector *  detector  :  lVehicleTravelDetector )   { \n\t\t\t\tdetector -> setFromTime ( 10 ) ; \n\t\t\t\tdetector -> setToTime ( 60 ) ; \n\t\t\t } \n\t\t } \n\n \n 详见:  接口详解-IVehicleDrivInfoCollector 、 接口详解-IVehicleQueueCounter 、 接口详解-IVehicleTravelDetector \n 7.3. 输出控制 \n 1- 设置仿真过程中输出 \n //一个批次计算后的处理 \n void   MySimulator :: afterOneStep ( )   { \n\t //============以下是获取一些仿真过程数据的方法============ \n\t //当前仿真计算批次 \n\t long  batchNum  =  gpTessInterface -> simuInterface ( ) -> batchNumber ( ) ; \n\t //当前已仿真时间，单位：毫秒 \n\t long  simuTime  =  gpTessInterface -> simuInterface ( ) -> simuTimeIntervalWithAcceMutiples ( ) ; \n\t if   ( batchNum  ==   20   *   20 ) \n\t { \n\t\tgpTessInterface -> simuInterface ( ) -> setAcceMultiples ( 100 ) ; \n\t } \n\t //开始仿真的现实时间 \n\tqint64 startRealtime  =  gpTessInterface -> simuInterface ( ) -> startMSecsSinceEpoch ( ) ; \n\t //所有在运行车辆 \n\tQList < IVehicle * >  lAllVehi  =  gpTessInterface -> simuInterface ( ) -> allVehiStarted ( ) ; \n\t //ID为1的路段上所有已启动车辆 \n\tQList < IVehicle * >  lVehi  =  gpTessInterface -> simuInterface ( ) -> vehisInLink ( 1 ) ; \n\t //车辆轨迹 \n\tQList < Online :: VehicleStatus >  lVehiStatus  =  gpTessInterface -> simuInterface ( ) -> getVehisStatus ( ) ; \n\t\n\t //车辆数据采集信息 \n\tQList < Online :: VehiInfoCollected >  lOutVehiInfo  =  gpTessInterface -> simuInterface ( ) -> getVehisInfoCollected ( ) ; \n\t //采集器集计信息 \n\tQList < Online :: VehiInfoAggregated >  lOutVehiInfoAggre  =  gpTessInterface -> simuInterface ( ) -> getVehisInfoAggregated ( ) ; \n\t //车辆排队信息 \n\tQList < Online :: VehiQueueCounted >  lOutVehiQueue  =  gpTessInterface -> simuInterface ( ) -> getVehisQueueCounted ( ) ; \n\t //车辆排队集计数据 \n\tQList < Online :: VehiQueueAggregated >  lOutVehiQueueAggre  =  gpTessInterface -> simuInterface ( ) -> getVehisQueueAggregated ( ) ; \n\t //行程序时间采集信息 \n\tQList < Online :: VehiTravelDetected >  lOutVehiTravel  =  gpTessInterface -> simuInterface ( ) -> getVehisTravelDetected ( ) ; \n\t //行程时间集计数据 \n\tQList < Online :: VehiTravelAggregated >  lOutVehiTravelAggre  =  gpTessInterface -> simuInterface ( ) -> getVehisTravelAggregated ( ) ; \n \n 2- 设置仿真结束后输出 \n 3- 设置轨迹输出频率，仿真过程中输出还是仿真结束后输出；输出的路径和名称 \n 4- 输出结构化路网 \n 5- 输出连接器和车道的路网的映射关系 \n 8. 特殊应用场景 \n 8.1. 公交系统 \n 1-新建公交站点（港湾式，路侧式） \n //创建公交线路 \n\t\tIBusLine *  pBusLine  =  gpTessInterface -> netInterface ( ) -> createBusLine ( QList < ILink * > ( )   <<  pLink10  <<  pLink11 ) ; \n\t\t if   ( pBusLine )   { \n\t\t\tpBusLine -> setDesirSpeed ( m2p ( 60 ) ) ; \n\t\t\tIBusStation *  pBusStation1  =  gpTessInterface -> netInterface ( ) -> createBusStation ( pLink10 -> lanes ( ) [ 0 ] ,   m2p ( 30 ) ,   m2p ( 50 ) ,   "公交站1" ) ; \n\t\t\tIBusStation *  pBusStation2  =  gpTessInterface -> netInterface ( ) -> createBusStation ( pLink11 -> lanes ( ) [ 0 ] ,   m2p ( 15 ) ,   m2p ( 50 ) ,   "公交站2" ) ; \n\t\t\t if   ( pBusStation1  &&  gpTessInterface -> netInterface ( ) -> addBusStationToLine ( pBusLine ,  pBusStation1 ) )   { \n\t\t\t\tpBusStation1 -> setType ( 2 ) ; \n\t\t\t\t qDebug ( )   <<   "公交站1已关联到公交线路"   <<  endl ; \n\t\t\t } \n\t\t\t if   ( pBusStation2  &&  gpTessInterface -> netInterface ( ) -> addBusStationToLine ( pBusLine ,  pBusStation2 ) )   { \n\t\t\t\t qDebug ( )   <<   "公交站2已关联到公交线路"   <<  endl ; \n\t\t\t } \n\t\t } //站点类型 1：路边式、2：港湾式 \n\n \n 2-新建公交线路 \n //创建公交线路 \nIBusLine *  pBusLine  =  gpTessInterface -> netInterface ( ) -> createBusLine ( QList < ILink * > ( )   <<  pLink10  <<  pLink11 ) ; \n if   ( pBusLine )   { \n\t\t\tpBusLine -> setDesirSpeed ( m2p ( 60 ) ) ; \n } \n \n 3-编辑线路站点 \n //创建公交线路 \nIBusLine *  pBusLine  =  gpTessInterface -> netInterface ( ) -> createBusLine ( QList < ILink * > ( )   <<  pLink10  <<  pLink11 ) ; \n if   ( pBusLine )   { \n\t\t\tpBusLine -> setDesirSpeed ( m2p ( 60 ) ) ; \n } \n\nQList < IBusStationLine * >  lStationLine  =  pBusLine -> stationLines ( ) ; \n\t\t if   ( ! lStationLine . isEmpty ( ) ) \n\t\t { \n\t\t\tIBusStationLine *  pStationLine  =  lStationLine . first ( ) ; \n\t\t\t // 设置车辆停靠时间(秒) \n\t\t\tpStationLine -> setBusParkingTime ( 20 ) ; \n\t\t } \n } \n \n '},{title:"二次开发用户问答",frontmatter:{},regularPath:"/document/V3.x/Python3/3-QA.html",relativePath:"document/V3.x/Python3/3-QA.md",key:"v-5994e6f6",path:"/document/V3.x/Python3/3-QA.html",headers:[{level:3,title:"1. 打开TESSNG时出现以下错误如何解决？",slug:"_1-打开tessng时出现以下错误如何解决"},{level:3,title:"2. 在V3系列二次开发中如出现以下错误如何解决？",slug:"_2-在v3系列二次开发中如出现以下错误如何解决"},{level:3,title:"3. 在python二次开发中，出现以下问题如何解决？",slug:"_3-在python二次开发中-出现以下问题如何解决"},{level:3,title:"4. 在python二次开发中，如出现以下问题如何解决？",slug:"_4-在python二次开发中-如出现以下问题如何解决"},{level:3,title:"5. 为什么设置背景图后，鼠标在边界无法拖动？",slug:"_5-为什么设置背景图后-鼠标在边界无法拖动"},{level:3,title:"6. 我绘制了两个路段，但是和仿真底图不重合，这个我怎么调整呢？",slug:"_6-我绘制了两个路段-但是和仿真底图不重合-这个我怎么调整呢"},{level:3,title:"7. 我二次开发写在MySimulator自带的一些函数中的代码为什么没有生效？",slug:"_7-我二次开发写在mysimulator自带的一些函数中的代码为什么没有生效"},{level:3,title:"8. 我安装了TESSNG V3.1，为什么没有TESSPythonAPIEXAMPLE这个文件夹？",slug:"_8-我安装了tessng-v3-1-为什么没有tess-pythonapi-example这个文件夹"},{level:3,title:"9. 为什么我这里输入1（小客车），但是实际仿真中却有两种车型呢？",slug:"_9-为什么我这里输入1-小客车-但是实际仿真中却有两种车型呢"},{level:3,title:"10. 这个 self.mSimuCount 的作用是什么呢？",slug:"_10-这个-self-msimucount-的作用是什么呢"},{level:3,title:"11. 我想实现这样一种场景：所有的货车行驶过程中，当到达某一指定地点后都需要停车一定时间（比如5min）卸货，然后再按照既定路线行驶。可以使直接停，也可以是慢慢停。",slug:"_11-我想实现这样一种场景-所有的货车行驶过程中-当到达某一指定地点后都需要停车一定时间-比如5min-卸货-然后再按照既定路线行驶。可以使直接停-也可以是慢慢停。"},{level:3,title:"12. 我想让TESSNG不要每次都弹窗，能做到吗？",slug:"_12-我想让tessng不要每次都弹窗-能做到吗"}],content:" 二次开发用户问答 \n 1. 打开TESSNG时出现以下错误如何解决？ \n \n 答：  此问题可能是由于该动态库损坏或win7 sp1以下系统设备问题，用户可下载该动态库后复制覆盖到本机对应位置(64位系统为C:\\Windows\\System32)，如仍未解决，则建议升级系统，升级后再次点击进入即可。 \n 2. 在V3系列二次开发中如出现以下错误如何解决？ \n \n \n \n \n 答：  此问题均有可能是C:\\windows\\system32中缺少libcrypto-1_1-x64.dll库，将TESSNG安装目录下的该库复制到system32下即可。 \n 3. 在python二次开发中，出现以下问题如何解决？ \n \n 答：  解释器的Python版本并非3.6，需要更改python版本。 \n 4. 在python二次开发中，如出现以下问题如何解决？ \n \n 答：  该问题是由于试用版的激活码已过期，python试用版支持一个月，可更换电脑后运行。 \n 5. 为什么设置背景图后，鼠标在边界无法拖动？ \n 答：  场景大小未设置，点击基本参数按钮，调整场景大小为对应大小。或导入背景图后设置场景比例尺。 \n 6. 我绘制了两个路段，但是和仿真底图不重合，这个我怎么调整呢？ \n 答：  可以选中断点，然后在想要调整的路段上右键添加断点，通过拖动断点来使路段拟合底图。 \n 7. 我二次开发写在MySimulator自带的一些函数中的代码为什么没有生效？ \n 答：  可能是因为试用期已过，没有权限加载插件。 \n 8. 我安装了TESSNG V3.1，为什么没有TESS_PythonAPI_EXAMPLE这个文件夹？ \n 答：  案例代码文件夹需要下载V3系列二次开发版本获取。 \n 9. 为什么我这里输入1（小客车），但是实际仿真中却有两种车型呢？ \n \n 答：  请看下车辆类型1里面是否包含了小客车和大客车，这个方法中的第一个参数指的是车型组成的ID，不是车辆类型的ID。 \n 10. 这个 self.mSimuCount 的作用是什么呢？ \n \n 答：  是案例中记录仿真次数的，点击开始仿真后，点击结束，这个参数会加一。 \n 11. 我想实现这样一种场景：所有的货车行驶过程中，当到达某一指定地点后都需要停车一定时间（比如5min）卸货，然后再按照既定路线行驶。可以使直接停，也可以是慢慢停。 \n 答：  在MySimulator中有ref_reSetSpeed和ref_reCalcdesirSpeed函数，前者控制车辆速度，后者控制车辆期望速度。这两个函数会在计算完成车辆下一帧的状态后进入，此时可以在这两个函数中进行判断，若车辆为货车且到达指定地点，将其速度或期望速度降为0。 \n def   ref_reSetSpeed ( self ,  vehi ,  ref_inOutSpeed ) : \n若当前车辆为货车，且到达指定地点(假设距路段1起点100-120m处为指定停车地点),将车辆速度设置为0 \n     if  vehi . vehicleTypeCode ( )   ==   4   and  vehi . roadId ( )   ==   1   and   100   <=  vehi . vehicleDriving ( ) . distToStartPoint ( )   <=   120 : \n        ref_inOutSpeed . value  =   0 \n         return   True \n     return   False \n 12. 我想让TESSNG不要每次都弹窗，能做到吗？ \n 答：  可以在config中将参数__allowspopup设置为false \n \n \n"},{title:"注意事项",frontmatter:{},regularPath:"/document/V3.x/Python3/2-information.html",relativePath:"document/V3.x/Python3/2-information.md",key:"v-076839e5",path:"/document/V3.x/Python3/2-information.html",headers:[{level:2,title:"软件激活及试用期",slug:"软件激活及试用期"},{level:2,title:"度量单位",slug:"度量单位"},{level:2,title:"插件函数被TESSNG调用频次设置",slug:"插件函数被tessng调用频次设置"}],content:' 注意事项 \n 软件激活及试用期 \n 用户在首次使用Python环境运行范例或开发文件时，也需要激活，具体激活界面如下： \n \n ​    试用用户与首次激活软件流程相同，采用安装包的Cert文件夹下的JidaTraffic_key激活即可。 \n ​    软件的试用期为30天，以前激活过软件的客户激活V3.0.1版本时重新延长30天试用期（识别激活电脑的物理地址）。试用期结束后将无法调用接口的二次开发功能。 \n ​    商业版用户使用不受限制。 \n 度量单位 \n TESS NG在运行过程涉及的度量单位有多种，有基本的度量单位，如：长度单位，复合型度量单位，如：速度单位。在启动TESS NG后需要设置长度基本度量单位，默认基本度量单位是像素，像素与米存在转换关系，这个关系通常在画路网前设置像素比时就已确定。 \n ​    在二次开发过程中需要根据说明将大部分与长度有关的单位改成像素。像素与米制的相互转换方法如下，默认情况下1个像素表示1米： \n ​    米制转换像素：def m2p(value:float) -> float: \n ​    像素转换米制：def p2m(value:float) -> float: \n 插件函数被TESSNG调用频次设置 \n TESSNG调用插件方法的频次是指对插件实现的PyCustomerSimulator接口方法调用频次。 \n 可以在PyCustomerSimulator的initVehicle(self, pIVehicle:Tessng.IVehicle)方法里通过pIVehicle设置TESSNG对PyCustomerSimulator不同方法调用频次及是否允许插件重绘车辆。 \n 是否允许对车辆重绘方法的调用：默认为False，如果允许，可以传入True，如：pIVehicle.setIsPermitForVehicleDraw(True)。可以通过pIVehicle得到该车辆类型及ID等信息来确定是否允许对该车辆重绘。 \n 当"__custsimubysteps"设置为True时， 默认调用频次比较低，很多低到毫无意义，只为减少调用次数，不至于影响仿真运行效率 。如果某方法被实现，需要对该方法调用频次进行调整。可参见范例。 \n 假设仿真精度是steps，即每秒计算steps次，各方法默认调用频次如下： \n \n \n 车辆相关方法调用频次 \n \n 计算下一位置前处理方法beforeNextPoint被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次； \n 具体车辆一个步长计算完成后的处理方法afterStep被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次； \n 确定是否停止车辆运行并移出路网方法isStopDriving调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次； \n \n \n \n 驾驶行为相关方法调用频次 \n \n 重新设置期望速度方法reCalcdesirSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次，如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 计算最大限速方法calcMaxLimitedSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 计算限制车道方法calcLimitedLaneNumber被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 计算车道限速方法calcSpeedLimitByLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 计算安全变道方法calcChangeLaneSafeDist被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 重新计算是否可以左强制变道方法reCalcToLeftLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 重新计算是否可以右强制变道方法reCalcToRightLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 重新计算是否可以左自由变道方法reCalcToLeftFreely被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 重新计算是否可以右自由变道方法reCalcToRightFreely被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 计算跟驰类型后处理方法afterCalcTracingType被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 连接段上汇入到车道前处理方法beforeMergingToLane被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 重新计算跟驰状态参数方法reSetFollowingType被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 计算加速度方法calcAcce被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 重新计算加速度方法reSetAcce被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 重置车速方法reSetSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 重新计算角度方法reCalcAngle被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 计算后续道路前处理方法beforeNextRoad被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n \n \n \n \n'},{title:"变更记录",frontmatter:{},regularPath:"/document/V3.x/Python3/1-changelog.html",relativePath:"document/V3.x/Python3/1-changelog.md",key:"v-13a2da45",path:"/document/V3.x/Python3/1-changelog.html",headers:[{level:2,title:"接口变更列表",slug:"接口变更列表"}],content:" 变更记录 \n 接口变更列表 \n 【 2023-12-22 】 \n TESSNG内核由V2.1升级到V3.1. V2.x， V3.x二次开发版本分别对应V2.1及V3.0以下, V3.0及以上专业版基础功能。V3.x相对V2.x有的变更如下： \n \n 【新增】IRoadNet对象新增获取路网说明信息，路网中心点坐标接口 \n 【新增】ISection路段与连接段的父对象，支持获取路段，连接段信息；提供了供分布式环境下对路段连接段操作的接口 \n 【新增】ILaneObject车道与车道连接器的父对象，支持获取车道，车道连接器信息；支持计算距离车道起终点距离 \n 【新增】IVehicleDrivInfoCollector数据采集器对象：支持获取编号，名称，位置，轮廓，绑定的路网关系，工作时间，聚合时间间隔等信息 \n 【新增】IVehicleQueueCounter排队计数器接口：支持获取编号，名称，位置，轮廓，绑定的路网关系，工作时间，聚合时间间隔等信息 \n 【新增】IVehicleTravelDetector行程时间检测器接口：支持获取编号，名称，位置，轮廓，绑定的路网关系，工作时间，聚合时间间隔等信息 \n 【新增】IGuidArrow导向箭头|车道箭头接口：支持获取编号，长度，位置，轮廓，所在车道等信息 \n 【新增】IAccidentZone事故区接口：支持获取编号，名称，位置，长度，路段绑定关系，所在路段的类型，车道信息，事故等级，持续时间，是否需需要救援，救援车发车时间，救援耗时等信息 \n 【新增】IRoadWorkZone施工区接口：支持获取编号，名称，位置，施工区长度，施工区相邻车道限速，施工持续时间，施工区关联路段信息，施工区类型，车道属性 \n 【修改】ILink对象中新增：返回link类型，link高程，设置修改路段类型，车道类型，获取车道对象，link上下游拓扑信息，路段几何计算，获取link轮廓数据等接口 \n 【修改】ILane对象中新增：车道类型，所属link,chedao kuandu ,车道拓扑，车道左右边线数据，车道轮廓数据，车道局部坐标计算等接口 \n 【修改】IConnector对象新增：获取连接段类型，长度，高程，名称，拓扑，轮廓信息，设置其他属性的接口 \n 【修改】ILaneConnector对象新增：获取车道连接器ID，类型，所在连接段，所属车道section, 拓扑，左右边线，中心线，轮廓信息，支持局部坐标计算，其他属性设置的接口 \n 【修改】IConnectorArea对象新增：连接段面域中心点，分布式环境下的标识信息等接口 \n 【修改】IDispatchPoint对象新增：发车点轮廓信息，动态修改发车信息等接口 \n 【修改】IDecisionPoint对象新增：决策点距路段起点距离（路段局部坐标），相关决策路径，决策点轮廓信息，支持动态修改决策点信息等接口 \n 【修改】IRouting对象新增：决策点编号信息，道路是否属于当前路径，路径上道路的上下游关联信息等接口 \n 【修改】ISignalLamp对象新增：设置信号灯名称，设置信号灯位置，获取信号灯轮廓信息等接口 \n 【修改】ISignalPhase对象新增：获取相位灯色列表，设置信号灯列表，设置相位序号，设置相位名称等接口 \n 【修改】ISignalGroup对象新增：设置信号灯组名称，设置信号方案周期时间，设置方案生效的起终止时间等接口 \n 【修改】IBusLine对象新增：设置公交线路名称，线路发车间隔，发车时刻，线路期望速度，线路始发站初始载客人数等信息 \n 【修改】IBusStation对象新增：设置公交站点位置，站点名称，站点长度、轮廓、类型等接口 \n 【修改】IVehicle对象新增：支持查询车辆所在路段、车道连接器信息，支持获取车辆名称，车辆距前车时距，距后车时距；支持获取车辆当前路径，支持获取，修改车辆本身显示信息，以及新增车辆动态属性信息 \n 【修改】IVehicleDriving对象新增：获取当前车辆信息，车辆下一仿真步位置，车速为零持续时间，当前车辆是否在决策点附近，当前车辆的跟驰类型，车辆的欧拉角，车辆所在当前路段和下游路段，支持初始化轨迹，计算轨迹长度，支持计算带高程的轨迹，支持设置车辆路径，强制车辆移动等接口 \n 【修改】TessInterface对象新增：支持获取设置全局配置，支持卸载释放插件 \n 【修改】NetInterface对象新增：支持专业数据库加载路网，获取路网对象，支持操作背景图，支持所有路段，连接器，面域，导向箭头，信号灯，公交站点等路网元素的查找，支持创建路径，操作检测器，排队器，车道连接器之间的交叉点（冲突点），增删改查其他交通元素 \n 【修改】SimuInterface对象新增：支持仿真时长设置，支持设置工作线程数，获取仿真批次，获取车辆编号，创建公交，操作快照等接口 \n 【修改】PyCustomerNet对象新增：支持用户修改路网文件，新增路网数据库表和对数据库的增删改查，支持自定义道路颜色等接口 \n 【修改】PyCustomerSimulator对象新增：支持公交车辆创建预处理工作，新增自由变道参数修改，设置跟驰类型，跟驰参数，计算车辆三维属性，修改车辆外观，判断车辆当前是否经过施工区、限速区，支持快照恢复仿真等接口 \n \n \n"},{title:"简介",frontmatter:{},regularPath:"/document/V3.x/Python3/",relativePath:"document/V3.x/Python3/README.md",key:"v-1373082e",path:"/document/V3.x/Python3/",headers:[{level:2,title:"1. 二次开发能做什么",slug:"_1-二次开发能做什么"},{level:2,title:"2. 研发背景",slug:"_2-研发背景"},{level:2,title:"3. API支持语言",slug:"_3-api支持语言"},{level:2,title:"4. 接口架构",slug:"_4-接口架构"},{level:2,title:"5. 范例说明",slug:"_5-范例说明"},{level:3,title:"5.1 增加窗体控件",slug:"_5-1-增加窗体控件"},{level:3,title:"5.2 改变路网元素展示内容",slug:"_5-2-改变路网元素展示内容"},{level:3,title:"5.3. 控制车辆驾驶行为",slug:"_5-3-控制车辆驾驶行为"},{level:3,title:"5.4. 在路段和连接段中间任意位置发车",slug:"_5-4-在路段和连接段中间任意位置发车"}],content:' 简介 \n 1. 二次开发能做什么 \n 2. 研发背景 \n TESS NG微观交通仿真系统融合了交通工程、软件工程、系统仿真等交叉学科领域的最新技术研发而成，主要特点为：完全自主知识产权、便捷快速的建模能力，开放的外部接口模块以及定制化的用户服务等。 \n TESS NG强化设计，在软件功能扩展、项目建设过程中对大量功能的实现进行抽象，将抽象的逻辑过程在TESS NG内部与核心功能相融合。这些抽象的逻辑细化成接口方法，抽象接口方法的具体实现留给具体运用。在此架构设计下，开发出车路协同、在线仿真、微宏观一体化仿真等插件模块。目前这些抽象接口的设计和运用已经成熟。 \n TESS NG的二次开发通过用户编写代码与TESS NG交互来实现能力扩张与功能定制。 \n TESS NG python API与C++API功能完全一致。python API是在C++API基础上封装的，由于python语法与C++相比存在一些差别，为了使python API 的调用方式尽可能与C++ API调用方式保持一致，对少数几个C++ 方法进行了调整，最终C++ API 与 python API 在功能上完全一致，只是python少数几个方法名不同（避免重载带来复杂性）。 \n 用户可以通过二次开发实现高度自动化，定制化的业务场景仿真，是实现交通数字孪生，学术实验的有效方法之一。 \n 3. API支持语言 \n TESSNG 目前支持C++, Python两种语言的二次开发接口；其中python版本建议使用python3.6。 \n 4. 接口架构 \n TESS NG和插件相互调用，实现对TESS NG运行过程从精细到粗放各个层次的控制。 \n \n ​    TESS NG通过实现TessInterface及其三个子接口，将自身主要功能暴露给用户，用户启动TESS NG后可以通过tessngIFace()方法获取TESS NG的顶层接口，再通过顶层接口获取三个子接口，调用子接口方法。TESS NG加载插件后可以调用python实现的插件接口方法，用户可以在插件方法中通过TessInterface及其子接口控制仿真运行，及仿真过程中车辆驾驶行为、信号灯色、路径车辆分配等等。 \n 5. 范例说明 \n 范例“TESS NG PYAPI EXAMPLE”展示了在窗体界面、路网展示、仿真过程三个方面如何对TESS NG施加影响。 \n 范例启动时从内存加载插件，企业版用户可成功加载插件，之后加载路网。如果成功加载了插件，插件会检测路网上的路段数，如果没有路段会创建几条路段、连接段以及发车点。之后TESS NG 再根据config参数"__simuafterload"值决定是否起动仿真。 \n 5.1 增加窗体控件 \n 在窗体界面上的影响：范例在窗体放置一个QDockWidget对象，QDockWidget对象包含了自定义界面，自定义界面上放置一些控件，通过这些控件操作TESS NG的路网加载、仿真运行，如下图如示： \n 5.2 改变路网元素展示内容 \n 在路网展示上的影响：范例在加载路网后判断路网上是否有路段，如果没有则创建几条路段、连接段和几个发车点。其中名称为“曹安路”的路段的标签显示路段名，其它路段标签显示ID，连接段标签显示的都是名称，如下图所示： \n 5.3. 控制车辆驾驶行为 \n 在仿真过程上的影响：范例在仿真过程的影响包括初始化车辆车道、位置、速度，从几个方面改变车辆速度，以及控制自由变道，如下图所示： \n \n 通过车辆对象设置车辆长度函数setLength(self, len:float, bRestWidth:bool)中，如果bRestWidth为“True”，则车身宽度会随长度等比例变化，如果设为False，则车身宽度不会改变。 \n 5.4. 在路段和连接段中间任意位置发车 \n 在仿真过程上的影响：范例在仿真过程动态从路段及连接段上距起点一定距离的位置发车，无需发车点发车，如下图所示： \n \n'},{title:"经典业务案例",frontmatter:{},regularPath:"/document/V3.x/Python3/demo.html",relativePath:"document/V3.x/Python3/demo.md",key:"v-5b9244da",path:"/document/V3.x/Python3/demo.html",content:" 经典业务案例 \n \n \n \n 大类 \n 功能项 \n \n \n \n \n 高速 \n 施工区仿真 \n \n \n \n 事故，事件仿真 \n \n \n \n 车道限速管控 \n \n \n \n 车道关闭仿真 \n \n \n \n 硬路肩，应急车道开放 \n \n \n \n 匝道信号控制 \n \n \n \n 拥堵预警 \n \n \n \n 高速管控预评价系统 \n \n \n \n 高快速路参数标定 \n \n \n 城市 \n 单点信控自适应 \n \n \n \n 交叉口车道车道渠化变更，可变车道 \n \n \n \n 干线协调 \n \n \n \n 车辆路径诱导 \n \n \n \n 拥堵预警 \n \n \n \n 车道管控仿真 \n \n \n \n 车辆事故仿真 \n \n \n \n 车辆速度引导（VMS信息板） \n \n \n \n 城市道路参数标定 \n \n \n \n 公交信号优先 \n \n \n V2X 自动驾驶 \n v2x交叉口 \n \n \n \n 速度引导 \n \n \n \n 车辆编队行驶 \n \n \n 自动驾驶联合仿真 \n Carla对接 \n \n \n \n prescan对接 \n \n \n \n scanner对接 \n \n \n \n 交通数字孪生：与UE5，unity结合 \n \n \n \n 自动驾驶测试场景设计 \n \n \n \n \n"},{title:"接口详解",frontmatter:{},regularPath:"/document/V3.x/Python3/details.html",relativePath:"document/V3.x/Python3/details.md",key:"v-454203f6",path:"/document/V3.x/Python3/details.html",headers:[{level:2,title:"1. 全局配置参数",slug:"_1-全局配置参数"},{level:3,title:"1.1. main.py文件中config属性说明",slug:"_1-1-main-py文件中config属性说明"},{level:3,title:"1.2. 插件方法调用频次控制",slug:"_1-2-插件方法调用频次控制"},{level:3,title:"1.3. 仿真过程中gui界面车辆重绘控制",slug:"_1-3-仿真过程中gui界面车辆重绘控制"},{level:2,title:"2. 路网基本元素",slug:"_2-路网基本元素"},{level:3,title:"2.1. IRoadNet",slug:"_2-1-iroadnet"},{level:3,title:"2.2. ISection",slug:"_2-2-isection"},{level:3,title:"2.3 ILaneObject",slug:"_2-3-ilaneobject"},{level:3,title:"2.4. ILink",slug:"_2-4-ilink"},{level:3,title:"2.5. ILane",slug:"_2-5-ilane"},{level:3,title:"2.6. IConnector",slug:"_2-6-iconnector"},{level:3,title:"2.7. ILaneConnector",slug:"_2-7-ilaneconnector"},{level:3,title:"2.8. IConnectorArea",slug:"_2-8-iconnectorarea"},{level:3,title:"2.9. IDispatchPoint",slug:"_2-9-idispatchpoint"},{level:3,title:"2.10. IDecisionPoint",slug:"_2-10-idecisionpoint"},{level:3,title:"2.11. IRouting",slug:"_2-11-irouting"},{level:3,title:"2.12. ISignalLamp",slug:"_2-12-isignallamp"},{level:3,title:"2.13. ISignalPhase",slug:"_2-13-isignalphase"},{level:3,title:"2.14. ISignalGroup",slug:"_2-14-isignalgroup"},{level:3,title:"2.15. IBusLine",slug:"_2-15-ibusline"},{level:3,title:"2.16. IBusStation",slug:"_2-16-ibusstation"},{level:3,title:"2.17. IBusStationLine",slug:"_2-17-ibusstationline"},{level:3,title:"2.18. IVehicleDrivInfoCollector",slug:"_2-18-ivehicledrivinfocollector"},{level:3,title:"2.19. IVehicleQueueCounter",slug:"_2-19-ivehiclequeuecounter"},{level:3,title:"2.20. IVehicleTravelDetector",slug:"_2-20-ivehicletraveldetector"},{level:3,title:"2.21. IGuidArrow",slug:"_2-21-iguidarrow"},{level:3,title:"2.22. IAccidentZone",slug:"_2-22-iaccidentzone"},{level:3,title:"2.23. IRoadWorkZone",slug:"_2-23-iroadworkzone"},{level:2,title:"3. 车辆及驾驶行为",slug:"_3-车辆及驾驶行为"},{level:3,title:"3.1. IVehicle",slug:"_3-1-ivehicle"},{level:3,title:"3.2. IVehicleDriving",slug:"_3-2-ivehicledriving"},{level:2,title:"4. 自定义窗口组件TessInterface",slug:"_4-自定义窗口组件tessinterface"},{level:3,title:"4.1. NetInterface",slug:"_4-1-netinterface"},{level:3,title:"4.2. SimuInterface",slug:"_4-2-simuinterface"},{level:3,title:"4.3.  GuiInterface",slug:"_4-3-guiinterface"},{level:2,title:"5. 自定义插件TessPlugin",slug:"_5-自定义插件tessplugin"},{level:3,title:"5.1. PyCustomerNet",slug:"_5-1-pycustomernet"},{level:3,title:"5.2. PyCustomerSimulator",slug:"_5-2-pycustomersimulator"}],content:' 接口详解 \n 1. 全局配置参数 \n 1.1. main.py文件中config属性说明 \n 在创建TESS NG工厂类实例前创建字典config，config配置了一些重要信息，说明如下： \n {\n   "__workspace"xxxxxx",\n\t"__netfilepath":"xxx.tess",\n\t"__simuafterload":False,\n\t"__timebycpu":False,\n\t"__custsimubysteps":False\n}\n\n \n "workspace"：指定“当前工作路径”，TESS NG会在“当前工作路径”的Cert子文件夹下读取认证文件，在”SimuResult”子文件夹下保存仿真结果，等。 \n "netfilepath"：指定TESSNG启动后加载的路网文件全路径名； \n "simuafterload"：指定TESSNG加载路网文件（指定的路网文件或临时空白路网文件）后是否启动仿真； \n "timebycpu"：指定每个仿真周期时间计算依据，是cpu时钟确定的时长（现实时长），还是由仿真精度确定的时长。在线仿真且算力吃紧时可以尝试设置此属性为True； \n "custsimubysteps"：设置TESSNG对插件方法调用频次的依据，设为False表示每个计算周期都会调用一次插件实现的方法，即不依据插件端设置的调用频次；设为True时TESSNG依据插件设置的调用频次对插件实现的PyCustomerSimulator方法进行调用。 \n python二次开发环境下，如果运行车辆不多，可以将"custsimubysteps"设为False。如果运行车辆较多，可以将"__custsimubysteps"设为True，再设定实现的方法调用频次，使对仿真效率的负面影响最小化。 \n 1.2. 插件方法调用频次控制 \n TESSNG调用插件方法的频次是指对插件实现的PyCustomerSimulator接口方法调用频次。 \n 当"__custsimubysteps"设置为True时， 默认调用频次比较低，很多低到毫无意义，只为减少调用次数，不至于影响仿真运行效率 。如果某方法被实现，需要对该方法调用频次进行调整。可参见范例。 \n 假设仿真精度是steps，即每秒计算steps次，各方法默认调用频次如下： \n 1）、车辆相关方法调用频次 \n 计算下一位置前处理方法beforeNextPoint被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次； \n 具体车辆一个步长计算完成后的处理方法afterStep被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次； \n 确定是否停止车辆运行并移出路网方法isStopDriving调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次； \n 2）、驾驶行为相关方法调用频次 \n 重新设置期望速度方法reCalcdesirSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次，如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 计算最大限速方法calcMaxLimitedSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 计算限制车道方法calcLimitedLaneNumber被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 计算车道限速方法calcSpeedLimitByLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 计算安全变道方法calcChangeLaneSafeDist被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 重新计算是否可以左强制变道方法reCalcToLeftLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 重新计算是否可以右强制变道方法reCalcToRightLane被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 重新计算是否可以左自由变道方法reCalcToLeftFreely被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 重新计算是否可以右自由变道方法reCalcToRightFreely被调用频次：每steps个仿真周期调用一次，即每秒调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 计算跟驰类型后处理方法afterCalcTracingType被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为20个计算周期调用1次或更小。 \n 连接段上汇入到车道前处理方法beforeMergingToLane被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 重新计算跟驰状态参数方法reSetFollowingType被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 计算加速度方法calcAcce被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 重新计算加速度方法reSetAcce被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 重置车速方法reSetSpeed被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 重新计算角度方法reCalcAngle被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 计算后续道路前处理方法beforeNextRoad被调用频次：每steps * 300个仿真周期调用一次，即5分钟调用一次。如果该方法被实现，建议将该方法调用频次设为1个计算周期调用1次或更大。 \n 1.3. 仿真过程中gui界面车辆重绘控制 \n 可以在PyCustomerSimulator的initVehicle(self, pIVehicle:Tessng.IVehicle)方法里通过pIVehicle设置TESSNG对PyCustomerSimulator不同方法调用频次及是否允许插件重绘车辆。 \n 是否允许对车辆重绘方法的调用：默认为False，如果允许，可以传入True，如：pIVehicle.setIsPermitForVehicleDraw(True)。可以通过pIVehicle得到该车辆类型及ID等信息来确定是否允许对该车辆重绘。 \n 2. 路网基本元素 \n 2.1. IRoadNet \n 路网基本信息接口，设计此接口的目的是为了TESS NG在导入外源路网时能够保存这些路网的属性，如路网中心点坐标、空间参考等。 \n 接口方法： \n Ø  def id(self) -> int: ... \n 路网ID \n Ø  def netName(self) -> str: ... \n 路网名称 \n Ø  def url(self) -> str: .. \n 源数据路径，可以是本地文件，可以是网络地址 \n Ø  def type(self) -> str: ... \n 来源分类："TESSNG"表示TESSNG自建；"OpenDrive"表示由OpenDrive数据导入；"GeoJson"表示由geojson数据导入 \n Ø  def bkgUrl(self) -> str: ... \n 背景路径 \n Ø  def otherAttrs(self) -> typing.Dict: ... \n 其它属性字曲数据 \n Ø  def explain(self) -> str: ... \n 获取路网说明 \n Ø  def centerPoint(self) -> PySide2.QtCore.QPointF: ... \n 获取路网中心点位置 \n 2.2. ISection \n 路段与连接段的父类接口，方法如下： \n Ø  def gtype(self) -> int: ... \n 类型，GLinkType 或 GConnectorType。在Tessng.pyi / NetItemType类中定义了一批常量，每一个数值代表路网上一种元素类型。如：GLinkType代表路段、GConnectorType代表连接段。 \n Ø  def isLink(self) -> bool: ... \n 是否是路段 \n Ø  def id(self) -> int: ... \n 获取ID，如果是Link，id是Link的ID，如果是连接段，id是连接段ID \n Ø  def sectionId(self) -> int: ... \n 获取ID，如果是Link，id是Link的ID，如果是连接段，id是连接段ID+10000000，从而区分路段与连接段 \n Ø  def name(self) -> str: ... \n 获取Section名称，路段名或连接段名 \n Ø  def setName(self, name:str) -> None: ... \n 设置Section名称 \n Ø  def v3z(self) -> float: ... \n 获取Section高程 \n Ø  def length(self) -> float: ... \n 获取Section长度，默认单位：像素 \n Ø  def laneObjects(self) -> typing.List: ... \n 车道与“车道连接”的父类接口列表 \n Ø  def fromSection(self, id:int=...) -> Tessng.ISection: ... \n 根据ID获取上游Section。如果当前是路段, id 为 0 返回空，否则返回上游指定ID的连接段；如果当前是连接段，id 为 0 返回上游路段，否则返回空。 \n 举例： \n根据id获取路段5上游id为2的连接段 \nsectionLink  =  tessngIFace ( ) . netInterface ( ) . findLink ( 5 ) \n    sectionConnector  =  sectionLink . fromSection ( 2 ) \n     if  sectionConnector  is   not   None   and  sectionConnector . gtype ( )   ==  NetItemType . GConnectorType : \n         print ( "路段5上游id为2的section为：" ,  sectionConnector . id ( ) ) \n\n \n Ø  def toSection(self, id:int=...) -> Tessng.ISection: ... \n 根据ID获取下游 Sction。如果当前是路段, id 为 0 返回空，否则返回下游指定ID的连接段；如果当前是连接段，id 为 0 返回下游路段，否则返回空。 \n Ø  def setOtherAttr(self, otherAttr:typing.Dict) -> None: ... \n 设置路段或连接段其它属性 \n Ø  def castToLink(self) -> Tessng.ILink: ... \n 转换成ILink，如果当前为连接段则返回空 \n Ø  def castToConnector(self) -> Tessng.IConnector: ... \n 转换成IConnector，如果当前为路段则返回空 \n Ø  def polygon(self) -> PySide2.QtGui.QPolygonF: ... \n 获取Section的多边型轮廓顶点构成的多边形 \n Ø  def workerKey(self) -> int: ... \n Worker节点标识，在分布式环境可用 \n Ø  def setWorkerKey(self, key:int) -> None: ... \n 设置Worker节点，在分布式环境可用 \n Ø  def fromWorkerKey(self) -> int: ... \n 上游Worker节点标识，在分布式环境可用 \n Ø  def setFromWorkerKey(self, key:int) -> None: ... \n 设置上游Worker节点标识，在分布式环境可用 \n 2.3 ILaneObject \n 车道与车道连接的父类接口，方法如下： \n Ø  def gtype(self) -> int: ... \n 类型，GLaneType或GLaneConnectorType \n Ø  def isLane(self) -> bool: ... \n 是否车道 \n Ø  def id(self) -> int: ... \n 获取ID，如果是Lane，id是Lane的ID， 如果是车道连接，id是“车道连接”ID \n Ø  def length(self) -> float: ... \n 获取车道或“车道连接”长度，默认单位：像素 \n Ø  def section(self) -> Tessng.ISection: ... \n 获取所属的ISection \n Ø  def fromLaneObject(self, id:int=...) -> Tessng.ILaneObject: ... \n 根据ID获取上游 LaneObject。如果当前是车道, id 为 0 返回空，否则返回上游指定ID的“车道连接”；如果当前是连接段，id 为 0 返回上游车道，否则返回空。 \n Ø  def toLaneObject(self, id:int=...) -> Tessng.ILaneObject: ... \n 根据ID获取下游 LaneObject。如果当前是车道, id 为 0 返回空，否则返回下游指定ID的“车道连接”；如果当前是连接段，id 为 0 返回下游车道，否则返回空。 \n Ø  def centerBreakPoints(self) -> typing.List: ... \n 车道或“车道连接”中心线断点集 \n Ø  def leftBreakPoints(self) -> typing.List: ... \n 车道或“车道连接”左侧线断点集 \n Ø  def rightBreakPoints(self) -> typing.List: ... \n 车道或“车道连接”右侧线断点集 \n Ø  def centerBreakPoint3Ds(self) -> typing.List: ... \n 车道或“车道连接”中心线断点(三维)集 \n Ø  def leftBreakPoint3Ds(self) -> typing.List: ... \n 车道或“车道连接”左侧线断点(三维)集 \n Ø  def rightBreakPoint3Ds(self) -> typing.List: ... \n 车道或“车道连接”右侧线断点(三维)集 \n Ø  def leftBreak3DsPartly(self, fromPoint:PySide2.QtCore.QPointF, toPoint:PySide2.QtCore.QPointF) -> typing.List: ... \n 车道或“车道连接”左侧部分断点(三维)集 \n 参数： \n [in] fromPoint：中心线上某一点作为起点 \n [in] toPoint：中心线上某一点作为终点 \n Ø  def rightBreak3DsPartly(self, fromPoint:PySide2.QtCore.QPointF, toPoint:PySide2.QtCore.QPointF) -> typing.List: ... \n 车道或“车道连接”右侧部分断点(三维)集 \n 参数： \n [in] fromPoint：中心线上某一点作为起点 \n [in] toPoint：中心线上某一点作为终点 \n Ø  def distToStartPoint(self, p:PySide2.QtCore.QPointF) -> float: ... \n 中心线上一点到起点距离 \n Ø  def distToStartPointWithSegmIndex(self, p:PySide2.QtCore.QPointF, segmIndex:int=..., bOnCentLine:bool=...) -> float: ... \n 中心线上一点到起点距离，附加条件是该点所在车道上的分段序号 \n 参数： \n [in] p：当前中心线上点或附近点的坐标 \n [in] segmIndex：参数p点所在车道上的分段序号 \n [in] bOnCentLine：参数p点是否在中心线上 \n Ø  def getPointAndIndexByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF, outIndex:int) -> bool: ... \n 求中心线起点向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回False，否则返回True \n 参数： \n [in] dist：中心线起点向前延伸的距离 \n [out] outPoint：中心线起点向前延伸dist距离后所在点 \n [out] outIndex：中心线起点向前延伸dist距离后所在分段序号 \n 举例： \n路段5最左侧车道向前延伸140米后所在点及分段序号 \n        link  =  tessngIFace ( ) . netInterface ( ) . findLink ( 5 ) \n        laneObjLeft  =  link . laneObjects ( ) [ - 1 ]  \n        outPoint  =  QPointF ( ) \n        outIndex  =   0 \n        dist  =  m2p ( 140 ) \n         if  laneObjLeft . getPointAndIndexByDist ( dist ,  outPoint ,  outIndex )   is   not   None : \n     print ( "路段5最左侧车道向前延伸140米后所在点坐标为：({}, {})，分段序号为：{}" . format ( outPoint . x ( ) ,  outPoint . y ( ) ,  outIndex ) ) \n\n \n Ø  def getPointByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF) -> bool: ... \n 求中心线起点向前延伸dist距离后所在点, 如果目标点不在中心线上返回False，否则返回True \n Ø  def setOtherAttr(self, attr:typing.Dict) -> None: ... \n 设置车道或“车道连接”其它属性 \n Ø  def castToLane(self) -> Tessng.ILane: ... \n 将ILaneObject转换为ILane，如果当前ILaneObject是“车道连接”则返回空 \n Ø  def castToLaneConnector(self) -> Tessng.ILaneConnector: ... \n 将ILaneObject转换为ILaneConnector，如果当前ILaneObject是车道则返回空 \n 2.4. ILink \n 路段接口，方法如下： \n Ø  def gtype(self) -> int: ... \n 类型，返回GLinkType \n Ø  def id(self) -> int: ... \n 获取路段ID \n Ø  def length(self) -> float: ... \n 获取路段长度，默认单位：像素 \n Ø  def width(self) -> float: ... \n 获取路段宽度 \n Ø  def z(self) -> float: ... \n 获取路段高程 \n Ø  def v3z(self) -> float: ... \n 获取路段高程，过载ISection的方法 \n Ø  def name(self) -> str: ... \n 获取路段名称 \n Ø  def setName(self, name:str) -> None: ... \n 设置路段名称 \n Ø  def linkType(self) -> str: ... \n 获取路段类型，如：城市主干道、城市次干道、人行道等 \n Ø  def setType(self, type:str) -> None: ... \n 设置路段类型，路段类型有10种，分别为：高速路、城市快速路、匝道、城市主要干道、次要干道、地方街道、非机动车道、人行道、公交专用道和机非共享 \n Ø  def laneCount(self) -> int: ... \n 获取车道数 \n Ø  def limitSpeed(self) -> float: ... \n 获取路段最高限速，单位：千米/小时 \n Ø  def setLimitSpeed(self, speed:float) -> None: ... \n 设置最高限速 \n 参数： \n [in] speed：最高限速，单位：千米/小时 \n 举例： \n link  =   None \n创建路段省略 \n if  link  is   not   None : \n设置路段限速30km/h \nlink . setLimitSpeed ( 30 ) \n\n \n Ø  def minSpeed(self) -> float: ... \n 最低限速，单位：千米/小时 \n Ø  def lanes(self) -> typing.List: ... \n 车道接口列表 \n Ø  def laneObjects(self) -> typing.List: ... \n 车道及“车道连接”的接口列表 \n Ø  def centerBreakPoints(self) -> typing.List: ... \n 路段中心线断点集 \n Ø  def leftBreakPoints(self) -> typing.List: ... \n 路段左侧线断点集 \n Ø  def rightBreakPoints(self) -> typing.List: ... \n 路段右侧线断点集 \n Ø  def centerBreakPoint3Ds(self) -> typing.List: ... \n 路段中心线断点(三维)集 \n Ø  def leftBreakPoint3Ds(self) -> typing.List: ... \n 路段左侧线断点(三维)集 \n Ø  def rightBreakPoint3Ds(self) -> typing.List: ... \n 路段右侧线断点(三维)集 \n Ø  def fromConnectors(self) -> typing.List: ... \n 上游连接段列表 \n Ø  def toConnectors(self) -> typing.List: ... \n 下游连接段列表 \n Ø  def fromSection(self, id:int=...) -> Tessng.ISection: ... \n 根据ID获取上游Section。如果当前是路段, id 为 0 返回空，否则返回上游指定ID的连接段；如果当前是连接段，id 为 0 返回上游路段，否则返回空。 \n Ø  def toSection(self, id:int=...) -> Tessng.ISection: ... \n 根据ID获取下游 Sction。如果当前是路段, id 为 0 返回空，否则返回下游指定ID的连接段；如果当前是连接段，id 为 0 返回下游路段，否则返回空。 \n Ø  def setOtherAttr(self, otherAttr:typing.Dict) -> None: ... \n 设置路段其它属性 \n Ø  def setLaneTypes(self, lType:typing.Sequence) -> None: ... \n 设置车道属性，属性类型包括："机动车道"、"机非共享"、"非机动车道"、"公交专用道" \n Ø  def setLaneOtherAtrrs(self, lAttrs:typing.Sequence) -> None: ... \n 设置车道其它属性 \n Ø  def distToStartPoint(self, p:PySide2.QtCore.QPointF) -> float: ... \n 中心线上一点到起点距离 \n Ø  def getPointAndIndexByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF, outIndex:int) -> bool: ... \n 求中心线起点向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回False，否则返回True \n 参数： \n [in] dist：中心线起点向前延伸的距离 \n [out] outPoint：中心线起点向前延伸dist距离后所在点 \n [out] outIndex：中心线起点向前延伸dist距离后所在分段序号 \n Ø  def getPointByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF) -> bool: ... \n 求中心线起点向前延伸dist距离后所在点, 如果目标点不在中心线上返回False，否则返回True \n Ø  def polygon(self) -> PySide2.QtGui.QPolygonF: ... \n 获取路段的多边型轮廓顶点 \n 2.5. ILane \n 车道接口，方法如下： \n Ø  def gtype(self) -> int: ... \n 类型，车道类型为GLaneType \n Ø  def id(self) -> int: ... \n 获取车道ID \n Ø  def link(self) -> Tessng.ILink: ... \n 获取车道所在路段 \n Ø  def section(self) -> Tessng.ISection: ... \n 获取车道所属Section \n Ø  def length(self) -> float: ... \n 获取车道长度，默认单位：像素 \n Ø  def width(self) -> float: ... \n 获取车道宽度，默认单位：像素 \n Ø  def number(self) -> int: ... \n 获取车道序号，从0开始（自外侧往内侧） \n Ø  def actionType(self) -> str: ... \n 获取车道的行为类型 \n Ø  def fromLaneObject(self, id:int=...) -> Tessng.ILaneObject: ... \n 根据ID获取上游 LaneObject。id 为 0 返回空，否则返回上游指定ID的“车道连接 \n Ø  def toLaneObject(self, id:int=...) -> Tessng.ILaneObject: ... \n 根据ID获取下游 LaneObject。id 为 0 返回空，否则返回下游指定ID的“车道连接” \n Ø  def centerBreakPoints(self) -> typing.List: ... \n 获取车道中心点断点集，断点坐标用像素表示 \n Ø  def leftBreakPoints(self) -> typing.List: ... \n 车道左侧线断点集 \n Ø  def rightBreakPoints(self) -> typing.List: ... \n 车道右侧线断点集 \n Ø  def centerBreakPoint3Ds(self) -> typing.List: ... \n 车道中心线断点(三维)集 \n Ø  def leftBreakPoint3Ds(self) -> typing.List: ... \n 车道左侧线断点(三维)集 \n Ø  def rightBreakPoint3Ds(self) -> typing.List: ... \n 车道右侧线断点(三维)集 \n Ø  def leftBreak3DsPartly(self, fromPoint:PySide2.QtCore.QPointF, toPoint:PySide2.QtCore.QPointF) -> typing.List: ... \n 车道左侧部分断点(三维)集 \n 参数： \n [in] fromPoint：中心线上某一点作为起点 \n [in] toPoint：中心线上某一点作为终点 \n Ø  def rightBreak3DsPartly(self, fromPoint:PySide2.QtCore.QPointF, toPoint:PySide2.QtCore.QPointF) -> typing.List: ... \n 车道右侧部分断点(三维)集 \n 参数： \n [in] fromPoint：中心线上某一点作为起点 \n [in] toPoint：中心线上某一点作为终点 \n Ø  def distToStartPoint(self, p:PySide2.QtCore.QPointF) -> float: ... \n 中心线上一点到起点距离 \n Ø  def distToStartPointWithSegmIndex(self, p:PySide2.QtCore.QPointF, segmIndex:int=..., bOnCentLine:bool=...) -> float: ... \n 中心线上一点到起点距离，附加条件是该点所在车道上的分段序号 \n 参数： \n [in] p：当前中心线上该点坐标 \n [in] segmIndex：该点所在车道上的分段序号 \n [in] bOnCentLine：是否在中心线上 \n Ø  def getPointAndIndexByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF, outIndex:int) -> bool: ... \n 求中心线起点向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回False，否则返回True \n 参数： \n [in] dist：中心线起点向前延伸的距离 \n [out] outPoint：中心线起点向前延伸dist距离后所在点 \n [out] outIndex：中心线起点向前延伸dist距离后所在分段序号 \n Ø  def getPointByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF) -> bool: ... \n 求中心线起点向前延伸dist距离后所在点, 如果目标点不在中心线上返回False，否则返回True \n Ø  def setOtherAttr(self, attr:typing.Dict) -> None: ... \n 设置车道其它属性 \n Ø  def setLaneType(self, type:str) -> None: ... \n 设置车道类型 \n 参数： \n [in] type：车道类型，选下列几种类型其中一种："机动车道"、"机非共享"、"非机动车道"、 "公交专用道" \n Ø  def polygon(self) -> PySide2.QtGui.QPolygonF: ... \n 获取车道的多边型轮廓顶点 \n 2.6. IConnector \n 连接段接口，方法如下： \n Ø  def gtype(self) -> int: ... \n 类型，连接段类型为GConnectorType \n Ø  def id(self) -> int: ... \n 获取连接段ID \n Ø  def length(self) -> float: ... \n 获取连接段长度 \n Ø  def z(self) -> float: ... \n 获取连接段高程 \n Ø  def v3z(self) -> float: ... \n 获取连接段高程，过载自ISection的方法 \n Ø  def name(self) -> str: ... \n 获取连接段名称 \n Ø  def setName(self, name:str) -> None: ... \n 设置连接段名称 \n Ø  def fromLink(self) -> Tessng.ILink: … \n 获取起始路段 \n Ø  def toLink(self) -> Tessng.ILink: ... \n 获取目标路段 \n Ø  def fromSection(self, id:int=...) -> Tessng.ISection: ... \n 根据ID获取上游Section。如果当前是路段, id 为 0 返回空，否则返回上游指定ID的连接段；如果当前是连接段，id 为 0 返回上游路段，否则返回空。 \n Ø  def toSection(self, id:int=...) -> Tessng.ISection: ... \n 根据ID获取下游 Sction。如果当前是路段, id 为 0 返回空，否则返回下游指定ID的连接段；如果当前是连接段，id 为 0 返回下游路段，否则返回空。 \n Ø  def limitSpeed(self) -> float: ... \n 获取最高限速，以起始路段的最高限速作为连接段的最高限速 \n Ø  def minSpeed(self) -> float: ... \n 获取最低限速，以起始路段的最低限速作为连接段的最低限速 \n Ø  def laneConnectors(self) -> typing.List: ... \n 获取“车道连接”列表 \n Ø  def laneObjects(self) -> typing.List: ... \n 车道及“车道连接”的接口列表 \n Ø  def setLaneConnectorOtherAtrrs(self, lAttrs:typing.Sequence) -> None: ... \n 设置包含的“车道连接”其它属性 \n Ø  def setOtherAttr(self, otherAttr:typing.Dict) -> None: ... \n 设置连接段其它属性 \n Ø  def polygon(self) -> PySide2.QtGui.QPolygonF: ... \n 获取连接段的多边型轮廓顶点 \n 2.7. ILaneConnector \n “车道连接”接口，方法如下： \n Ø  def gtype(self) -> int: ... \n 类型，GLaneType或GLaneConnectorType，车道连接段为GLaneConnectorType \n Ø  def id(self) -> int: ... \n 获取车道连接ID \n Ø  def connector(self) -> Tessng.IConnector: ... \n 获取车道连接所在连接段 \n Ø  def section(self) -> Tessng.ISection: ... \n 获取车道所属Section \n Ø  def fromLane(self) -> Tessng.ILane: ... \n 上游车道 \n Ø  def toLane(self) -> Tessng.ILane: ... \n 下游车道 \n Ø  def fromLaneObject(self, id:int=...) -> Tessng.ILaneObject: ... \n 根据ID获取上游 LaneObject。id 为 0 返回空，否则返回上游指定ID的“车道连接 \n Ø  def toLaneObject(self, id:int=...) -> Tessng.ILaneObject: ... \n 根据ID获取下游 LaneObject。id 为 0 返回空，否则返回下游指定ID的“车道连接” \n Ø  def length(self) -> float: ... \n “车道连接”长度，单位：像素 \n Ø  def centerBreakPoints(self) -> typing.List: ... \n 获取“车道连接”中心线断点集，断点坐标用像素表示 \n Ø  def leftBreakPoints(self) -> typing.List: ... \n “车道连接”左侧线断点集 \n Ø  def rightBreakPoints(self) -> typing.List: ... \n “车道连接”右侧线断点集 \n Ø  def centerBreakPoint3Ds(self) -> typing.List: ... \n “车道连接”中心线断点(三维)集 \n Ø  def leftBreakPoint3Ds(self) -> typing.List: ... \n “车道连接”左侧线断点(三维)集 \n Ø  def rightBreakPoint3Ds(self) -> typing.List: ... \n “车道连接”右侧线断点(三维)集 \n Ø  def leftBreak3DsPartly(self, fromPoint:PySide2.QtCore.QPointF, toPoint:PySide2.QtCore.QPointF) -> typing.List: ... \n “车道连接”左侧部分断点(三维)集 \n Ø  def rightBreak3DsPartly(self, fromPoint:PySide2.QtCore.QPointF, toPoint:PySide2.QtCore.QPointF) -> typing.List: ... \n “车道连接”右侧部分断点(三维)集 \n Ø  def distToStartPoint(self, p:PySide2.QtCore.QPointF) -> float: ... \n 中心线上一点到起点距离 \n Ø  def distToStartPointWithSegmIndex(self, p:PySide2.QtCore.QPointF, segmIndex:int=..., bOnCentLine:bool=...) -> float: ... \n 中心线上一点到起点距离，附加条件是该点所在车道上的分段序号 \n 参数： \n [in] p：当前中心线上该点坐标 \n [in] segmIndex：该点所在车道上的分段序号 \n [in] bOnCentLine：是否在中心线上 \n Ø  def getPointAndIndexByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF, outIndex:int) -> bool: ... \n 求中心线起始point向前延伸dist距离后所在点及分段序号, 如果目标点不在中心线上返回False，否则返回True \n 参数： \n [in] dist：中心线起点向前延伸的距离 \n [out] outPoint：中心线起点向前延伸dist距离后所在点 \n [out] outIndex：中心线起点向前延伸dist距离后所在分段序号 \n Ø  def getPointByDist(self, dist:float, outPoint:PySide2.QtCore.QPointF) -> bool: ... \n 求中心线起始point向前延伸dist距离后所在点, 如果目标点不在中心线上返回False，否则返回True \n Ø  def setOtherAttr(self, attr:typing.Dict) -> None: ... \n 设置车道连接其它属性 \n 2.8. IConnectorArea \n 面域接口，方法如下： \n Ø  def id(self) -> int: ... \n 面域ID \n Ø  def allConnector(self) -> typing.List: ... \n 面域相关所有连接段 \n Ø  def centerPoint(self) -> PySide2.QtCore.QPointF: ... \n 面域中心点 \n Ø  def workerKey(self) -> int: ... \n 获取Worker 标识符，分布式环境可用 \n Ø  def setWorkerKey(self, key:int) -> None: ... \n 设置 Worker 标识符，分布式环境可用 \n 2.9. IDispatchPoint \n 发车点接口，方法如下： \n Ø  def id(self) -> int: ... \n 获取发车点ID \n Ø  def name(self) -> str: ... \n 获取发车名称 \n Ø  def link(self) -> Tessng.ILink: ... \n 获取发车点所在路段 \n Ø  def addDispatchInterval(self, vehiCompId:int, interval:int, vehiCount:int) -> int: ... \n 为发车点增加发点间隔 \n 参数： \n vehicCompId：车型组成ID \n interval：时间段，单位：秒 \n vehiCount：发车数 \n 返回值： \n 返回发车间隔ID \n 举例： \n新建发车点,车型组成ID为动态创建的，600秒发300辆车 \n if  link1 : \n    dp  =  netiface . createDispatchPoint ( link1 ) \n     if  dp : \n        dp . addDispatchInterval ( vehiCompositionID ,   600 ,   300 ) \n\n \n Ø  def setDynaModified(self, bModified:bool) -> None: ... \n 设置是否被动态修改，默认情况下发车信息被动态修改后，整个文件不能保存，以免破坏原有发车设置 \n Ø  def polygon(self) -> PySide2.QtGui.QPolygonF: ... \n 获取发车点多边型轮廓的顶点 \n 2.10. IDecisionPoint \n 决策点接口，方法如下： \n Ø  def id(self) -> int: ... \n 决策点ID \n Ø  def name(self) -> str: ... \n 决策点名称 \n Ø  def link(self) -> Tessng.ILink: ... \n 决策点所在路段 \n Ø  def distance(self) -> float: ... \n 距路段起点距离，默认单位：像素 \n Ø  def routings(self) -> typing.List: ... \n 相关决策路径 \n Ø  def setDynaModified(self, bModified:bool) -> None: ... \n 设置是否被动态修改，默认情况下发车信息被动态修改后，整个文件不能保存，以免破坏原有发车设置 \n 参数： \n [in] bModified：是否被动态修改，True为被动态修改，False为未被动态修改 \n Ø  def polygon(self) -> PySide2.QtGui.QPolygonF: ... \n 决策点多边型轮廓 \n 2.11. IRouting \n 路径接口，方法如下： \n Ø  def id(self) -> int: ... \n 路径ID \n Ø  def calcuLength(self) -> float: ... \n 计算路径长度 \n Ø  def getLinks(self) -> typing.List: ... \n 获取路段序列 \n Ø  def deciPointId(self) -> int: ... \n 所属决策点ID \n Ø  def contain(self, pRoad:Tessng.ISection) -> bool: ... \n 根据所给道路判断是否在当前路径上 \n Ø  def nextRoad(self, pRoad:Tessng.ISection) -> Tessng.ISection: ... \n 根据所给道路求下一条道路 \n 参数： \n [in] pRoad：路段或连接段 \n 2.12. ISignalLamp \n 信号灯接口，方法如下： \n Ø  def id(self) -> int: ... \n 获取信号灯ID \n Ø  def setName(self, name:str) -> None: ... \n 设置信号灯名称 \n Ø  def setLampColor(self, colorStr:str) -> None: ... \n 设置信号灯颜色 \n 参数： \n [in] colorStr：字符串表达的颜色，有四种可选，分别是"红"、"绿"、"黄"、"灰"，或者是"R"、"G"、"Y"、"grey"。 \n Ø  def signalPhase(self) -> Tessng.ISignalPhase: ... \n 获取信号灯所在相位 \n Ø  def signalGroup(self) -> Tessng.ISignalGroup: ... \n 获取信号灯所在灯组 \n Ø  def setDistToStart(self, dist:float) -> None: ... \n 设置信号灯距车道起点（或“车道连接”起点）距离，默认单位：像素 \n Ø  def polygon(self) -> PySide2.QtGui.QPolygonF: ... \n 获取信号灯多边型轮廓 \n 2.13. ISignalPhase \n 信号相位，接口方法： \n Ø  def id(self) -> int: ... \n 相位ID \n Ø  def number(self) -> int: ... \n 相位序号，从1开始 \n Ø  def phaseName(self) -> str: ... \n 相位名称 \n Ø  def signalGroup(self) -> Tessng.ISignalGroup: ... \n 相位所在信号灯组对象 \n Ø  def signalLamps(self) -> typing.List: ... \n 本相位下的信号灯列表 \n Ø  def listColor(self) -> typing.List: ... \n 相位灯色列表 \n Ø  def setColorList(self, lColor:typing.Sequence) -> None: ... \n 设置信号灯列表 \n 参数： \n [in] lColor：灯色时长信息，包含信号灯颜色和信号灯时长 \n 举例： \n #以L12路段相位直行信号灯相位为例（ID为7），由红90绿32黄3红25改为红10绿110黄3红28 \n if  method_number  ==   3 : \n    signalPhase_L12_7  =  netiface . findSignalPhase ( 7 ) \n    color_list  =   [ ]    # 按照红灯、绿灯、黄灯、红灯顺序计算 \n    color_list . append ( Online . ColorInterval ( \'红\' ,   10 ) ) \n    color_list . append ( Online . ColorInterval ( \'绿\' ,   110 ) ) \n    color_list . append ( Online . ColorInterval ( \'黄\' ,   3 ) ) \n    color_list . append ( Online . ColorInterval ( \'红\' ,   28 ) ) \n    signalPhase_L12_7 . setColorList ( color_list ) \n\n \n Ø  def setNumber(self, number:int) -> None: ... \n 设置相位序号 \n Ø  def setPhaseName(self, name:str) -> None: ... \n 设置相位名称 \n 2.14. ISignalGroup \n Ø  def id(self) -> int: ... \n 信号灯组ID \n Ø  def groupName(self) -> str: .. \n 信号灯组名称 \n Ø  def periodTime(self) -> int: ... \n 信号周期：单位秒 \n Ø  def fromTime(self) -> int: ... \n 信号灯组工作的起始时间，自仿真开始计算，单位秒 \n Ø  def toTime(self) -> int: ... \n 信号灯组工作的终止时间，自仿真开始计算，单位秒 \n Ø  def phases(self) -> typing.List: ... \n 当前信号灯组下的相位列表 \n Ø  def setName(self, name:str) -> None: ... \n 设置信号灯组名称 \n Ø  def setPeriodTime(self, period:int) -> None: ... \n 设置信号周期 \n 参数： \n [in] period：信号周期，单位：秒 \n Ø  def setFromTime(self, time:int) -> None: ... \n 设置起始时间，单位：秒 \n Ø  def setToTime(self, time:int) -> None: ... \n 2.15. IBusLine \n 公交线路接口，接口方法： \n Ø  def id(self) -> int: ... \n 获取公交线路ID \n Ø  def name(self) -> str: ... \n 线路名称 \n Ø  def length(self) -> float: ... \n 长度,单位：像素 \n Ø  def dispatchFreq(self) -> int: ... \n 发车间隔(秒) \n Ø  def dispatchStartTime(self) -> int: ... \n 发车开始时间(秒) \n Ø  def dispatchEndTime(self) -> int: ... \n 发车结束时间(秒) \n Ø  def desirSpeed(self) -> float: ... \n 期望速度(km/h) \n Ø  def passCountAtStartTime(self) -> int: ... \n 起始载客人数 \n Ø  def links(self) -> typing.List: ... \n 公交线路经过的路段 \n Ø  def stations(self) -> typing.List: ... \n 线路所有站点 \n Ø  def stationLines(self) -> typing.List: ... \n 公交站点线路，当前线路相关站点的上下客等参数 \n Ø  def setName(self, name:str) -> None: ... \n 设置线路名称 \n Ø  def setDispatchFreq(self, freq:int) -> None: ... \n 设置发车间隔，单位：秒 \n Ø  def setDispatchStartTime(self, startTime:int) -> None: ... \n 设置开始发车时间 \n Ø  def setDispatchEndTime(self, endTime:int) -> None: ... \n 设置结束发车时间 \n Ø  def setDesirSpeed(self, desirSpeed:float) -> None: ... \n 设置线路的期望速度 \n 举例： \n创建公交线路 \nbusLine  =  tessngIFace ( ) . netInterface ( ) . createBusLine ( [ link10 ,  link11 ] ) \n if  busLine  is   not   None : \n    busLine . setDesirSpeed ( m2p ( 60 ) ) \n\n \n Ø  def setPassCountAtStartTime(self, count:int) -> None: ... \n 设置起始载客人数 \n 2.16. IBusStation \n 公交站点接口，接口方法： \n Ø  def id(self) -> int: ... \n 获取公交站点ID \n Ø  def name(self) -> str: ... \n 线路名称 \n Ø  def laneNumber(self) -> int: ... \n 公交站点所在车道序号 \n Ø  def x(self) -> float: ... \n 位置X \n Ø  def y(self) -> float: ... \n 位置Y \n Ø  def length(self) -> float: ... \n 长度，单位：像素 \n Ø  def stationType(self) -> int: ... \n 站点类型 1：路边式、2：港湾式 \n Ø  def link(self) -> Tessng.ILink: ... \n 公交站点所在路段 \n Ø  def lane(self) -> Tessng.ILane: ... \n 公交站点所在车道 \n Ø  def distance(self) -> float: ... \n 公交站点的起始位置距路段起点距离，默认单位：像素 \n Ø  def setName(self, name:str) -> None: ... \n 设置站点名称 \n Ø  def setDistToStart(self, dist:float) -> None: ... \n 设置站点起始点距车道起点距离，默认单位：像素 \n 参数： \n [in] dist：距车道起点距离 \n Ø  def setLength(self, length:float) -> None: ... \n 设置长度，默认单位：像素 \n Ø  def setType(self, type:int) -> None: ... \n 设置站点类型 \n 参数： \n [in] type：站点类型，1 路侧式、2 港湾式 \n Ø  def polygon(self) -> PySide2.QtGui.QPolygonF: ... \n 公交站点多边型轮廓的顶点 \n 2.17. IBusStationLine \n 公交站点-线路接口，通过此接口可以获取指定线路某站点运行参数，如靠站时间、下客百分比等，还可以设置这些参数。 \n 接口方法： \n Ø  def id(self) -> int: ... \n 获取公交“站点-线路”ID \n Ø  def stationId(self) -> int: ... \n 公交站点ID \n Ø  def lineId(self) -> int: ... \n 公交线路ID \n Ø  def busParkingTime(self) -> int: ... \n 公交车辆停靠时间(秒) \n Ø  def getOutPercent(self) -> float: ... \n 下客百分比 \n Ø  def getOnTimePerPerson(self) -> float: ... \n 平均每位乘客上车时间，单位：秒 \n Ø  def getOutTimePerPerson(self) -> float: ... \n 平均每位乘客下车时间，单位：秒 \n Ø  def setBusParkingTime(self, time:int) -> None: ... \n 设置车辆停靠时间(秒) \n 举例： \n lStationLine  =  busLine . stationLines ( ) \n if   len ( lStationLine ) > 0 : \nstationLine  =  lStationLine [ 0 ]  \n设置车辆停靠时间(秒) \nstationLine . setBusParkingTime ( 20 ) \n\n \n Ø  def setGetOutPercent(self, percent:float) -> None: .. \n 设置下客百分比 \n Ø  def setGetOnTimePerPerson(self, time:float) -> None: ... \n 设置平均每位乘客上车时间 \n Ø  def setGetOutTimePerPerson(self, time:float) -> None: ... \n 设置平均每位乘客下车时间 \n 2.18. IVehicleDrivInfoCollector \n 数据采集器接口，方法如下： \n Ø  def id(self) -> int: ... \n 获取采集器ID \n Ø  def collName(self) -> str: ... \n 获取采集器名称 \n Ø  def onLink(self) -> bool: ... \n 是否在路段上，如果True则connector()返回None \n Ø  def link(self) -> Tessng.ILink: ... \n 采集器所在路段 \n Ø  def connector(self) -> Tessng.IConnector: ... \n 采集器所在连接段 \n Ø  def lane(self) -> Tessng.ILane: ... \n 如果采集器在路段上则lane()返回所在车道，laneConnector()返回None \n Ø  def laneConnector(self) -> Tessng.ILaneConnector: ... \n 如果采集器在连接段上则laneConnector返回“车道连接”,lane()返回None \n Ø  def distToStart(self) -> float: ... \n 采集器距离起点距离，默认单位：像素 \n Ø  def point(self) -> PySide2.QtCore.QPointF: ... \n 采集器所在点 \n Ø  def fromTime(self) -> int: ... \n 采集器工作起始时间，单位：秒 \n Ø  def toTime(self) -> int: ... \n 采集器工作停止时间，单位：秒 \n Ø  def aggregateInterval(self) -> int: ... \n 集计数据时间间隔，单位：秒 \n Ø  def setName(self, name:str) -> None: ... \n 设置采集器名称 \n Ø  def setDistToStart(self, dist:float) -> None: ... \n 设置采集器距车道起点（或“车道连接”起点）距离 \n 参数： \n [in] dist：采集器距离车道起点（或“车道连接”起点）的距离，默认单位：像素 \n 举例： \n collector  =  tessngIFace ( ) . netInterface ( ) . createVehiCollectorOnLink ( leftLane ,  dist ) \n将采集器设置到距路段起点400米处 \n if  collector  is   not   None : \n    collector . setDistToStart ( m2p ( 400 ) ) \n\n \n Ø  def setFromTime(self, time:int) -> None: ... \n 设置工作起始时间(秒) \n Ø  def setToTime(self, time:int) -> None: ... \n 设置工作结束时间(秒) \n Ø  def setAggregateInterval(self, interval:int) -> None: ... \n 设置集计数据时间间隔(秒) \n Ø  def polygon(self) -> PySide2.QtGui.QPolygonF: ... \n 获取采集器的多边型轮廓顶点 \n 2.19. IVehicleQueueCounter \n 排队计数器接口，方法如下： \n Ø  def id(self) -> int: ... \n 获取计数器ID \n Ø  def counterName(self) -> str: ... \n 获取计数器名称 \n Ø  def onLink(self) -> bool: ... \n 是否在路段上，如果True则connector()返回None \n Ø  def link(self) -> Tessng.ILink: ... \n 计数器所在路段 \n Ø  def connector(self) -> Tessng.IConnector: ... \n 计数器所在连接段 \n Ø  def lane(self) -> Tessng.ILane: ... \n 如果计数器在路段上则lane()返回所在车道，laneConnector()返回None \n Ø  def laneConnector(self) -> Tessng.ILaneConnector: ... \n 如果计数器在连接段上则laneConnector返回“车道连接”,lane()返回None \n Ø  def distToStart(self) -> float: ... \n 计数器距离起点距离，默认单位：像素 \n Ø  def point(self) -> PySide2.QtCore.QPointF: ... \n 计数器所在点 \n 举例： \n在路段9最左侧车道100米处创建排队计数器 \ncounter  =  tessngIFace ( ) . netInterface ( ) . createVehiQueueCounterOnLink ( leftLane ,  dist ) \n if  counter  is   not   None : \n     print ( f"计数器所在点坐标为: ( { counter . point ( ) . x ( ) } ,  { counter . point ( ) . y ( ) } )" ) \n\n \n Ø  def fromTime(self) -> int: ... \n 计数器工作起始时间，单位：秒 \n Ø  def toTime(self) -> int: ... \n 计数器工作停止时间，单位：秒 \n Ø  def aggregateInterval(self) -> int: ... \n 计数集计数据时间间隔，单位：秒 \n Ø  def setName(self, name:str) -> None: ... \n 设置计数器名称 \n Ø  def setDistToStart(self, dist:float) -> None: ... \n 设置计数器距车道起点（或“车道连接”起点）距离 \n 参数： \n [in] dist：计数器距离车道起点（或“车道连接”起点）的距离，默认单位：像素 \n Ø  def setFromTime(self, time:int) -> None: ... \n 设置工作起始时间(秒) \n Ø  def setToTime(self, time:int) -> None: ... \n 设置工作结束时间(秒) \n Ø  def setAggregateInterval(self, interval:int) -> None: ... \n 设置集计数据时间间隔(秒) \n Ø  def polygon(self) -> PySide2.QtGui.QPolygonF: ... \n 获取计数器的多边型轮廓顶点 \n 2.20. IVehicleTravelDetector \n 行程时间检测器接口，方法如下： \n Ø  def id(self) -> int: ... \n 获取检测器ID \n Ø  def detectorName(self) -> str: ... \n 获取检测器名称 \n Ø  def isStartDetector(self) -> bool: ... \n 是否检测器起始点 \n Ø  def isOnLink_startDetector(self) -> bool: ... \n 检测器起点是否在路段上，如果否，则起点在连接段上 \n Ø  def isOnLink_endDetector(self) -> bool: ... \n 检测器终点是否在路段上，如果否，则终点在连接段上 \n Ø  def link_startDetector(self) -> Tessng.ILink: ... \n 如果检测器起点在路段上则link_startDetector()返回起点所在路段，laneConnector_startDetector()返回None \n Ø  def laneConnector_startDetector(self) -> Tessng.ILaneConnector: ... \n 如果检测器起点在连接段上则laneConnector_startDetector()返回起点“车道连接”,link_startDetector()返回None \n Ø  def link_endDetector(self) -> Tessng.ILink: ... \n 如果检测器终点在路段上则link_endDetector()返回终点所在路段，laneConnector_endDetector()返回None \n Ø  def laneConnector_endDetector(self) -> Tessng.ILaneConnector: ... \n 如果检测器终点在连接段上则laneConnector_endDetector()返回终点“车道连接”,link_endDetector()返回None \n Ø  def distance_startDetector(self) -> float: ... \n 检测器起点距离所在车道起点或“车道连接”起点距离，默认单位：像素 \n Ø  def distance_endDetector(self) -> float: ... \n 检测器终点距离所在车道起点或“车道连接”起点距离，默认单位：像素 \n Ø  def point_startDetector(self) -> PySide2.QtCore.QPointF: ... \n 检测器起点位置 \n Ø  def point_endDetector(self) -> PySide2.QtCore.QPointF: ... \n 检测器终点位置 \n Ø  def fromTime(self) -> int: ... \n 检测器工作起始时间，单位：秒 \n Ø  def toTime(self) -> int: ... \n 检测器工作停止时间，单位：秒 \n Ø  def aggregateInterval(self) -> int: ... \n 集计数据时间间隔，单位：秒 \n Ø  def setName(self, name:str) -> None: ... \n 设置检测器名称 \n Ø  def setDistance_startDetector(self, dist:float) -> None: ... \n 设置检测器起点距车道起点（或“车道连接”起点）距离，默认单位：像素 \n Ø  def setDistance_endDetector(self, dist:float) -> None: ... \n 设置检测器终点距车道起点（或“车道连接”起点）距离，默认单位：像素 \n Ø  def setFromTime(self, time:int) -> None: ... \n 设置工作起始时间，单位：秒 \n 举例： \n lVehicleTravelDetector  =  tessngIFace ( ) . netInterface ( ) . createVehicleTravelDetector_link2link ( link ,  link ,  m2p ( 50 ) , m2p ( 550 ) ) \n    if  lVehicleTravelDetector  is   not   None : \n       for  detector  in  lVehicleTravelDetector : \n          detector . setFromTime ( 10 ) \n          detector . setToTime ( 60 ) \n\n \n Ø  def setToTime(self, time:int) -> None: ... \n 设置工作结束时间，单位：秒 \n Ø  def aggregateInterval(self) -> int: ... \n 设置集计数据时间间隔，单位：秒 \n Ø  def polygon_startDetector(self) -> PySide2.QtGui.QPolygonF: ... \n 获取行程时间检测器起始点多边型轮廓的顶点 \n Ø  def polygon_endDetector(self) -> PySide2.QtGui.QPolygonF: ... \n 获取行程时间检测器终止点多边型轮廓的顶点 \n 2.21. IGuidArrow \n 导向箭头接口，方法如下： \n Ø  def id(self) -> int: ... \n 获取导向箭头ID \n Ø  def lane(self) -> Tessng.ILane: ... \n 获取导向箭头所在的车道 \n Ø  def length(self) -> float: ... \n 获取导向箭头的长度，默认单位：像素 \n Ø  def distToTerminal(self) -> float: ... \n 获取导向箭头到的终点距离，默认单位：像素 \n Ø  def polygon(self) -> PySide2.QtGui.QPolygonF: ... \n 获取导向箭头的多边型轮廓的顶点 \n 2.22. IAccidentZone \n 事故区接口，方法如下： \n Ø  def id(self) -> int: ... \n 获取事故区ID \n Ø  def name(self) -> str: ... \n 获取事故区名称 \n Ø  def location(self) -> float: ... \n 获取事故区距所在路段起点的距离，默认单位：像素 \n Ø  def zoneLength(self) -> float: ... \n 获取事故区长度，默认单位：像素 \n Ø  def section(self) -> Tessng.ISection: ... \n 获取事故区所在的路段或连接段 \n Ø  def roadId(self) -> int: ... \n 获取事故区所在路段的ID \n Ø  def roadType(self) -> str: ... \n 获取事故区所在的道路类型(路段或连接段) \n 举例： \n获取事故区所在的道路类型 \nzone  =  tessngIFace ( ) . netInterface ( ) . createAccidentZone ( accidentZone ) \n print ( zone . roadType ( ) ) \n\n \n Ø  def laneObjects(self) -> typing.List: ... \n 获取事故区占用的车道列表 \n Ø  def level(self) -> int: ... \n 事故等级，分4级，默认为未定等级(0级)持续时间未定，事故区不会自动移除，一般事故(1级)持续时间10分钟，普通事故(2)级持续时间1小时，重大事故(3级)持续时间3小时 \n Ø  def duration(self) -> int: ... \n 事故持续时间，单位：秒。如果值为0，事故持续时间由事故等级决定，大于0则由此值决定 \n Ø  def needRescue(self) -> int: ... \n 是否需要救援，如果为-1，由事故等级决定，重大事故需要求援，如为0不需救援，如果为1需要救援 \n Ø  def waitTimeBeforeRescue(self) -> int: ... \n 救援车辆发车时间距事故产生的时间，默认单位：秒，默认60秒 \n Ø  def rescueTime(self) -> int: ... \n 救援时间，默认60秒，即救援车辆停靠在事故区旁的时间，单位秒 \n 2.23. IRoadWorkZone \n 施工区接口，方法如下： \n Ø  def id(self) -> int: ... \n 获取施工区ID \n Ø  def name(self) -> str: ... \n 获取施工区名称 \n Ø  def location(self) -> float: ... \n 获取施工区距所在路段起点的距离，默认单位：像素 \n Ø  def zoneLength(self) -> float: ... \n 获取施工区长度，默认单位：像素 \n Ø  def limitSpeed(self) -> float: ... \n 施工区限速（最大车速:像素/秒） \n Ø  def sectionId(self) -> int: ... \n 获取施工区所在路段或连接段的ID \n 举例： \n获取路段9上施工区所在路段的ID \nzone  =  tessngIFace ( ) . netInterface ( ) . createRoadWorkZone ( workZone ) \n print ( "施工区所在路段或连接段ID为:" ,  zone . sectionId ( ) ) \n\n \n Ø  def sectionName(self) -> str: ... \n 获取施工区所在路段或连接段的名称 \n Ø  def sectionType(self) -> str: ... \n 获取施工区所在道路的道路类型，link:路段, connector:连接段 \n Ø  def laneObjects(self) -> typing.List: ... \n 获取施工区所占的车道列表 \n Ø  def duration(self) -> int: ... \n 施工持续时间，单位：秒。自仿真过程创建后，持续时间大于此值，则移除 \n 3. 车辆及驾驶行为 \n 3.1. IVehicle \n 车辆接口，用于访问、控制车辆。通过此接口可以读取车辆属性，初始化时设置车辆部分属性，仿真过程读取当前道路情况、车辆前后左右相邻车辆及与它们的距离，可以在车辆未驰出路网时停止车辆运行等。 \n 接口方法： \n Ø  def id(self) -> int: ... \n 车辆ID，车辆ID的组成方式为 x * 100000 + y，每个发车点的x值不一样，从1开始递增，y是每个发车点所发车辆序号，从1开始递增。第一个发车点所发车辆ID从100001开始递增，第二个发车点所发车辆ID从200001开始递增。 \n Ø  def startLink(self) -> Tessng.ILink: ... \n 车辆进入路网时起始路段 \n Ø  def startSimuTime(self) -> int: ... \n 车辆进入路网时起始时间 \n Ø  def roadId(self) -> int: ... \n 车辆所在路段或连接段ID \n Ø  def road(self) -> int: ... \n 道路，如果在路段上返回ILink, 如果在连接段上返回IConnector \n Ø  def section(self) -> Tessng.ISection: ... \n 车辆所在的Section，即路段或连接段 \n Ø  def laneObj(self) -> Tessng.ILaneObject: ... \n 车辆所在的车道或“车道连接” \n Ø  def segmIndex(self) -> int: ... \n 车辆在当前LaneObject上分段序号 \n Ø  def roadIsLink(self) -> bool: ... \n 车辆所在道路是否路段 \n Ø  def roadName(self) -> str: ... \n 道路名 \n Ø  def initSpeed(self, speed:float=...) -> float: ... \n 初始化车速 \n 参数： \n [in] speed：车速，如果大于0，车辆以指定的速度从发车点出发，单位：像素/秒 \n 返回：初始化车速，单位：像素/秒 \n Ø  def initLane(self, laneNumber:int, dist:float=..., speed:float=...) -> None: ... \n 初始化车辆, laneNumber:车道序号，从0开始；dist，距起点距离，单位像素；speed：车速，像素/秒 \n 参数： \n [in] laneNumber：车道序号，从0开始 \n [in] dist：距离路段起点距离，单位：像素 \n [in] speed：起动时的速度，单位：像素/秒 \n 举例： \n初始化飞机位置 \n if  tmpId  ==   1 : \n    IVehicle . setVehiType ( 12 ) \n    IVehicle . initLane ( 3 ,  m2p ( 105 ) ,   0 ) \n\n \n Ø  def initLaneConnector(self, laneNumber:int, toLaneNumber:int, dist:float=..., speed:float=...) -> None: ... \n 初始化车辆, laneNumber: “车道连接”起始车道在所在路段的序号，从0开始自右往左；toLaneNumber:“车道连接”目标车道在所在路段的序号，从0开始自右往左， dist，距起点距离，单位像素；speed：车速，像素/秒 \n 参数： \n [in] laneNumber：车道序号，从0开始自右侧至左侧 \n [in] toLaneNumber：车道序号，从0开始自右侧至左侧 \n [in] dist：距离路段起点距离，单位：像素 \n [in] speed：起动时的速度，单位：像素/秒 \n Ø  def setVehiType(self, code:int) -> None: ... \n 设置车辆类型，车辆被创建时已确定了类型，通过此方法可以改变车辆类型 \n 参数： \n [in] code：车辆类型编码 \n Ø  def length(self) -> float: ... \n 路段或连接段长度，单位：像素 \n Ø  def setLength(self, len:float, bRestWidth:bool=...) -> None: ... \n 设置车辆长度 \n 参数： \n [in] len：车辆长度，单位：像素 \n [in] bRestWidth：是否同比例约束宽度，默认为False \n Ø  def laneId(self) -> int: ... \n 如果toLaneId() 小于等于0，那么laneId()获取的是当前所在车道ID，如果toLaneId()大于0，则车辆在“车道连接”上，laneId()获取的是上游车道ID \n Ø  def toLaneId(self) -> int: ... \n 下游车道ID。如果小于等于0，车辆在路段的车道上，否则车辆在连接段的“车道连接”上 \n Ø  def lane(self) -> Tessng.ILane: ... \n 获取当前车道，如果车辆在“车道连接”上，获取的是“车道连接”的上游车道 \n Ø  def toLane(self) -> Tessng.ILane: ... \n 如果车辆在“车道连接”上，返回“车道连接”的下游车道，如果当前不在“车道连接”上，返回对象为空 \n Ø  def laneConnector(self) -> Tessng.ILaneConnector: ... \n 获取当前“车道连接”，如果在车道上，返回空 \n Ø  def currBatchNumber(self) -> int: ... \n 当前仿真计算批次 \n Ø  def roadType(self) -> int: ... \n 车辆所在道路类型。包NetItemType中定义了一批常量，每一个数值代表路网上一种元素类型。如：GLinkType代表路段、GConnectorType代表连接段。 \n Ø  def limitMaxSpeed(self) -> float: ... \n 车辆所在路段或连接段最大限速，兼顾到车辆的期望速度，单位：像素/秒 \n Ø  def limitMinSpeed(self) -> float: ... \n 车辆所在路段或连接段最小限速，兼顾到车辆的期望速度，单位：像素/秒 \n Ø  def vehicleTypeCode(self) -> int: ... \n 车辆类型编码。打开TESSNG，通过菜单“车辆”->“车辆类型”打开车辆类型编辑窗体，可以看到不同类型车辆的编码 \n Ø  def vehicleTypeName(self) -> str: ... \n 获取车辆类型名，如“小客车” \n Ø  def name(self) -> str: ... \n 获取车辆名称 \n Ø  def vehicleDriving(self) -> Tessng.IVehicleDriving: ... \n 获取车辆驾驶行为接口 \n Ø  def driving(self) -> None: ... \n 驱动车辆。在每个运算周期，每个在运行的车辆被调用一次该方法 \n Ø  def pos(self) -> PySide2.QtCore.QPointF: ... \n 当前位置，横纵坐标单位：像素 \n Ø  def zValue(self) -> float: ... \n 当前高程，单位：像素 \n Ø  def acce(self) -> float: ... \n 当前加速度，单位：像素/秒^2 \n Ø  def currSpeed(self) -> float: ... \n 当前速度，单位：像素/秒 \n Ø  def angle(self) -> float: ... \n 当前角度，北向0度顺时针 \n Ø  def isStarted(self) -> bool: ... \n 是否在运行，如果返回False，表明车辆已驰出路网或尚未上路 \n Ø  def vehicleFront(self) -> Tessng.IVehicle: ... \n 前车 \n Ø  def vehicleRear(self) -> Tessng.IVehicle: ... \n 后车 \n Ø  def vehicleLFront(self) -> Tessng.IVehicle: ... \n 左前车 \n Ø  def vehicleLRear(self) -> Tessng.IVehicle: ... \n 左后车 \n Ø  def vehicleRFront(self) -> Tessng.IVehicle: ... \n 右前车 \n Ø  def vehicleRRear(self) -> Tessng.IVehicle: ... \n 右后车 \n Ø  def vehiDistFront(self) -> float: ... \n 前车间距，单位：像素 \n Ø  def vehiSpeedFront(self) -> float: ... \n 前车速度，单位：像素/秒 \n Ø  def vehiHeadwayFront(self) -> float: ... \n 距前车时距 \n Ø  def vehiDistRear(self) -> float: ... \n 后车间距，单位：像素 \n Ø  def vehiSpeedRear(self) -> float: ... \n 后车速度，单位：像素/秒 \n Ø  def vehiHeadwaytoRear(self) -> float: ... \n 距后车时距 \n Ø  def vehiDistLLaneFront(self) -> float: ... \n 相邻左车道前车间距，单位：像素 \n Ø  def vehiSpeedLLaneFront(self) -> float: ... \n 相邻左车道前车速度，单位：像素/秒 \n Ø  def vehiDistLLaneRear(self) -> float: ... \n 相邻左车道后车间距，单位：像素 \n Ø  def vehiSpeedLLaneRear(self) -> float: ... \n 相邻左车道后车速度，单位：像素/秒 \n Ø  def vehiDistRLaneFront(self) -> float: ... \n 相邻右车道前车间距，单位：像素 \n Ø  def vehiSpeedRLaneFront(self) -> float: ... \n 相邻右车道前车速度，单位：像素/秒 \n Ø  def vehiDistRLaneRear(self) -> float: ... \n 相邻右车道后车间距，单位：像素 \n Ø  def vehiSpeedRLaneRear(self) -> float: ... \n 相邻右车道后车速度，单位：像素/秒 \n Ø  def setIsPermitForVehicleDraw(self, bDraw:bool) -> None: ... \n 设置是否允许插件绘制车辆 \n Ø  def lLaneObjectVertex(self) -> typing.List: ... \n 车道或车道连接中心线内点集 \n Ø  def routing(self) -> Tessng.IRouting: ... \n 当前路径 \n Ø  def picture(self) -> PySide2.QtGui.QPicture: ... \n 获取车辆图片 \n Ø  def boundingPolygon(self) -> PySide2.QtGui.QPolygonF: ... \n 获取车辆由方向和长度决定的四个拐角构成的多边型 \n Ø  def setTag(self, tag:int) -> None: ... \n 设置标签表示的状态 \n Ø  def tag(self) -> int: ... \n 获取标签表示的状态 \n Ø  def setTextTag(self, text:str) -> None: ... \n 设置文本信息，用于在运行过程保存临时信息，方便开发 \n Ø  def textTag(self) -> str: ... \n 文本信息，运行过程临时保存的信息，方便开发 \n Ø  def setJsonInfo(self, info:typing.Dict) -> None: ... \n 设置json格式数据 \n Ø  def jsonInfo(self) -> typing.Dict: ... \n 返回json格式数据 \n Ø  def jsonProperty(self, propName:str) -> typing.Any: ... \n 返回json字段值 \n Ø  def setJsonProperty(self, key:str, value:typing.Any) -> None: ... \n 设置json数据属性 \n 以下方法设置 TESS NG 调用与车辆及驾驶行为相关方法时的调用频次 \n Ø  def setSteps_afterCalcTracingType(self, steps:int) -> None: ... \n 设置计算跟驰类型后处理方法afterCalcTracing被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_afterStep(self, steps:int) -> None: ... \n 设置车辆一个计算周期后的处理方法afterStep被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_beforeMergingToLane(self, steps:int) -> None: ... \n 设置车辆在连接段汇入前处理方法beforeMergingToLane被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_beforeNextRoad(self, steps:int) -> None: ... \n 设置计算后续道路前处理方法beforeNextRoad被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_calcAcce(self, steps:int) -> None: ... \n 设置计算加速度方法calcAcce被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_calcChangeLaneSafeDist(self, steps:int) -> None: ... \n 设置计算安全变道距离方法calcChangeLaneSafeDist被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_calcDistToEventObj(self, steps:int) -> None: ... \n 设置计算到事件对象距离方法calcDistToEventObj被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_calcLimitedLaneNumber(self, steps:int) -> None: ... \n 设置计算限行车道方法calcLinitedLaneNumber被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_calcMaxLimitedSpeed(self, steps:int) -> None: ... \n 设置计算最大限速方法calcMaxLinitedSpeed被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_calcSpeedLimitByLane(self, steps:int) -> None: ... \n 设置计算车道限速方法calcSpeedLimitByLane被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_isStopDriving(self, steps:int) -> None: ... \n 设置是否停止运行方法isStopDriving被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_reCalcAngle(self, steps:int) -> None: ... \n 设置重新计算角度方法reCalcAngle被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_reCalcToLeftFreely(self, steps:int) -> None: ... \n 设置计算左自由变道方法reCalcToLeftFreely被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_reCalcToLeftLane(self, steps:int) -> None: ... \n 设置计算左强制变道方法reCalcToLeftLane被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_reCalcToRightFreely(self, steps:int) -> None: ... \n 设置计算右自由变道方法reCalcToRightFreely被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_reCalcToRightLane(self, steps:int) -> None: ... \n 设置计算右强制变道方法reCalcToRightLane被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_reCalcdesirSpeed(self, steps:int) -> None: ... \n 设置重新计算期望速度方法reCalcdesirSpeed被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_reSetAcce(self, steps:int) -> None: ... \n 设置重新计算加速度方法reSetAcce被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_reSetFollowingType(self, steps:int) -> None: ... \n 设置重新计算跟驰类型方法reSetFollowingType被调用频次，即steps个计算周期调用1次 \n Ø  def setSteps_reSetSpeed(self, steps:int) -> None: ... \n 设置重新计算车速方法reSetSpeed被调用频次，即steps个计算周期调用1次 \n 3.2. IVehicleDriving \n 驾驶行为接口，通过此接口可以控制车辆的左右变道、设置车辆角度，对车辆速度、坐标位置等进行控制，可以在路网中间停止车辆运行，将车辆移出路网，等等。 \n 接口方法： \n Ø  def vehicle(self) -> Tessng.IVehicle: ... \n 当前驾驶车辆 \n Ø  def getRandomNumber(self) -> int: ... \n 获取随机数 \n Ø  def nextPoint(self) -> bool: ... \n 计算下一点位置，过程包括计算车辆邻车关系、公交车是否进站是否出站、是否变道、加速度、车速、移动距离、跟驰类型、轨迹类型等 \n Ø  def zeroSpeedInterval(self) -> int: ... \n 当前车速为零持续时间(毫秒) \n Ø  def isHavingDeciPointOnLink(self) -> bool: ... \n 当前是否在路段上且有决策点 \n Ø  def followingType(self) -> int: ... \n 跟驰车辆的类型，即当前车辆前车的类型，分为：0：停车，1: 正常，5：急减速，6：急加速，7：汇入， 8：穿越，9：协作减速，10：协作加速，11：减速待转，12：加速待转 \n Ø  def isOnRouting(self) -> bool: ... \n 当前是否在路径上 \n Ø  def stopVehicle(self) -> None: ... \n 停止运行，车辆移出路网 \n Ø  def angle(self) -> float: ... \n 旋转角，北向0度顺时针 \n Ø  def setAngle(self, angle:float) -> None: ... \n 设置车辆旋转角 \n 参数： \n [in] angle：旋转角，一周360度 \n 举例： \n if   vehi . roadId ( )   ==   5 :          \n    vehi_currentDistToEnd  =  vehi . vehicleDriving ( ) . distToEndpoint ( True )        \n     if   p2m ( vehi_currentDistToEnd )   <   50 :             \n        vehi . vehicleDriving ( ) . setAngle ( vehi . angle ( )   +   45.0 )  \n \n Ø  def euler(self, bPositive:bool=...) -> PySide2.QtGui.QVector3D: ... \n 返回车辆欧拉角 \n 参数： \n [in] bPositive：车头方向是否正向计算，如果bPosiDire为False则反向计算 \n Ø  def desirSpeed(self) -> float: ... \n 当前期望速度，与车辆自身期望速度和道路限速有关，不大于道路限速，单位：像素/秒 \n Ø  def getCurrRoad(self) -> Tessng.ISection: ... \n 返回当前所在路段或连接段 \n Ø  def getNextRoad(self) -> Tessng.ISection: ... \n 下一路段或连接段 \n Ø  def differToTargetLaneNumber(self) -> int: ... \n 与目标车道序号的差值，不等于0表示有强制变道意图，大于0有左变道意图，小于0有右变道意图，绝对值大于0表示需要强制变道次数 \n Ø  def toLeftLane(self) -> None: ... \n 左变道 \n Ø  def toRightLane(self) -> None: ... \n 右变道 \n Ø  def laneNumber(self) -> int: ... \n 当前车道序号，最右侧序号为0 \n Ø  def initTrace(self) -> None: ... \n 初始化轨迹 \n Ø  def setTrace(self, lPoint:typing.Sequence) -> None: ... \n 设置轨迹 \n 参数： \n [in] lPoint：轨迹点坐标集合 \n Ø  def calcTraceLength(self) -> None: ... \n 计算轨迹长度 \n Ø  def tracingType(self) -> int: ... \n 返回轨迹类型，分为：0：跟驰，1：左变道，2：右变道，3：左虚拟変道，4：右虚拟变道，5：左转待转，6：右转待转，7：入湾，8：出湾 \n Ø  def setTracingType(self, type:int) -> None: ... \n 设置轨迹类型 \n Ø  def setLaneNumber(self, number:int) -> None: ... \n 设置当前车道序号 \n 参数： \n [in] number：车道序号 \n Ø  def currDistance(self) -> float: ... \n 当前计算周期移动距离，单位：像素 \n Ø  def currDistanceInRoad(self) -> float: ... \n 当前路段或连接上已行驶距离，单位：像素 \n Ø  def setCurrDistanceInRoad(self, dist:float) -> None: ... \n 设置当前路段已行驶距离 \n 参数： \n [in] dist：距离，单位：像素 \n Ø  def setVehiDrivDistance(self, dist:float) -> None: ... \n 设置当前已行驶总里程 \n 参数： \n [in] dist：总里程，单位：像素 \n Ø  def getVehiDrivDistance(self) -> float: ... \n 已行驶总里程 \n Ø  def currDistanceInSegment(self) -> float: ... \n 当前分段已行驶距离 \n Ø  def setCurrDistanceInSegment(self, dist:float) -> None: ... \n 设置当前分段已行驶的距离 \n Ø  def setSegmentIndex(self, index:int) -> None: ... \n 设置分段序号 \n Ø  def setCurrDistanceInTrace(self, dist:float) -> None: ... \n 设置曲化轨迹上行驶的距离 \n Ø  def setIndexOfSegmInTrace(self, index:int) -> None: ... \n 设置曲化轨迹上的分段序号 \n Ø  def setChangingTracingType(self, b:bool) -> None: ... \n 设置是否改变轨迹，当设为True时会对轨迹初始化，如设轨迹分段序号为0，等 \n Ø  def currDistance(self) -> float: ... \n 当前时间段移动距离 \n Ø  def setRouting(self, pRouting:Tessng.IRouting) -> bool: ... \n 设置路径，外界设置的路径不一定有决策点，可能是临时创建的，如果车辆不在此路径上则设置不成功并返回False \n [in] pRouting：路径 \n 举例： \n修改路径（L1所有车辆均修改为右转路径） \n for  vehi  in  allVehiStarted_lst : \n     if  vehi . roadId ( )   ==   1 : \n修改车辆路径 \n        decisionPoints_lst  =  netiface . decisionPoints ( ) \n        decisionPoint_link1  =   None \n         for  decisionPoint  in  decisionPoints_lst : \n             if  decisionPoint . link ( ) . id ( )   ==   1 : \n                decisionPoint_link1  =  decisionPoint\n                 break \n        decisionPoint_link1_routings_lst  =   [ ] \n         if  decisionPoint_link1 : \n            decisionPoint_link1_routings_lst  =  decisionPoint_link1 . routings ( ) \n         if   len ( decisionPoint_link1_routings_lst )   >   0 : \n             if  vehi . routing ( )   !=  decisionPoint_link1_routings_lst [ - 1 ] : \n                 if   ( vehi . vehicleDriving ( ) . setRouting ( decisionPoint_link1_routings_lst [ - 1 ] ) ) : \n                     print ( "{}车辆修改路径成功。" . format ( vehi . id ( ) ) ) \n\n \n Ø  def setSegmentIndex(self, index:int) -> None: ... \n 设置分段序号 \n [in] index：分段序号 \n Ø  def currDistanceInSegment(self) -> float: ... \n 当前在分段上已行驶距离 \n Ø  def setCurrDistanceInSegment(self, dist:float) -> None: ... \n 设置在分段上已行驶距离 \n Ø  def setX(self, posX:float) -> None: ... \n 设置横坐标 \n 参数： \n [in] posX：横坐标：单位：像素 \n Ø  def setY(self, posY:float) -> None: ... \n 设置纵坐标 \n 参数： \n [in] posY：纵坐标：单位：像素 \n Ø  def setV3z(self, v3z:float) -> None: ... \n 设置高程坐标 \n 参数： \n [in] v3z：高程坐标：单位：像素 \n Ø  def changingTrace(self) -> typing.List: ... \n 变轨点集，车辆不在车道中心线或“车道连接”中心线上时的轨迹，如变道过程的轨迹点集 \n Ø  def changingTraceLength(self) -> float: ... \n 变轨长度 \n Ø  def distToStartPoint(self, fromVehiHead:bool=..., bOnCentLine:bool=...) -> float: ... \n 在车道或车道连接上到起点距离 \n 参数： \n [in] fromVehiHead：是否从车头计算，如果为False，从车辆中心点计算，默认值为False \n [in] bOnCentLine：当前是否在中心线上 \n Ø  def distToEndpoint(self, fromVehiHead:bool=...) -> float: ... \n 在车道或“车道连接”上车辆到终端距离 \n 参数： \n [in] fromVehiHead：是否从车头计算，如果为False，从车辆中心点计算，默认值为False \n Ø  def setRouting(self, pRouting:Tessng.IRouting) -> bool: ... \n 设置路径，外界设置的路径不一定有决策点，可能是临时创建的，如果车辆不在此路径上则设置不成功并返回False \n Ø  def routing(self) -> Tessng.IRouting: ... \n 当前路径 \n Ø  def moveToLane(self, pLane:Tessng.ILane, dist:float) -> bool: ... \n 将车辆移到另一条车道上 \n 参数： \n [in] pLane：目标车道 \n [in] dist：到目标车道起点距离，单位：像素 \n Ø  def moveToLaneConnector(self, pLaneConnector:Tessng.ILaneConnector, dist:float) -> bool: ... \n 将车辆移到另一条车道连接上 \n 参数： \n [in] pLaneConnector：目标车道 \n [in] dist：到目标车道起点距离，单位：像素 \n 举例： \n20秒时，移动飞机 \n if  simuTime  ==   20   *   1000 : \n查找飞机和id为1的车道 \n    plane  =  tessngIFace ( ) . simuInterface ( ) . getVehicle ( 100001 ) \n    lane  =  tessngIFace ( ) . netInterface ( ) . findLane ( 1 ) \n     if  plane . vehicleDriving ( ) . moveToLane ( lane ,   400 ) : \n         print ( "移动飞机成功" ) \n\n \n Ø  def move(self, pILaneObject:Tessng.ILaneObject, dist:float) -> bool: ... \n 移动车辆到到另一条车道或“车道连接” \n 参数： \n [in] pILaneObject：目标车道或“车道连接” \n [in] dist：到目标车道起点距离，单位：像素 \n 举例： \n车辆位置移动（以L5路段上的车辆为例，在3秒时直接将该车移动过路口） \n if  simuTime  ==   10   *   1000 : \n     for  index ,  vehi  in   enumerate ( allVehiStarted_lst ) : \n         print ( index , vehi . id ( ) ) \n         if  vehi . roadId ( )   ==   5 : \n            next_link  =  netiface . findLink ( 9 ) \n            laneObjs_next_link_lst  =  next_link . laneObjects ( ) \n             if   ( vehi . vehicleDriving ( ) . move ( laneObjs_next_link_lst [ index  %   len ( laneObjs_next_link_lst ) ] , \n                                            float ( index  %   100 ) ) ) : \n                 print ( "{}车辆移动成功。" . format ( vehi . id ( ) ) ) \n\n \n Ø  def changingTrace(self) -> typing.List: ... \n 变轨点集，如变道轨迹、公交车进入港湾式站点轨迹。 \n Ø  def changingTraceLength(self) -> float: ... \n 变轨长度，如变道轨迹长度、公交车进入港湾式站点轨迹长度，单位：像素。 \n Ø  def calcTraceLength(self) -> None: ... \n 计算变轨长度，如计算变道轨迹长度等。 \n Ø  def setTrace(self, lPoint:typing.Sequence) -> None: ... \n 设置变轨轨迹 \n Ø  def setTracingType(self, type:int) -> None: ... \n 设置轨迹类型 \n [in] type：轨迹类型 0：跟驰，1：左变道，2：右变道，3：左虚拟変道, 4：右虚拟变道，5：左转待转，6：右转待转, 7：入湾，8：出湾 \n ？？？缺失 V3.1版本的冲突参数修改，优先级修改API ？？ \n 4. 自定义窗口组件TessInterface \n TessInterface 是TESSN对外暴露的顶级接口，下面有三个子接口：NetInterface、SimuInterface、GuiInterface，分别用于访问或控制路网、仿真过程和用户交互界面。 \n 获取顶层接口的方法是：tessngIFace()。 \n 下面是几个接口方法的说明： \n Ø  def config(self) -> typing.Dict: ... \n 获取json对象，其中保存了config.json配置文件中的信息。 \n 每次加载路网时会重新加载配置信息，上次通过setConfigProperty()方法设置的属性会在重新加载路网后丢失。 \n Ø  def setConfigProperty(self, key:str, value:typing.Any) -> None: ... \n 设置配置属性 \n Ø  def releasePlugins(self) -> None: ... \n 卸载并释放插件 \n Ø  def netInterface(self) -> Tessng.NetInterface: ... \n 返回用于访问控制路网的接口NetInterface \n Ø  def simuInterface(self) -> Tessng.SimuInterface: ... \n 返回用于控制仿真过程的接口SimuInterface \n Ø  def guiInterface(self) -> Tessng.GuiInterface: ... \n 返回用于访问控制用户介面的接口GuiInterface \n Ø  def loadPluginFromMem(self, pPlugin:Tessng.TessPlugin) -> bool: ... \n 从内存加载插件，此方法便于用户基于API进行二次开发。 \n 下面对三个子接口进行详解： \n 4.1. NetInterface \n NetInterface是TessInterface的子接口，用于访问、控制路网的接口，通过这个接口可以从文件加载路网、创建路段、连接段、发车点等。 \n 下面对NetInterface接口方法作详细解释。 \n Ø  def openNetFle(self, filePath:str) -> None: ... \n 打开保存在文件中的路网 \n 参数： \n [in] filePath：路网文件全路径名 \n 举例： \n openNetFile ( "C:/TESSNG/Example/杭州武林门区域路网公交优先方案.tess" ) \n \n Ø  def openNetByNetId(self, netId:int) -> None: ... \n 从专业数据库加载路网 \n Ø  def saveRoadNet(self) -> None: ... \n 保存路网 \n Ø  def netFilePath(self) -> str: ... \n 获取路网文件全路径名，如果是专业数据保存的路网，返回的是路网ID \n Ø  def roadNet(self) -> Tessng.IRoadNet: ... \n 获取路网对象 \n Ø  def netAttrs (self) -> Tessng.IRoadNet: ... \n 获取路网对象，如果路网是从opendrive导入的，此路网对象可能保存了路网中心点所在的经纬度坐标，以及大地坐标等信息 \n Ø  def setNetAttrs(self, name:str, sourceType:str=..., centerPoint:PySide2.QtCore.QPointF=..., backgroundUrl:str=..., otherAttrsJson:typing.Dict=...) -> Tessng.IRoadNet: ... \n 设置路网基本信息 \n 参数： \n [in] name:路网名称 \n [in] centerPoint:中心点坐标所在路网，默认为(0,0) ，用户也可以将中心点坐标保存到otherAttrsJson字段里 \n [in] sourceType:数据来源分类，默认为 “TESSNG”，表示路网由TESSNG软件直接创建。取值“OPENDRIVE”，表示路网是经过opendrive路网导入而来 \n [in] backgroundUrl：底图路径 \n [in] otherAttrsJson:保存在json对象中的其它属性，如大地坐标等信息。 \n Ø  def graphicsScene(self) -> PySide2.QtWidgets.QGraphicsScene: ... \n 获取场景对象 \n Ø  def graphicsView(self) -> PySide2.QtWidgets.QGraphicsView: ... \n 获取视图对象 \n Ø  def sceneScale(self) -> float: ... \n 场景中的像素比，单位：米/像素 \n Ø  def setSceneSize(self, w:float, h:float) -> None: ... \n 设置场景大小，参数w及h分别是场景宽度和高度，单位：米 \n Ø  def sceneWidth(self) -> float: ... \n 场景宽度，单位：米 \n Ø  def sceneHeight(self) -> float: ... \n 场景高度，单位：米 \n Ø  def backgroundMap(self) -> PySide2.QtCore.QByteArray: ... \n 背景图 \n Ø  def sections(self) -> typing.List: ... \n 所有Section \n Ø  def linkIds(self) -> typing.List: ... \n 路段ID集 \n Ø  def linkCount(self) -> int: ... \n 路段数 \n Ø  def links(self) -> typing.List: ... \n 路段集 \n Ø  def findLink(self, id:int) -> Tessng.ILink: ... \n 根据路段ID查找路段 \n Ø  def findLane(self, id:int) -> Tessng.ILane: ... \n 根据车道ID查找车道 \n Ø  def findLaneConnector(self, fromLaneId:int, toLaneId:int) -> Tessng.ILaneConnector: ... \n 根据“车道连接”ID查找“车道连接” \n Ø  def connectorIds(self) -> typing.List: ... \n 连接段ID集 \n Ø  def connectorCount(self) -> int: ... \n 连接段数 \n Ø  def connectors(self) -> typing.List: ... \n 连接段集 \n Ø  def findConnector(self, id:int) -> Tessng.IConnector: ... \n 根据连接段ID查找连接段 \n Ø  def findConnectorArea(self, id:int) -> Tessng.IConnectorArea: ... \n 根据面域ID查找面域 \n Ø  def findConnectorByLinkIds(self, fromLinkId:int, toLinkId:int) -> Tessng.IConnector: ... \n 根据起始路段ID及目标路段ID查找连接段 \n Ø  def findLaneConnector(self, fromLaneId:int, toLaneId:int) -> Tessng.ILaneConnector: ... \n 根据起始车道ID及目标车道ID查找“车道连接” \n Ø  def guidArrowCount(self) -> int: ... \n 导向箭头数 \n Ø  def guidArrowIds(self) -> typing.List: ... \n 导向箭头ID集 \n Ø  def signalLampCount(self) -> int: ... \n 信号灯数 \n Ø  def signalLampIds(self) -> typing.List: ... \n 信号灯ID集 \n Ø  def signalLamps(self) -> typing.List: ... \n 信号灯集 \n Ø  def findSignalLamp(self, id:int) -> Tessng.ISignalLamp: ... \n 根据信号灯ID查找信号灯 \n Ø  def findSignalPhase(self, id:int) -> Tessng.ISignalPhase: ... \n 根据信号相位ID查找信号相位 \n Ø  def findSignalPhase(self, id:int) -> Tessng.ISignalPhase: ... \n 信号灯组数 \n Ø  def signalGroupIds(self) -> typing.List: ... \n 信号灯组ID集 \n Ø  def signalGroups(self) -> typing.List: ... \n 信号灯组集 \n Ø  def findSignalGroup(self, id:int) -> Tessng.ISignalGroup: ... \n 根据信号灯组ID查找信号灯组 \n Ø  def dispatchPoints(self) -> typing.List: ... \n 发车点集。 \n Ø  def findDispatchPoint(self, id:int) -> Tessng.IDispatchPoint: ... \n 根据发车点ID查找发车点 \n 参数： \n [in] id：发车点ID \n Ø  def buslines(self) -> typing.List: ... \n 公交线路集 \n Ø  def findBusline(self, buslineId:int) -> Tessng.IBusLine: ... \n 根据公交线路ID查找公交线路 \n 参数： \n [in] buslineId：公交线路ID \n Ø  def findBuslineByFirstLinkId(self, linkId:int) -> Tessng.IBusLine: ... \n 根据公交线路起始路段ID查找公交线路 \n 参数： \n [in] linkId：公交线路起始段ID \n Ø  def busStations(self) -> typing.List: ... \n 公交站点集 \n Ø  def findBusStation(self, stationId:int) -> Tessng.IBusStation: ... \n 根据公交站点ID查询公交站点 \n Ø  def findBusStationLineByStationId(self, stationId:int) -> typing.List: ... \n 根据公交站点ID查询相关BusLineStation \n Ø  def allConnectorArea(self) -> typing.List: ... \n 面域集 \n Ø  def laneCenterPoints(self, laneId:int) -> typing.List: ... \n 指定车道中心线断点集 \n 参数：­ \n [in]laneId：指定车道ID \n Ø  def linkCenterPoints(self, linkId:int) -> typing.List: ... \n 指定路段中心线断点集 \n 参数： \n [in]linkId：指定路段ID \n Ø  def judgeLinkToCross(self, linkId:int) -> bool: ... \n 判断路段去向是否进入交叉口， 以面域是否存在多连接段以及当前路段与后续路段之间的角度为依据 \n Ø  def getIDByItemName(self, name:str) -> int: ... \n 根据路网元素名获取自增ID \n 参数： \n [in] name：路网元素名。路网元素名的定义在文件plugin/_netitem.h中定义 \n Ø  def createLink(self, lCenterPoint:typing.Sequence, laneCount:int, linkName:str=..., bAddToScene:bool=...) -> Tessng.ILink: ... \n 创建路段 \n 参数： \n [in] lCenterPoint：路段中心线断点集 \n [in] laneCount：车道数 \n [in] linkName：路段名，默认为空，将以路段ID作为路段名 \n [in] bAddToScene：创建后是否放入路网场景，默认为True \n 举例： \n startPoint  =  QPointF ( m2p ( - 300 ) ,   0 ) \nendPoint  =  QPointF ( m2p ( 300 ) ,   0 ) \nlPoint  =   [ startPoint ,  endPoint ] \nlink1  =  netiface . createLink ( lPoint ,   7 ,   "曹安公路" ) \n\n \n 返回：路段对象。 \n Ø  def createLink3D(self, lCenterV3:typing.Sequence, laneCount:int, linkName:str=..., bAddToScene:bool=...) -> Tessng.ILink: ... \n 创建路段 \n 参数： \n [in] lCenterV3：路段中心线断点序列，每个断点都是三维空间的点 \n [in] laneCount：车道数 \n [in] linkName：路段名 \n 返回：路段对象。 \n Ø  def createLinkWithLaneWidth(self, lCenterPoint:typing.Sequence, lLaneWidth:typing.Sequence, linkName:str=..., bAddToScene:bool=...) -> Tessng.ILink: ... \n 创建路段 \n 参数： \n [in] lCenterPoint：路段中心线断点序列 \n [in] lLaneWidth：车道宽度列表 \n [in] linkName：路段名 \n [in] bAddToScene：是否加入场景，默认为True \n 返回：路段对象。 \n Ø  def createLink3DWithLaneWidth(self, lCenterV3:typing.Sequence, lLaneWidth:typing.Sequence, linkName:str=..., bAddToScene:bool=...) -> Tessng.ILink: ... \n 创建路段 \n 参数： \n [in] lCenterV3：路段中心线断点序列，每个断点都是三维空间的点 \n [in] lLaneWidth：车道宽度列表 \n [in] linkName：路段名 \n [in] bAddToScene：是否加入场景，默认为True \n 返回：路段对象。 \n Ø  def createLink3DWithLanePoints(self, lCenterLineV3:typing.Sequence, lanesWithPoints:typing.Sequence, linkName:str=..., bAddToScene:bool=...) -> Tessng.ILink: ... \n 创建路段 \n 参数： \n [in] lCenterLineV3：路段中心点集(对应TESSNG路段中心点)，每个点都是三维空间的 \n [in] lanesWithPoints：车道数据集合，每个成员是QMap< QString, QList< QVector3D>>类型数据，有三个key，分别是“left”、“center”、“right”、分别表示一条车道左、中、右侧断点序列。 \n [in] linkName：路段名，默认为路段ID \n [in] bAddToScene：是否加入路网，默认True表示加入 \n 返回：路段对象 \n Ø  def createConnector(self, fromLinkId:int, toLinkId:int, lFromLaneNumber:typing.Sequence, lToLaneNumber:typing.Sequence, connName:str=..., bAddToScene:bool=...) -> Tessng.IConnector: ... \n 创建连接段 \n 参数： \n [in] fromLinkId：起始路段ID \n [in] toLinkId：目标路段ID \n [in] lFromLaneNumber：连接段起始车道序号集 \n [in] LToLaneNumber：连接段目标车道序号集 \n [in] connName：连接段名，默认为空，以两条路段的ID连接起来作为名称 \n [in] bAddToScene：创建后是否放入路网场景，默认为True \n Ø  def createConnector3DWithPoints(self, fromLinkId:int, toLinkId:int, lFromLaneNumber:typing.Sequence, lToLaneNumber:typing.Sequence, laneConnectorWithPoints:typing.Sequence, connName:str=..., bAddToScene:bool=...) -> Tessng.IConnector: ... \n 创建连接段，创建连接段后将“车道连接”中自动计算的断点集用参数laneConnectorWithPoints断点替换 \n 参数： \n [in] fromLinkId：起始路段ID \n [in] toLinkId：目标路段ID \n [in] lFromLaneNumber：起始路段参于连接的车道序号 \n [in] lToLaneNumber：目标路段参于连接的车道序号 \n [in] laneConnectorWithPoints：“车道连接”数据列表，成员是QMap< QString, QList< QVector3D>>类型数据，有三种key，分别是“left”、“center”、“right”，表示一条“车道连接”左、中、右侧断点序列 \n [in] connName：连接段名，默认将起始路段ID和目标路段ID用“_”连接表示连接段名，如“100_101”。 \n [in] bAddToScene：是否加入到场景，默认为True \n 返回：连接段对象 \n Ø  def createDispatchPoint(self, pLink:Tessng.ILink, dpName:str=..., bAddToScene:bool=...) -> Tessng.IDispatchPoint: ... \n 创建发车点 \n 参数： \n [in] pLink：路段，在其上创建发车点 \n [in] dpName：发车点名称，默认为空，将以发车点ID作为名称 \n [in] bAddToScene：创建后是否放入路网场景，默认为True \n Ø  def createVehicleComposition(self, name:str, lVehiComp:typing.Sequence) -> int: ... \n 创建车型组成，如果车型组成名已存在或相关车型编码不存在或相关车型占比小于0则返回-1，否则新建车型组成，并返回车型组成编码 \n 参数： \n [in] name：车型组成名 \n [in] lVehiComp：不同车型占比列表 \n 举例： \n创建车辆组成及指定车辆类型 \nvehiType_proportion_lst  =   [ ] \n车型组成：小客车0.3，大客车0.2，公交车0.1，货车0.4 \nvehiType_proportion_lst . append ( Online . VehiComposition ( 1 ,   0.3 ) ) \nvehiType_proportion_lst . append ( Online . VehiComposition ( 2 ,   0.2 ) ) \nvehiType_proportion_lst . append ( Online . VehiComposition ( 3 ,   0.1 ) ) \nvehiType_proportion_lst . append ( Online . VehiComposition ( 4 ,   0.4 ) ) \nvehiCompositionID  =  netiface . createVehicleComposition ( "动态创建车型组成" ,  vehiType_proportion_lst ) \n\n \n Ø  def shortestRouting(self, pFromLink:Tessng.ILink, pToLink:Tessng.ILink) -> Tessng.IRouting: ... \n 计算最短路径 \n 参数： \n [in] pFromLink：起始路段 \n [in] pToLink：目标路段 \n 返回：最短路径对象，包含经过的路段对象序列 \n Ø  def createRouting(self, lILink:typing.Sequence) -> Tessng.IRouting: ... \n 用连续通达的路段序列创建路径 \n 参数： \n [in] lILink：路段对象序列 \n 返回：路径对象 \n Ø  def decisionPoints(self) -> typing.List: ... \n 决策点列表 \n Ø  def findDecisionPoint(self, id:int) -> Tessng.IDecisionPoint: ... \n 根据ID查找决策点 \n [in] id：决策点ID \n 返回：决策点对象 \n Ø  def vehiInfoCollectors(self) -> typing.List: ... \n 所有车辆检测器 \n Ø  def findVehiInfoCollector(self, id:int) -> Tessng.IVehicleDrivInfoCollector: ... \n 根据ID查询车辆检测器 \n 参数： \n [in] id：车辆检测器ID \n 返回：车辆检测器对象 \n Ø  def vehiQueueCounters(self) -> typing.List: ... \n 所有排队计数器 \n Ø  def findVehiQueueCounter(self, id:int) -> Tessng.IVehicleQueueCounter: ... \n 根据ID查询车辆排队计数器 \n 参数： \n [in] id：排队计数器ID \n 返回：排队计数器对象 \n Ø  def findVehiQueueCounter(self, id:int) -> Tessng.IVehicleQueueCounter: ... \n 所有车辆行程时间检测器，返回列表中的每一个元素是一对行程时间检测器的起始检测器 \n Ø  def findVehiTravelDetector(self, id:int) -> Tessng.IVehicleTravelDetector: ... \n 根据ID查询车辆行程时间检测器，返回一对行程时间检测器中起始检测器 \n 参数： \n [in] id：行程时间检测器ID \n 返回：行程时间检测器对象 \n Ø  def findRouting(self, id:int) -> Tessng.IRouting: ... \n 根据路径ID查找路径 \n Ø  def crossPoints(self, pLaneConnector:Tessng.ILaneConnector) -> typing.List: ... \n 当前“车道连接”穿过其它“车道连接”形成的交叉点列表 \n 参数： \n [in] pLaneConnector：“车道连接”对象 \n 返回：交叉点列表 \n 举例： \n当前“车道连接”穿过其它“车道连接”形成的交叉点列表 \nlaneConnectors  =  tessngIFace ( ) . netInterface ( ) . findConnector ( 6 ) . laneConnectors ( ) \n for  laneConnector  in  laneConnectors : \n    crossPoints  =  tessngIFace ( ) . netInterface ( ) . crossPoints ( laneConnector ) \n     for  crossPoint  in  crossPoints : \n         print ( "主车道连接，即被交叉的“车道连接”：" ,  crossPoint . mpLaneConnector . id ( ) ) \n         print ( "交叉点坐标为：(" ,  crossPoint . mCrossPoint . x ( ) ,   "," ,  crossPoint . mCrossPoint . y ( ) ,   ")" ) \n\n \n Ø  def createEmptyNetFile(self, filePath:str, dbver:int=...) -> bool: ... \n 创建空白路网 \n 参数： \n [in] filePath：空白路网全路径名 \n [in] dbver:：数据库版本 \n Ø  def createLink3DWithLanePointsAndAttrs(self, lCenterLineV3:typing.Sequence, lanesWithPoints:typing.Sequence, lLaneType:typing.Sequence, lAttr:typing.Sequence=..., linkName:str=..., bAddToScene:bool=...) -> Tessng.ILink: ... \n 创建路段 \n 参数： \n [in] lCenterLineV3：路段中心点集(对应TESSNG路段中心点) \n [in] lanesWithPoints：车道点集的集合 \n [in] lLaneType:车道类型集 \n [in] lAttr:车道附加属性集 \n [in] linkName：路段名，默认为路段ID, \n [in] bAddToScene：是否加入路网，默认True表示加入 \n 返回：路段对象 \n Ø  def removeLink(self, pLink:Tessng.ILink) -> None: ... \n 移除路段，从场景中移除pLink，但不从文件中删除，保存路网后才会从路网文件中删除 \n 参数： \n [in] pLink：将要移除的路段 \n Ø  def updateLink(self, link:Tessng._Link, lLane:typing.Sequence=..., lPoint:typing.Sequence=...) -> Tessng.ILink: ... \n 更新路段，更新后返回路段对象 \n 参数： \n [in] link：更新的路段数据 \n [in] lLink：更新的车道列表数据 \n [in] lPoint：更新的断点集合 \n 返回：更新后的路段对象 \n Ø  def removeConnector(self, pConnector:Tessng.IConnector) -> None: ... \n 移除连接段，从场景中移除pLink，但不从文件中删除，保存路网后才会从路网文件中删除 \n 参数： \n [in] pConnector：连接段对象 \n Ø  def updateConnector(self, connector:Tessng._Connector) -> Tessng.IConnector: ... \n 更新连接段，更新后返回连接段对象 \n 参数： \n [in] connector：连接段数据 \n 返回：更新后的连接段对象 \n Ø  def removeDispatchPoint(self, pDispPoint:Tessng.IDispatchPoint) -> bool: ... \n 移除发车点 \n 参数： \n [in] pDispPoint：发车点对象 \n Ø  def createVehicleType(self, _vt:Tessng._VehicleType) -> bool: ... \n 创建车型，如果创建成功，会将新创建的车辆类型存放到全局数据里供使用 \n 参数： \n [in] vt：车辆类型数据 \n Ø  def removeVehicleComposition(self, vehiCompId:int) -> bool: ... \n 移除车型组成 \n 参数： \n [in] vehiCompId：车型组成ID \n Ø  def createDecisionPoint(self, pLink:Tessng.ILink, distance:float, name:str=...) -> Tessng.IDecisionPoint: ... \n 创建决策点 \n 参数： \n [in] pLink：决策点所在的路段 \n [in] distance：决策点距离路段起点的距离，默认单位：像素 \n [in] name：决策点的名称 \n 返回：决策点对象 \n 举例： \n创建决策点 \ndecisionPoint  =  netiface . createDecisionPoint ( link3 ,  m2p ( 30 ) ) \n\n \n Ø  def createDeciRouting(self, pDeciPoint:Tessng.IDecisionPoint, lILink:typing.Sequence) -> Tessng.IRouting: ... \n 创建决策路径 \n 参数： \n [in] pDeciPoint：决策点 \n [in] lILink：决策路径所包含的路段集合 \n 举例： \n创建路径(左，直，右) \ndecisionRouting1  =  tessngIFace ( ) . netInterface ( ) . createDeciRouting ( decisionPoint ,   [ link3 ,  link10 ,  link6 ] ) \ndecisionRouting2  =  tessngIFace ( ) . netInterface ( ) . createDeciRouting ( decisionPoint ,   [ link3 ,  link10 ,  link8 ] ) \ndecisionRouting3  =  tessngIFace ( ) . netInterface ( ) . createDeciRouting ( decisionPoint ,   [ link3 ,  link10 ,  link7 ] ) \n\n \n Ø  def removeDeciRouting(self, pDeciPoint:Tessng.IDecisionPoint, pRouting:Tessng.IRouting) -> bool: ... \n 删除决策路径 \n 参数： \n [in] pDeciPoint：决策点 \n [in] pRouting：将要删除的路径 \n 举例： \n删除右转路径 \n if   ( netiface . removeDeciRouting ( decisionPoint ,  decisionRouting3 ) ) : \n     print ( "删除右转路径成功。" ) \n\n \n Ø  def updateDecipointPoint(self, deciPoint:Tessng._DecisionPoint, lFlowRatio:typing.Sequence=...) -> Tessng.IDecisionPoint: ... \n 更新决策点及其各路径不同时间段流量比 \n 参数： \n [in] deciPoint：决策点数据 \n [in] lFlowRatio：各路径按时间段流量比的数据集合 \n 返回：更新后的决策点 \n 举例： \n分配左、直、右流量比 \nflowRatio_left  =  _RoutingFLowRatio ( ) \nflowRatio_left . RoutingFLowRatioID  =   1 \nflowRatio_left . routingID  =  decisionRouting1 . id ( ) \nflowRatio_left . startDateTime  =   0 \nflowRatio_left . endDateTime  =   999999 \nflowRatio_left . ratio  =   2.0 \nflowRatio_straight  =  _RoutingFLowRatio ( ) \nflowRatio_straight . RoutingFLowRatioID  =   2 \nflowRatio_straight . routingID  =  decisionRouting2 . id ( ) \nflowRatio_straight . startDateTime  =   0 \nflowRatio_straight . endDateTime  =   999999 \nflowRatio_straight . ratio  =   3.0 \nflowRatio_right  =  _RoutingFLowRatio ( ) \nflowRatio_right . RoutingFLowRatioID  =   3 \nflowRatio_right . routingID  =  decisionRouting3 . id ( ) \nflowRatio_right . startDateTime  =   0 \nflowRatio_right . endDateTime  =   999999 \nflowRatio_right . ratio  =   1.0 \n决策点数据 \ndecisionPointData  =  _DecisionPoint ( ) \ndecisionPointData . deciPointID  =  decisionPoint . id ( ) \ndecisionPointData . deciPointName  =  decisionPoint . name ( ) \ndecisionPointPos  =  QPointF ( ) \n if  decisionPoint . link ( ) . getPointByDist ( decisionPoint . distance ( ) ,  decisionPointPos ) : \n    decisionPointData . X  =  decisionPointPos . x ( ) \n    decisionPointData . Y  =  decisionPointPos . y ( ) \n    decisionPointData . Z  =  decisionPoint . link ( ) . z ( ) \n更新决策点及其各路径不同时间段流量比 \nupdated_decision_point  =  netiface . updateDecipointPoint ( \n    decisionPointData ,   [ flowRatio_left ,  flowRatio_straight ,  flowRatio_right ] \n ) \n\n \n Ø  def createVehiCollectorOnLink(self, pLane:Tessng.ILane, dist:float) -> Tessng.IVehicleDrivInfoCollector: ... \n 在路段的车道上创建车辆采集器 \n 参数： \n [in] pLane：车道对象 \n [in] dist：路车道起点距离，默认单位：像素 \n 返回：车辆采集器 \n 举例： \n #在路段9最左侧车道100米处创建车辆采集器 \nlink  =  tessngIFace ( ) . netInterface ( ) . findLink ( 9 ) \n if  link  is   not   None : \n    leftLane  =  link . lanes ( ) [ - 1 ] \n    dist  =  m2p ( 100 ) \n    collector  =  tessngIFace ( ) . netInterface ( ) . createVehiCollectorOnLink ( leftLane ,  dist ) \n将采集器设置到距路段起点400米处 \n     if  collector  is   not   None : \n        collector . setDistToStart ( m2p ( 400 ) ) \n\n \n Ø  def createVehiCollectorOnConnector(self, pLaneConnector:Tessng.ILaneConnector, dist:float) -> Tessng.IVehicleDrivInfoCollector: ... \n 在连接段的“车道连接”上创建采集器 \n 参数： \n [in] pLaneConnector：“车道连接”对象 \n [in] dist：距“车道连接”起点距离，单位像素 \n Ø  def removeVehiCollector(self, pCollector:Tessng.IVehicleDrivInfoCollector) -> bool: ... \n 移除车辆信息采集器 \n 参数： \n [in] pCollector：车辆信息采集器 \n Ø  def createVehiQueueCounterOnLink(self, pLane:Tessng.ILane, dist:float) -> Tessng.IVehicleQueueCounter: ... \n 在路段的车道上创建车辆排队计数器 \n 参数： \n [in] pLane：车道对象 \n [in] dist：默认单位：像素 \n 返回：排队计数器对象 \n 举例： \n #在路段9最左侧车道100米处创建排队计数器 \nlink  =  tessngIFace ( ) . netInterface ( ) . findLink ( 9 ) \n if  link  is   not   None : \n  leftLane  =  link . lanes ( ) [ - 1 ] \n  dist  =  m2p ( 100 ) \n  counter  =  tessngIFace ( ) . netInterface ( ) . createVehiQueueCounterOnLink ( leftLane ,  dist ) \n   if  counter  is   not   None : \n      print ( f"计数器所在点坐标为: ( { counter . point ( ) . x ( ) } ,  { counter . point ( ) . y ( ) } )" ) \n\n \n Ø  def createVehiQueueCounterOnConnector(self, pLaneConnector:Tessng.ILaneConnector, dist:float) -> Tessng.IVehicleQueueCounter: ... \n 在连接段的车道连接上创建车辆排队计数器 \n 参数： \n [in] pLaneConnector：“车道连接”对象 \n [in] dist：距“车道连接”起点距离，默认单位：像素 \n 返回：排队计数器对象 \n Ø  def createVehicleTravelDetector_link2link(self, pStartLink:Tessng.ILink, pEndLink:Tessng.ILink, dist1:float, dist2:float) -> typing.List: ... \n 创建行程时间检测器，起点和终点都在路段上 \n 参数： \n [in] dist1：检测器起点距所在路段起始点距离，默认单位：像素 \n [in] dist2：检测器终点距所在路段起始点距离，默认单位：像素 \n 举例： \n #在路段9 50-550米处创建行程检测器 \nlVehicleTravelDetector  =  tessngIFace ( ) . netInterface ( ) . createVehicleTravelDetector_link2link ( link ,  link ,  m2p ( 50 ) ,  m2p ( 550 ) ) \n if  lVehicleTravelDetector  is   not   None : \n for  detector  in  lVehicleTravelDetector : \ndetector . setFromTime ( 10 ) \ndetector . setToTime ( 60 ) \n\n \n Ø  def createVehicleTravelDetector_link2conn(self, pStartLink:Tessng.ILink, pEndLaneConnector:Tessng.ILaneConnector, dist1:float, dist2:float) -> typing.List: ... \n 创建行程时间检测器，起点在路段上，终点都在连接段的“车道连接”上 \n 参数： \n [in] pStartLink：检测器起点所在路段对象 \n [in] pEndLaneConnector：检测器终点所在“车道连接”对象 \n [in] dist1：检测器起点距所在路段起始点距离，默认单位：像素 \n [in] dist2：检测器终点距所在“车道连接”起始点距离，默认单位：像素 \n 返回：行程时间检测器对象 \n Ø  def createVehicleTravelDetector_conn2link(self, pStartLaneConnector:Tessng.ILaneConnector, pEndLink:Tessng.ILink, dist1:float, dist2:float) -> typing.List: ... \n 创建行程时间检测器，起点在连接段的“车道连接”上，终点在路段上 \n 参数： \n [in] pStartLaneConnector：检测器起点所在“车道连接”对象 \n [in] pEndLink：检测器终点所在路段对象 \n [in] dist1：检测器起点距所在"车道连接”起始点距离，默认单位：像素 \n [in] dist2：检测器终点距所在路段起始点距离，默认单位：像素 \n 返回：行程时间检测器对象 \n Ø  def createVehicleTravelDetector_conn2conn(self, pStartLaneConnector:Tessng.ILaneConnector, pEndLaneConnector:Tessng.ILaneConnector, dist1:float, dist2:float) -> typing.List: ... \n 创建行程时间检测器，起点和终点都在连接段的“车道连接”上 \n 参数： \n [in] pStartLaneConnector：检测器起点所在“车道连接”对象 \n [in] pEndLaneConnector：检测器终点所在“车道连接”对象 \n [in] dist1：检测器起点距所在"车道连接”起始点距离，默认单位：像素 \n [in] dist2：检测器终点距所在“车道连接”起始点距离，默认单位：像素 \n 返回：行程时间检测器对象 \n Ø  def createSignalGroup(self, name:str, period:int, fromTime:int, toTime:int) -> Tessng.ISignalGroup: ... \n 创建信号灯组 \n 参数： \n [in] name：灯组名称 \n [in] period：周期，默认单位：秒 \n [in] fromTime：起始时间，默认单位：秒 \n [in] toTime:结束时间,默认单位：秒 \n 返回：信号灯组对象 \n 举例： \n创建信号灯组 \nsignalGroup  =  netiface . createSignalGroup ( "信号灯组1" ,   60 ,   1 ,   3600 ) \n \n Ø  def createSignalPhase(self, pGroup:Tessng.ISignalGroup, name:str, lColor:typing.Sequence) -> Tessng.ISignalPhase: ... \n 创建相位 \n 参数： \n [in] pGroup：信号灯组 \n [in] name：相位名称 \n [in] lColor：相位灯色序列，新建相位排在已有相位序列的最后 \n 返回：信号相位对象 \n 举例： \n创建相位,40秒绿灯，黄灯3秒，全红3秒 \nred  =  Online . ColorInterval ( "G" ,   40 ) \ngreen  =  Online . ColorInterval ( "Y" ,   3 ) \nyellow  =  Online . ColorInterval ( "R" ,   3 ) \nsignalPhase  =  netiface . createSignalPhase ( signalGroup ,   "信号灯组1相位1" , \n                                          [ green ,  yellow ,  red ] ) \n\n \n Ø  def removeSignalPhase(self, pGroup:Tessng.ISignalGroup, phaseId:int) -> None: ... \n 移除已有相位，相位移除后，原相位序列自动重排, \n 参数： \n [in] pGroup：信号灯组对象 \n [in] phaseId：将要移除的相位ID \n Ø  def createSignalLamp(self, pPhase:Tessng.ISignalPhase, name:str, laneId:int, toLaneId:int, distance:float) -> Tessng.ISignalLamp: ... \n 创建信号灯 \n 参数： \n [in] pPhase：相位对象 \n [in] name：信号灯名称 \n [in] laneId：信号灯所在车道ID，或所在“车道连接”上游车道ID \n [in] toLaneId：信号灯所在“车道连接”下游车道ID \n [in] distance：信号灯距车道或“车道连接”起点距离，默认单位：像素 \n 返回：信号灯对象 \n 举例： \n创建信号灯 \n for  index ,  laneObj  in   enumerate ( lLaneObjects ) : \n    signalLamp  =  netiface . createSignalLamp ( signalPhase ,   "信号灯{}" . format ( index  +   1 ) ,  laneObj . fromLane ( ) . id ( ) , laneObj . toLane ( ) . id ( ) ,  m2p ( 2.0 ) ) \n\n \n Ø  def createBusLine(self, lLink:typing.Sequence) -> Tessng.IBusLine: ... \n 创建公交线路，lLink列表中相邻两路段可以是路网上相邻两路段，也可以不相邻，如果不相邻，TESSNG会在它们之间创建一条最短路径。如果lLink列表中相邻路段在路网上不相邻并且二者之间不存在最短路径，则相邻的第二条路段及后续路段无效。 \n 参数： \n [in] lLink，公交线路经过的路段对象集 \n 返回：公交线路对象 \n 举例： \n #创建公交线路 \nbusLine  =  tessngIFace ( ) . netInterface ( ) . createBusLine ( [ link10 ,  link11 ] ) \n if  busLine  is   not   None : \n   busLine . setDesirSpeed ( m2p ( 60 ) ) \n\n \n Ø  def removeBusLine(self, pBusLine:Tessng.IBusLine) -> bool: ... \n 移除公交线路 \n 参数： \n [in] pBusLine：将要移除的公交线路对象 \n Ø  def createBusStation(self, pLane:Tessng.ILane, length:float, dist:float, name:str=...) -> Tessng.IBusStation: ... \n 创建公交站点 \n 参数： \n [in] pLane：车道 \n [in] length:站点长度(单位像素) \n [in] dist:站点起始点距车道起点距离(单位像素) \n 返回：公交站点对象 \n 举例： \n创建公交线路 \nbusLine  =  tessngIFace ( ) . netInterface ( ) . createBusLine ( [ link10 ,  link11 ] ) \n if  busLine  is   not   None : \n   busLine . setDesirSpeed ( m2p ( 60 ) ) \n   busStation1  =  tessngIFace ( ) . netInterface ( ) . createBusStation ( link10 . lanes ( ) [ 0 ] ,  m2p ( 30 ) ,  m2p ( 50 ) , "公交站1" ) \n   busStation2  =  tessngIFace ( ) . netInterface ( ) . createBusStation ( link11 . lanes ( ) [ 0 ] ,  m2p ( 15 ) ,  m2p ( 50 ) , "公交站2" ) \n\n \n Ø  def removeBusStation(self, pStation:Tessng.IBusStation) -> bool: ... \n 移除公交站点 \n 参数： \n [in] pStation：公交站点对象 \n Ø  def addBusStationToLine(self, pBusLine:Tessng.IBusLine, pStation:Tessng.IBusStation) -> bool: ... \n 将公交站点关联到公交线路上 \n 参数： \n [in] pBusLine：公交线路 \n [in] pStation：公交站点 \n 举例： \n创建公交线路 \n if  busStation1  and  tessngIFace ( ) . netInterface ( ) . addBusStationToLine ( busLine ,  busStation1 ) : \n  \tbusStation1 . setType ( 2 ) \n     print ( "公交站1已关联到公交线路" ) \n if  busStation2  and  tessngIFace ( ) . netInterface ( ) . addBusStationToLine ( busLine ,  busStation2 ) : \n     print ( "公交站2已关联到公交线路" ) \n\n \n Ø  def removeBusStationFromLine(self, pBusLine:Tessng.IBusLine, pStation:Tessng.IBusStation) -> bool: ... \n 将公交站点与公交线路的关联关系解除 \n 参数： \n [in] pBusLine：公交线路 \n [in] pStation：公交站点 \n Ø  def initSequence(self, schemaName:str=...) -> bool: ... \n 初始化数据库序列，对保存路网的专业数据库序列进行初始化，目前支持PostgreSql \n 参数： \n [in] schemaName：数据库的schema名称 \n Ø  def buildNetGrid(self, width:float=...) -> None: ... \n 路网的网格化 \n 参数： \n [in] width：单元格宽度，默认单位：米 \n Ø  def findSectionOn1Cell(self, point:PySide2.QtCore.QPointF) -> typing.List: ... \n 根据point查询所在单元格所有经过的ISection \n 参数： \n [in] point：路网场景中的点 \n 返回：ISection列表 \n Ø  def findSectionOn4Cell(self, point:PySide2.QtCore.QPointF) -> typing.List: ... \n 根据point查询最近4个单元格所有经过的ISection \n 参数： \n [in] point：路网场景中的一个点 \n 返回：ISection列表 \n Ø  def findSectionOn9Cell(self, point:PySide2.QtCore.QPointF) -> typing.List: ... \n 根据point查询最近9个单元格所有经过的ISection \n 参数： \n [in] point：路网场景中的一个点 \n 返回：ISection列表 \n Ø  def locateOnSections(self, point:PySide2.QtCore.QPointF, lSection:typing.Sequence, referDistance:float=...) -> typing.List: ... \n 根据point对lSection列表中每一个Section所有LaneObject求最短距离，返回Location列表，列表按最短距离排序，从小到大 \n 参数： \n [in] point：路网场景中的一个点 \n [in] lSection：section列表 \n [in] referDistance：LaneObject上与point最近的点到LaneObject起点距离，默认单位：像素，是大约数，只为提高计算效率，默认值为0 \n 返回：Online::Location列表 \n 举例： \n根据point对lSection列表中每一个Section所有LaneObject求最短距离 \nsections  =  tessngIFace ( ) . netInterface ( ) . sections ( ) \n创建一个点对象 \npoint  =  QPointF ( 0 ,   0 ) \n在分段上定位点并获取位置信息 \nlocations  =  tessngIFace ( ) . netInterface ( ) . locateOnSections ( point ,  sections ) \n遍历位置信息列表 \n for  location  in  locations : \n输出相关车道或车道连接的ID \n     print ( "相关车道或车道连接为:" ,  location . pLaneObject . id ( ) ) \n输出最近点的坐标 \n     print ( "最近点坐标: ({}, {})" . format ( location . point . x ( ) ,  location . point . y ( ) ) ) \n输出到最近点的最短距离 \n     print ( "到最近点的最短距离:" ,  location . leastDist ) \n输出最近点到起点的里程 \n     print ( "最近点到起点的里程:" ,  location . distToStart ) \n输出最近点所在分段序号 \n     print ( "最近点所在分段序号:" ,  location . segmIndex ) \n     print ( )    # 换行以分隔不同的位置信息 \n\n \n Ø  def locateOnCrid(self, point:PySide2.QtCore.QPointF, cellCount:int=...) -> typing.List: ... \n point周围若干个单元格里查询LaneObject \n 参数： \n [in] point：路网场景中的一个点 \n [in] cellCount：单元格数，小于1时默认为1，大于1小于4时默认为4，大于4时默认为9 \n 返回：Online::Location列表 \n Ø  def boundingRect(self, pIVehicle:Tessng.IVehicle, outRect:PySide2.QtCore.QRectF) -> bool: ... \n 路网外围Rect，用以获取路网边界 \n Ø  def createRoadWorkZone(self, param:Tessng.Online.DynaRoadWorkZoneParam) -> Tessng.IRoadWorkZone: ... \n 创建施工区 \n 参数： \n [in] param：动态施工区信息，数据类型在文件 Plugin/_datastruct.h中定义 \n 举例： \n创建施工区和删除施工区示例,施工区和事故区的删除有两种方式，duration结束后自动删除以及主动删除(removeRoadWorkZone)，此处初始化前者 \n def   createworkZone ( self ) : \n     """ 创建施工区\n    :param :\n    :return:\n    """ \n创建施工区 \n    workZone  =  Online . DynaRoadWorkZoneParam ( ) \n道路ID \n    workZone . roadId  =   int ( 5 ) \n施工区名称 \n    workZone . name  =   "施工区，限速40,持续20秒" \n位置，距离路段或连接段起点距离，单位米 \n    workZone . location  =   50 \n施工区长度，单位米 \n    workZone . length  =   50 \n车辆经过施工区的最大车速，单位千米/小时 \n    workZone . limitSpeed  =   40 \n施工区施工时长，单位秒 \n    workZone . duration  =   20 \n施工区起始车道 \n    workZone . mlFromLaneNumber  =   [ 0 ] \n创建施工区 \n    zone  =  tessngIFace ( ) . netInterface ( ) . createRoadWorkZone ( workZone ) \n\n \n Ø  def removeRoadWorkZone(self, pIRoadWorkZone:Tessng.IRoadWorkZone) -> None: ... \n 移除施工区 \n 参数： \n [in] pIRoadWorkZone：将要移除的施工区对象 \n Ø  def roadWorkZones(self) -> typing.List: ... \n 获取所有施工区 \n Ø  def findRoadWorkZone(self, roadWorkZoneId:int) -> Tessng.IRoadWorkZone: ... \n 根据ID查询施工区 \n 参数： \n [in] roadWorkZoneId：施工区ID \n 返回：施工区对象 \n Ø  def createAccidentZone(self, param:Tessng.Online.DynaAccidentZoneParam) -> Tessng.IAccidentZone: ... \n 创建事故区 \n 参数： \n [in] param：动态事故区信息，数据类型在文件 Plugin/_datastruct.h中定义 \n 举例： \n创建事故区 \naccidentZone  =  Online . DynaAccidentZoneParam ( ) \n道路ID \naccidentZone . roadId  =   9 \n事故区名称 \naccidentZone . name  =   "最左侧车道发生事故" \n位置，距离路段或连接段起点距离，单位米 \naccidentZone . location  =  m2p ( 200 ) \n事故区长度，单位米 \naccidentZone . length  =  m2p ( 50 ) \n事故区起始车道序号列表 \naccidentZone . mlFromLaneNumber = [ 2 ] \n事故等级 \naccidentZone . level  =   1 \n创建事故区 \nzone  =  tessngIFace ( ) . netInterface ( ) . createAccidentZone ( accidentZone ) \n\n \n Ø  def removeAccidentZone(self, pIAccidentZone:Tessng.IAccidentZone) -> None: ... \n 移除事故区 \n Ø  def accidentZones(self) -> typing.List: ... \n 获取所有事故区 \n Ø  def findAccidentZone(self, accidentZoneId:int) -> Tessng.IAccidentZone: ... \n 根据ID查询事故区 \n 参数： \n [in] accidentZoneId：事故区ID \n 4.2. SimuInterface \n SimuInterface是TessInterface的子接口， 通过此接口可以启动、暂停、停止仿真，可以设置仿真精度，获取仿真过程车辆对象、车辆状态（包括位置信息），获取几种检测器检测的样本数据和集计数据，等等。 \n 下面对SimuInterface接口方法作详细解释。 \n Ø  def byCpuTime(self) -> bool: ... \n 仿真时间是否由现实时间确定。 \n 一个计算周期存在两种时间，一种是现实经历的时间，另一种是由仿真精度决定的仿真时间，如果仿真精度为每秒20次，仿真一次相当于仿真了50毫秒。默认情况下，一个计算周期的仿真时间是由仿真精度决定的。在线仿真时如果算力不够，按仿真精度确定的仿真时间会与现实时间存在时差。 \n Ø  def setByCpuTime(self, bByCpuTime:bool) -> bool: ... \n 设置是否由现实时间确定仿真时间，如果设为True，每个仿真周期现实经历的时间作为仿真时间，这样仿真时间与现实时间相吻合。 \n 参数： \n [in] bByCpuTime：是否由现实时间确定仿真时间 \n Ø  def startSimu(self) -> bool: ... \n 启动仿真 \n 举例： \nTESSNG 顶层接口 \niface  =  tessngIFace ( ) \nTESSNG 仿真子接口 \nsimuiface  =  iface . simuInterface ( ) \nsimuiface . startSimu ( ) \n\n \n Ø  def pauseSimu(self) -> bool: ... \n 暂停仿真 \n 举例： \n simuiface . pauseSimu ( ) \n \n Ø  def stopSimu(self) -> bool: ... \n 停止仿真运行 \n 举例： \n  simuiface . stopSimu ( ) \n \n Ø  def pauseSimuOrNot(self) -> None: ... \n 暂停或恢复仿真。如果当前处于仿真运行状态，此方法暂停仿真，如果当前处于暂停状态，此方法继续仿真 \n 举例： \n  simuiface . pauseSimuOrNot ( ) \n \n Ø  def isRunning(self) -> bool: ... \n 仿真是否在进行 \n Ø  def isPausing(self) -> bool: ... \n 仿真是否处于暂停状态 \n Ø  def isRecordTrace(self) -> bool: ... \n 仿真是否记录车辆轨迹 \n Ø  def setIsRecordTrace(self, bRecord:bool) -> None: ... \n 设置是否记录车辆轨迹 \n 参数： \n [in] bRecord：是否记录车辆轨迹 \n Ø  def simuIntervalScheming(self) -> int: ... \n 预期仿真时长，即仿真设置窗口设置的仿真时间 \n \n Ø  def setSimuIntervalScheming(self, interval:int) -> None: ... \n 设置预期仿真时长 \n 参数： \n [in] interval：预期仿真时长，默认单位：秒 \n Ø  def simuAccuracy(self) -> int: ... \n 获取仿真精度 \n Ø  def setSimuAccuracy(self, accuracy:int) -> None: ... \n 设置仿真精度，即每秒计算次数 \n 参数： \n [in] accuracy：每秒计算次数 \n Ø  def acceMultiples(self) -> int: ... \n 获取加速倍数 \n Ø  def setAcceMultiples(self, multiples:int) -> None: ... \n 设置加速倍数 \n 参数： \n [in] multiples 加速倍数 \n Ø  def setThreadCount(self, count:int) -> None: ... \n 设置工作线程数 \n Ø  def batchNumber(self) -> int: ... \n 当前仿真批次 \n Ø  def batchIntervalReally(self) -> float: ... \n 当前批次实际时间 \n Ø  def batchNumber(self) -> int: ... \n 当前批次 \n Ø  def startMSecsSinceEpoch(self) -> int: ... \n 获取仿真开始的现实时间 \n Ø  def stopMSecsSinceEpoch(self) -> int: ... \n 仿真结束的现实时间 \n Ø  def simuTimeIntervalWithAcceMutiples(self) -> int: ... \n 获取当前已仿真时间 \n Ø  def delayTimeOnBatchNumber(self, batchNumber:int) -> int: ... \n 仿真到指定批次时总延误，单位：毫秒； \n 在算力不足的情况下，存在仿真计算每一个周期所需时间大于设置周期时间的情况，造成延误。 \n 参数： \n [in] batchNumber：仿真批次 \n 返回值：仿真到batchNumber批次时的总延误 \n Ø  def vehiCountTotal(self) -> int: ... \n 车辆总数，包括已创建尚未进入路网的车辆、正在运行的车辆、已驶出路网的车辆 \n Ø  def vehiCountRunning(self) -> int: ... \n 正在运行车辆数 \n Ø  def getVehicle(self, vehiId:int) -> Tessng.IVehicle: ... \n 根据车辆ID获取车辆对象 \n 参数： \n [in] vehiId：车辆ID \n Ø  def allVehiStarted(self) -> typing.List: ... \n 所有正在运行车辆 \n Ø  def allVehicle(self) -> typing.List: ... \n 所有车辆，包括已创建尚未进入路网的车辆、正在运行的车辆、已驶出路网的车辆 \n Ø  def getVehisStatus(self) -> typing.List: ... \n 获取所有正在运行的车辆状态，包括轨迹 \n 返回：车辆状态（包括轨迹）Online.VehicleStatus列表 \n 举例： \nTESSNG 顶层接口 \niface  =  tessngIFace ( ) \nTESSNG 仿真子接口 \nsimuiface  =  iface . simuInterface ( ) \n当前正在运行车辆列表 \nvehis  =  simuiface . allVehiStarted ( ) \n\n \n Ø  def getVehiTrace(self, vehiId:int) -> typing.List: ... \n 获取指定车辆运行轨迹 \n 参数： \n [in] vehiId：车辆ID \n 返回：车辆运行轨迹，即Online.VehiclePosition列表 \n Ø  def getSignalPhasesColor(self) -> typing.List: ... \n 获取当前所有信号灯组相位颜色 \n 返回:当前相位颜色Online.SignalPhaseColo列表，包括各相位当前颜色设置的时间和已持续时间。 \n Ø  def getVehisInfoCollected(self) -> typing.List: ... \n 获取当前完成穿越车辆数据采集器的所有车辆信息 \n 返回：采集的车辆信息列表。数据结构Online::VehiInfoCollected在文件Plugin/_datastruct.h中定义。 \n 举例： \nTESSNG 顶层接口 \niface  =  tessngIFace ( ) \nTESSNG 仿真子接口 \nsimuiface  =  iface . simuInterface ( ) \n获取当前仿真时间完成穿越采集器的所有车辆信息 \nlVehiInfo  =  simuiface . getVehisInfoCollected ( ) \n\n \n Ø  def getVehisInfoAggregated(self) -> typing.List: ... \n 获取最近集计时间段内采集器采集的所有车辆集计信息 \n 返回：采集器集计数据Online.VehiInfoAggregated列表 \n Ø  def getVehisQueueCounted(self) -> typing.List: ... \n 获取当前排队计数器计数的车辆排队信息 \n 返回：车辆排队信息Online.VehiQueueCounted列表 \n Ø  def getVehisQueueAggregated(self) -> typing.List: ... \n 获取最近集计时间段内排队计数器集计数据 \n 返回：排队计数器集计数据Online.VehiQueueAggregated列表 \n Ø  def getVehisTravelDetected(self) -> typing.List: ... \n ​    获取当前行程时间检测器完成的行程时间检测信息 \n 返回：行程时间检测器数据Online.VehiTravelDetected列表 \n Ø  def getVehisTravelAggregated(self) -> typing.List: ... \n 获取最近集计时间段内行程时间检测器集计数据 \n 返回：行程时间集计数据Online.VehiTravelAggregated列表 \n Ø  def createGVehicle(self, dynaVehi:Tessng.Online.DynaVehiParam) -> Tessng.IVehicle: ... \n 动态创建车辆 \n 参数: \n [in]: dynaVehi：动态车辆信息 \n 举例： \n在指定车道和位置动态加载车辆(示例：在0,1,2车道不同位置动态加载车辆) \ndvp_lane0  =  Online . DynaVehiParam ( ) \ndvp_lane1  =  Online . DynaVehiParam ( ) \ndvp_lane2  =  Online . DynaVehiParam ( ) \ndvp_lane0 . vehiTypeCode  =   1 \ndvp_lane1 . vehiTypeCode  =   2 \ndvp_lane2 . vehiTypeCode  =   3 \ndvp_lane0 . roadId  =  link3 . id ( ) \ndvp_lane1 . roadId  =  link3 . id ( ) \ndvp_lane2 . roadId  =  link4 . id ( ) \ndvp_lane0 . laneNumber  =   0 \ndvp_lane1 . laneNumber  =   1 \ndvp_lane2 . laneNumber  =   2 \ndvp_lane0 . dist  =  m2p ( 50 ) \ndvp_lane1 . dist  =  m2p ( 100 ) \ndvp_lane2 . dist  =  m2p ( 50 ) \ndvp_lane0 . speed  =   20 \ndvp_lane0 . speed  =   30 \ndvp_lane0 . speed  =   40 \ndvp_lane0 . color  =   "#FF0000" \ndvp_lane1 . color  =   "#008000" \ndvp_lane2 . color  =   "#0000FF" \nvehi_lane0  =  simuiface . createGVehicle ( dvp_lane0 ) \nvehi_lane1  =  simuiface . createGVehicle ( dvp_lane1 ) \nvehi_lane2  =  simuiface . createGVehicle ( dvp_lane2 ) \n\n \n Ø  def createBus(self, pBusLine:Tessng.IBusLine, startSimuDateTime:float) -> Tessng.IVehicle: ... \n 动态创建公交车 \n 参数： \n [in] pBusLine：公交线路 \n [in] startSimuDateTime：发车时间，单位毫秒 \n 举例： \n 动态创建公交车 \nbus  =  tessngIFace ( ) . simuInterface ( ) . createBus ( busLine ,   10   *   1000 ) \n\n \n Ø  def catchSnapshotAsString(self) -> str: ... \n 创建快照，需要分布式组件支持 \n Ø  def loadSnapshotFromString(self, data:str) -> bool: ... \n 加载快照，需要分布式组件支持 \n 参数： \n [in] data：快照数据 \n Ø  def stopVehicleDriving(self, pVehicle:Tessng.IVehicle) -> None: ... \n 停止指定车辆的仿真运行，车辆被移出路网 \n 参数： \n [in] pVehicle：车辆对象 \n 举例： \nL5路段车辆行驶至离路段终点50m处被移出路网 \n if  vehi . roadId ( )   ==   5 : \n    vehi_currentDistToEnd  =  vehi . vehicleDriving ( ) . distToEndpoint ( True ) \n     if  p2m ( vehi_currentDistToEnd )   <   50 : \n        simuiface . stopVehicleDriving ( vehi ) \n\n \n Ø  def vehisInLink(self, linkId:int) -> typing.List: ... \n 指定ID路段上的车辆 \n 参数 \n [in] linkId：路段ID \n 返回：车辆列表 \n 举例： \n class   IVehicle ( ) : \n\t #。。。 \n     def   vehisInLink ( self ,  linkid ) : \nTESSNG 顶层接口 \n    iface  =  tessngIFace ( ) \nTESSNG 仿真子接口 \n    simuiface  =  iface . simuInterface ( ) \nID等于1路段上车辆 \n    vehis  =  iface . simuInterface ( ) . vehisInLink ( 1 ) \n\t return  List ( ) \n\n \n Ø  def vehisInLane(self, laneId:int) -> typing.List: ... \n 指定ID车道上的车辆 \n 参数： \n [in] laneId：车道ID \n 返回：车辆列表 \n Ø  def vehisInConnector(self, connectorId:int) -> typing.List: ... \n 指定ID连接段上的车辆 \n 参数： \n [in] connectorId：连接段ID \n 返回：车辆列表 \n Ø  def vehisInLaneConnector(self, connectorId:int, fromLaneId:int, toLaneId:int) -> typing.List: ... \n 指定连接段ID及上游车道ID和下游车道ID相关“车道连接”上的车辆 \n 参数： \n [in] connectorId: 连接段ID \n [in] fromLaneId：上游车道ID \n [in] toLaneId：下游车道ID \n 4.3.  GuiInterface \n GuiInterface是TessInterface的子接口， 通过此接口可以访问控制TESSNG主窗体，在主窗体上创建菜单、自定义窗体等。 \n Ø  def mainWindow(self) -> PySide2.QtWidgets.QMainWindow: ... \n 获取TESS NG主窗体 \n 5. 自定义插件TessPlugin \n TessPlugin是用户开发的插件顶级接口，下面有三个子接口：PyCustomerNet、PyCustomerSimulator、CustomerGui。TESS NG通过这三个子接口分别在路网、仿真过程、窗体这三个方面与用户插件进行交互。 \n 获取插件顶层接口的方法：tessngPlugin()。 \n 虽然用户可以通过接口TessInterface下的三个子接口访问控制TESS NG的路网、仿真过程及窗体，但用户只能调用TESS NG接口方法，不能深入接口方法内部改变运行逻辑。通过实现接口TessPlugin子接口的方法，用户可以在TESS NG的方法内部施加影响，改变运行逻辑。 \n TessPlugin下的子接口PyCustomerNet、PyCustomerSimulator可以让用户较多地参于加载路网及仿真过程，改变TESSNG内部运行逻辑。比如，通过实现PyCustomerNet、PyCustomerSimulator接口方法可以让用户加载路网后进行必要的处理，点击仿真按钮后根据需要确定是否继续仿真或者放弃，还可以在仿真过程对部分或全部车辆的速度施加影响，主动干预车辆的自由变道，等等。 \n 插件的三个子接口PyCustomerNet、PyCustomerSimulator、CustomerGui的所有方法都有默认实现，用户可以根据需要实现其中部分方法或全部方法，这些方法都由TESSNG在加载并初始化插件、打开路网前后、仿真前、仿真过程中、仿真结束后进行调用，正是通过TESS NG对这些接口方法的调用达到控制或影响TESS NG运行的目的。 \n 由于插件接口方法调用的场景、目的都不一样，为了尽可尽可能统一对插件接口方法理解，很多方法采用如下结构形式： \n def   method ( self ,  outParam : type )   - >   bool \n \n TESS NG在调用这些方法时作以下理解：如果返加值为False，视为用户没有反应，忽略。如果返回值为True，表明用户有反应，这时再视参数outParam值进行处理。举范例中的一个例子，曹安路上的车辆排成方正，飞机后的车辆速度重新设置，保持与飞机相同的速度。PyCustomerSimulator的子类MySimulator实现了reSetSpeed方法如下： \n def   ref_reSetSpeed ( self ,  vehi ,  ref_inOutSpeed ) : \n    tmpId  =  vehi . id ( )   %   100000 \n    roadName  =  vehi . roadName ( ) \n     if  roadName  ==   "曹安公路" : \n         if  tmpId  ==   1 : \n            self . mrSpeedOfPlane  =  vehi . currSpeed ( ) \n         elif  tmpId  >=   2   and  tmpId  <=  self . mrSquareVehiCount : \n            ref_inOutSpeed . value  =  self . mrSpeedOfPlane\n         return   True \n     return   False \n\n \n TESS NG在计算车辆的速度后会调用插件的reSetSpeed方法，如果该方法返回True，视插件对此方法作出响应，这时再用outSpeed值取代原先计算的车速。 \n 下面对PyCustomerNet、PyCustomerSimulator两个子接口进行说明 \n 5.1. PyCustomerNet \n PyCustomerNet是TessPlugin子接口，用户实现这个接口，TESSNG在加载路网前后会调用用户实现的接口方法。范例在加载临时路网后创建路段、连接段和发车点。TESSNG在绘制部分路网元素时也会调用PyCustomerNet实现类相关方法。范例通过实现方法labelNameAndFont让部分路段和连接段用路段名（默认为ID）绘制标签。 \n 下面对PyCustomerNet接口方法作详细解释。 \n Ø  def ref_netFileSuffix(self, ref_suffix:Tessng.objstring) -> bool: ... \n 路网文件后缀，由用户通过参数suffix设置 \n 参数： \n [out] suffix：路网文件后缀名 \n Ø  def customerTableDDL(self) -> typing.Dict: ... \n 添加用户设计的表 \n 返回：用户数据库的表定义map，key为表名，value为表的定义 \n Ø  def insertCustomerData(self) -> None: ... \n 插入用户插件创建的表数据 \n Ø  def deleteCustomerData(self) -> None: ... \n 删除用户插件创建的表数据 \n Ø  def beforeLoadNet(self) -> None: ... \n 打开路网前调用，用户可以通过此方法在加载路网前作必要的初始化准备工作 \n Ø  def afterLoadNet(self) -> None: ... \n 加载路网后调用。 \n 举例： \n ​    范例加载路网后读路段数，如果路段数为0创建路段、连接段和发车点，创建完成后根据参数\'__simuafterload\'值决定是否启动仿真： \n def   afterLoadNet ( self ) : \n代表TESS NG的接口 \n    iface  =  tessngIFace ( ) \n代表TESS NG的路网子接口 \n    netiface  =  iface . netInterface ( ) \n获取路段数 \n    count  =  netiface . linkCount ( ) \n     if ( count  ==   0 ) : \n        self . createNet ( ) \n\n \n  \n \n Ø  def linkType(self, lType:typing.Sequence) -> bool: ... \n 路段类型 \n 参数： \n [out] lType：用户定义的路段类型列表 \n Ø  def laneType(self, lType:typing.Sequence) -> bool: ... \n 车道类型 \n 参数： \n [out] lType：用户定义的车道类型列表 \n Ø  def linkBuildGLanes(self, pILink:Tessng.ILink) -> bool: ... \n 创建车道 \n 参数： \n [in] pILink：路段对象 \n 返回：如果返回True，表示用户已创建了车道，TESSNG不再创建 \n Ø  def isPermitForCustDraw(self) -> bool: ... \n 在绘制路网过程中是否允许调用客户绘制逻辑，默认为False。本方法的目的是在python环境减少不必要的对python代码调用，消除对运行效率的负面影响。可参数范例。 \n Ø  def linkBrushColor(self, linkId:int, color:PySide2.QtGui.QColor) -> bool: ... \n 路段笔刷颜色 \n 参数： \n [in] linkId：路段ID \n [out] color：笔刷颜色 \n 返回：如果返回False，TESSNG会忽略，否则用color颜色绘制路段 \n Ø  def paint(self, itemType:int, itemId:int, painter:PySide2.QtGui.QPainter) -> bool: ... \n 绘制路网元素 \n 参数： \n [in] itemType：路网元素类型，在包NetItemType中定义 \n [in] itemId：路网元素ID \n [in] painter：QPainter对象 \n 返回：如果返回True，TESS NG认为插件已绘制，TESS NG不再绘制，否则TESS NG进行绘制。 \n Ø  def linkBrushAndPen(self, linkId:int, brush:PySide2.QtGui.QBrush, pen:PySide2.QtGui.QPen) -> bool: ... \n 根据指定ID设置绘制路段的笔刷。 \n 参数： \n [in] linkId：路段ID \n [out] brush：绘刷 \n [out] pen：绘笔 \n 返回：False 忽略，True 用brush及pen参数绘制ID等于linkId的路段。 \n Ø  def laneBrushAndPen(self, laneId:int, brush:PySide2.QtGui.QBrush, pen:PySide2.QtGui.QPen) -> bool: ... \n 根据指定车道ID设置绘制车道的笔刷。 \n [in] laneId：车道ID \n [out] brush：绘刷 \n [out] pen：绘笔 \n 返回：False 忽略，True 用brush及pen参数绘制ID等于laneId的车道 \n Ø  def connectorAreaBrushColor(self, connAreaId:int, color:PySide2.QtGui.QColor) -> bool: ... \n 面域笔刷颜色 \n 参数： \n [in] connAreaId：面域ID \n [out] color：笔刷颜色 \n 返回：False：忽略，True：TESSNG用color绘制面域 \n Ø  def connectorAreaBrushAndPen(self, connAreaId:int, brush:PySide2.QtGui.QBrush, pen:PySide2.QtGui.QPen) -> bool: ... \n 根据指定面域ID设置绘制面域的笔刷。 \n [in] connAreaId：面域ID \n [out] brush：绘刷 \n [out] pen：绘笔 \n 返回：False 忽略，True 用brush及pen参数绘制ID等于connAreaId的面域 \n Ø  def ref_labelNameAndFont(self, itemType:int, itemId:int, ref_outPropName:Tessng.objint, ref_outFontSize:Tessng.objreal) -> None: ... \n 根据路网元素类型及ID确定用标签用ID或名称作为绘制内容。 \n 参数： \n [in] itemType：路段元素类型，类型常量在文件Plugin/_netitemtype.h中定义； \n [in] itemId：路网元素ID； \n [out] outPropName：枚举值，在文件Plugin/_netitem.h中定义，如果赋值GraphicsItemPropName::Id，则用ID作为绘制内容，如果赋值GraphicsItemPropName::Name，则用路网元素名作为绘制内容； \n [out] outFontSize：字体大小，单位：米。假设车道宽度是3米，如果赋给outFontSize的值是6，绘出的文字将占用两个车道的宽度。 \n 返回：False 忽略，True 则根据设定的outPropName 值确定用ID或名称绘制标签，并且用指定大小绘制。 \n 举例： \n 范例中的路段和连接段的标签内容部分是名称，部分是ID。 \n def   ref_labelNameAndFont ( self ,  itemType ,  itemId ,  ref_outPropName ,  ref_outFontSize ) : \n代表TESS NG的接口 \n    iface  =  tessngIFace ( ) \n代表TESS NG仿真子接口 \n    simuiface  =  iface . simuInterface ( ) \n如果仿真正在进行，设置ref_outPropName.value等于GraphicsItemPropName.None_，路段和车道都不绘制标签 \n     if  simuiface . isRunning ( ) : \n        ref_outPropName . value  =  GraphicsItemPropName . None_\n         return \n默认绘制ID \n    ref_outPropName . value  =  GraphicsItemPropName . Id\n标签大小为6米 \n    ref_outFontSize . value  =   6 \n如果是连接段一律绘制名称 \n     if  itemType  ==  NetItemType . GConnectorType : \n        ref_outPropName . value  =  GraphicsItemPropName . Name\n     elif  itemType  ==  NetItemType . GLinkType : \n         if  itemId  ==   1   or  itemId  ==   5   or  itemId  ==   6 : \n            ref_outPropName . value  =  GraphicsItemPropName . Name\n\n \n Ø  def isDrawLinkCenterLine(self, linkId:int) -> bool: ... \n 是否绘制路段中心线 \n 参数： \n [in] linkId：路段ID； \n 返回值：True绘制，False不绘制。 \n Ø  def isDrawLinkCorner(self, linkId:int) -> bool: ... \n 是否绘制路段四个拐角的圆形和正方型。 \n 参数： \n [in] linkId：路段ID； \n 返回值：True绘制，False不绘制。 \n Ø  def isDrawLaneCenterLine(self, laneId:int) -> bool: ... \n 是否绘制车道中心线。 \n 参数： \n [in] laneId：车道ID； \n 返回值：True绘制，False不绘制。 \n Ø  def afterViewKeyReleaseEvent(self, event:PySide2.QtGui.QKeyEvent) -> None: ... \n QGraphicsView的keyReleaseEvent事件后行为，用户可以根据自己的需要接入键盘事件，实现自身业务逻辑。 \n Ø  def afterViewMouseDoubleClickEvent(self, event:PySide2.QtGui.QMouseEvent) -> None: ... \n QGraphicsView的mouseDoubleClickEvent事件后的行为，用户可以根据自己的需要编写鼠标双击事件响应代码。 \n Ø  def afterViewMouseMoveEvent(self, event:PySide2.QtGui.QMouseEvent) -> None: ... \n QGraphicsView的mouseMoveEvent事件后的行为，用户可以根据自己的需要编写鼠标移动事件响应代码。 \n Ø  def afterViewMousePressEvent(self, event:PySide2.QtGui.QMouseEvent) -> None: ... \n QGraphicsView的mousePressEvent事件后的行为，用户可以根据自己的需要编写鼠标点击事件响应代码。 \n Ø  def afterViewMouseReleaseEvent(self, event:PySide2.QtGui.QMouseEvent) -> None: ... \n QGraphicsView的mouseReleaseEvent事件后的行为，用户可以根据自己的需要编写鼠标释放事件响应代码。 \n Ø  def afterViewResizeEvent(self, event:PySide2.QtGui.QResizeEvent) -> None: ... \n QGraphicsView的resizeEvent事件后的行为，用户可以根据自己的需要编写屏幕缩放事件响应代码。 \n Ø  def afterViewWheelEvent(self, event:PySide2.QtGui.QWheelEvent) -> None: ... \n QGraphicsView的鼠标滚动事件后的行为，用户可以根据自己的需要编写鼠标滚动事件后响应代码。 \n Ø  def afterViewScrollContentsBy(self, dx:int, dy:int) -> None: ... \n QGraphicsView滚动条移动事件后的行为，用户可以根据自己的需要实现视窗滚动条移动后响应代码。 \n 5.2. PyCustomerSimulator \n PyCustomerSimulator是TessPlugin子接口，用户实现这个接口。TESS NG在仿真前后以及仿真过程中调用这个接口实现的方法，达到与插件交互的目的，用户可以通过这个接口的实现在仿真前后以及仿真运算过程中对TESS NG的仿真进行干预，大到可以控制仿真是否进行，小到干预某一车辆的驾驶行为。 \n 用户对车辆驾驶行为的干预主要通过车速和变道来实现。对车速的干预主要有以下几个方法： \n 1）重新计算车速； \n 2）修改路段限速； \n 3）重新计算加速度； \n 4）修改跟驰安全距离和安全时距、重新设置前车距 \n 以上几个方法的优先级依次降低。在没有插件干预的情况下，车辆行驶的最高速度受到道路的最高速度限制；在有插件的干预下，如果直接修改了车速，则不受道路最高限速的限制。 \n 下面对PyCustomerSimulator接口方法作详细解释。 \n Ø  def ref_beforeStart(self, ref_keepOn:Tessng.objbool) -> None: ... \n 仿真前的准备。如果需要，用户可通过设置keepOn为False来放弃仿真。 \n 参数： \n [out] ref_keepOn：是否继续，默认为True； \n Ø  def afterStart(self) -> None: ... \n 启动仿真后的操作。这个方法的处理时间尽量短，否则影响仿真时长的计算，因为调用这个方法的过程仿真已经计时。仿真前的操作尽可能放到beforeStart方法中处理。 \n Ø  def afterStop(self) -> None: ... \n Ø 仿真结束后的操作，如果需要，用户可以在此方法释放资源。 def calcDynaDispatchParameters(self) -> typing.List: ... \n 计算动态发车信息，用来修改发车点相关参数，此方法可以用来实现实时动态仿真。 \n 返回：动态发车信息Online.DispatchInterval列表。 \n 举例： \n def   calcDynaDispatchParameters ( self ) : \nTESSNG 顶层接口 \n        iface  =  tessngIFace ( ) \n        currSimuTime  =  iface . simuInterface ( ) . simuTimeIntervalWithAcceMutiples ( ) \n         if  currSimuTime  %   ( 10   *   1000 )   ==   0   and  currSimuTime  <   60   *   1000 : \nID等于5路段上车辆 \n            lVehi  =  iface . simuInterface ( ) . vehisInLink ( 5 ) \n             if  currSimuTime  <   1000   *   30   or   len ( lVehi )   >   0 : \n                 return   [ ] \n             else : \n                now  =  datetime . now ( ) \n当前时间秒 \n                currSecs  =  now . hour  *   3600   +  now . minute  *   60   +  now . second\n仿真10秒后且ID等于1的路段上车辆数为0，则为ID等于1的发车点增加发车间隔 \n                di  =  Online . DispatchInterval ( ) \n动作控制案例-机动车交叉口L5路段发车点ID为11 \n                di . dispatchId  =   11 \n                di . fromTime  =  currSecs\n                di . toTime  =  di . fromTime  +   300   -   1 \n                di . vehiCount  =   300 \n                di . mlVehicleConsDetail  =   [ Online . VehiComposition ( 1 ,   60 ) ,  Online . VehiComposition ( 2 ,   40 ) ] \n                 print ( "流量修改完成，当前时间为{}" . format ( currSimuTime ) ) \n                 return   [ di ] \n         return   [ ] \n\n \n Ø  def calcDynaFlowRatioParameters(self) -> typing.List: ... \n 一个或一次数据来源里保存的所有决策点在一个时间间隔的路径流量分配信息，此方法可以用来实现实时动态仿真。 \n 返回：决策点流量分配信息Online.DecipointFlowRatioByInterval列表。 \n Ø  def calcDynaSignalContralParameters(self) -> typing.List: ... \n 一个或一次数据来源里保存的所有信号灯组的信号控制信息。 \n 返回：信号灯组控制参数Online.SignalContralParam列表。 \n Ø  def initVehicle(self, pIVehicle:Tessng.IVehicle) -> None: ... \n 初始化车辆，此方法在车辆起动加入路网时被调用，用户可以在这个方法里调用IVehicle的setVehiType方法重新设置类型，调用initLane或initLaneConnector方法对车辆的车道序号、起始位置、车辆大小进行初始化。 \n 参数： \n [in] pIVehicle：车辆对象 \n 举例： \n def   initVehicle ( self ,  vehi ) : \n        tmpId  =  vehi . id ( )   %   100000 \n车辆所在路段名或连接段名 \n        roadName  =  vehi . roadName ( ) \n车辆所在路段ID或连接段ID \n        roadId  =  vehi . roadId ( ) \n         if  roadName  ==   \'曹安公路\' : \n             #飞机 \n             if  tmpId  ==   1 : \n                vehi . setVehiType ( 12 ) \n                vehi . initLane ( 3 ,  m2p ( 105 ) ,   0 ) \n             #工程车 \n             elif  tmpId  >= 2   and  tmpId  <= 8 : \n                vehi . setVehiType ( 8 ) \n                vehi . initLane ( ( tmpId  -   2 )   %   7 ,  m2p ( 80 ) ,   0 ) \n             #消防车 \n             elif  tmpId  >= 9   and  tmpId  <= 15 : \n                vehi . setVehiType ( 9 ) \n                vehi . initLane ( ( tmpId  -   2 )   %   7 ,  m2p ( 65 ) ,   0 ) \n             #消防车 \n             elif  tmpId  >= 16   and  tmpId  <= 22 : \n                vehi . setVehiType ( 10 ) \n                vehi . initLane ( ( tmpId  -   2 )   %   7 ,  m2p ( 50 ) ,   0 ) \n             #最后两队列小车 \n             elif  tmpId  ==   23 : \n                vehi . setVehiType ( 1 ) \n                vehi . initLane ( 1 ,  m2p ( 35 ) ,   0 ) \n             elif  tmpId  ==   24 : \n                vehi . setVehiType ( 1 ) \n                vehi . initLane ( 5 ,  m2p ( 35 ) ,   0 ) \n             elif  tmpId  ==   25 : \n                vehi . setVehiType ( 1 ) \n                vehi . initLane ( 1 ,  m2p ( 20 ) ,   0 ) \n             elif  tmpId  ==   26 : \n                vehi . setVehiType ( 1 ) \n                vehi . initLane ( 5 ,  m2p ( 20 ) ,   0 ) \n             elif  tmpId  ==   27 : \n                vehi . setVehiType ( 1 ) \n                vehi . initLane ( 1 ,  m2p ( 5 ) ,   0 ) \n             elif  tmpId  ==   28 : \n                vehi . setVehiType ( 1 ) \n                vehi . initLane ( 5 ,  m2p ( 5 ) ,   0 ) \n最后两列小车的长度设为一样长，这个很重要，如果车长不一样长，导致的前车距就不一样，会使它们变道轨迹长度不一样，就会步调不一致。 \n             if  tmpId  >=   23   and  tmpId  <=   28 : \n                vehi . setLength ( m2p ( 4.5 ) ,   True ) \n此处宽度设置为True，表示车身宽度也等比例变化，如果为False，则车身宽度不变 \n         return   True \n\n\n \n Ø  def ref_beforeCreateGVehiclesForBusLine(self, pBusLine:Tessng.IBusLine, ref_keepOn:Tessng.objbool) -> None: ... \n 创建公交车辆前的预处理 \n 参数： \n [in] pBusLine：公交线路 \n [in、out] keepOn：是否继续执行创建公交车辆，如果KeepOn被赋值为False，TESSNG不再创建公交车辆 \n Ø  def shape(self, pIVehicle:Tessng.IVehicle, outShape:PySide2.QtGui.QPainterPath) -> bool: ... \n 车辆外型，用户可以用此方法改变车辆外观 \n 参数： \n [in] pIVehicle：车辆对象 \n [in、out] outShape：车辆外形 \n 返回：如果返回False，则忽略 \n Ø  def ref_beforeCalcLampColor(self, ref_keepOn:Tessng.objbool) -> bool: ... \n 计算信号灯色前的预处理。 \n 参数： \n [in、out] 是否断续计算 \n 返回：如果返回 True，且keepOn等于False，TESS NG不再计算信号灯色。 \n Ø  def calcLampColor(self, pSignalLamp:Tessng.ISignalLamp) -> bool: ... \n 计算信号灯的灯色。ISignalLamp有设置信号灯颜色方法。 \n 参数： \n [in] pSignalLamp：信号灯对象； \n 返回值： \n 如果返回True，表明用户已修改了信号灯颜色，TESS NG不再计算灯色。 \n Ø  def reCalcToLeftLane(self, pIVehicle:Tessng.IVehicle) -> bool: ... \n 计算是否要左强制变道，TESS NG在移动车辆时计算强制左变道的条件，当条件不足时让插件计算，如果返回值为True，强制左变道。 \n 参数： \n [in] pIVehicle：车辆对象。 \n 返回：False：忽略，True：强制左变道 \n Ø  def reCalcToRightLane(self, pIVehicle:Tessng.IVehicle) -> bool: ... \n 计算是否要右强制变道，TESS NG在先移动车辆时计算强制右变道的条件，当条件不足时让插件计算，如果返回值为True，强制右变道。 \n 参数： \n [in] pIVehicle：车辆对象 \n 返回：False：忽略，True：强制右变道 \n Ø  def ref_beforeToLeftFreely(self, pIVehicle:Tessng.IVehicle, ref_keepOn:Tessng.objbool) -> None: ... \n 自由左变道前处理，如果bKeepOn被赋值为False，TESSNG不再计算是否自由左变道 \n 参数： \n [in] pIVehicle：车辆 \n [in、out] bKeepOn：是否继续，如果设为False，不再计算是否可以左自由变道 \n Ø  def ref_beforeToRightFreely(self, pIVehicle:Tessng.IVehicle, ref_keepOn:Tessng.objbool) -> None: ... \n 自由右变道前处理，如果bKeepOn被赋值为False，TESSNG不再计算是否自由右变道 \n [in] pIVehicle：车辆 \n [in、out] bKeepOn：是否继续，如果设为False，不再计算是否可以右自由变道 \n 举例： \n自由左变道前预处理 \n def   ref_beforeToLeftFreely ( self ,  pIVehicle ,  ref_keepOn ) : \n    if  pIVehicle . roadId ( ) == 9 : \n       pIVehicle . setColor ( "#0000FF" ) \n自由右变道前预处理 \n def   ref_beforeToRightFreely ( self ,  pIVehicle ,  ref_keepOn ) : \n     if  pIVehicle . roadId ( )   ==   9 : \n        pIVehicle . setColor ( "#EE0000" ) \n\n \n Ø  def reCalcToLeftFreely(self, pIVehicle:Tessng.IVehicle) -> bool: ... \n 重新计算是否要自由左变道。TESS NG在移动车辆时计算自由左变道条件，当条件不足时让插件计算，如果返回值为True，自由左变道。 \n [in] pIVehicle：车辆 \n 返回：False：忽略，True：左自由変道，但在一些特殊场景也会放弃变道，如危险 \n Ø  def reCalcToRightFreely(self, pIVehicle:Tessng.IVehicle) -> bool: ... \n 重新计算是否要自由右变道。TESS NG在移动车辆时计算自由右变道条件，当条件不足时让插件计算，如果返回值为True，自由右变道。 \n 参数： \n [in] pIVehicle：车辆对象 \n 返回：False：忽略，True：右自由変道，但在一些特殊场景也会放弃变道，如危险 \n Ø  def reCalcDismissChangeLane(self, pIVehicle:Tessng.IVehicle) -> bool: ... \n 重新计算是否撤销变道，通过pIVehicle获取到自身条件数据及当前周边环境条件数据，判断是否要撤销正在进行的变道。 \n 参数： \n [in] pIVehicle：车辆 \n 返回：True 如果当前变道完成度不超过三分之一，则撤销当前变道行为；False 忽略。 \n Ø  def ref_reCalcdesirSpeed(self, pIVehicle:Tessng.IVehicle, ref_desirSpeed:Tessng.objreal) -> bool: ... \n 重新计算期望速度，TESS NG调用此方法时将车辆当前期望速度赋给inOutDesirSpeed，如果需要，用户可在此方法重新计算期望速度，并赋给inOutDesirSpeed。 \n 参数： \n [in] pIVehicle：车辆对象； \n [in、out] inOutDesirSpeed：重新设置前后的车辆期望速度，单位：像素/秒； \n 举例： \n def   ref_reCalcdesirSpeed ( self ,  vehi ,  ref_desirSpeed ) : \n当前已仿真时间，单位：毫秒 \n        iface  =  tessngIFace ( ) \n        currSimuTime  =  iface . simuInterface ( ) . simuTimeIntervalWithAcceMutiples ( ) \n         if   ( currSimuTime  >   30   *   1000 ) : \n             return   False \n        roadId  =  vehi . roadId ( ) \n以动作控制案例 - 机动车交叉口路网的L5路段为例 \n         if  roadId  ==   5 : \nL5离路段起点50-150m处为减速区 \n            distToStart  =  vehi . vehicleDriving ( ) . distToStartPoint ( ) \n             if  m2p ( 50 )   <  distToStart  <  m2p ( 100 )   and  vehi . lane : \n                 if  vehi . vehicleTypeCode ( )   ==   1 : \n                    ref_desirSpeed . value  =  m2p ( 10 ) \n                     print ( vehi . id ( ) ,   "的小客车进入减速区，减速为10，当前速度为" ,  vehi . currSpeed ( ) ) \n                 elif  vehi . vehicleTypeCode ( )   ==   2 : \n                     print ( vehi . id ( ) ,   "的大客车进入减速区，减速为5，当前速度为" ,  vehi . currSpeed ( ) ) \n                    ref_desirSpeed . value  =  m2p ( 5 ) \n                 return   True \n         return   False \n \n Ø  def ref_reSetFollowingType(self, pIVehicle:Tessng.IVehicle, ref_outTypeValue:Tessng.objint) -> bool: ... \n 重新设置跟驰类型，在计算加速度的过程中被调用 \n 参数： \n [in] pIVehicle：车辆对象 \n [out] outTypeValue：跟驰类型，0：停车，1: 正常，5：急减速，6：急加速，7：汇入, 8：穿越，9：协作减速，10：协作加速，11：减速待转，12：加速待转 \n 返回：False：忽略，True：用outTypeValue设置车辆驾驶行为的跟驰类型 \n Ø  def ref_reSetFollowingParam(self, pIVehicle:Tessng.IVehicle, ref_inOutSafeInterval:Tessng.objreal, ref_inOutSafeDistance:Tessng.objreal) -> bool: ... \n 重新设置跟驰模型的安全间距和安全时距。 \n 参数： \n [in] pIVehicle：车辆对象； \n [in、out] inOutSafeInterval：安全时距，单位：秒； \n [in、out] inOutSafeDistance：安全间距：单位：像素； \n 举例： \n 范例将第二条连接段上的车辆跟车安全间距设为 30 米。代码如下：\n def   ref_reSetFollowingParam ( self ,  vehi ,  ref_inOutSi ,  ref_inOutSd ) : \n    roadName  =  vehi . roadName ( ) \n     if  roadName  ==   "连接段2" : \n        ref_inOutSd . value  =  m2p ( 30 ) ; \n         return   True \n     return   False \n\n \n Ø  def reSetFollowingParams(self) -> typing.List: ... \n 重新设置跟驰模型参数，影响所有车辆。此方法被TESS NG调用，用返回的跟驰模型取代当前仿真正在采用的跟驰模型。 \n 返回：跟驰参数列表，可对机动车和非机车的跟驰参数重新设置，设置以后会被采用，直到被新的参数所代替。 \n Ø  def ref_reSetDistanceFront(self, pIVehicle:Tessng.IVehicle, distance:Tessng.objreal, s0:Tessng.objreal) -> bool: ... \n 重新设置前车距及安全跟车距离 \n 参数： \n [in] pIVehicle：车辆对象 \n [in、out] distance：当前车辆与前车的距离，默认单位：像素 \n [in、out] s0：安全跟车距离，默认单位：像素 \n 返回：False：忽略，True：用distance设置前车距，用s0设置安全跟车距离 \n Ø  def ref_reSetSpeed(self, pIVehicle:Tessng.IVehicle, ref_inOutSpeed:Tessng.objreal) -> bool: ... \n 重新设置车速。TESS NG调用此方法时将当前计算所得车速赋给 ref_inOutSpeed.value ，如果需要，用户可以在此方法重新计算车速并赋给ref_inOutSpeed.value。 \n 参数： \n [in] pIVehicle：车辆对象； \n [in、out] inOutSpeed：重新计算前后的车速，单位：像素/秒。 \n 返回：False：忽略，True：用inOutSpeed设置车辆当前速度 \n 举例： \n def   ref_reSetSpeed ( self ,  vehi ,  ref_inOutSpeed ) : \n尝试让L12等待的车辆强制闯红灯 \n     if  vehi . roadId ( )   ==   12 : \n        vehi_currentSpeed  =  vehi . currSpeed ( ) \n        vehi_currentDistToEnd  =  vehi . vehicleDriving ( ) . distToEndpoint ( True ) \n         if  m2p ( vehi_currentSpeed )   <   20   and  p2m ( vehi_currentDistToEnd )   <   3 : \n            random_number  =  random . random ( ) \n             if  random_number  <   0.3 : \n                ref_inOutSpeed . value  =  m2p ( 15 ) \n                 print ( vehi . id ( ) ,  vehi . currSpeed ( ) ) \n                 return   True \n强制L5路段车辆在距路段终点50m处停车 \n    vehi_currentDistToEnd  =  vehi . vehicleDriving ( ) . distToEndpoint ( True ) \n     if  p2m ( vehi_currentDistToEnd )   <   50 : \n         if  vehi . roadId ( )   ==   5 : \n            ref_inOutSpeed . value  =  m2p ( 0 ) \n             return   True \n\n \n Ø  def ref_beforeMergingToLane(self, pIVehicle:Tessng.IVehicle, ref_keepOn:Tessng.objbool) -> None: ... \n 在“车道连接”上汇入车道前的计算，可以让TESS NG放弃汇入计算，以便于用户实现自己的汇入逻辑。 \n 参数： \n [in] pIVehicle：车辆对象； \n [out]  ref_keepOn ：是否放弃，默认为True。赋值 ref_keepOn.value 为False，TESSNG则放弃汇入。 \n Ø  def afterOneStep(self) -> None: ... \n 一个计算批次后的计算，这个时候所有车辆都完成同一个批次的计算。通常在这个方法中获取所有车辆轨迹、检测器数据、进行必要的小计等。在这个方法中进行的计算基本不影响仿真结果的一致性，但效率不高，如果计算量大对仿真效率会有影响。 \n 举例： \n 范例中在这个方法中获取车辆对象和轨迹等信息。代码如下：\n def   afterOneStep ( self ) : \n     #= == == == == == =以下是获取一些仿真过程数据的方法 == == == == == == \nTESSNG 顶层接口 \n    iface  =  tessngIFace ( ) \nTESSNG 仿真子接口 \n    simuiface  =  iface . simuInterface ( ) \nTESSNG 路网子接口 \n    netiface  =  iface . netInterface ( ) \n当前仿真计算批次 \n    batchNum  =  simuiface . batchNumber ( ) \n当前已仿真时间，单位：毫秒 \n    simuTime  =  simuiface . simuTimeIntervalWithAcceMutiples ( ) \n开始仿真的现实时间 \n    startRealtime  =  simuiface . startMSecsSinceEpoch ( ) \n当前正在运行车辆列表 \n    vehis  =  simuiface . allVehiStarted ( ) \n\n \n Ø  def duringOneStep(self) -> None: ... \n 该方法在各个线程进行同一批次的计算过程中调用，这时存在部分车辆计算完成，部分车辆仍在计算过程中。这个方法中的计算不够安全，但效率较高。 \n Ø  def ref_beforeNextRoad(self, pIVehicle:Tessng.IVehicle, pRoad:PySide2.QtWidgets.QGraphicsItem, ref_keepOn:Tessng.objbool) -> None: ... \n 计算下一道路前的处理 \n 参数： \n [in] pIVehicle：车辆 \n [in] pRoad：暂不使用 \n [in、out] keepOn：是否继续计算，False：TESSNG不再计算后续道路，True：继续计算 \n Ø  def candidateLaneConnectors(self, pIVehicle:Tessng.IVehicle, lInLC:typing.Sequence) -> typing.List: ... \n 计算当车辆离开路段时后续可经过的“车道连接”, lInLC是已计算出的当前车道可达的所有“车道连接”，用户可以从中筛选或重新计算。如果车辆有路径，则忽略 \n 参数： \n [in] pIVehicle 当前车辆 \n [in] lInLC：TESS NG计算出的后续可达“车道连接”列表 \n 返回：用户确定的后续可达“车道连接”列表 \n Ø  def candidateLaneConnectors(self, pIVehicle:Tessng.IVehicle, lInLC:typing.Sequence) -> typing.List: ... \n 计算车辆后续“车道连接”，此时车辆正跨出当前路段，将驶到pCurrLaneConnector。此方法可以改变后续“车道连接”。如果返回的“车道连接”为空，TESSNG会忽略此方法的调用。如果返回的“车道连接”不在原有路径上，或者此方法设置了新路径且新路径不经过返回的“车道连接”，TESSNG调用此方法后会将路径设为空。 \n Ø  def ref_beforeNextPoint(self, pIVehicle:Tessng.IVehicle, ref_keepOn:Tessng.objbool) -> None: ... \n 计算车辆移动到下一点前的操作，用户可以通过此方法让TESSNG放弃对指定车辆到下一点的计算。 \n 参数： \n [in] pIVehicle：车辆对象； \n [out] keepOn：是否继续, 默认为True，如果keepOn赋值为False，TESSNG放弃移动到下一点的计算，但不移出路网。 \n Ø  def calcLimitedLaneNumber(self, pIVehicle:Tessng.IVehicle) -> typing.List: ... \n 计算限制车道序号：如管制、危险等，最右侧编号为0。 \n 参数： \n [in] pVehicle：车辆对象； \n 返回：车道序号集，保存车辆不可以驰入的车道序号。 \n Ø  def ref_calcSpeedLimitByLane(self, pILink:Tessng.ILink, laneNumber:int, ref_outSpeed:Tessng.objreal) -> bool: ... \n 由车道确定的限制车速（最高速度, 公里/小时） \n 参数： \n [in] pILink：路段 \n [in] laneNumber：,laneNumber:车道序号，最右侧编号为0 \n [in、out] outSpeed：限制速度，公里/小时 \n 返回：False：忽略，True：用outSpeed限制指定车道速度 \n Ø  def ref_calcMaxLimitedSpeed(self, pIVehicle:Tessng.IVehicle, ref_inOutLimitedSpeed:Tessng.objreal) -> bool: ... \n 重新计算车辆当前最大限速，不受道路限速的影响。在没有插件干预的情况下，车辆速度大于道路限度时按道路最大限速行驶，在此方法的干预下，可以提高限速，让车辆大于道路限速行驶。 \n TESS NG调用此方法时将当前最高限速赋给inOutLimitedSpeed，如果需要，用户可以在方法里重新设置inOutLimitedSpeed值。 \n 参数： \n [in] pIVehicle：车辆对象； \n [in、out] inOutLimitedSpeed：计算前后的最大限速，单位：像素/秒。 \n 返回结果： \n ​    如果返回False则忽略，否则取inOutLimitedSpeed为当前道路最大限速。 \n Ø  def ref_calcDistToEventObj(self, pIVehicle:Tessng.IVehicle, ref_dist:Tessng.objreal) -> bool: ... \n 计算到事件对象距离，如到事故区、施工区的距离 \n 参数： \n [in] pIVehicle：车辆 \n [in、out] dist：车辆中心点距事件对象距离，单位像素 \n 返回：False：忽略，True：用dist计算安全变道距离等 \n Ø  def ref_calcChangeLaneSafeDist(self, pIVehicle:Tessng.IVehicle, ref_dist:Tessng.objreal) -> bool: ... \n 计算安全变道距离。 \n 参数： \n [in] pIVehicle：车辆，计算该车辆安全变道距离。 \n [in、out] dist：安全变道距离，dist.value保存了TESSNG已算得的安全变道距离，用户可以在此方法重新计算。 \n Ø 返回：False 忽略，True TESS NG取dist.value作为安全变道距离 def afterStep(self, pIVehicle:Tessng.IVehicle) -> None: ... \n 完成车辆pIVehicle“一个批次计算”后的处理。可以在此获取车辆当前信息，如当前道路、位置、方向角、速度、期望速度、前后左右车辆等。 \n 参数： \n [in] pIVehicle：车辆对象； \n Ø  def ref_calcAcce(self, pIVehicle:Tessng.IVehicle, ref_acce:Tessng.objreal) -> bool: ... \n 计算加速度 \n [in] pIVehicle：待计算加速度的车辆 \n [out] ref_acce：计算结果，单位：像素/秒^2 \n 返回：False 忽略，True 则TES NG用调用此方法后所得ref_acce.value作为当前车辆的加速度。 \n Ø  def isCalcVehicleVector3D(self) -> bool: ... \n 是否计算车辆3D属性，如欧拉角等 \n Ø  def calcVehicleEuler(self, pIVehicle:Tessng.IVehicle, bPosiDire:bool=...) -> PySide2.QtGui.QVector3D: ... \n 计算欧拉角 \n 参数： \n [in] pIVehicle：车辆对象 \n [in] bPosiDire：车头方向是否正向计算，如果bPosiDire为False则反向计算 \n Ø  def ref_reSetAcce(self, pIVehicle:Tessng.IVehicle, ref_inOutAcce:Tessng.objreal) -> bool: ... \n 重新计算加速度。TESS NG调用此方法时将当前计算所得加速度赋给inOutAcce，如果需要，用户可以在此方法中重新计算加速度并赋给ref_inOutAcce.value。 \n 参数： \n [in] pIVehicle：车辆对象 \n [in、out] ref_inOutAcce：重新计算前及计算后的加速度，单位：像素/秒^2 \n 返回结果： \n 如果返回False则忽略，如果返回True，则将inOutAcce作为当前加速度。 \n 举例： \n def   ref_reSetAcce ( self ,  vehi ,  inOutAcce ) : \n    roadName  =  vehi . roadName ( ) \n     if  roadName  ==   "连接段1" : \n         if  vehi . currSpeed ( )   >  m2p ( 20   /   3.6 ) : \n            inOutAcce . value  =  m2p ( - 5 ) \n             return   True \n         elif  vehi . currSpeed ( )   >  m2p ( 20   /   3.6 ) : \n            inOutAcce . value  =  m2p ( - 1 ) \n             return   True \n     return   False \n\n \n Ø  def afterCalcTracingType(self, pIVehicle:Tessng.IVehicle) -> None: ... \n 计算跟驰类型后处理 \n 参数： \n [in] pIVehicle：车辆 \n Ø  def travelOnChangingTrace(self, pIVehicle:Tessng.IVehicle) -> bool: ... \n 是否在变轨迹上 \n 参数： \n [in] pIVehicle：车辆 \n Ø  def travelOnChangingTrace(self, pIVehicle:Tessng.IVehicle) -> bool: ... \n 获取车辆边界矩形 \n 参数： \n [in] pIVehicle：车辆对象 \n [out] outRect：车辆边界矩形 \n Ø  def shape(self, pIVehicle:Tessng.IVehicle, outShape:PySide2.QtGui.QPainterPath) -> bool: ... \n 获取车辆图形路径 \n 参数： \n [in] pIVehicle：车辆对象 \n [out] outShape：车辆形状路径 \n Ø  def rePaintVehicle(self, pIVehicle:Tessng.IVehicle, painter:PySide2.QtGui.QPainter) -> None: ... \n 绘制车辆 \n 参数： \n [in] pIVehicle：车辆对象 \n [in] painter：笔刷 \n 返回：True，TESSNG不再绘制车辆，False，TESSNG认为用户没有绘制，继续绘制 \n Ø  def ref_paintVehicleWithRotation(self, pIVehicle:Tessng.IVehicle, painter:PySide2.QtGui.QPainter, ref_inOutRotation:Tessng.objreal) -> bool: ... \n 绘制车辆，绘制前将车辆对象旋转指定角度 \n 参数： \n [in] pIVehicle：车辆对象 \n [in] painter：QPainter指针 \n [in] inOutRotation：旋转的角度 \n 返回：True，TESSNG不再绘制车辆，False，TESSNG认为用户没有绘制，继续绘制 \n Ø  def ref_paintVehicleWithRotation(self, pIVehicle:Tessng.IVehicle, painter:PySide2.QtGui.QPainter, ref_inOutRotation:Tessng.objreal) -> bool: ... \n 以设定的角度绘制车辆 \n 参数： \n [in] pIVehicle，车辆对象 \n [in] painter：QT的QPainter对象 \n [in、out] ref_inOutRotation：角度，TESS NG在调用此方法时传入车辆的旋转角，这个方法内部可以修改这个角度，改变TESS NG计算结果 \n 返回：如果True，TESS NG不再绘制，否则TESS NG按原有规则绘制车辆。 \n Ø  def paintVehicle(self, pIVehicle:Tessng.IVehicle, painter:PySide2.QtGui.QPainter) -> bool: ... \n 绘制车辆 \n 参数： \n [in] pIVehicle，要重绘制的车辆 \n [in] painter，QPainter对象 \n 返回：如果返回True，TESS NG不再绘制，否则TESS NG按原有规则绘制车辆。 \n Ø  def rePaintVehicle(self, pIVehicle:Tessng.IVehicle, painter:PySide2.QtGui.QPainter) -> None: ... \n 绘制车辆后的再绘制，客户可在此方法增加绘制内容 \n 参数： \n [in] pIVehicle，要重绘制的车辆 \n [in] painter，QPainter对象 \n Ø  def ref_reCalcAngle(self, pIVehicle:Tessng.IVehicle, ref_outAngle:Tessng.objreal) -> bool: ... \n 重新计算角度。TESS NG调用此方法时将当前算得的角度赋给ref_outAngle.value，如果需要，用户可在此方法中重新计算车辆角度，并将算得的角度赋给ref_outAngle.value。 \n 参数： \n [in] pIVehicle：车辆对象； \n [in、out] ref_outAngle：重新计算前后角度，北向0度顺时针，一周360度 \n Ø  def isStopDriving(self, pIVehicle:Tessng.IVehicle) -> bool: ... \n 是否停车运行，TESS NG在计算下一点位置后调用，判断是否要停止车辆pIVehicle的运行。 \n 参数： \n [in] pIVehicle：车辆对象； \n 返回结果： \n 如果返回True，则停止该车辆运行，移出路网。 \n Ø  def isPassbyEventZone(self, pIVehicle:Tessng.IVehicle) -> bool: ... \n 是否正在经过事件区（如：施工区、限速区等） \n 参数： \n [in] pIVehicle：车辆对象 \n Ø  def beforeStopVehicle(self, pIVehicle:Tessng.IVehicle) -> None: ... \n 车辆停止运行前的处理。 \n 参数： \n [in] pIVehicle：车辆对象； \n Ø  def afterStopVehicle(self, pIVehicle:Tessng.IVehicle) -> None: ... \n 车辆停止运行后的处理 \n 参数： \n [in]pIVehicle：车辆对象。 \n Ø  def recoveredSnapshot(self) -> bool: ... \n 用快照恢复仿真场景，分布式环境可用 \n Ø  def vehiRunInfo(self, pIVehicle:Tessng.IVehicle) -> str: ... \n 车辆运行信息。在仿真过程中如果某辆车被单选，按ctrl+i 会弹出被单选车辆运行状态，文本框中的“其它信息”就是当前方法返回的字符串，开发者可以借此对实现的业务逻辑进行了解，用户可以了解仿真过程中具体车辆的一些特殊信息。 \n \n \n'},{title:"快速入门",frontmatter:{},regularPath:"/document/V3.x/Python3/quickstart.html",relativePath:"document/V3.x/Python3/quickstart.md",key:"v-3d8fb96f",path:"/document/V3.x/Python3/quickstart.html",headers:[{level:2,title:"1. 运行DEMO",slug:"_1-运行demo"},{level:2,title:"2. 用户新建案例",slug:"_2-用户新建案例"},{level:3,title:"2.1. 启动TESSNG",slug:"_2-1-启动tessng"},{level:3,title:"2.2. 通过插件与TESSNG 交互",slug:"_2-2-通过插件与tessng-交互"},{level:2,title:"3 度量单位",slug:"_3-度量单位"},{level:2,title:"4 范例简介",slug:"_4-范例简介"},{level:3,title:"4.1 增加窗体控件",slug:"_4-1-增加窗体控件"},{level:3,title:"4.2 改变路网元素展示内容",slug:"_4-2-改变路网元素展示内容"},{level:3,title:"4.3 控制车辆驾驶行为",slug:"_4-3-控制车辆驾驶行为"},{level:3,title:"4.4 在路段和连接段中间任意位置发车",slug:"_4-4-在路段和连接段中间任意位置发车"}],content:" 快速入门 \n 1. 运行DEMO \n 用户需要运行安装包目录下的TESS PythonAPI demo下的具体的demo文件时（如\\TESS_PythonAPI_demo\\2车辆发车及属性更改），直接将demo文件夹所有文件复制替换掉TESS_PythonAPI_EXAMPLE文件夹中的对应文件，并核查文件路径即可运行执行main.py函数。 注：如果路径错误，会加载默认路网及出现其它异常情况。 \n \n ​    注：运行过程中提示缺少其它Python环境模块，可直接按提示安装即可。 \n 2. 用户新建案例 \n 第一步：用户可选择指定位置新建pycharm工程，； \n 第二步：将TESS_PythonAPI_EXAMPLE文件下的文件复制到新的空工程中； \n 第三步：根据业务按需修改其中的main.py, MyNet.py, MyPlugin.py, MySimulator.py \n 2.1和2.2章节简单介绍了实现几个定制化需求的修改方式 \n 2.1. 启动TESSNG \n 2.1.1 简单启动 \n 在main.py文件中加入简单几行代码就可以启动TESSSNG。代码如下： \n-*- coding: utf-8 -*- \n import  os\n from  pathlib  import  Path\n import  sys\n\n from  PySide2 . QtCore  import   * \n from  PySide2 . QtGui  import   * \n from  PySide2 . QtWidgets  import   * \n\n from  Tessng  import   * \n\n if  __name__  ==   '__main__' : \n    app  =  QApplication ( ) \n\n    workspace  =  os . fspath ( Path ( __file__ ) . resolve ( ) . parent ) \n    config  =   { '__workspace' : workspace  } \n \n    factory  =  TessngFactory ( ) \n    tessng  =  factory . build ( None ,  config ) \n     if  tessng  is   None : \n        sys . exit ( 0 ) \n     else : \n        sys . exit ( app . exec_ ( ) ) \n\n\n \n 结果如下： \n 2.1.2 指定路网启动 \n 在config中增加\"__simuafterload\"属性，如下 \n config  =   { '__workspace' : workspace , \n         '__netfilepath' : \"C:/TESSNG_3.0.1/Example/上海虹桥枢纽.tess\"  \n        } \n 2.1.3 启动并自动进行仿真 \n config  =   { '__workspace' : workspace , \n         '__netfilepath' : \"C:/TESSNG_3.0.1/Example/上海虹桥枢纽.tess\" , \n         '__simuafterload' : True \n } \n\n \n 其中'__simuafterload'设为True指定TESS NG加载路网后自动开始仿真计算。 \n 2.2. 通过插件与TESSNG 交互 \n 与TESS NG交互、对TESS NG施加控制，主要是通过插件方式实现的，插件有两种形式：1）可以是符合TESS NG插件规范的动态连接库，由TESS NG启动时加载；2）也可以直接在内存中创建。后者是TESS NG 二次开发的主要技术路线，二种技术路线不能同时使用。 \n 范例：./TESS_PythonAPI_EXAMPLE/MyPlugin.py \n 范例通过插件在TESS NG主窗体增加一个QDockWidget对象， QDockWidget对象包含一个用户创建的QWidget，在这个QWidget上可以创建按钮、信息框等组件，用于和TESS NG进行交互。将QDockWidget对象加入TESS NG主窗体是通过调用TessInterface子接口GuiInterface的方法addDockWidgetToMainWindow来实现的 \n def   initGui ( self ) : \n在TESS NG主界面上增加 QDockWidget对象 \n    self . examleWindow  =  TESS_API_EXAMPLE ( ) \n\n    iface  =  tessngIFace ( ) \n    win  =  iface . guiInterface ( ) . mainWindow ( ) \n\n    dockWidget  =  QDockWidget ( \"自定义与TESS NG交互界面\" ,  win ) \n    dockWidget . setObjectName ( \"mainDockWidget\" ) \n    dockWidget . setFeatures ( QDockWidget . NoDockWidgetFeatures ) \n    dockWidget . setAllowedAreas ( Qt . LeftDockWidgetArea ) \n    dockWidget . setWidget ( self . examleWindow . centralWidget ( ) ) \n    iface . guiInterface ( ) . addDockWidgetToMainWindow ( Qt . DockWidgetArea ( 1 ) ,  dockWidget ) \n    \t\t               \n\n \n 范例实例化插件后作为参数传给工厂类的build方法得到TESS NG实例，代码如下： \n  plugin  =  MyPlugin ( ) \n factory  =  TessngFactory ( ) \n tessng  =  factory . build ( plugin ,  config ) \n \n 启动TESS NG结果如下图： \n \n 范例在自定义界面上按放了几个按钮，其中按钮“启动仿真”的槽函数里用下列代码启动仿真： \n def   startSimu ( self ) : \n    iface  =  tessngIFace ( ) \n     if   not  iface : \n         return \n     if   not  iface . simuInterface ( ) . isRunning ( )   or  iface . simuInterface ( ) . isPausing ( ) : \n        iface . simuInterface ( ) . startSimu ( ) \n 3 度量单位 \n TESS NG在运行过程涉及的度量单位有多种，有基本的度量单位，如：长度单位，复合型度量单位，如：速度单位。在启动TESS NG后需要设置长度基本度量单位，默认基本度量单位是像素，像素与米存在转换关系，这个关系通常在画路网前设置像素比时就已确定。 \n 在二次开发过程中需要根据说明将大部分与长度有关的单位改成像素。像素与米制的相互转换方法如下，默认情况下1个像素表示1米： \n 米制转换像素：def m2p(value:float) -> float: \n 像素转换米制：def p2m(value:float) -> float: \n 4 范例简介 \n 范例“TESS NG PYAPI EXAMPLE”展示了在窗体界面、路网展示、仿真过程三个方面如何对TESS NG施加影响。 \n 范例启动时从内存加载插件，企业版用户可成功加载插件，之后加载路网。如果成功加载了插件，插件会检测路网上的路段数，如果没有路段会创建几条路段、连接段以及发车点。之后TESS NG 再根据config参数\"__simuafterload\"值决定是否起动仿真。 \n 4.1 增加窗体控件 \n 在窗体界面上的影响：范例在窗体放置一个QDockWidget对象，QDockWidget对象包含了自定义界面，自定义界面上放置一些控件，通过这些控件操作TESS NG的路网加载、仿真运行，如下图如示： \n 4.2 改变路网元素展示内容 \n 在路网展示上的影响：范例在加载路网后判断路网上是否有路段，如果没有则创建几条路段、连接段和几个发车点。其中名称为“曹安路”的路段的标签显示路段名，其它路段标签显示ID，连接段标签显示的都是名称，如下图所示： \n 4.3 控制车辆驾驶行为 \n 在仿真过程上的影响：范例在仿真过程的影响包括初始化车辆车道、位置、速度，从几个方面改变车辆速度，以及控制自由变道，如下图所示： \n \n 通过车辆对象设置车辆长度函数setLength(self, len:float, bRestWidth:bool)中，如果bRestWidth为“True”，则车身宽度会随长度等比例变化，如果设为False，则车身宽度不会改变。 \n 4.4 在路段和连接段中间任意位置发车 \n 在仿真过程上的影响：范例在仿真过程动态从路段及连接段上距起点一定距离的位置发车，无需发车点发车，如下图所示： \n \n \n"},{title:"软件安装",frontmatter:{},regularPath:"/document/V3.x/Python3/install.html",relativePath:"document/V3.x/Python3/install.md",key:"v-b7443a36",path:"/document/V3.x/Python3/install.html",headers:[{level:2,title:"下载",slug:"下载"},{level:2,title:"安装与激活",slug:"安装与激活"}],content:" 软件安装 \n 下载 \n win10系统:  TESSNG V3.1 二次开发包 \n Linux系统：  TESSNG V3.1 二次开发包 \n 安装与激活 \n 第一步：下载TESSNG Python二次开发包  TESSNG V3.1 二次开发包 并解压 \n \n TESS NG python 接口开发包有两个关键文件（Windows环境）：Tessng.pyd，以及附加动态库shiboken2.abi3.dll。另外Tessng.pyi是文本形式的描述文件，在开发时提供方便，但不是必须的。 \n 开发包主要文件截图如下： \n \n 第二步：安装python3.6环境和IDE（建议使用pycharm） \n 第三步：pycharm打开下载的二次开发包中的范例工程TESS_PythonAPI_EXAMPLE \n \n 第四步：激活TESSNG软件license \n 用户在首次使用二次开发包时需要激活软件；激活方式：运行main.py函数，弹出激活弹窗，选择激活license文件。具体激活界面如下： \n \n 试用用户与首次激活软件流程相同，采用安装包的Cert文件夹下的JidaTraffic_key激活即可。 \n ​    软件的试用期为30天，以前激活过软件的客户激活V3.0.1版本时重新延长30天试用期（识别激活电脑的物理地址）。试用期结束后将无法调用接口的二次开发功能。 \n ​    商业版用户使用不受限制。 \n 第五步： 激活后关闭弹窗，重新运行main.py即可运行范例 \n \n \n"},{title:"高频接口实战",frontmatter:{},regularPath:"/document/V3.x/Python3/turorials.html",relativePath:"document/V3.x/Python3/turorials.md",key:"v-06286ab6",path:"/document/V3.x/Python3/turorials.html",headers:[{level:2,title:"1. 界面交互",slug:"_1-界面交互"},{level:3,title:"1.1. 增加菜单及菜单项",slug:"_1-1-增加菜单及菜单项"},{level:3,title:"1.2. 自定义车辆显示内容",slug:"_1-2-自定义车辆显示内容"},{level:2,title:"2. 路网编辑",slug:"_2-路网编辑"},{level:3,title:"2.1.  代码新建路网",slug:"_2-1-代码新建路网"},{level:3,title:"2.2. 地图转TESSNG路网",slug:"_2-2-地图转tessng路网"},{level:3,title:"2.3. 修改路网元素",slug:"_2-3-修改路网元素"},{level:3,title:"2.4. 编辑路网附着物",slug:"_2-4-编辑路网附着物"},{level:2,title:"3. 信控编辑",slug:"_3-信控编辑"},{level:3,title:"3.1. 新建信号灯",slug:"_3-1-新建信号灯"},{level:3,title:"3.2.  编辑信号灯组",slug:"_3-2-编辑信号灯组"},{level:3,title:"3.3. 信控方案下发",slug:"_3-3-信控方案下发"},{level:2,title:"4. 需求加载与管理",slug:"_4-需求加载与管理"},{level:3,title:"4.1. 流量加载",slug:"_4-1-流量加载"},{level:3,title:"4.2.  路径管理",slug:"_4-2-路径管理"},{level:3,title:"4.3.  路径重构",slug:"_4-3-路径重构"},{level:2,title:"5. 仿真运行",slug:"_5-仿真运行"},{level:3,title:"5.1. 倒车入库",slug:"_5-1-倒车入库"},{level:3,title:"5.2. 循环仿真",slug:"_5-2-循环仿真"},{level:3,title:"5.3. 流程控制",slug:"_5-3-流程控制"},{level:3,title:"5.4.  动作控制",slug:"_5-4-动作控制"},{level:3,title:"5.5. 管控手段控制",slug:"_5-5-管控手段控制"},{level:2,title:"6. 底层模型修改",slug:"_6-底层模型修改"},{level:3,title:"6.1 跟驰模型",slug:"_6-1-跟驰模型"},{level:3,title:"6.2. 换道模型",slug:"_6-2-换道模型"},{level:3,title:"6.3. 冲突交互模型",slug:"_6-3-冲突交互模型"},{level:3,title:"6.4.  车辆汇入模型",slug:"_6-4-车辆汇入模型"},{level:3,title:"6.5. 车辆穿越模型",slug:"_6-5-车辆穿越模型"},{level:2,title:"7. 仿真输出",slug:"_7-仿真输出"},{level:3,title:"7.1. 获取路网几何线性数据",slug:"_7-1-获取路网几何线性数据"},{level:3,title:"7.2. 检测器|采集器|排队计数器编辑",slug:"_7-2-检测器-采集器-排队计数器编辑"},{level:3,title:"7.3. 输出控制",slug:"_7-3-输出控制"},{level:2,title:"8. 特殊应用场景",slug:"_8-特殊应用场景"},{level:3,title:"8.1. 公交系统",slug:"_8-1-公交系统"}],content:" 高频接口实战 \n \n \n \n 大类 \n 功能点 \n \n \n \n \n 仿真窗口操作 \n 自定义菜单栏；自定义按钮事件 \n \n \n 路网编辑 \n 新建路网 \n \n \n \n 获取，修改，删除路网 \n \n \n \n 新增编辑路网上的附着物 \n \n \n 信控编辑 \n 新建信号灯 \n \n \n \n 信号灯组新建，编辑 \n \n \n \n 双环信控方案下发 \n \n \n 需求加载与管理 \n 流量加载 \n \n \n \n 路径管理 \n \n \n \n 路径重构 \n \n \n 仿真运行 \n 流程控制 \n \n \n \n 动作控制 \n \n \n \n 管控手段控制 \n \n \n 底层模型修改 \n 跟驰模型 \n \n \n \n 换道模型 \n \n \n \n 冲突交互模型（暂不支持二次开发） \n \n \n \n 车辆汇入模型 \n \n \n \n 车辆穿越模型 \n \n \n 仿真输出 \n 检测器编辑 \n \n \n \n 采集器编辑 \n \n \n \n 输出控制 \n \n \n 特殊应用场景 \n 公交系统 \n \n \n \n 行人系统 \n \n \n \n 停车场系统 \n \n \n \n 收费站系统 \n \n \n \n 本章所有接口范例均可在安装包《安装目录/SecondaryDevCases/SecondaryDevCases.py》中找到；用户可以到GitHub下载 \n GitHub \n 官网下载 : \n 1. 界面交互 \n 1.1. 增加菜单及菜单项 \n 利用TessInterface及其子接口实现，可以在插件init()方法中创建菜单及菜单项，代码如下: \n用户插件，继承自TessPlugin \n class   MyPlugin ( TessPlugin ) : \n     def   __init__ ( self ) : \n         super ( MyPlugin ,  self ) . __init__ ( ) \n        self . mNetInf  =   None \n        self . mSimuInf  =   None \n\n     def   initGui ( self ) : \n在TESS NG主界面上增加 QDockWidget对象 \n        self . examleWindow  =  TESS_API_EXAMPLE ( ) \n\n        iface  =  tessngIFace ( ) \n        win  =  iface . guiInterface ( ) . mainWindow ( ) \n\n        dockWidget  =  QDockWidget ( \"自定义与TESS NG交互界面\" ,  win ) \n        dockWidget . setObjectName ( \"mainDockWidget\" ) \n        dockWidget . setFeatures ( QDockWidget . NoDockWidgetFeatures ) \n        dockWidget . setAllowedAreas ( Qt . LeftDockWidgetArea ) \n        dockWidget . setWidget ( self . examleWindow . centralWidget ( ) ) \n        iface . guiInterface ( ) . addDockWidgetToMainWindow ( Qt . DockWidgetArea ( 1 ) ,  dockWidget ) \n增加菜单及菜单项 \n        menuBar  =  iface . guiInterface ( ) . menuBar ( ) \n        menu  =  QMenu ( menuBar ) \n        menu . setObjectName ( \"menuExample\" ) \n        menuBar . addAction ( menu . menuAction ( ) ) \n        menu . setTitle ( \"范例菜单\" ) \n        actionOk  =  menu . addAction ( \"范例菜单项\" ) \n        actionOk . setCheckable ( True ) \n        actionOk . triggered . connect ( self . examleWindow . isOk ) \n \n 结果如下： \n \n 点击菜单项“范例菜单项”弹出对话框：\n 1.2. 自定义车辆显示内容 \n 下图展示自动驾驶车辆，雷达探测范围100米。 \n \n 为了增添车辆展示的内容，可以实现接口PyCustomerSimulator的如下方法 \n def rePaintVehicle(self, pIVehicle:Tessng.IVehicle, painter:PySide2.QtGui.QPainter) -> None: ... \n 2. 路网编辑 \n 2.1.  代码新建路网 \n 1- 新建link \n 2- 新建connector \n def   createNet ( self ) : \n代表TESS NG的接口 \n    iface  =  tessngIFace ( ) \n代表TESS NG的路网子接口 \n    netiface  =  iface . netInterface ( ) \n第一条路段 \n    startPoint  =  QPointF ( m2p ( - 300 ) ,   0 ) \n    endPoint  =  QPointF ( m2p ( 300 ) ,   0 ) \n    lPoint  =   [ startPoint ,  endPoint ] \n    link1  =  netiface . createLink ( lPoint ,   7 ,   \"曹安公路\" ) \n     if  link1  is   not   None : \n车道列表 \n        lanes  =  link1 . lanes ( ) \n打印该路段所有车道ID列表 \n         print ( \"曹安公路车道ID列表：\" ,   [ lane . id ( )   for  lane  in  lanes ] ) \n在当前路段创建发车点 \n        dp  =  netiface . createDispatchPoint ( link1 ) \n         if  dp  !=   None : \n设置发车间隔，含车型组成、时间间隔、发车数 \n            dp . addDispatchInterval ( 1 ,   2 ,   28 ) \n第二条路段 \n    startPoint  =  QPointF ( m2p ( - 300 ) ,  m2p ( - 25 ) ) \n    endPoint  =  QPointF ( m2p ( 300 ) ,  m2p ( - 25 ) ) \n    lPoint  =   [ startPoint ,  endPoint ] \n    link2  =  netiface . createLink ( lPoint ,   7 ,   \"次干道\" ) \n     if  link2  is   not   None : \n        dp  =  netiface . createDispatchPoint ( link2 ) \n         if  dp  is   not   None : \n            dp . addDispatchInterval ( 1 ,   3600 ,   3600 ) \n将外侧车道设为”公交专用道\" \n        lanes  =  link2 . lanes ( ) \n        lanes [ 0 ] . setLaneType ( \"公交专用道\" ) \n第三条路段 \n    startPoint  =  QPointF ( m2p ( - 300 ) ,  m2p ( 25 ) ) \n    endPoint  =  QPointF ( m2p ( - 150 ) ,  m2p ( 25 ) ) \n    lPoint  =   [ startPoint ,  endPoint ] \n    link3  =  netiface . createLink ( lPoint ,   3 ) \n     if  link3  is   not   None : \n        dp  =  netiface . createDispatchPoint ( link3 ) \n         if  dp  is   not   None : \n            dp . addDispatchInterval ( 1 ,   3600 ,   3600 ) \n创建第四条路段 \n    startPoint  =  QPointF ( m2p ( - 50 ) ,  m2p ( 25 ) ) \n    endPoint  =  QPointF ( m2p ( 50 ) ,  m2p ( 25 ) ) \n    lPoint  =   [ startPoint ,  endPoint ] \n    link4  =  netiface . createLink ( lPoint ,   3 ) \n创建第五条路段 \n    startPoint  =  QPointF ( m2p ( 150 ) ,  m2p ( 25 ) ) \n    endPoint  =  QPointF ( m2p ( 300 ) ,  m2p ( 25 ) ) \n    lPoint  =   [ startPoint ,  endPoint ] \n    link5  =  netiface . createLink ( lPoint ,   3 ,   \"自定义限速路段\" ) \n     if  link5  is   not   None : \n        link5 . setLimitSpeed ( 30 ) \n创建第六条路段 \n    startPoint  =  QPointF ( m2p ( - 300 ) ,  m2p ( 50 ) ) \n    endPoint  =  QPointF ( m2p ( 300 ) ,  m2p ( 50 ) ) \n    lPoint  =   [ startPoint ,  endPoint ] \n    link6  =  netiface . createLink ( lPoint ,   3 ,   \"动态发车路段\" ) \n     if  link6  is   not   None : \n        link6 . setLimitSpeed ( 80 ) \n创建第七条路段 \n    startPoint  =  QPointF ( m2p ( - 300 ) ,  m2p ( 75 ) ) \n    endPoint  =  QPointF ( m2p ( - 250 ) ,  m2p ( 75 ) ) \n    lPoint  =   [ startPoint ,  endPoint ] \n    link7  =  netiface . createLink ( lPoint ,   3 ) \n     if  link7  is   not   None : \n        link7 . setLimitSpeed ( 80 ) \n创建第八条路段 \n    startPoint  =  QPointF ( m2p ( - 50 ) ,  m2p ( 75 ) ) \n    endPoint  =  QPointF ( m2p ( 300 ) ,  m2p ( 75 ) ) \n    lPoint  =   [ startPoint ,  endPoint ] \n    link8  =  netiface . createLink ( lPoint ,   3 ) \n     if  link8  is   not   None : \n        link8 . setLimitSpeed ( 80 ) \n创建第一条连接段 \n     if  link3  is   not   None   and  link4  is   not   None : \n        lFromLaneNumber  =   [ 1 ,   2 ,   3 ] \n        lToLaneNumber  =   [ 1 ,   2 ,   3 ] \n        conn1  =  netiface . createConnector ( link3 . id ( ) ,  link4 . id ( ) ,  lFromLaneNumber ,  lToLaneNumber ,   \"连接段1\" ,   True ) \n创建第二条连接段 \n     if  link4  is   not   None   and  link5  is   not   None : \n        lFromLaneNumber  =   [ 1 ,   2 ,   3 ] \n        lToLaneNumber  =   [ 1 ,   2 ,   3 ] \n        conn2  =  netiface . createConnector ( link4 . id ( ) ,  link5 . id ( ) ,  lFromLaneNumber ,  lToLaneNumber ,   \"连接段2\" ,   True ) \n创建第三条连接段 \n     if  link7  is   not   None   and  link8  is   not   None : \n        lFromLaneNumber  =   [ 1 ,   2 ,   3 ] \n        lToLaneNumber  =   [ 1 ,   2 ,   3 ] \n        conn3  =  netiface . createConnector ( link7 . id ( ) ,  link8 . id ( ) ,  lFromLaneNumber ,  lToLaneNumber ,   \"动态发车连接段\" , \n                                          True ) \n    routing  =  netiface . createRouting ( [ link7 ,  link8 ] ) \n     print ( routing ) \n 2.2. 地图转TESSNG路网 \n 导入opendrive， osm shapely生成tessng路网；直接使用pytessng的工具代码; \n 截图： \n \n 工具链接： pytessng \n 安装命令： \n pip  install  pytessng\n 2.3. 修改路网元素 \n 1-修改删除link编号，名称，形状，长度，宽度等属性 \n 2-修改connector的laneconnector连接关系，形状； \n 3- 获取link, connector, connectorarea, laneconnector形状，属性 \n 用户可以先获取目标对象，在修改对象属性 \n 详见 接口详解 \n 2.4. 编辑路网附着物 \n 1-新建删除车道导向箭头； \n 2-限速区：指定车道位置设置，限速区的长度，生效时间, 速度值 \n 3-施工区：根据车辆序号和位置，施工区长度新建 \n def   createworkZone ( self ) : \n     \"\"\" 创建施工区\n    :param :\n    :return:\n    \"\"\" \n创建施工区 \n    workZone  =  Online . DynaRoadWorkZoneParam ( ) \n道路ID \n    workZone . roadId  =   int ( 5 ) \n施工区名称 \n    workZone . name  =   \"施工区，限速40,持续20秒\" \n位置，距离路段或连接段起点距离，单位米 \n    workZone . location  =   50 \n施工区长度，单位米 \n    workZone . length  =   50 \n车辆经过施工区的最大车速，单位千米/小时 \n    workZone . limitSpeed  =   40 \n施工区施工时长，单位秒 \n    workZone . duration  =   20 \n施工区起始车道 \n    workZone . mlFromLaneNumber  =   [ 0 ] \n创建施工区 \n    zone  =  tessngIFace ( ) . netInterface ( ) . createRoadWorkZone ( workZone ) \n\n \n 5-事故区：根据车道序号，位置，影响范围新建 \n创建事故区 \naccidentZone  =  Online . DynaAccidentZoneParam ( ) \n道路ID \naccidentZone . roadId  =   9 \n事故区名称 \naccidentZone . name  =   \"最左侧车道发生事故\" \n位置，距离路段或连接段起点距离，单位米 \naccidentZone . location  =  m2p ( 200 ) \n事故区长度，单位米 \naccidentZone . length  =  m2p ( 50 ) \n事故区起始车道序号列表 \naccidentZone . mlFromLaneNumber = [ 2 ] \n事故等级 \naccidentZone . level  =   1 \n创建事故区 \n\n \n 6-公交站：根据车道序号，位置，长度，类型设置； \n创建公交线路 \nbusLine  =  tessngIFace ( ) . netInterface ( ) . createBusLine ( [ link10 ,  link11 ] ) \n if  busLine  is   not   None : \n   busLine . setDesirSpeed ( m2p ( 60 ) ) \n   busStation1  =  tessngIFace ( ) . netInterface ( ) . createBusStation ( link10 . lanes ( ) [ 0 ] ,  m2p ( 30 ) ,  m2p ( 50 ) , \"公交站1\" ) \n   busStation2  =  tessngIFace ( ) . netInterface ( ) . createBusStation ( link11 . lanes ( ) [ 0 ] ,  m2p ( 15 ) ,  m2p ( 50 ) , \"公交站2\" ) \n创建公交线路 \n if  busStation1  and  tessngIFace ( ) . netInterface ( ) . addBusStationToLine ( busLine ,  busStation1 ) : \n  \tbusStation1 . setType ( 2 ) \n     print ( \"公交站1已关联到公交线路\" ) \n if  busStation2  and  tessngIFace ( ) . netInterface ( ) . addBusStationToLine ( busLine ,  busStation2 ) : \n     print ( \"公交站2已关联到公交线路\" ) \n\n \n lStationLine  =  busLine . stationLines ( ) \n     if   len ( lStationLine ) > 0 : \n    stationLine  =  lStationLine [ 0 ]  \n设置车辆停靠时间(秒) \n    stationLine . setBusParkingTime ( 20 ) \n \n 详见 接口详解 \n 3. 信控编辑 \n 3.1. 新建信号灯 \n 1- 根据车道序号，位置新建信号灯 \n for  index ,  laneObj  in   enumerate ( lLaneObjects ) : \n    signalLamp  =  netiface . createSignalLamp ( signalPhase ,   \"信号灯{}\" . format ( index  +   1 ) ,  laneObj . fromLane ( ) . id ( ) , laneObj . toLane ( ) . id ( ) ,  m2p ( 2.0 ) ) \n 3.2.  编辑信号灯组 \n 2- 新建信号灯组，设置信号相位相序和灯色 \n 核心代码 \n def   edit_signal_controller ( self ) : \n     \"\"\" 信控编辑\n    :return:\n    \"\"\" \n代表TESS NG的接口 \n    iface  =  tessngIFace ( ) \n代表TESS NG的路网子接口 \n    netiface  =  iface . netInterface ( ) \n创建两条新路段和一条连接段作为示例 \n    startPoint1  =  QPointF ( m2p ( - 300 ) ,  m2p ( - 200 ) ) \n    endPoint1  =  QPointF ( m2p ( - 50 ) ,  m2p ( - 200 ) ) \n    lPoint1  =   [ startPoint1 ,  endPoint1 ] \n    link1  =  netiface . createLink ( lPoint1 ,   3 ,   \"信控编辑路段1\" ) \n\n    startPoint2  =  QPointF ( m2p ( 50 ) ,  m2p ( - 200 ) ) \n    endPoint2  =  QPointF ( m2p ( 300 ) ,  m2p ( - 200 ) ) \n    lPoint2  =   [ startPoint2 ,  endPoint2 ] \n    link2  =  netiface . createLink ( lPoint2 ,   3 ,   \"信控编辑路段2\" ) \n连接段车道连接列表 \n    lLaneObjects  =   [ ] \n     if  link1  and  link2 : \n        lFromLaneNumber  =   [ 1 ,   2 ,   3 ] \n        lToLaneNumber  =   [ 1 ,   2 ,   3 ] \n        connector  =  netiface . createConnector ( link1 . id ( ) ,  link2 . id ( ) ,  lFromLaneNumber ,  lToLaneNumber , \n                                              \"信控编辑连接段\" ,   True ) \n         if  connector : \n            lLaneObjects  =  connector . laneObjects ( ) \n             for  laneObj  in  lLaneObjects : \n                 print ( \"上游车道ID\" ,  laneObj . fromLane ( ) . id ( ) ,   \"下游车道ID\" ,  laneObj . toLane ( ) . id ( ) ) \n创建发车点 \n     if  link1 : \n        dp  =  netiface . createDispatchPoint ( link1 ) \n         if  dp : \n            dp . addDispatchInterval ( 1 ,   3600 ,   3600 ) \n创建信号灯组 \n    signalGroup  =  netiface . createSignalGroup ( \"信号灯组1\" ,   60 ,   1 ,   3600 ) \n创建相位,40秒绿灯，黄灯3秒，全红3秒 \n    red  =  Online . ColorInterval ( \"G\" ,   40 ) \n    green  =  Online . ColorInterval ( \"Y\" ,   3 ) \n    yellow  =  Online . ColorInterval ( \"R\" ,   3 ) \n    signalPhase  =  netiface . createSignalPhase ( signalGroup ,   \"信号灯组1相位1\" , \n                                              [ green ,  yellow ,  red ] ) \n创建信号灯 \n     for  index ,  laneObj  in   enumerate ( lLaneObjects ) : \n        signalLamp  =  netiface . createSignalLamp ( signalPhase ,   \"信号灯{}\" . format ( index  +   1 ) ,  laneObj . fromLane ( ) . id ( ) , \n                                               laneObj . toLane ( ) . id ( ) ,  m2p ( 2.0 ) \n 3.3. 信控方案下发 \n 3- 支持双环结构信控方案下发（前提是已正确新建信号灯；已知一个路口所有进口道的流向及车道对应的信号灯id） \n 核心代码 \n from  Tessng  import  Online\n def   double_ring_signal_control ( self ,  current_simuTime ) : \n     \"\"\" 双环信控方案下发\n    :param current_simuTime: 当前仿真时间\n    :return:\n    \"\"\" \n代表TESS NG的接口 \n    iface  =  tessngIFace ( ) \n代表TESS NG的路网子接口 \n    netiface  =  iface . netInterface ( ) \n读取方案数据 \n     with   open ( './Data/Signal_Plan_Data_1109.json' ,   'r' ,  encoding = 'utf-8' )   as  json_file : \n        signal_groups_dict  =  json . load ( json_file ) \n创建信号灯组和相位 \n     for  group_name ,  group  in  signal_groups_dict . items ( ) : \n当前灯组 \n        current_signal_group  =   None \n通过灯组名称查询到灯组 \n        all_signal_groups_lst  =  netiface . signalGroups ( ) \n         for  signal_group  in  all_signal_groups_lst : \n             if  signal_group . groupName ( )   ==  group_name : \n                current_signal_group  =  signal_group\n                 break \n         if  current_signal_group : \n            current_signal_group_phases_lst  =  current_signal_group . phases ( ) \n         else : \n             print ( \"FindError: The signalGroup not in current net.\" ) \n             break \n获取所有灯组的起始时间 \n        signal_group_startTime_lst  =   list ( group . keys ( ) ) \n         for  index ,  group_data  in   enumerate ( group . values ( ) ) : \n            start_time  =  signal_group_startTime_lst [ index ] \n            end_time  =  signal_group_startTime_lst [ index  +   1 ]   if  index  !=   len ( \n                signal_group_startTime_lst )   -   1   else   \"24:00\" \n起始时间和结束时间的秒数表示 \n            start_time_seconds  =  time_to_seconds ( start_time ) \n            end_time_seconds  =  time_to_seconds ( end_time ) \n若当前仿真时间位于当前时段内，修改当前时段信号灯组的相位 \n             if  start_time_seconds  <=  current_simuTime  <  end_time_seconds : \n                period_time  =  group_data [ 'cycle_time' ] \n                phases  =  group_data [ 'phases' ] \n修改周期 \n                current_signal_group . setPeriodTime ( int ( period_time ) ) \n                 for  phase  in  phases : \n                    phase_name  =  phase [ 'phase_name' ] \n                    phase_number  =   int ( phase [ 'phase_number' ] ) \n                    color_list  =   [ ]    # 按照红灯、绿灯、黄灯、红灯顺序计算 \n                    color_list . append ( Online . ColorInterval ( '红' ,   int ( phase [ 'start_time' ] ) ) ) \n                    color_list . append ( Online . ColorInterval ( '绿' ,   int ( phase [ 'green_time' ] ) ) ) \n                    color_list . append ( Online . ColorInterval ( '黄' ,   3 ) ) \n                     if   int ( period_time  -  phase [ 'start_time' ]   -  phase [ 'green_time' ]   -   3 )   >   0 : \n                        color_list . append ( \n                            Online . ColorInterval ( '红' , \n                                                  int ( period_time  -  phase [ 'start_time' ]   -  phase [ 'green_time' ]   -   3 ) ) ) \n当前灯组包含的相位序号 \n                    current_phase  =   None \n                     for  current_signal_group_phase  in  current_signal_group_phases_lst : \n                         if  phase_number  ==   int ( current_signal_group_phase . number ( ) ) : \n                            current_phase  =  current_signal_group_phase\n                             break \n若已存在该相位，修改相位灯色顺序，否则添加相位 \n                     if  current_phase : \n修改相位 \n                        current_phase . setColorList ( color_list ) \n                     else : \n                        signal_phase  =  netiface . createSignalPhase ( current_signal_group ,  phase_name ,  color_list ) \n设置相位序号 \n                        signal_phase . setNumber ( phase_number ) \n设置相位包含的信号灯 \n                     for  lampId  in  phase [ \"lamp_lst\" ] : \n                        lamp  =  netiface . findSignalLamp ( int ( lampId ) ) \n                         if  lamp : \n                             '''\n                            目前一个信号灯属于多个相位，相位间不交叉。因此如果要实际下发方案时，应按照仿真时间实时管理相位序号。\n                            ''' \n                            lamp . setPhaseNumber ( phase_number ) \n                         else : \n                             print ( \"FindError:未查找到信号灯:\" ,  lampId ) \n\n \n 案例效果： \n 4. 需求加载与管理 \n 4.1. 流量加载 \n 支持多种方式加载车辆，供用户灵活使用 \n 1-新建发车点，设置发车流量时间间隔；设置发车分布；设置车辆组成，车辆类型（发车点已创建后无法修改车辆组成和车辆类型，可以创建车辆组成和车辆类型后设置发车点）； \n \n \n 2-动态发车：不设置发车点，在指定车道和位置处加载车辆（一辆一辆加载） \n \n 核心代码 \n def   traffic_loading ( self ) : \n     \"\"\" 流量加载\n    :return:\n    \"\"\" \n代表TESS NG的接口 \n    iface  =  tessngIFace ( ) \n代表TESS NG的路网子接口 \n    netiface  =  iface . netInterface ( ) \n代表TESS NG的仿真子接口 \n    simuiface  =  iface . simuInterface ( ) \n\n     '''1.新建发车点''' \n创建两条新路段和一条连接段作为示例 \n    startPoint1  =  QPointF ( m2p ( - 300 ) ,  m2p ( - 180 ) ) \n    endPoint1  =  QPointF ( m2p ( - 50 ) ,  m2p ( - 180 ) ) \n    lPoint1  =   [ startPoint1 ,  endPoint1 ] \n    link1  =  netiface . createLink ( lPoint1 ,   3 ,   \"流量加载路段1\" ) \n\n    startPoint2  =  QPointF ( m2p ( 50 ) ,  m2p ( - 180 ) ) \n    endPoint2  =  QPointF ( m2p ( 300 ) ,  m2p ( - 180 ) ) \n    lPoint2  =   [ startPoint2 ,  endPoint2 ] \n    link2  =  netiface . createLink ( lPoint2 ,   3 ,   \"流量加载路段2\" ) \n连接段车道连接列表 \n    lLaneObjects  =   [ ] \n     if  link1  and  link2 : \n        lFromLaneNumber  =   [ 1 ,   2 ,   3 ] \n        lToLaneNumber  =   [ 1 ,   2 ,   3 ] \n        connector  =  netiface . createConnector ( link1 . id ( ) ,  link2 . id ( ) ,  lFromLaneNumber ,  lToLaneNumber , \n                                              \"流量加载连接段\" ,   True ) \n         if  connector : \n            lLaneObjects  =  connector . laneObjects ( ) \n             for  laneObj  in  lLaneObjects : \n                 print ( \"上游车道ID\" ,  laneObj . fromLane ( ) . id ( ) ,   \"下游车道ID\" ,  laneObj . toLane ( ) . id ( ) ) \n创建车辆组成及指定车辆类型 \n        vehiType_proportion_lst  =   [ ] \n车型组成：小客车0.3，大客车0.2，公交车0.1，货车0.4 \n        vehiType_proportion_lst . append ( Online . VehiComposition ( 1 ,   0.3 ) ) \n        vehiType_proportion_lst . append ( Online . VehiComposition ( 2 ,   0.2 ) ) \n        vehiType_proportion_lst . append ( Online . VehiComposition ( 3 ,   0.1 ) ) \n        vehiType_proportion_lst . append ( Online . VehiComposition ( 4 ,   0.4 ) ) \n        vehiCompositionID  =  netiface . createVehicleComposition ( \"动态创建车型组成\" ,  vehiType_proportion_lst ) \n         if  vehiCompositionID  !=   - 1 : \n             print ( \"车型组成创建成功，id为：\" ,  vehiCompositionID ) \n新建发车点,车型组成ID为动态创建的，600秒发300辆车 \n             if  link1 : \n                dp  =  netiface . createDispatchPoint ( link1 ) \n                 if  dp : \n                    dp . addDispatchInterval ( vehiCompositionID ,   600 ,   300 ) \n\n         '''2.动态发车''' \n创建两条新路段和一条连接段作为示例 \n        startPoint3  =  QPointF ( m2p ( - 300 ) ,  m2p ( - 160 ) ) \n        endPoint3  =  QPointF ( m2p ( - 50 ) ,  m2p ( - 160 ) ) \n        lPoint3  =   [ startPoint3 ,  endPoint3 ] \n        link3  =  netiface . createLink ( lPoint3 ,   3 ,   \"动态加载车辆段\" ) \n\n        startPoint4  =  QPointF ( m2p ( 50 ) ,  m2p ( - 160 ) ) \n        endPoint4  =  QPointF ( m2p ( 300 ) ,  m2p ( - 160 ) ) \n        lPoint4  =   [ startPoint4 ,  endPoint4 ] \n        link4  =  netiface . createLink ( lPoint4 ,   3 ,   \"动态加载车辆段\" ) \n连接段车道连接列表 \n        lLaneObjects  =   [ ] \n         if  link3  and  link4 : \n            lFromLaneNumber  =   [ 1 ,   2 ,   3 ] \n            lToLaneNumber  =   [ 1 ,   2 ,   3 ] \n            connector  =  netiface . createConnector ( link3 . id ( ) ,  link4 . id ( ) ,  lFromLaneNumber ,  lToLaneNumber , \n                                                  \"动态加载加载连接段\" ,   True ) \n             if  connector : \n                lLaneObjects  =  connector . laneObjects ( ) \n                 for  laneObj  in  lLaneObjects : \n                     print ( \"上游车道ID\" ,  laneObj . fromLane ( ) . id ( ) ,   \"下游车道ID\" ,  laneObj . toLane ( ) . id ( ) ) \n在指定车道和位置动态加载车辆(示例：在0,1,2车道不同位置动态加载车辆) \n        dvp_lane0  =  Online . DynaVehiParam ( ) \n        dvp_lane1  =  Online . DynaVehiParam ( ) \n        dvp_lane2  =  Online . DynaVehiParam ( ) \n        dvp_lane0 . vehiTypeCode  =   1 \n        dvp_lane1 . vehiTypeCode  =   2 \n        dvp_lane2 . vehiTypeCode  =   3 \n        dvp_lane0 . roadId  =  link3 . id ( ) \n        dvp_lane1 . roadId  =  link3 . id ( ) \n        dvp_lane2 . roadId  =  link4 . id ( ) \n        dvp_lane0 . laneNumber  =   0 \n        dvp_lane1 . laneNumber  =   1 \n        dvp_lane2 . laneNumber  =   2 \n        dvp_lane0 . dist  =  m2p ( 50 ) \n        dvp_lane1 . dist  =  m2p ( 100 ) \n        dvp_lane2 . dist  =  m2p ( 50 ) \n        dvp_lane0 . speed  =   20 \n        dvp_lane0 . speed  =   30 \n        dvp_lane0 . speed  =   40 \n        dvp_lane0 . color  =   \"#FF0000\" \n        dvp_lane1 . color  =   \"#008000\" \n        dvp_lane2 . color  =   \"#0000FF\" \n        vehi_lane0  =  simuiface . createGVehicle ( dvp_lane0 ) \n        vehi_lane1  =  simuiface . createGVehicle ( dvp_lane1 ) \n        vehi_lane2  =  simuiface . createGVehicle ( dvp_lane2 ) \n\n \n 3- 路径（veh path）加载：单车车辆路径（根据方式4间接实现） \n 或者通过IVehicleDriving类实现 \n修改路径（L1所有车辆均修改为右转路径） \n for  vehi  in  allVehiStarted_lst : \n     if  vehi . roadId ( )   ==   1 : \n修改车辆路径 \n        decisionPoints_lst  =  netiface . decisionPoints ( ) \n        decisionPoint_link1  =   None \n         for  decisionPoint  in  decisionPoints_lst : \n             if  decisionPoint . link ( ) . id ( )   ==   1 : \n                decisionPoint_link1  =  decisionPoint\n                 break \n        decisionPoint_link1_routings_lst  =   [ ] \n         if  decisionPoint_link1 : \n            decisionPoint_link1_routings_lst  =  decisionPoint_link1 . routings ( ) \n         if   len ( decisionPoint_link1_routings_lst )   >   0 : \n             if  vehi . routing ( )   !=  decisionPoint_link1_routings_lst [ - 1 ] : \n                 if   ( vehi . vehicleDriving ( ) . setRouting ( decisionPoint_link1_routings_lst [ - 1 ] ) ) : \n                     print ( \"{}车辆修改路径成功。\" . format ( vehi . id ( ) ) ) \n\n \n 4- flow 路径加载：发车点+静态路径 \n def   flow_loading ( self ) : \n     \"\"\" 路径加载\n    :return:\n    \"\"\" \n代表TESS NG的接口 \n    iface  =  tessngIFace ( ) \n代表TESS NG的路网子接口 \n    netiface  =  iface . netInterface ( ) \n代表TESS NG的仿真子接口 \n    simuiface  =  iface . simuInterface ( ) \n以标准四岔路口为例 (L3-C2-L10) \n    link3  =  netiface . findLink ( 3 ) \n    link10  =  netiface . findLink ( 10 ) \n    link6  =  netiface . findLink ( 6 ) \n    link7  =  netiface . findLink ( 7 ) \n    link8  =  netiface . findLink ( 8 ) \n新建发车点 \n     if  link3 : \n        dp  =  netiface . createDispatchPoint ( link3 ) \n         if  dp : \n            dp . addDispatchInterval ( 1 ,   1800 ,   900 ) \n创建决策点 \n    decisionPoint  =  netiface . createDecisionPoint ( link3 ,  m2p ( 30 ) ) \n创建路径(左，直，右) \n    decisionRouting1  =  tessngIFace ( ) . netInterface ( ) . createDeciRouting ( decisionPoint ,   [ link3 ,  link10 ,  link6 ] ) \n    decisionRouting2  =  tessngIFace ( ) . netInterface ( ) . createDeciRouting ( decisionPoint ,   [ link3 ,  link10 ,  link8 ] ) \n    decisionRouting3  =  tessngIFace ( ) . netInterface ( ) . createDeciRouting ( decisionPoint ,   [ link3 ,  link10 ,  link7 ] ) \n分配左、直、右流量比 \n    flowRatio_left  =  _RoutingFLowRatio ( ) \n    flowRatio_left . RoutingFLowRatioID  =   1 \n    flowRatio_left . routingID  =  decisionRouting1 . id ( ) \n    flowRatio_left . startDateTime  =   0 \n    flowRatio_left . endDateTime  =   999999 \n    flowRatio_left . ratio  =   2.0 \n    flowRatio_straight  =  _RoutingFLowRatio ( ) \n    flowRatio_straight . RoutingFLowRatioID  =   2 \n    flowRatio_straight . routingID  =  decisionRouting2 . id ( ) \n    flowRatio_straight . startDateTime  =   0 \n    flowRatio_straight . endDateTime  =   999999 \n    flowRatio_straight . ratio  =   3.0 \n    flowRatio_right  =  _RoutingFLowRatio ( ) \n    flowRatio_right . RoutingFLowRatioID  =   3 \n    flowRatio_right . routingID  =  decisionRouting3 . id ( ) \n    flowRatio_right . startDateTime  =   0 \n    flowRatio_right . endDateTime  =   999999 \n    flowRatio_right . ratio  =   1.0 \n决策点数据 \n    decisionPointData  =  _DecisionPoint ( ) \n    decisionPointData . deciPointID  =  decisionPoint . id ( ) \n    decisionPointData . deciPointName  =  decisionPoint . name ( ) \n    decisionPointPos  =  QPointF ( ) \n     if  decisionPoint . link ( ) . getPointByDist ( decisionPoint . distance ( ) ,  decisionPointPos ) : \n        decisionPointData . X  =  decisionPointPos . x ( ) \n        decisionPointData . Y  =  decisionPointPos . y ( ) \n        decisionPointData . Z  =  decisionPoint . link ( ) . z ( ) \n更新决策点及其各路径不同时间段流量比 \n    updated_decision_point  =  netiface . updateDecipointPoint ( \n        decisionPointData ,   [ flowRatio_left ,  flowRatio_straight ,  flowRatio_right ] \n     ) \n     if  updated_decision_point : \n         print ( \"决策点创建成功。\" ) \n删除右转路径 \n         if   ( netiface . removeDeciRouting ( decisionPoint ,  decisionRouting3 ) ) : \n             print ( \"删除右转路径成功。\" ) \n\n \n 5- 断面流量+转向比例（路径比例）加载 \n def   flow_loading_section ( self ,  current_time ) : \n     \"\"\" 路径断面流量加载\n    :param current_time: 当前仿真时间\n    :return:\n    \"\"\" \n代表TESS NG的接口 \n    iface  =  tessngIFace ( ) \n代表TESS NG的路网子接口 \n    netiface  =  iface . netInterface ( ) \n代表TESS NG的仿真子接口 \n    simuiface  =  iface . simuInterface ( ) \n读取方案数据 \n     with   open ( './Data/flow_ratio_quarter.json' ,   'r' ,  encoding = 'utf-8' )   as  json_file : \n        flow_ratio_quarter_dict  =  json . load ( json_file ) \n     for  linkId ,  quarter_ratios  in  flow_ratio_quarter_dict . items ( ) : \n        decisionPoint  =   None \n查找到决策点 \n        decisionPoints_lst  =  netiface . decisionPoints ( ) \n         for  _decisionPoint  in  decisionPoints_lst : \n             if  _decisionPoint . link ( ) . id ( )   ==   int ( linkId ) : \n                decisionPoint  =  _decisionPoint\n                 break \n         if  decisionPoint : \n            quarter_startTime_lst  =   list ( quarter_ratios . keys ( ) ) \n             for  index ,  quarter_ratio  in   enumerate ( quarter_ratios . values ( ) ) : \n                quarter_time_seconds  =  time_to_seconds ( quarter_startTime_lst [ index ] ) \n                 if  index  !=   len ( quarter_startTime_lst )   -   1 : \n                    quarter_time_seconds_next  =  time_to_seconds ( quarter_startTime_lst [ index  +   1 ] ) \n                 else : \n                    quarter_time_seconds_next  =  quarter_time_seconds  +   1 \n                 if  quarter_time_seconds  <=  current_time  <  quarter_time_seconds_next : \n获取决策点现有路径 \n                    decision_routings_lst  =  decisionPoint . routings ( ) \n                     if   ( len ( decision_routings_lst )   ==   3 ) : \n分配左、直、右流量比 \n                        flowRatio_left  =  _RoutingFLowRatio ( ) \n                        flowRatio_left . RoutingFLowRatioID  =  decision_routings_lst [ 0 ] . id ( ) \n                        flowRatio_left . routingID  =  decision_routings_lst [ 0 ] . id ( ) \n                        flowRatio_left . startDateTime  =   0 \n                        flowRatio_left . endDateTime  =   999999 \n                        flowRatio_left . ratio  =  quarter_ratio [ \"left\" ] \n                        flowRatio_straight  =  _RoutingFLowRatio ( ) \n                        flowRatio_straight . RoutingFLowRatioID  =  decision_routings_lst [ 1 ] . id ( ) \n                        flowRatio_straight . routingID  =  decision_routings_lst [ 1 ] . id ( ) \n                        flowRatio_straight . startDateTime  =   0 \n                        flowRatio_straight . endDateTime  =   999999 \n                        flowRatio_straight . ratio  =  quarter_ratio [ \"straight\" ] \n                        flowRatio_right  =  _RoutingFLowRatio ( ) \n                        flowRatio_right . RoutingFLowRatioID  =  decision_routings_lst [ 2 ] . id ( ) \n                        flowRatio_right . routingID  =  decision_routings_lst [ 2 ] . id ( ) \n                        flowRatio_right . startDateTime  =   0 \n                        flowRatio_right . endDateTime  =   999999 \n                        flowRatio_right . ratio  =  quarter_ratio [ \"right\" ] \n决策点数据 \n                        decisionPointData  =  _DecisionPoint ( ) \n                        decisionPointData . deciPointID  =  decisionPoint . id ( ) \n                        decisionPointData . deciPointName  =  decisionPoint . name ( ) \n                        decisionPointPos  =  QPointF ( ) \n                         if  decisionPoint . link ( ) . getPointByDist ( decisionPoint . distance ( ) ,  decisionPointPos ) : \n                            decisionPointData . X  =  decisionPointPos . x ( ) \n                            decisionPointData . Y  =  decisionPointPos . y ( ) \n                            decisionPointData . Z  =  decisionPoint . link ( ) . z ( ) \n更新决策点及其各路径不同时间段流量比 \n                        updated_decision_point  =  netiface . updateDecipointPoint ( \n                            decisionPointData ,   [ flowRatio_left ,  flowRatio_straight ,  flowRatio_right ] \n                         ) \n                         if  updated_decision_point : \n                             print ( \"{}流量更新成功。\" . format ( quarter_startTime_lst [ index ] ) ) \n                     else : \n                         print ( \"DecisionRoutingsError:决策点{}需要包含左、直、右三条路径。\" . format ( decisionPoint . id ( ) ) ) \n         else : \n需路段存在决策点，才可更新，因此可用flow_loading函数新建决策点 \n             print ( \"FindError:ID为{}的路段不存在决策点\" . format ( linkId ) ) \n 4.2.  路径管理 \n 1- 新建决策点；新建决策路径，编辑决策路径流量比例，时间，路径的link,connector，删除路径。 \n创建决策点 \ndecisionPoint  =  netiface . createDecisionPoint ( link3 ,  m2p ( 30 ) ) \n创建路径(左，直，右) \ndecisionRouting1  =  tessngIFace ( ) . netInterface ( ) . createDeciRouting ( decisionPoint ,   [ link3 ,  link10 ,  link6 ] ) \ndecisionRouting2  =  tessngIFace ( ) . netInterface ( ) . createDeciRouting ( decisionPoint ,   [ link3 ,  link10 ,  link8 ] ) \ndecisionRouting3  =  tessngIFace ( ) . netInterface ( ) . createDeciRouting ( decisionPoint ,   [ link3 ,  link10 ,  link7 ] ) \n分配左、直、右流量比 \nflowRatio_left  =  _RoutingFLowRatio ( ) \nflowRatio_left . RoutingFLowRatioID  =   1 \nflowRatio_left . routingID  =  decisionRouting1 . id ( ) \nflowRatio_left . startDateTime  =   0 \nflowRatio_left . endDateTime  =   999999 \nflowRatio_left . ratio  =   2.0 \nflowRatio_straight  =  _RoutingFLowRatio ( ) \nflowRatio_straight . RoutingFLowRatioID  =   2 \nflowRatio_straight . routingID  =  decisionRouting2 . id ( ) \nflowRatio_straight . startDateTime  =   0 \nflowRatio_straight . endDateTime  =   999999 \nflowRatio_straight . ratio  =   3.0 \nflowRatio_right  =  _RoutingFLowRatio ( ) \nflowRatio_right . RoutingFLowRatioID  =   3 \nflowRatio_right . routingID  =  decisionRouting3 . id ( ) \nflowRatio_right . startDateTime  =   0 \nflowRatio_right . endDateTime  =   999999 \nflowRatio_right . ratio  =   1.0 \n决策点数据 \ndecisionPointData  =  _DecisionPoint ( ) \ndecisionPointData . deciPointID  =  decisionPoint . id ( ) \ndecisionPointData . deciPointName  =  decisionPoint . name ( ) \ndecisionPointPos  =  QPointF ( ) \n if  decisionPoint . link ( ) . getPointByDist ( decisionPoint . distance ( ) ,  decisionPointPos ) : \n    decisionPointData . X  =  decisionPointPos . x ( ) \n    decisionPointData . Y  =  decisionPointPos . y ( ) \n    decisionPointData . Z  =  decisionPoint . link ( ) . z ( ) \n更新决策点及其各路径不同时间段流量比 \nupdated_decision_point  =  netiface . updateDecipointPoint ( \n    decisionPointData ,   [ flowRatio_left ,  flowRatio_straight ,  flowRatio_right ] \n ) \n删除右转路径 \n if   ( netiface . removeDeciRouting ( decisionPoint ,  decisionRouting3 ) ) : \n     print ( \"删除右转路径成功。\" ) \n\n\n \n 2 - 运行过程中编辑决策路径的属性（流量比例，时间段信息），暂时不要求新增，删除，修改已有路径的“路径”（link,connector） \n 见PyCustomerSimulator \n过载父类方法，动态修改决策点不同路径流量比 \n     def   calcDynaFlowRatioParameters ( self ) : \nTESSNG 顶层接口 \n        iface  =  tessngIFace ( ) \n当前仿真计算批次 \n        batchNum  =  iface . simuInterface ( ) . batchNumber ( ) \n在计算第20批次时修改某决策点各路径流量比 \n         if  batchNum  ==   20 : \n一个决策点某个时段各路径车辆分配比 \n            dfi  =  Online . DecipointFlowRatioByInterval ( ) \n决策点编号 \n            dfi . deciPointID  =   5 \n起始时间 单位秒 \n            dfi . startDateTime  =   1 \n结束时间 单位秒 \n            dfi . endDateTime  =   84000 \n            rfr1  =  Online . RoutingFlowRatio ( 10 ,   1 ) \n            rfr2  =  Online . RoutingFlowRatio ( 11 ,   2 ) \n            rfr3  =  Online . RoutingFlowRatio ( 12 ,   3 ) \n            dfi . mlRoutingFlowRatio  =   [ rfr1 ,  rfr2 ,  rfr3 ] \n             return   [ dfi ] \n         return   [ ] \n \n 以上两点需求可在流量加载中找到实现方式。 \n 4.3.  路径重构 \n 1- 断面流量+转向流量重构车辆路径，并加载到仿真中;(暂时忽略) \n 2- OD数据重构路径，并加载到仿真中(暂时忽略) \n 用户可以利用自有算法实现OD分配、路径重构，然后依据4.1中所述的流量加载方式实现TESSNG 软件加载路径重构结果 \n 5. 仿真运行 \n 5.1. 倒车入库 \n 在实现自动泊车的仿真及调度时需要展示车辆倒车入库的过程，这个过程可让车辆顺向前移，将车辆旋转180度，展现的便是倒着行驶状态。 \n \n 为了实现倒着行驶效果，可以实现PyCustomerSimulator的如下方法 \n def ref_reCalcAngle(self, pIVehicle:Tessng.IVehicle, ref_outAngle:Tessng.objreal) -> bool: ... \n 5.2. 循环仿真 \n 对加载的路网启动仿真后，不需要人工干预的情况下重复仿真指定次数，且每次仿真前自动进行参数设置，仿真后输出仿真结果到文件。 \n 1）、仿真前判断当前仿真路网与上次仿真路网是否相同，如果不同设置仿真次数为1； \n 2）、仿真结束后判断仿真次数是否小于指定次数，如果小于指定次数则发送要求仿真的消息给TESSNG主窗体，TESSNG主窗体启动仿真。 \n def   afterStop ( self ) : \n这里设置要停止后仿真几次， \n     if  self . mAutoStartSimuCount  >=   10 : \n         return \n    iface  =  tessngIFace ( ) \n    netface  =  iface . netInterface ( ) \n    filePath  =  netface . netFilePath ( ) \n     #范例打开临时路段会会创建车辆方阵，需要进行一些仿真过程控制 \n     if   \"Temp\"   not   in  filePath : \n        self . mAutoInOutSi  =  random . randint ( 1 , 15 ) \n        self . mAutoInOutSd  =  random . randint ( 1 , 15 ) \n        self . mAutoStartSimuCount  +=   1 \n        self . forReStartSimu . emit ( ) \n 5.3. 流程控制 \n 1-开始仿真 \n 2- 暂停仿真 \n 3- 恢复仿真 \n 4-结束关闭仿真 \n 5-生成仿真快照 \n 6-加载仿真快照 \n def   process_control ( self ,  method_number ) : \n     \"\"\" 流程控制\n          :param method_number：调用的方法序号\n          :return:\n          \"\"\" \nTESSNG 顶层接口 \n    iface  =  tessngIFace ( ) \nTESSNG 仿真子接口 \n    simuiface  =  iface . simuInterface ( ) \nTESSNG 路网子接口 \n    netiface  =  iface . netInterface ( ) \n     '''1. 启动、暂停、恢复、停止仿真''' \n     if  method_number  ==   1 : \n        simuiface . startSimu ( ) \n     elif  method_number  ==   2 : \n        simuiface . pauseSimu ( ) \n     elif  method_number  ==   3 : \n        simuiface . stopSimu ( ) \n     elif  method_number  ==   4 : \n        simuiface . pauseSimuOrNot ( ) \n     '''2. 生成、加载仿真快照''' \n     if  method_number  ==   5 : \n没生效，需分布式组件支持，暂时不清楚如何用 \n        snapshotStr  =  simuiface . catchSnapshotAsString ( ) \n         print ( snapshotStr ) \n     '''8. 获取运动信息''' \n8.1 获取路网在途车辆，见MySimulator中afterOneStep的simuiface.allVehiStarted() \n8.2 根据路段|车道获取车辆list \n     if  method_number  ==   8.2 : \n        vehiOnRoad5_lst  =  simuiface . vehisInLink ( 5 ) \n        vehiOnLane20_lst  =  simuiface . vehisInLane ( 20 ) \n         print ( \"L5路段车辆id：\" ) \n         for  vehi  in  vehiOnRoad5_lst : \n             print ( vehi . id ( ) ) \n         print ( \"lane20车道车辆id：\" ) \n         for  vehi  in  vehiOnLane20_lst : \n             print ( vehi . id ( ) ) \n8.3 根据车辆id获取具体的车辆信息,以id为300001的车辆为例 \n     if  method_number  ==   8.3 : \n        vehi_300001  =  simuiface . getVehicle ( 300001 ) \n         print ( \"300001车辆的具体信息：\" ) \n         print ( \"所在路段:\" ,  vehi_300001 . roadId ( ) ) \n         print ( \"所在车道:\" ,  vehi_300001 . lane ( ) . id ( ) ) \n         print ( \"当前车速:\" ,  vehi_300001 . currSpeed ( ) ) \n         print ( \"当前加速度:\" ,  vehi_300001 . acce ( ) ) \n         print ( \"当前角度:\" ,  vehi_300001 . angle ( ) ) \n         print ( \"当前位置:\" ,  vehi_300001 . pos ( ) ) \n         print ( \"其它:\" ,   \"......\" ) \n没看太懂 \n8.4 获取仿真模型中各种对象的信息 \n8.5 根据对象实例ID获取具体某一个对象的具体信息 \n8.6 根据车辆位置获取道路局部坐标；根据车辆车道局部坐标得到全局坐标 \n8.7 tessng平面坐标与地理坐标互转（转经纬度？，是的话暂时没有这个方法） \n8.8 获取RSU预警信息（暂时没有） \n     '''9. 设置随机种子''' \n目前无法设置随机种子。 \n     '''10. 设置仿真精度''' \n     if  method_number  ==   10 : \n        simuiface . setSimuAccuracy ( 10 ) \n     '''11. 设置仿真开始结束时间''' \n可以设置仿真时长，无法设置仿真开始的时间，不过可以由定时器定时启动和结束仿真实现设置仿真开始结束时间，此处仅展示二次开发的设置仿真时长方法 \n     if  method_number  ==   11 : \n        simuiface . setSimuIntervalScheming ( 30 ) \n     '''12. 设置仿真加速比''' \n     if  method_number  ==   12 : \n        simuiface . setAcceMultiples ( 10 ) \n 5.4.  动作控制 \n 运行过程中的操作： \n 1- 修改发车流量信息，删除发车点 \n \n \n 2- 修改限速区，事故区信息；删除减速区，限速区，事故区 \n \n \n 3-车辆位置移动 \n \n 4-修改车辆速度 \n \n def   ref_reSetSpeed ( self ,  vehi ,  ref_inOutSpeed ) : \n尝试让L12等待的车辆强制闯红灯 \n     if  vehi . roadId ( )   ==   12 : \n        vehi_currentSpeed  =  vehi . currSpeed ( ) \n        vehi_currentDistToEnd  =  vehi . vehicleDriving ( ) . distToEndpoint ( True ) \n         if  m2p ( vehi_currentSpeed )   <   20   and  p2m ( vehi_currentDistToEnd )   <   3 : \n            random_number  =  random . random ( ) \n             if  random_number  <   0.3 : \n                ref_inOutSpeed . value  =  m2p ( 15 ) \n                 print ( vehi . id ( ) ,  vehi . currSpeed ( ) ) \n                 return   True \n强制L5路段车辆在距路段终点50m处停车 \n    vehi_currentDistToEnd  =  vehi . vehicleDriving ( ) . distToEndpoint ( True ) \n     if  p2m ( vehi_currentDistToEnd )   <   50 : \n         if  vehi . roadId ( )   ==   5 : \n            ref_inOutSpeed . value  =  m2p ( 0 ) \n             return   True \n\n \n 5-修改车辆路径（nextroad, 甚至nextlane） \n修改路径（L1所有车辆均修改为右转路径） \n for  vehi  in  allVehiStarted_lst : \n     if  vehi . roadId ( )   ==   1 : \n修改车辆路径 \n        decisionPoints_lst  =  netiface . decisionPoints ( ) \n        decisionPoint_link1  =   None \n         for  decisionPoint  in  decisionPoints_lst : \n             if  decisionPoint . link ( ) . id ( )   ==   1 : \n                decisionPoint_link1  =  decisionPoint\n                 break \n        decisionPoint_link1_routings_lst  =   [ ] \n         if  decisionPoint_link1 : \n            decisionPoint_link1_routings_lst  =  decisionPoint_link1 . routings ( ) \n         if   len ( decisionPoint_link1_routings_lst )   >   0 : \n             if  vehi . routing ( )   !=  decisionPoint_link1_routings_lst [ - 1 ] : \n                 if   ( vehi . vehicleDriving ( ) . setRouting ( decisionPoint_link1_routings_lst [ - 1 ] ) ) : \n                     print ( \"{}车辆修改路径成功。\" . format ( vehi . id ( ) ) ) \n\n \n 6-强制车辆不变道 \n撤销变道，可用于强制车辆不变道 \n def   reCalcDismissChangeLane ( self ,  vehi ) : \n禁止车辆变道到最右侧车道 \n    lane  =  vehi . lane ( ) \n     if  lane . number ( )   ==   1 : \n         if  self . secondary_dev . judge_vehicle_laneChange_direction ( vehi )   ==   \"right\" : \n             return   True \n     return   False \n\n \n 7-强制车辆变道 \n \n \t def   reCalcToLeftFreely ( self ,  pIVehicle : Tessng . IVehicle )   - >   bool : \n    \t return   True \n \n 8-强制车辆闯红灯 \n \n 9-强制车辆停车 \n \n 10-强制清除车辆（车辆消失） \n \n 11-修改车辆航向角 \n \n 12-修改车辆速度，加速度 \n def   ref_reSetSpeed ( self ,  vehi ,  ref_inOutSpeed ) : \n尝试让L12等待的车辆强制闯红灯 \n     if  vehi . roadId ( )   ==   12 : \n        vehi_currentSpeed  =  vehi . currSpeed ( ) \n        vehi_currentDistToEnd  =  vehi . vehicleDriving ( ) . distToEndpoint ( True ) \n         if  m2p ( vehi_currentSpeed )   <   20   and  p2m ( vehi_currentDistToEnd )   <   3 : \n            random_number  =  random . random ( ) \n             if  random_number  <   0.3 : \n                ref_inOutSpeed . value  =  m2p ( 15 ) \n                 print ( vehi . id ( ) ,  vehi . currSpeed ( ) ) \n                 return   True \n强制L5路段车辆在距路段终点50m处停车 \n    vehi_currentDistToEnd  =  vehi . vehicleDriving ( ) . distToEndpoint ( True ) \n     if  p2m ( vehi_currentDistToEnd )   <   50 : \n         if  vehi . roadId ( )   ==   5 : \n            ref_inOutSpeed . value  =  m2p ( 0 ) \n             return   True \n\n  def   ref_reSetAcce ( self ,  vehi ,  inOutAcce ) : \n    roadName  =  vehi . roadName ( ) \n     if  roadName  ==   \"连接段1\" : \n         if  vehi . currSpeed ( )   >  m2p ( 20   /   3.6 ) : \n            inOutAcce . value  =  m2p ( - 5 ) \n             return   True \n         elif  vehi . currSpeed ( )   >  m2p ( 20   /   3.6 ) : \n            inOutAcce . value  =  m2p ( - 1 ) \n             return   True \n     return   False \n\n \n 13- 车道关闭，恢复 \n \n def   action_control ( self ) : \n     \"\"\" 动作控制\n    :param current_time: 当前仿真时间\n    :return:\n    \"\"\" \n代表TESS NG的接口 \n    iface  =  tessngIFace ( ) \n代表TESS NG的路网子接口 \n    netiface  =  iface . netInterface ( ) \n代表TESS NG的仿真子接口 \n    simuiface  =  iface . simuInterface ( ) \n以动作控制案例-机动车交叉口路网的L5路段为例 \n     '''1. 修改发车流量信息，删除发车点''' \n修改发车流量信息需在MySimulator中的calcDynaDispatchParameters函数,删除发车点位于afterOneStep函数中 \n     '''2. 修改决策路径的属性，删除决策路径''' \n见路径加载/路径管理模块 \n     '''3. 修改减速区，施工区，事故区信息；删除减速区，施工区，事故区''' \n减速区见MySimulator中的ref_reCalcdesirSpeed函数，可由这种方式实现，无减速区类 \n施工区和事故区仅有创建和删除，无法进行修改，以施工区为例 \n     '''4. 车辆位置移动''' \n见afterOneStep函数 \n     '''5. 修改车辆速度''' \n同3减速区 \n     '''6. 修改车辆路径,next_lane暂时需要具体策略去做''' \n以L1路段上的路径为例，见afterOneStep \n     '''7. 强制车辆不变道''' \n已经可以了 \n     '''8. 强制车辆变道''' \nMySimulator中的reCalcToLeftFreely和reCalcToRightFreely,return true即可，但是变道后仍有可能会变回来 \n     '''9. 强制车辆闯红灯''' \n见MySimulator的ref_reSetSpeed函数 \n     '''10. 强制车辆停车''' \n见MySimulator的ref_reSetSpeed函数 \n     '''11. 强制车辆跟车''' \npass \n     '''12. 强制清除车辆（车辆消失）''' \n以L5路段上的路径为例，见afterStep \n     '''13. 修改车辆航向角''' \n以L5路段上的路径为例，见afterStep \n     '''14. 修改车辆速度，加速度''' \n同5，修改加速度函数为MySimulator的ref_reSetAcce，用法与设置速度相同 \n     '''15. 车道关闭，恢复''' \n几种方法都可以实现：1.设置事件区。2.MySimulator中的自由变道，以L5路段50-100m处最右侧封闭30秒为例 \n\n\n def   createworkZone ( self ) : \n     \"\"\" 创建施工区\n    :param :\n    :return:\n    \"\"\" \n创建施工区 \n    workZone  =  Online . DynaRoadWorkZoneParam ( ) \n道路ID \n    workZone . roadId  =   int ( 5 ) \n施工区名称 \n    workZone . name  =   \"施工区，限速40,持续20秒\" \n位置，距离路段或连接段起点距离，单位米 \n    workZone . location  =   50 \n施工区长度，单位米 \n    workZone . length  =   50 \n车辆经过施工区的最大车速，单位千米/小时 \n    workZone . limitSpeed  =   40 \n施工区施工时长，单位秒 \n    workZone . duration  =   20 \n施工区起始车道 \n    workZone . mlFromLaneNumber  =   [ 0 ] \n创建施工区 \n    zone  =  tessngIFace ( ) . netInterface ( ) . createRoadWorkZone ( workZone ) \n 5.5. 管控手段控制 \n 1- 修改信号灯灯色（直接修改某个直行方向的信号灯颜色，如红色直接切换为绿色） \n \n 2- 修改信号灯组方案 \n def   double_ring_signal_control ( self ,  current_simuTime ) : \n         \"\"\" 双环信控方案下发\n        :param current_simuTime: 当前仿真时间\n        :return:\n        \"\"\" \n代表TESS NG的接口 \n        iface  =  tessngIFace ( ) \n代表TESS NG的路网子接口 \n        netiface  =  iface . netInterface ( ) \n读取方案数据 \n         with   open ( './Data/Signal_Plan_Data_1109.json' ,   'r' ,  encoding = 'utf-8' )   as  json_file : \n            signal_groups_dict  =  json . load ( json_file ) \n创建信号灯组和相位 \n         for  group_name ,  group  in  signal_groups_dict . items ( ) : \n当前灯组 \n            current_signal_group  =   None \n通过灯组名称查询到灯组 \n            all_signal_groups_lst  =  netiface . signalGroups ( ) \n             for  signal_group  in  all_signal_groups_lst : \n                 if  signal_group . groupName ( )   ==  group_name : \n                    current_signal_group  =  signal_group\n                     break \n             if  current_signal_group : \n                current_signal_group_phases_lst  =  current_signal_group . phases ( ) \n             else : \n                 print ( \"FindError: The signalGroup not in current net.\" ) \n                 break \n获取所有灯组的起始时间 \n            signal_group_startTime_lst  =   list ( group . keys ( ) ) \n             for  index ,  group_data  in   enumerate ( group . values ( ) ) : \n                start_time  =  signal_group_startTime_lst [ index ] \n                end_time  =  signal_group_startTime_lst [ index  +   1 ]   if  index  !=   len ( \n                    signal_group_startTime_lst )   -   1   else   \"24:00\" \n起始时间和结束时间的秒数表示 \n                start_time_seconds  =  time_to_seconds ( start_time ) \n                end_time_seconds  =  time_to_seconds ( end_time ) \n若当前仿真时间位于当前时段内，修改当前时段信号灯组的相位 \n                 if  start_time_seconds  <=  current_simuTime  <  end_time_seconds : \n                    period_time  =  group_data [ 'cycle_time' ] \n                    phases  =  group_data [ 'phases' ] \n修改周期 \n                    current_signal_group . setPeriodTime ( int ( period_time ) ) \n                     for  phase  in  phases : \n                        phase_name  =  phase [ 'phase_name' ] \n                        phase_number  =   int ( phase [ 'phase_number' ] ) \n                        color_list  =   [ ]    # 按照红灯、绿灯、黄灯、红灯顺序计算 \n                        color_list . append ( Online . ColorInterval ( '红' ,   int ( phase [ 'start_time' ] ) ) ) \n                        color_list . append ( Online . ColorInterval ( '绿' ,   int ( phase [ 'green_time' ] ) ) ) \n                        color_list . append ( Online . ColorInterval ( '黄' ,   3 ) ) \n                         if   int ( period_time  -  phase [ 'start_time' ]   -  phase [ 'green_time' ]   -   3 )   >   0 : \n                            color_list . append ( \n                                Online . ColorInterval ( '红' , \n                                                      int ( period_time  -  phase [ 'start_time' ]   -  phase [ 'green_time' ]   -   3 ) ) ) \n当前灯组包含的相位序号 \n                        current_phase  =   None \n                         for  current_signal_group_phase  in  current_signal_group_phases_lst : \n                             if  phase_number  ==   int ( current_signal_group_phase . number ( ) ) : \n                                current_phase  =  current_signal_group_phase\n                                 break \n若已存在该相位，修改相位灯色顺序，否则添加相位 \n                         if  current_phase : \n修改相位 \n                            current_phase . setColorList ( color_list ) \n                         else : \n                            signal_phase  =  netiface . createSignalPhase ( current_signal_group ,  phase_name ,  color_list ) \n设置相位序号 \n                            signal_phase . setNumber ( phase_number ) \n设置相位包含的信号灯 \n                         for  lampId  in  phase [ \"lamp_lst\" ] : \n                            lamp  =  netiface . findSignalLamp ( int ( lampId ) ) \n                             if  lamp : \n                                 '' '\n                                目前一个信号灯属于多个相位，相位间不交叉。因此如果要实际下发方案时，应按照仿真时间实时管理相位序号。\n\n \n 3- 修改相位绿灯时间长度 \n \n 4- 修改限速区，施工区，事故区 \n 目前无修改方法,只能删除后新增 \n 5- 修改link, connector 限速 \n \n 6- 修改link, connector 允许的车辆类型（暂时无法实现） \n def   control_Measures ( self ,  method_number ) : \n     \"\"\" 管控手段控制\n    :param method_number:调用的方法序号\n    :return:\n    \"\"\" \nTESSNG 顶层接口 \n    iface  =  tessngIFace ( ) \nTESSNG 仿真子接口 \n    simuiface  =  iface . simuInterface ( ) \nTESSNG 路网子接口 \n    netiface  =  iface . netInterface ( ) \n     '''1. 修改信号灯灯色''' \n见MySimulator的afterOneStep函数，L5路段信号灯第10秒红灯变绿灯，持续20秒。 \n     '''2. 修改信号灯组方案''' \n见双环管控方案下发，目前仅可用该方法修改。 \n     '''3. 修改相位绿灯时间长度''' \n除双环管控方案下所包含方法外，还有相位类自带的修改方法,以L12路段相位直行信号灯相位为例（ID为7），由红90绿32黄3红25改为红10绿110黄3红28 \n     if  method_number  ==   3 : \n        signalPhase_L12_7  =  netiface . findSignalPhase ( 7 ) \n        color_list  =   [ ]    # 按照红灯、绿灯、黄灯、红灯顺序计算 \n        color_list . append ( Online . ColorInterval ( '红' ,   10 ) ) \n        color_list . append ( Online . ColorInterval ( '绿' ,   110 ) ) \n        color_list . append ( Online . ColorInterval ( '黄' ,   3 ) ) \n        color_list . append ( Online . ColorInterval ( '红' ,   28 ) ) \n        signalPhase_L12_7 . setColorList ( color_list ) \n     '''4. 修改减速区，施工区，事故区''' \n目前二次开发，施工区/事故区无修改方法，且经测试，施工区的“获取施工区所在的车道列表”方法暂时无效。 \n     '''5. 修改link, connector 限速''' \n以L5路段最高限速由80调整至20，连接段无法修改限速。 \n     if  method_number  ==   5 : \n        link5  =  netiface . findLink ( 5 ) \n        link5 . setLimitSpeed ( 20 ) \n     '''6. 修改link, connector 允许的车辆类型''' \n修改后，发车点发出的车仍会按照类型发出，被禁止的车辆类型仍会驶入。 \n     if  method_number  ==   6 : \n         pass \n 6. 底层模型修改 \n 6.1 跟驰模型 \n 1-修改跟驰模型参数（机动车，非机动车） \n \n def   reSetFollowingParams ( self ) : \n     \"\"\" 重设跟驰模型参数\n    :return: 返回 'Tessng.Online.FollowingModelParam' 的列表\n    \"\"\" \n机动车 \n    followingModelParam_motor  =  Online . FollowingModelParam ( ) \n    followingModelParam_motor . vtype  =  Online . Motor\n    followingModelParam_motor . alfa  =   5 \n    followingModelParam_motor . beit  =   3 \n    followingModelParam_motor . safeDistance  =   15 \n    followingModelParam_motor . safeInterval  =   10 \n非机动车 \n    followingModelParam_Nonmotor  =  Online . FollowingModelParam ( ) \n    followingModelParam_Nonmotor . vtype  =  Online . Nonmotor\n    followingModelParam_Nonmotor . alfa  =   3 \n    followingModelParam_Nonmotor . beit  =   1 \n    followingModelParam_Nonmotor . safeDistance  =   5 \n    followingModelParam_Nonmotor . safeInterval  =   6 \n\n    followingModelParam_lst  =   [ ] \n    followingModelParam_lst . append ( followingModelParam_motor ) \n    followingModelParam_lst . append ( followingModelParam_Nonmotor ) \n\n     return  followingModelParam_lst\n \n 默认参数效果 \n \n 修改参数使车辆倾向变道 \n \n 修改参数使车辆不倾向变道 \n 6.2. 换道模型 \n 1-选择变道类型：强制变道，压迫变道，自由变道 \n 暂不支持二次开发接口选择变道类型 \n 2- 设置强制变道，压迫变道参数(暂不支持，仅支持自有变道参数修改) \n def   lane_changing_model ( self ,  method_number ) : \n     \"\"\" 换道模型\n    :param method_number：调用的方法序号\n    :return:\n    \"\"\" \nTESSNG 顶层接口 \n    iface  =  tessngIFace ( ) \nTESSNG 仿真子接口 \n    simuiface  =  iface . simuInterface ( ) \nTESSNG 路网子接口 \n    netiface  =  iface . netInterface ( ) \n     '''1. 选择变道类型：强制变道，压迫变道，自由变道''' \n     '''2. 设置强制变道，压迫变道参数''' \n目前仅有MySimulator中的ref_reSetChangeLaneFreelyParam函数设置安全操作时间、安全变道(完成变道前半段)后距前车距离、目标车道后车影响系数 \n以L5路段两侧车道往中间变道为例 \n\n    \n\n def   judge_vehicle_laneChange_direction ( self ,  vehi ) : \n     '''\n    判断车辆是左变道还是右变道。\n    :param vehi: 运行车辆\n    :return:\n    ''' \n    lane  =  vehi . lane ( ) \n    vehi_currPos  =  vehi . pos ( ) \n    vehi_currDistToStart  =  lane . distToStartPoint ( vehi_currPos ) \n    lane_centerBreakPoints  =  lane . centerBreakPoints ( ) \n    vehi_segmentIndex  =   - 1 \n获取车辆所在的道路分段号 \n     for  index ,  centerBreakPoint  in   enumerate ( lane_centerBreakPoints ) : \n        lane_centerBreakPoints_distToStart  =  lane . distToStartPoint ( centerBreakPoint ) \n         if  vehi_currDistToStart  <  lane_centerBreakPoints_distToStart : \n            vehi_segmentIndex  =  index\n             break \n     if   0   <  vehi_segmentIndex  <   len ( lane_centerBreakPoints ) : \n        start_breakPoint  =  lane_centerBreakPoints [ vehi_segmentIndex  -   1 ] \n        end_breakPoint  =  lane_centerBreakPoints [ vehi_segmentIndex ] \n以点积判断车辆处于中心线左侧还是右侧 \n        vehi_direction  =  car_position_road ( start_breakPoint ,  end_breakPoint ,  vehi_currPos ) \n判断车头角度偏度 \n        breakLane_angle  =  calculate_angle ( start_breakPoint ,  end_breakPoint ) \n若车辆处于中心线右侧且车头右偏，则判定为右变道意图 \n         if  vehi_direction  ==   \"right\"   and  vehi . angle ( )   >  breakLane_angle : \n             print ( \"right:\" ,  vehi . id ( ) ,  vehi . angle ( ) ,  breakLane_angle ) \n             return   \"right\" \n若车辆处于中心线左侧且车头左偏，则判定为左变道意图 \n         elif  vehi_direction  ==   \"left\"   and  vehi . angle ( )   <  breakLane_angle : \n             print ( \"left:\" ,  vehi . id ( ) ,  vehi . angle ( ) ,  breakLane_angle ) \n             return   \"left\" \n         else : \n             return   \"noChange\" \n     else : \n         print ( \"FindError:can't find the segment,relevant info:\" ,  vehi_segmentIndex ,  vehi_currDistToStart , \n              vehi_currPos ) \n 6.3. 冲突交互模型 \n 1-根据link,车道序号|连接器编号获取冲突连接器对的优先关系 \n 2-修改连接器对的优先关系 \n 3- 修改连接器对的冲突模型参数 \n 4- 新增，修改，删除冲突模型参数 \n 5-获取所有冲突关系的冲突连接器对 \n 6- 一键设置同等路权的工具函数 \n 7- 重置优先关系 \n 8- 获取面域与连接器的映射关系 \n 目前版本暂不支持二次开发方式操作以上参数， 用户只能在建模阶段人工设置 \n 6.4.  车辆汇入模型 \n 暂不支持二次开发操作，用户可根据跟车模型，自由换道模型调整车辆运动行为 \n 6.5. 车辆穿越模型 \n 暂不支持二次开发操作，用户可根据跟车模型，自由换道模型，冲突交互模型调整车辆运动行为 \n 7. 仿真输出 \n 7.1. 获取路网几何线性数据 \n 路网二维平面主要由路段连接段组成，路段由路段自身和车道组成，连接段由连接段自身和“车道连接”组成，路段、车道、“车道连接”都存在中心线断点序列，车辆都是在这些点构成的线上移动的。取得这些断点序列的步骤如下： \n 1）获取所有路段； \n 2）获取路段的所有车道； \n 3）获取车道的中心线断点序列 \n 4）获取所有连接段 \n 5）获取连接段的所有“车道连接” \n 6）获取“车道连接”中心线断点序列 \n def   afterLoadNet ( self ) : \n代表TESS NG的接口 \n    iface  =  tessngIFace ( ) \n代表TESS NG的路网子接口 \n    netiface  =  iface . netInterface ( ) \n获取路段数 \n    count  =  netiface . linkCount ( ) \nif (count == 0): \n    self.createNet() \n\n     '''调用相应二次开发案例函数''' \n信控编辑案例 （默认路网） \nself.secondary_dev.edit_signal_controller() \n双环信控方案下发单次测试（输入测试仿真时间） \nself.secondary_dev.double_ring_signal_control(27000) \n流量加载 \nself.secondary_dev.traffic_loading() \n路径加载 \nself.secondary_dev.flow_loading() \n动作控制 \nself.secondary_dev.action_control() \n     if ( netiface . linkCount ( )   >   0 ) : \n         #所有路段 \n        lLink  =  netiface . links ( ) \n         #ID等于1的路段 \n        link  =  netiface . findLink ( 1 ) \n         if  link  is   not   None : \n             #路段中心线断点集 \n            lPoint  =  link . centerBreakPoints ( ) \nprint(\"一条路段中心线断点：\", [(p.x(), p.y()) for p in lPoint]) \n            lLane  =  link . lanes ( ) \n             if  lLane  is   not   None   and   len ( lLane )   >   0 : \n                 #第一条车道中心线断点 \n                lPoint  =  lLane [ 0 ] . centerBreakPoints ( ) \nprint(\"一条车道中心线断点：\", [(p.x(), p.y()) for p in lPoint]) \n         #所有连接段 \n        lConnector  =  netiface . connectors ( ) \n         if  lConnector  is   not   None   and   len ( lConnector )   >   0 : \n             #第一条连接段的所有“车道连接” \n            lLaneConnector  =  lConnector [ 0 ] . laneConnectors ( ) \n             #其中第一条“车道连接” \n            laneConnector  =  lLaneConnector [ 0 ] \n             #\"车道连接“断点集 \n            lPoint  =  laneConnector . centerBreakPoints ( ) \nprint(\"一条'车道连接'中心线断点：\", [(p.x(), p.y()) for p in lPoint]) \n 7.2. 检测器|采集器|排队计数器编辑 \n 1-根据车道序号，位置新建排队计数器 \n在路段9最左侧车道100米处创建排队计数器 \ncounter  =  tessngIFace ( ) . netInterface ( ) . createVehiQueueCounterOnLink ( leftLane ,  dist ) \n if  counter  is   not   None : \n print ( f\"计数器所在点坐标为: ( { counter . point ( ) . x ( ) } ,  { counter . point ( ) . y ( ) } )\" ) \n\n \n 2-根据车道序号，位置新建行程时间检测器 \n lVehicleTravelDetector  =  tessngIFace ( ) . netInterface ( ) . createVehicleTravelDetector_link2link ( link ,  link ,  m2p ( 50 ) , m2p ( 550 ) ) \n    if  lVehicleTravelDetector  is   not   None : \n       for  detector  in  lVehicleTravelDetector : \n          detector . setFromTime ( 10 ) \n          detector . setToTime ( 60 ) \n\n \n 3-根据路段，车道序号获取检测器 \n 4- 根据检测器获取车道 \n 5-设置检测器属性，如检测开始结束时间，检测间隔 \n lVehicleTravelDetector  =  tessngIFace ( ) . netInterface ( ) . createVehicleTravelDetector_link2link ( link ,  link ,  m2p ( 50 ) , m2p ( 550 ) ) \n    if  lVehicleTravelDetector  is   not   None : \n       for  detector  in  lVehicleTravelDetector : \n          detector . setFromTime ( 10 ) \n          detector . setToTime ( 60 ) \n \n 详见:  接口详解-IVehicleDrivInfoCollector 、 接口详解-IVehicleQueueCounter 、 接口详解-IVehicleTravelDetector \n 7.3. 输出控制 \n 1- 设置仿真过程中输出 \n \n def   afterOneStep ( self ) : \n= == == == == == =以下是获取一些仿真过程数据的方法 == == == == == == \nTESSNG 顶层接口 \n    iface  =  tessngIFace ( ) \nTESSNG 仿真子接口 \n    simuiface  =  iface . simuInterface ( ) \nTESSNG 路网子接口 \n    netiface  =  iface . netInterface ( ) \n当前仿真计算批次 \n    batchNum  =  simuiface . batchNumber ( ) \n当前已仿真时间，单位：毫秒 \n    simuTime  =  simuiface . simuTimeIntervalWithAcceMutiples ( ) \n当前正在运行车辆列表 \n    lAllVehi  =  simuiface . allVehiStarted ( ) \n获取最近集计时间段内排队计数器集计数据 \n    lVehiQueueAggr  =  simuiface . getVehisQueueAggregated ( ) \n     if   len ( lVehiQueueAggr )   >   0   and  simuTime  >   ( 300   +   20 )   *   1000 : \n         print ( simuTime ) \n        self . lVehiQueueAggrInterval . append ( ( simuTime  /   1000 )   -   300 ) \n         for  vqAggr  in  lVehiQueueAggr : \n            vehiCounterId  =  vqAggr . counterId\n定位到示例路段上的排队计数器 \n             if  vehiCounterId  in   [ 4501 ,   4502 ,   4503 ,   4504 ] : \n                 if  vehiCounterId  not   in  self . VehiQueueAggregationDict : \n                    self . VehiQueueAggregationDict [ vehiCounterId ]   =   [ ] \n                self . VehiQueueAggregationDict [ vehiCounterId ] . append ( vqAggr . avgQueueLength ) \n                 print ( \"车辆排队集计数据：\" ,  vqAggr . counterId ,  vqAggr . avgQueueLength ,  vqAggr . maxQueueLength ) \n                self . vehiQueueAggregateFlag  =   True \n \n 2- 设置仿真结束后输出 \n 3- 设置轨迹输出频率，仿真过程中输出还是仿真结束后输出；输出的路径和名称 \n 4- 输出结构化路网 \n 5- 输出连接器和车道的路网的映射关系 \n def   afterOneStep ( self ) : \n= == == == == == =以下是获取一些仿真过程数据的方法 == == == == == == \nTESSNG 顶层接口 \n    iface  =  tessngIFace ( ) \nTESSNG 仿真子接口 \n    simuiface  =  iface . simuInterface ( ) \nTESSNG 路网子接口 \n    netiface  =  iface . netInterface ( ) \n当前仿真计算批次 \n    batchNum  =  simuiface . batchNumber ( ) \n当前已仿真时间，单位：毫秒 \n    simuTime  =  simuiface . simuTimeIntervalWithAcceMutiples ( ) \n仿真速度调整 \nsimuiface.setAcceMultiples(1) \n正在运行的所有车辆 \n    allVehiStarted_lst  =  simuiface . allVehiStarted ( ) \n获取车辆状态，含位置 \n    lVehiStatus  =  simuiface . getVehisStatus ( ) \nprint(\"车辆位置：\", [(status.vehiId, status.mPoint.x(), status.mPoint.y()) for status in lVehiStatus]) \n信号灯组相位颜色 \n    lPhoneColor  =  simuiface . getSignalPhasesColor ( ) \nprint(\"信号灯组相位颜色\", [(pcolor.signalGroupId, pcolor.phaseNumber, pcolor.color, pcolor.mrIntervalSetted, pcolor.mrIntervalByNow) for pcolor in lPhoneColor]) \n获取当前仿真时间完成穿越采集器的所有车辆信息 \n    lVehiInfo  =  simuiface . getVehisInfoCollected ( ) \nif len(lVehiInfo) > 0: \n   print(\"车辆信息采集器采集信息：\", [(vinfo.collectorId, vinfo.vehiId) for vinfo in lVehiInfo]) \n获取最近集计时间段内采集器采集的所有车辆集计信息 \n    lVehisInfoAggr  =  simuiface . getVehisInfoAggregated ( ) \nif len(lVehisInfoAggr) > 0: \n   print(\"车辆信息采集集计数据：\", [(vinfo.collectorId, vinfo.vehiCount) for vinfo in lVehisInfoAggr]) \n获取当前仿真时间排队计数器计数的车辆排队信息 \n    lVehiQueue  =  simuiface . getVehisQueueCounted ( ) \nif len(lVehiQueue) > 0: \n   print(\"车辆排队计数器计数：\", [(vq.counterId, vq.queueLength) for vq in lVehiQueue]) \n获取最近集计时间段内排队计数器集计数据 \n    lVehiQueueAggr  =  simuiface . getVehisQueueAggregated ( ) \nif len(lVehiQueueAggr) > 0: \n   print(\"车辆排队集计数据：\", [(vqAggr.counterId, vqAggr.avgQueueLength) for vqAggr in lVehiQueueAggr]) \n获取当前仿真时间行程时间检测器完成的行程时间检测信息 \n    lVehiTravel  =  simuiface . getVehisTravelDetected ( ) \nif len(lVehiTravel) > 0: \n   print(\"车辆行程时间检测信息：\", [(vtrav.detectedId, vtrav.travelDistance) for vtrav in lVehiTravel]) \n获取最近集计时间段内行程时间检测器集计数据 \n    lVehiTravAggr  =  simuiface . getVehisTravelAggregated ( ) \nif len(lVehiTravAggr) > 0: \n   print(\"车辆行程时间集计数据：\", [(vTravAggr.detectedId, vTravAggr.vehiCount, vTravAggr.avgTravelDistance) for vTravAggr in lVehiTravAggr]) \n 8. 特殊应用场景 \n 8.1. 公交系统 \n 1-新建公交站点（港湾式，路侧式） \n创建公交线路 \nbusLine  =  tessngIFace ( ) . netInterface ( ) . createBusLine ( [ link10 ,  link11 ] ) \n if  busLine  is   not   None : \n   busLine . setDesirSpeed ( m2p ( 60 ) ) \n   busStation1  =  tessngIFace ( ) . netInterface ( ) . createBusStation ( link10 . lanes ( ) [ 0 ] ,  m2p ( 30 ) ,  m2p ( 50 ) , \"公交站1\" ) \n   busStation2  =  tessngIFace ( ) . netInterface ( ) . createBusStation ( link11 . lanes ( ) [ 0 ] ,  m2p ( 15 ) ,  m2p ( 50 ) , \"公交站2\" ) \n   busStation2 . setType ( 1 )   #站点类型 1：路边式、2：港湾式 \n\n \n 2-新建公交线路 \n创建公交线路 \nbusLine  =  tessngIFace ( ) . netInterface ( ) . createBusLine ( [ link10 ,  link11 ] ) \n if  busLine  is   not   None : \n   busLine . setDesirSpeed ( m2p ( 60 ) ) \n   busStation1  =  tessngIFace ( ) . netInterface ( ) . createBusStation ( link10 . lanes ( ) [ 0 ] ,  m2p ( 30 ) ,  m2p ( 50 ) , \"公交站1\" ) \n   busStation2  =  tessngIFace ( ) . netInterface ( ) . createBusStation ( link11 . lanes ( ) [ 0 ] ,  m2p ( 15 ) ,  m2p ( 50 ) , \"公交站2\" ) \n\n \n 3-编辑线路站点 \n // 创建公交线路\nIBusLine *  pBusLine  =  gpTessInterface - > netInterface ( ) - > createBusLine ( QList < ILink * > ( )   <<  pLink10  <<  pLink11 ) ; \n if   ( pBusLine )   { \n\t\t\tpBusLine - > setDesirSpeed ( m2p ( 60 ) ) ; \n\t\t\tIBusStation *  pBusStation1  =  gpTessInterface - > netInterface ( ) - > createBusStation ( pLink10 - > lanes ( ) [ 0 ] ,  m2p ( 30 ) ,  m2p ( 50 ) ,   \"公交站1\" ) ; \n\t\t\tIBusStation *  pBusStation2  =  gpTessInterface - > netInterface ( ) - > createBusStation ( pLink11 - > lanes ( ) [ 0 ] ,  m2p ( 15 ) ,  m2p ( 50 ) ,   \"公交站2\" ) ; \n } \n关联公交线路 \n if  busStation1  and  tessngIFace ( ) . netInterface ( ) . addBusStationToLine ( busLine ,  busStation1 ) : \n  \tbusStation1 . setType ( 2 ) \n     print ( \"公交站1已关联到公交线路\" ) \n if  busStation2  and  tessngIFace ( ) . netInterface ( ) . addBusStationToLine ( busLine ,  busStation2 ) : \n     print ( \"公交站2已关联到公交线路\" ) \n\nQList < IBusStationLine * >  lStationLine  =  pBusLine - > stationLines ( ) ; \n\t\t if   ( !lStationLine . isEmpty ( ) ) \n\t\t { \n\t\t\tIBusStationLine *  pStationLine  =  lStationLine . first ( ) ; \n\t\t\t //  设置车辆停靠时间 ( 秒 ) \n\t\t\tpStationLine - > setBusParkingTime ( 20 ) ; \n\t\t } \n\n\n \n \n"},{frontmatter:{layout:"Tags",title:"Tags"},regularPath:"/tag/",key:"v-b1564aac",path:"/tag/",content:""},{frontmatter:{layout:"FrontmatterKey",title:"Categories"},regularPath:"/categories/",key:"v-ef9325c4",path:"/categories/",content:""},{frontmatter:{layout:"TimeLines",title:"Timeline"},regularPath:"/timeline/",key:"v-6319eb4e",path:"/timeline/",content:""}],themeConfig:{logo:"/jida_logo.png",logoDark:"/jida_logo2.png",toolbagAddress:"https://www.jidatraffic.com/#/",nav:[{text:"语言",key:"language",ariaLabel:"language Menu",items:[{text:"Python3",link:"/Python3/"},{text:"C++",link:"/C++/"}]},{text:"版本",key:"version",ariaLabel:"Language Menu",items:[{text:"V3.x",link:"/V3.x"}]},{text:"TESS NG 官网",link:"https://www.jidatraffic.com/",target:"_blank"},{text:"GitHub地址",link:"https://github.com/jida-traffic/TESSNG_SecondaryDev_Doc",target:"_blank"}],sidebar:{"/document/V3.x/C++":[{title:"简介",path:"/document/V3.x/C++/"},{title:"更新日志",path:"/document/V3.x/C++/1-changelog.md"},{title:"软件安装",path:"/document/V3.x/C++/install.md"},{title:"快速入门",path:"/document/V3.x/C++/quickstart.md"},{title:"接口详解",path:"/document/V3.x/C++/details.md"},{title:"典型接口案例",path:"/document/V3.x/C++/turorials.md"},{title:"行业案例",path:"/document/V3.x/C++/demo.md"},{title:"注意事项",path:"/document/V3.x/C++/2-information.md"},{title:"问答列表",path:"/document/V3.x/C++/3-QA.md"}],"/document/V3.x/Python3":[{title:"简介",path:"/document/V3.x/Python3/"},{title:"更新日志",path:"/document/V3.x/Python3/1-changelog.md"},{title:"软件安装",path:"/document/V3.x/Python3/install.md"},{title:"快速入门",path:"/document/V3.x/Python3/quickstart.md"},{title:"接口详解",path:"/document/V3.x/Python3/details.md"},{title:"典型接口案例",path:"/document/V3.x/Python3/turorials.md"},{title:"行业案例",path:"/document/V3.x/Python3/demo.md"},{title:"注意事项",path:"/document/V3.x/Python3/2-information.md"},{title:"问答列表",path:"/document/V3.x/Python3/3-QA.md"}],"/":[{title:"简介",path:"/"},{title:"更新日志",path:"/document/V3.x/Python3/1-changelog.md"},{title:"软件安装",path:"/document/V3.x/Python3/install.md"},{title:"快速入门",path:"/document/V3.x/Python3/quickstart.md"},{title:"接口详解",path:"/document/V3.x/Python3/details.md"},{title:"典型接口案例",path:"/document/V3.x/Python3/turorials.md"},{title:"行业案例",path:"/document/V3.x/Python3/demo.md"},{title:"注意事项",path:"/document/V3.x/Python3/2-information.md"},{title:"问答列表",path:"/document/V3.x/Python3/3-QA.md"}]},subSidebar:"auto"}};var Zt=n(27),Jt={computed:{$recoPosts(){let e=this.$site.pages;return e=Object(Zt.a)(e,!1),Object(Zt.c)(e),e},$recoPostsForTimeline(){let e=this.$recoPosts;const t={},n=[];e=Object(Zt.a)(e,!0),this.pages=0==e.length?[]:e;for(let n=0,i=e.length;n<i;n++){const i=e[n],r=Kt(i.frontmatter.date,"year");t[r]?t[r].push(i):t[r]=[i]}for(const e in t){const i=t[e];Object(Zt.b)(i),n.unshift({year:e,data:i})}return n},$categoriesList(){return this.$categories.list.map(e=>(e.pages=e.pages.filter(e=>!1!==e.frontmatter.publish),e))},$tagesList(){return this.$tags.list.map(e=>(e.pages=e.pages.filter(e=>!1!==e.frontmatter.publish),e))},$showSubSideBar(){const{$themeConfig:{subSidebar:e,sidebar:t},$frontmatter:{subSidebar:n,sidebar:i}}=this,r=this.$page.headers||[];return!([n,i].indexOf(!1)>-1)&&([n,i].indexOf("auto")>-1&&r.length>0||[e,t].indexOf("auto")>-1&&r.length>0)}}};function Kt(e,t){e=function(e){var t=new Date(e).toJSON();return new Date(+new Date(t)+288e5).toISOString().replace(/T/g," ").replace(/\.[\d]{3}Z/,"").replace(/-/g,"/")}(e);const n=new Date(e),i=n.getFullYear(),r=n.getMonth()+1,o=n.getDate();return"year"==t?i:`${r}-${o}`}var Yt={all:"全部",article:"文章",tag:"标签",category:"分类",friendLink:"友情链接",timeLine:"时间轴",timeLineMsg:"昨日重现！"},Xt={all:"全部",article:"文章",tag:"標簽",category:"分類",friendLink:"友情鏈接",timeLine:"時間軸",timeLineMsg:"昨日重現！"},en={all:"All",article:"Articles",tag:"Tags",category:"Categories",friendLink:"Friend Links",timeLine:"TimeLine",timeLineMsg:"Yesterday Once More!"},tn={all:"全部",article:"文章",tag:"ラベル",category:"分類",friendLink:"友情リンク",timeLine:"タイムライン",timeLineMsg:"昨日また！"},nn={all:"전체",article:"글",tag:"태그",category:"분류",friendLink:"링크 참조",timeLine:"타임 라인",timeLineMsg:"어제 또!"},rn={all:"Todas",article:"Artículos",tag:"Etiquetas",category:"Categorías",friendLink:"Páginas amigas",timeLine:"Cronología",timeLineMsg:"¡Ayer otra vez!"},on={computed:{$recoLocales(){const e=this.$themeLocaleConfig.recoLocales||{};return/^zh\-(CN|SG)$/.test(this.$lang)?{...Yt,...e}:/^zh\-(HK|MO|TW)$/.test(this.$lang)?{...Xt,...e}:/^ja\-JP$/.test(this.$lang)?{...tn,...e}:/^ko\-KR$/.test(this.$lang)?{...nn,...e}:/^es(\-[A-Z]+)?$/.test(this.$lang)?{...rn,...e}:{...en,...e}}}},an=n(43);n(274);i.b.component("Badge",()=>Promise.all([n.e(0),n.e(11)]).then(n.bind(null,481)));var sn={name:"BackToTop",data:()=>({visible:!1,customStyle:{right:"1rem",bottom:"6rem",width:"2.5rem",height:"2.5rem","border-radius":".25rem","line-height":"2.5rem"},visibilityHeight:400}),mounted(){window.addEventListener("scroll",this.throttle(this.handleScroll,500))},beforeDestroy(){window.removeEventListener("scroll",this.throttle(this.handleScroll,500))},methods:{handleScroll(){this.visible=window.pageYOffset>this.visibilityHeight},backToTop(){window.scrollTo(0,0)},throttle(e,t){let n=null,i=Date.now();return function(){const r=Date.now(),o=t-(r-i),a=this,s=arguments;clearTimeout(n),o<=0?(e.apply(a,s),i=Date.now()):n=setTimeout(e,o)}}}},ln=(n(275),Object($t.a)(sn,(function(){var e=this._self._c;return e("transition",{attrs:{name:"fade"}},[e("div",{directives:[{name:"show",rawName:"v-show",value:this.visible,expression:"visible"}],staticClass:"back-to-ceiling",style:this.customStyle,on:{click:this.backToTop}},[e("svg",{staticClass:"icon",attrs:{t:"1574745035067",viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg","p-id":"5404"}},[e("path",{attrs:{d:"M526.60727968 10.90185116a27.675 27.675 0 0 0-29.21455937 0c-131.36607665 82.28402758-218.69155461 228.01873535-218.69155402 394.07834331a462.20625001 462.20625001 0 0 0 5.36959153 69.94390903c1.00431239 6.55289093-0.34802892 13.13561351-3.76865779 18.80351572-32.63518765 54.11355614-51.75690182 118.55860487-51.7569018 187.94566865a371.06718723 371.06718723 0 0 0 11.50484808 91.98906777c6.53300375 25.50556257 41.68394495 28.14064038 52.69160883 4.22606766 17.37162448-37.73630017 42.14135425-72.50938081 72.80769204-103.21549295 2.18761121 3.04276886 4.15646224 6.24463696 6.40373557 9.22774369a1871.4375 1871.4375 0 0 0 140.04691725 5.34970492 1866.36093723 1866.36093723 0 0 0 140.04691723-5.34970492c2.24727335-2.98310674 4.21612437-6.18497483 6.3937923-9.2178004 30.66633723 30.70611158 55.4360664 65.4791928 72.80769147 103.21549355 11.00766384 23.91457269 46.15860503 21.27949489 52.69160879-4.22606768a371.15156223 371.15156223 0 0 0 11.514792-91.99901164c0-69.36717486-19.13165746-133.82216804-51.75690182-187.92578088-3.42062944-5.66790279-4.76302748-12.26056868-3.76865837-18.80351632a462.20625001 462.20625001 0 0 0 5.36959269-69.943909c-0.00994388-166.08943902-87.32547796-311.81420293-218.6915546-394.09823051zM605.93803103 357.87693858a93.93749974 93.93749974 0 1 1-187.89594924 6.1e-7 93.93749974 93.93749974 0 0 1 187.89594924-6.1e-7z","p-id":"5405"}}),e("path",{attrs:{d:"M429.50777625 765.63860547C429.50777625 803.39355007 466.44236686 1000.39046097 512.00932183 1000.39046097c45.56695499 0 82.4922232-197.00623328 82.5015456-234.7518555 0-37.75494459-36.9345906-68.35043303-82.4922232-68.34111062-45.57627738-0.00932239-82.52019037 30.59548842-82.51086798 68.34111062z","p-id":"5406"}})])])])}),[],!1,null,"c6073ba8",null).exports);n(276),n(282);const cn={prev:"上一页",next:"下一页",go:"前往",jump:"跳转至"},un={prev:"上壹頁",next:"下壹頁",go:"前往",jump:"跳轉至"},pn={prev:"Prev",next:"Next",go:"Go",jump:"Jump To"},fn={prev:"前のページ",next:"次のページ",go:"へ",jump:"ジャンプ"},dn={prev:"이전 페이지",next:"다음 페이지",go:"행",jump:"건너뛰기"};var hn={data:()=>({changePage:"",pageSize:10}),props:{total:{type:Number,default:10},perPage:{type:Number,default:10},currentPage:{type:Number,default:1}},computed:{pages(){return Math.ceil(this.total/this.pageSize)},efont:function(){return this.pages>7},indexes:function(){var e=1,t=this.pages,n=[];for(this.pages>=7&&(this.currentPage>5&&this.currentPage<this.pages-4?(e=Number(this.currentPage)-3,t=Number(this.currentPage)+3):this.currentPage<=5?(e=1,t=7):(t=this.pages,e=this.pages-6));e<=t;)n.push(e),e++;return n},pagationLocales(){return function(e){const{$lang:t,$recoLocales:{pagation:n}={}}=e;return n||(/^zh\-(CN|SG)$/.test(t)?cn:/^zh\-(HK|MO|TW)$/.test(t)?un:/^ja\-JP$/.test(t)?fn:/^ko\-KR$/.test(t)?dn:pn)}(this)},showStartFakePageNum:function(){return this.efont&&!this.indexes.includes(1)},showLastFakePageNum:function(){return this.efont&&!this.indexes.includes(this.pages)}},methods:{goPrev(){let e=this.currentPage;this.currentPage>1&&this.emit(--e)},goNext(){let e=this.currentPage;e<this.pages&&this.emit(++e)},jumpPage:function(e){const t=parseInt(e);t<=this.pages&&t>0?this.emit(t):alert(`请输入大于0，并且小于等于${this.pages}的页码！`)},emit(e){this.$emit("getCurrentPage",e)}}},mn=(n(283),Object($t.a)(hn,(function(){var e=this,t=e._self._c;return t("div",{directives:[{name:"show",rawName:"v-show",value:e.pages>1,expression:"pages > 1"}],staticClass:"pagation"},[t("div",{staticClass:"pagation-list"},[t("span",{directives:[{name:"show",rawName:"v-show",value:e.currentPage>1,expression:"currentPage > 1"}],staticClass:"jump",attrs:{unselectable:"on"},on:{click:e.goPrev}},[e._v(e._s(e.pagationLocales.prev))]),e._v(" "),e.showStartFakePageNum?t("span",{staticClass:"jump",on:{click:function(t){return e.jumpPage(1)}}},[e._v("1")]):e._e(),e._v(" "),e.showStartFakePageNum&&e.indexes[0]>2?t("span",{staticClass:"ellipsis"},[e._v("...")]):e._e(),e._v(" "),e._l(e.indexes,(function(n){return t("span",{key:n,staticClass:"jump",class:{bgprimary:e.currentPage==n},on:{click:function(t){return e.jumpPage(n)}}},[e._v(e._s(n))])})),e._v(" "),e.showLastFakePageNum&&e.pages-e.indexes.at(-1)>1?t("span",{staticClass:"ellipsis"},[e._v("...")]):e._e(),e._v(" "),e.showLastFakePageNum?t("span",{staticClass:"jump",on:{click:function(t){return e.jumpPage(e.pages)}}},[e._v(e._s(e.pages))]):e._e(),e._v(" "),e.currentPage<e.pages?t("span",{staticClass:"jump",on:{click:e.goNext}},[e._v(e._s(e.pagationLocales.next))]):e._e(),e._v(" "),t("span",{staticClass:"jumppoint"},[e._v(e._s(e.pagationLocales.jump))]),e._v(" "),t("span",{staticClass:"jumpinp"},[t("input",{directives:[{name:"model",rawName:"v-model",value:e.changePage,expression:"changePage"}],attrs:{type:"text"},domProps:{value:e.changePage},on:{input:function(t){t.target.composing||(e.changePage=t.target.value)}}})]),e._v(" "),t("span",{staticClass:"jump gobtn",on:{click:function(t){return e.jumpPage(e.changePage)}}},[e._v(e._s(e.pagationLocales.go))])],2)])}),[],!1,null,"22b6649c",null).exports),gn={name:"Valine",props:{options:{type:Object,default:()=>({})}},mounted:function(){this.initValine()},methods:{initValine(){new(n(284))({el:"#valine",placeholder:"just go go",notify:!1,verify:!1,avatar:"retro",visitor:!0,recordIP:!1,path:window.location.pathname,...this.options})}},watch:{$route(e,t){e.path!==t.path&&setTimeout(()=>{this.initValine()},300)}}},vn=(n(285),Object($t.a)(gn,(function(){this._self._c;return this._m(0)}),[function(){var e=this._self._c;return e("div",{staticClass:"valine-wrapper"},[e("div",{attrs:{id:"valine"}})])}],!1,null,null,null).exports),yn=n(1);function bn(e){return Object(yn.a)((function(t,n){void 0===t.inject&&(t.inject={}),Array.isArray(t.inject)||(t.inject[n]=e||n)}))}function In(e){return"function"!=typeof e||!e.managed&&!e.managedReactive}function Sn(e){var t=function(){var n=this,i="function"==typeof e?e.call(this):e;for(var r in(i=Object.create(i||null))[_n]=Object.create(this[_n]||{}),t.managed)i[t.managed[r]]=this[r];var o=function(e){i[t.managedReactive[e]]=a[e],Object.defineProperty(i[_n],t.managedReactive[e],{enumerable:!0,configurable:!0,get:function(){return n[e]}})},a=this;for(var r in t.managedReactive)o(r);return i};return t.managed={},t.managedReactive={},t}var _n="__reactiveInject__";function Dn(e){Array.isArray(e.inject)||(e.inject=e.inject||{},e.inject[_n]={from:_n,default:{}})}var Ln="undefined"!=typeof Reflect&&void 0!==Reflect.getMetadata;function kn(e,t,n){if(Ln&&!Array.isArray(e)&&"function"!=typeof e&&!e.hasOwnProperty("type")&&void 0===e.type){var i=Reflect.getMetadata("design:type",t,n);i!==Object&&(e.type=i)}}function wn(e){return void 0===e&&(e={}),function(t,n){kn(e,t,n),Object(yn.a)((function(t,n){(t.props||(t.props={}))[n]=e}))(t,n)}}function Tn(e,t){void 0===t&&(t={});var n=t.deep,i=void 0!==n&&n,r=t.immediate,o=void 0!==r&&r;return Object(yn.a)((function(t,n){"object"!=typeof t.watch&&(t.watch=Object.create(null));var r=t.watch;"object"!=typeof r[e]||Array.isArray(r[e])?void 0===r[e]&&(r[e]=[]):r[e]=[r[e]],r[e].push({handler:n,deep:i,immediate:o})}))}var Cn=n(21);const Pn=e=>Object(Cn.stringify)(e),xn=(e,t)=>`${e}${Object(Cn.stringify)(t,{addQueryPrefix:!0})}`,On=(e,t)=>`${e.replace(/\/$/,"")}/${t.replace(/^\//,"")}`;var An=n(132),En=n.n(An);const Fn=e=>En()(e,"YYYY-MM-DD HH:mm:ss"),Nn=e=>(e.split("#")[0]||"").split("?")[0]||"",Vn=e=>Object(Cn.parse)(e,{ignoreQueryPrefix:!0})
/*!
 * vue-i18n v8.28.2 
 * (c) 2022 kazuya kawaguchi
 * Released under the MIT License.
 */;var jn=["compactDisplay","currency","currencyDisplay","currencySign","localeMatcher","notation","numberingSystem","signDisplay","style","unit","unitDisplay","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits"],Rn=["dateStyle","timeStyle","calendar","localeMatcher","hour12","hourCycle","timeZone","formatMatcher","weekday","era","year","month","day","hour","minute","second","timeZoneName"];function Qn(e,t){"undefined"!=typeof console&&(console.warn("[vue-i18n] "+e),t&&console.warn(t.stack))}var $n=Array.isArray;function Bn(e){return null!==e&&"object"==typeof e}function Mn(e){return"string"==typeof e}var Gn=Object.prototype.toString;function qn(e){return"[object Object]"===Gn.call(e)}function zn(e){return null==e}function Wn(e){return"function"==typeof e}function Un(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var n=null,i=null;return 1===e.length?Bn(e[0])||$n(e[0])?i=e[0]:"string"==typeof e[0]&&(n=e[0]):2===e.length&&("string"==typeof e[0]&&(n=e[0]),(Bn(e[1])||$n(e[1]))&&(i=e[1])),{locale:n,params:i}}function Hn(e){return JSON.parse(JSON.stringify(e))}function Zn(e,t){return!!~e.indexOf(t)}var Jn=Object.prototype.hasOwnProperty;function Kn(e,t){return Jn.call(e,t)}function Yn(e){for(var t=arguments,n=Object(e),i=1;i<arguments.length;i++){var r=t[i];if(null!=r){var o=void 0;for(o in r)Kn(r,o)&&(Bn(r[o])?n[o]=Yn(n[o],r[o]):n[o]=r[o])}}return n}function Xn(e,t){if(e===t)return!0;var n=Bn(e),i=Bn(t);if(!n||!i)return!n&&!i&&String(e)===String(t);try{var r=$n(e),o=$n(t);if(r&&o)return e.length===t.length&&e.every((function(e,n){return Xn(e,t[n])}));if(r||o)return!1;var a=Object.keys(e),s=Object.keys(t);return a.length===s.length&&a.every((function(n){return Xn(e[n],t[n])}))}catch(e){return!1}}function ei(e){return null!=e&&Object.keys(e).forEach((function(t){"string"==typeof e[t]&&(e[t]=e[t].replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"))})),e}var ti={name:"i18n",functional:!0,props:{tag:{type:[String,Boolean,Object],default:"span"},path:{type:String,required:!0},locale:{type:String},places:{type:[Array,Object]}},render:function(e,t){var n=t.data,i=t.parent,r=t.props,o=t.slots,a=i.$i18n;if(a){var s=r.path,l=r.locale,c=r.places,u=o(),p=a.i(s,l,function(e){var t;for(t in e)if("default"!==t)return!1;return Boolean(t)}(u)||c?function(e,t){var n=t?function(e){0;return Array.isArray(e)?e.reduce(ii,{}):Object.assign({},e)}(t):{};if(!e)return n;var i=(e=e.filter((function(e){return e.tag||""!==e.text.trim()}))).every(ri);0;return e.reduce(i?ni:ii,n)}(u.default,c):u),f=r.tag&&!0!==r.tag||!1===r.tag?r.tag:"span";return f?e(f,n,p):p}}};function ni(e,t){return t.data&&t.data.attrs&&t.data.attrs.place&&(e[t.data.attrs.place]=t),e}function ii(e,t,n){return e[n]=t,e}function ri(e){return Boolean(e.data&&e.data.attrs&&e.data.attrs.place)}var oi,ai={name:"i18n-n",functional:!0,props:{tag:{type:[String,Boolean,Object],default:"span"},value:{type:Number,required:!0},format:{type:[String,Object]},locale:{type:String}},render:function(e,t){var n=t.props,i=t.parent,r=t.data,o=i.$i18n;if(!o)return null;var a=null,s=null;Mn(n.format)?a=n.format:Bn(n.format)&&(n.format.key&&(a=n.format.key),s=Object.keys(n.format).reduce((function(e,t){var i;return Zn(jn,t)?Object.assign({},e,((i={})[t]=n.format[t],i)):e}),null));var l=n.locale||o.locale,c=o._ntp(n.value,l,a,s),u=c.map((function(e,t){var n,i=r.scopedSlots&&r.scopedSlots[e.type];return i?i(((n={})[e.type]=e.value,n.index=t,n.parts=c,n)):e.value})),p=n.tag&&!0!==n.tag||!1===n.tag?n.tag:"span";return p?e(p,{attrs:r.attrs,class:r.class,staticClass:r.staticClass},u):u}};function si(e,t,n){ui(e,n)&&pi(e,t,n)}function li(e,t,n,i){if(ui(e,n)){var r=n.context.$i18n;(function(e,t){var n=t.context;return e._locale===n.$i18n.locale})(e,n)&&Xn(t.value,t.oldValue)&&Xn(e._localeMessage,r.getLocaleMessage(r.locale))||pi(e,t,n)}}function ci(e,t,n,i){if(n.context){var r=n.context.$i18n||{};t.modifiers.preserve||r.preserveDirectiveContent||(e.textContent=""),e._vt=void 0,delete e._vt,e._locale=void 0,delete e._locale,e._localeMessage=void 0,delete e._localeMessage}else Qn("Vue instance does not exists in VNode context")}function ui(e,t){var n=t.context;return n?!!n.$i18n||(Qn("VueI18n instance does not exists in Vue instance"),!1):(Qn("Vue instance does not exists in VNode context"),!1)}function pi(e,t,n){var i,r,o=function(e){var t,n,i,r;Mn(e)?t=e:qn(e)&&(t=e.path,n=e.locale,i=e.args,r=e.choice);return{path:t,locale:n,args:i,choice:r}}(t.value),a=o.path,s=o.locale,l=o.args,c=o.choice;if(a||s||l)if(a){var u=n.context;e._vt=e.textContent=null!=c?(i=u.$i18n).tc.apply(i,[a,c].concat(fi(s,l))):(r=u.$i18n).t.apply(r,[a].concat(fi(s,l))),e._locale=u.$i18n.locale,e._localeMessage=u.$i18n.getLocaleMessage(u.$i18n.locale)}else Qn("`path` is required in v-t directive");else Qn("value type not supported")}function fi(e,t){var n=[];return e&&n.push(e),t&&(Array.isArray(t)||qn(t))&&n.push(t),n}function di(e,t){void 0===t&&(t={bridge:!1}),di.installed=!0;var n;(oi=e).version&&Number(oi.version.split(".")[0]);(n=oi).prototype.hasOwnProperty("$i18n")||Object.defineProperty(n.prototype,"$i18n",{get:function(){return this._i18n}}),n.prototype.$t=function(e){for(var t=[],n=arguments.length-1;n-- >0;)t[n]=arguments[n+1];var i=this.$i18n;return i._t.apply(i,[e,i.locale,i._getMessages(),this].concat(t))},n.prototype.$tc=function(e,t){for(var n=[],i=arguments.length-2;i-- >0;)n[i]=arguments[i+2];var r=this.$i18n;return r._tc.apply(r,[e,r.locale,r._getMessages(),this,t].concat(n))},n.prototype.$te=function(e,t){var n=this.$i18n;return n._te(e,n.locale,n._getMessages(),t)},n.prototype.$d=function(e){for(var t,n=[],i=arguments.length-1;i-- >0;)n[i]=arguments[i+1];return(t=this.$i18n).d.apply(t,[e].concat(n))},n.prototype.$n=function(e){for(var t,n=[],i=arguments.length-1;i-- >0;)n[i]=arguments[i+1];return(t=this.$i18n).n.apply(t,[e].concat(n))},oi.mixin(function(e){function t(){this!==this.$root&&this.$options.__INTLIFY_META__&&this.$el&&this.$el.setAttribute("data-intlify",this.$options.__INTLIFY_META__)}return void 0===e&&(e=!1),e?{mounted:t}:{beforeCreate:function(){var e=this.$options;if(e.i18n=e.i18n||(e.__i18nBridge||e.__i18n?{}:null),e.i18n)if(e.i18n instanceof Pi){if(e.__i18nBridge||e.__i18n)try{var t=e.i18n&&e.i18n.messages?e.i18n.messages:{};(e.__i18nBridge||e.__i18n).forEach((function(e){t=Yn(t,JSON.parse(e))})),Object.keys(t).forEach((function(n){e.i18n.mergeLocaleMessage(n,t[n])}))}catch(e){0}this._i18n=e.i18n,this._i18nWatcher=this._i18n.watchI18nData()}else if(qn(e.i18n)){var n=this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof Pi?this.$root.$i18n:null;if(n&&(e.i18n.root=this.$root,e.i18n.formatter=n.formatter,e.i18n.fallbackLocale=n.fallbackLocale,e.i18n.formatFallbackMessages=n.formatFallbackMessages,e.i18n.silentTranslationWarn=n.silentTranslationWarn,e.i18n.silentFallbackWarn=n.silentFallbackWarn,e.i18n.pluralizationRules=n.pluralizationRules,e.i18n.preserveDirectiveContent=n.preserveDirectiveContent),e.__i18nBridge||e.__i18n)try{var i=e.i18n&&e.i18n.messages?e.i18n.messages:{};(e.__i18nBridge||e.__i18n).forEach((function(e){i=Yn(i,JSON.parse(e))})),e.i18n.messages=i}catch(e){0}var r=e.i18n.sharedMessages;r&&qn(r)&&(e.i18n.messages=Yn(e.i18n.messages,r)),this._i18n=new Pi(e.i18n),this._i18nWatcher=this._i18n.watchI18nData(),(void 0===e.i18n.sync||e.i18n.sync)&&(this._localeWatcher=this.$i18n.watchLocale()),n&&n.onComponentInstanceCreated(this._i18n)}else 0;else this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof Pi?this._i18n=this.$root.$i18n:e.parent&&e.parent.$i18n&&e.parent.$i18n instanceof Pi&&(this._i18n=e.parent.$i18n)},beforeMount:function(){var e=this.$options;e.i18n=e.i18n||(e.__i18nBridge||e.__i18n?{}:null),e.i18n?(e.i18n instanceof Pi||qn(e.i18n))&&(this._i18n.subscribeDataChanging(this),this._subscribing=!0):(this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof Pi||e.parent&&e.parent.$i18n&&e.parent.$i18n instanceof Pi)&&(this._i18n.subscribeDataChanging(this),this._subscribing=!0)},mounted:t,beforeDestroy:function(){if(this._i18n){var e=this;this.$nextTick((function(){e._subscribing&&(e._i18n.unsubscribeDataChanging(e),delete e._subscribing),e._i18nWatcher&&(e._i18nWatcher(),e._i18n.destroyVM(),delete e._i18nWatcher),e._localeWatcher&&(e._localeWatcher(),delete e._localeWatcher)}))}}}}(t.bridge)),oi.directive("t",{bind:si,update:li,unbind:ci}),oi.component(ti.name,ti),oi.component(ai.name,ai),oi.config.optionMergeStrategies.i18n=function(e,t){return void 0===t?e:t}}var hi=function(){this._caches=Object.create(null)};hi.prototype.interpolate=function(e,t){if(!t)return[e];var n=this._caches[e];return n||(n=function(e){var t=[],n=0,i="";for(;n<e.length;){var r=e[n++];if("{"===r){i&&t.push({type:"text",value:i}),i="";var o="";for(r=e[n++];void 0!==r&&"}"!==r;)o+=r,r=e[n++];var a="}"===r,s=mi.test(o)?"list":a&&gi.test(o)?"named":"unknown";t.push({value:o,type:s})}else"%"===r?"{"!==e[n]&&(i+=r):i+=r}return i&&t.push({type:"text",value:i}),t}(e),this._caches[e]=n),function(e,t){var n=[],i=0,r=Array.isArray(t)?"list":Bn(t)?"named":"unknown";if("unknown"===r)return n;for(;i<e.length;){var o=e[i];switch(o.type){case"text":n.push(o.value);break;case"list":n.push(t[parseInt(o.value,10)]);break;case"named":"named"===r&&n.push(t[o.value]);break;case"unknown":0}i++}return n}(n,t)};var mi=/^(?:\d)+/,gi=/^(?:\w)+/;var vi=[];vi[0]={ws:[0],ident:[3,0],"[":[4],eof:[7]},vi[1]={ws:[1],".":[2],"[":[4],eof:[7]},vi[2]={ws:[2],ident:[3,0],0:[3,0],number:[3,0]},vi[3]={ident:[3,0],0:[3,0],number:[3,0],ws:[1,1],".":[2,1],"[":[4,1],eof:[7,1]},vi[4]={"'":[5,0],'"':[6,0],"[":[4,2],"]":[1,3],eof:8,else:[4,0]},vi[5]={"'":[4,0],eof:8,else:[5,0]},vi[6]={'"':[4,0],eof:8,else:[6,0]};var yi=/^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;function bi(e){if(null==e)return"eof";switch(e.charCodeAt(0)){case 91:case 93:case 46:case 34:case 39:return e;case 95:case 36:case 45:return"ident";case 9:case 10:case 13:case 160:case 65279:case 8232:case 8233:return"ws"}return"ident"}function Ii(e){var t,n,i,r=e.trim();return("0"!==e.charAt(0)||!isNaN(e))&&(i=r,yi.test(i)?(n=(t=r).charCodeAt(0))!==t.charCodeAt(t.length-1)||34!==n&&39!==n?t:t.slice(1,-1):"*"+r)}var Si=function(){this._cache=Object.create(null)};Si.prototype.parsePath=function(e){var t=this._cache[e];return t||(t=function(e){var t,n,i,r,o,a,s,l=[],c=-1,u=0,p=0,f=[];function d(){var t=e[c+1];if(5===u&&"'"===t||6===u&&'"'===t)return c++,i="\\"+t,f[0](),!0}for(f[1]=function(){void 0!==n&&(l.push(n),n=void 0)},f[0]=function(){void 0===n?n=i:n+=i},f[2]=function(){f[0](),p++},f[3]=function(){if(p>0)p--,u=4,f[0]();else{if(p=0,void 0===n)return!1;if(!1===(n=Ii(n)))return!1;f[1]()}};null!==u;)if(c++,"\\"!==(t=e[c])||!d()){if(r=bi(t),8===(o=(s=vi[u])[r]||s.else||8))return;if(u=o[0],(a=f[o[1]])&&(i=void 0===(i=o[2])?t:i,!1===a()))return;if(7===u)return l}}(e))&&(this._cache[e]=t),t||[]},Si.prototype.getPathValue=function(e,t){if(!Bn(e))return null;var n=this.parsePath(t);if(0===n.length)return null;for(var i=n.length,r=e,o=0;o<i;){var a=r[n[o]];if(null==a)return null;r=a,o++}return r};var _i,Di=/<\/?[\w\s="/.':;#-\/]+>/,Li=/(?:@(?:\.[a-zA-Z]+)?:(?:[\w\-_|./]+|\([\w\-_:|./]+\)))/g,ki=/^@(?:\.([a-zA-Z]+))?:/,wi=/[()]/g,Ti={upper:function(e){return e.toLocaleUpperCase()},lower:function(e){return e.toLocaleLowerCase()},capitalize:function(e){return""+e.charAt(0).toLocaleUpperCase()+e.substr(1)}},Ci=new hi,Pi=function(e){var t=this;void 0===e&&(e={}),!oi&&"undefined"!=typeof window&&window.Vue&&di(window.Vue);var n=e.locale||"en-US",i=!1!==e.fallbackLocale&&(e.fallbackLocale||"en-US"),r=e.messages||{},o=e.dateTimeFormats||e.datetimeFormats||{},a=e.numberFormats||{};this._vm=null,this._formatter=e.formatter||Ci,this._modifiers=e.modifiers||{},this._missing=e.missing||null,this._root=e.root||null,this._sync=void 0===e.sync||!!e.sync,this._fallbackRoot=void 0===e.fallbackRoot||!!e.fallbackRoot,this._fallbackRootWithEmptyString=void 0===e.fallbackRootWithEmptyString||!!e.fallbackRootWithEmptyString,this._formatFallbackMessages=void 0!==e.formatFallbackMessages&&!!e.formatFallbackMessages,this._silentTranslationWarn=void 0!==e.silentTranslationWarn&&e.silentTranslationWarn,this._silentFallbackWarn=void 0!==e.silentFallbackWarn&&!!e.silentFallbackWarn,this._dateTimeFormatters={},this._numberFormatters={},this._path=new Si,this._dataListeners=new Set,this._componentInstanceCreatedListener=e.componentInstanceCreatedListener||null,this._preserveDirectiveContent=void 0!==e.preserveDirectiveContent&&!!e.preserveDirectiveContent,this.pluralizationRules=e.pluralizationRules||{},this._warnHtmlInMessage=e.warnHtmlInMessage||"off",this._postTranslation=e.postTranslation||null,this._escapeParameterHtml=e.escapeParameterHtml||!1,"__VUE_I18N_BRIDGE__"in e&&(this.__VUE_I18N_BRIDGE__=e.__VUE_I18N_BRIDGE__),this.getChoiceIndex=function(e,n){var i=Object.getPrototypeOf(t);if(i&&i.getChoiceIndex)return i.getChoiceIndex.call(t,e,n);var r,o;return t.locale in t.pluralizationRules?t.pluralizationRules[t.locale].apply(t,[e,n]):(r=e,o=n,r=Math.abs(r),2===o?r?r>1?1:0:1:r?Math.min(r,2):0)},this._exist=function(e,n){return!(!e||!n)&&(!zn(t._path.getPathValue(e,n))||!!e[n])},"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||Object.keys(r).forEach((function(e){t._checkLocaleMessage(e,t._warnHtmlInMessage,r[e])})),this._initVM({locale:n,fallbackLocale:i,messages:r,dateTimeFormats:o,numberFormats:a})},xi={vm:{configurable:!0},messages:{configurable:!0},dateTimeFormats:{configurable:!0},numberFormats:{configurable:!0},availableLocales:{configurable:!0},locale:{configurable:!0},fallbackLocale:{configurable:!0},formatFallbackMessages:{configurable:!0},missing:{configurable:!0},formatter:{configurable:!0},silentTranslationWarn:{configurable:!0},silentFallbackWarn:{configurable:!0},preserveDirectiveContent:{configurable:!0},warnHtmlInMessage:{configurable:!0},postTranslation:{configurable:!0},sync:{configurable:!0}};Pi.prototype._checkLocaleMessage=function(e,t,n){var i=function(e,t,n,r){if(qn(n))Object.keys(n).forEach((function(o){var a=n[o];qn(a)?(r.push(o),r.push("."),i(e,t,a,r),r.pop(),r.pop()):(r.push(o),i(e,t,a,r),r.pop())}));else if($n(n))n.forEach((function(n,o){qn(n)?(r.push("["+o+"]"),r.push("."),i(e,t,n,r),r.pop(),r.pop()):(r.push("["+o+"]"),i(e,t,n,r),r.pop())}));else if(Mn(n)){if(Di.test(n)){var o="Detected HTML in message '"+n+"' of keypath '"+r.join("")+"' at '"+t+"'. Consider component interpolation with '<i18n>' to avoid XSS. See https://bit.ly/2ZqJzkp";"warn"===e?Qn(o):"error"===e&&function(e,t){"undefined"!=typeof console&&(console.error("[vue-i18n] "+e),t&&console.error(t.stack))}(o)}}};i(t,e,n,[])},Pi.prototype._initVM=function(e){var t=oi.config.silent;oi.config.silent=!0,this._vm=new oi({data:e,__VUE18N__INSTANCE__:!0}),oi.config.silent=t},Pi.prototype.destroyVM=function(){this._vm.$destroy()},Pi.prototype.subscribeDataChanging=function(e){this._dataListeners.add(e)},Pi.prototype.unsubscribeDataChanging=function(e){!function(e,t){if(e.delete(t));}(this._dataListeners,e)},Pi.prototype.watchI18nData=function(){var e=this;return this._vm.$watch("$data",(function(){for(var t,n,i=(t=e._dataListeners,n=[],t.forEach((function(e){return n.push(e)})),n),r=i.length;r--;)oi.nextTick((function(){i[r]&&i[r].$forceUpdate()}))}),{deep:!0})},Pi.prototype.watchLocale=function(e){if(e){if(!this.__VUE_I18N_BRIDGE__)return null;var t=this,n=this._vm;return this.vm.$watch("locale",(function(i){n.$set(n,"locale",i),t.__VUE_I18N_BRIDGE__&&e&&(e.locale.value=i),n.$forceUpdate()}),{immediate:!0})}if(!this._sync||!this._root)return null;var i=this._vm;return this._root.$i18n.vm.$watch("locale",(function(e){i.$set(i,"locale",e),i.$forceUpdate()}),{immediate:!0})},Pi.prototype.onComponentInstanceCreated=function(e){this._componentInstanceCreatedListener&&this._componentInstanceCreatedListener(e,this)},xi.vm.get=function(){return this._vm},xi.messages.get=function(){return Hn(this._getMessages())},xi.dateTimeFormats.get=function(){return Hn(this._getDateTimeFormats())},xi.numberFormats.get=function(){return Hn(this._getNumberFormats())},xi.availableLocales.get=function(){return Object.keys(this.messages).sort()},xi.locale.get=function(){return this._vm.locale},xi.locale.set=function(e){this._vm.$set(this._vm,"locale",e)},xi.fallbackLocale.get=function(){return this._vm.fallbackLocale},xi.fallbackLocale.set=function(e){this._localeChainCache={},this._vm.$set(this._vm,"fallbackLocale",e)},xi.formatFallbackMessages.get=function(){return this._formatFallbackMessages},xi.formatFallbackMessages.set=function(e){this._formatFallbackMessages=e},xi.missing.get=function(){return this._missing},xi.missing.set=function(e){this._missing=e},xi.formatter.get=function(){return this._formatter},xi.formatter.set=function(e){this._formatter=e},xi.silentTranslationWarn.get=function(){return this._silentTranslationWarn},xi.silentTranslationWarn.set=function(e){this._silentTranslationWarn=e},xi.silentFallbackWarn.get=function(){return this._silentFallbackWarn},xi.silentFallbackWarn.set=function(e){this._silentFallbackWarn=e},xi.preserveDirectiveContent.get=function(){return this._preserveDirectiveContent},xi.preserveDirectiveContent.set=function(e){this._preserveDirectiveContent=e},xi.warnHtmlInMessage.get=function(){return this._warnHtmlInMessage},xi.warnHtmlInMessage.set=function(e){var t=this,n=this._warnHtmlInMessage;if(this._warnHtmlInMessage=e,n!==e&&("warn"===e||"error"===e)){var i=this._getMessages();Object.keys(i).forEach((function(e){t._checkLocaleMessage(e,t._warnHtmlInMessage,i[e])}))}},xi.postTranslation.get=function(){return this._postTranslation},xi.postTranslation.set=function(e){this._postTranslation=e},xi.sync.get=function(){return this._sync},xi.sync.set=function(e){this._sync=e},Pi.prototype._getMessages=function(){return this._vm.messages},Pi.prototype._getDateTimeFormats=function(){return this._vm.dateTimeFormats},Pi.prototype._getNumberFormats=function(){return this._vm.numberFormats},Pi.prototype._warnDefault=function(e,t,n,i,r,o){if(!zn(n))return n;if(this._missing){var a=this._missing.apply(null,[e,t,i,r]);if(Mn(a))return a}else 0;if(this._formatFallbackMessages){var s=Un.apply(void 0,r);return this._render(t,o,s.params,t)}return t},Pi.prototype._isFallbackRoot=function(e){return(this._fallbackRootWithEmptyString?!e:zn(e))&&!zn(this._root)&&this._fallbackRoot},Pi.prototype._isSilentFallbackWarn=function(e){return this._silentFallbackWarn instanceof RegExp?this._silentFallbackWarn.test(e):this._silentFallbackWarn},Pi.prototype._isSilentFallback=function(e,t){return this._isSilentFallbackWarn(t)&&(this._isFallbackRoot()||e!==this.fallbackLocale)},Pi.prototype._isSilentTranslationWarn=function(e){return this._silentTranslationWarn instanceof RegExp?this._silentTranslationWarn.test(e):this._silentTranslationWarn},Pi.prototype._interpolate=function(e,t,n,i,r,o,a){if(!t)return null;var s,l=this._path.getPathValue(t,n);if($n(l)||qn(l))return l;if(zn(l)){if(!qn(t))return null;if(!Mn(s=t[n])&&!Wn(s))return null}else{if(!Mn(l)&&!Wn(l))return null;s=l}return Mn(s)&&(s.indexOf("@:")>=0||s.indexOf("@.")>=0)&&(s=this._link(e,t,s,i,"raw",o,a)),this._render(s,r,o,n)},Pi.prototype._link=function(e,t,n,i,r,o,a){var s=n,l=s.match(Li);for(var c in l)if(l.hasOwnProperty(c)){var u=l[c],p=u.match(ki),f=p[0],d=p[1],h=u.replace(f,"").replace(wi,"");if(Zn(a,h))return s;a.push(h);var m=this._interpolate(e,t,h,i,"raw"===r?"string":r,"raw"===r?void 0:o,a);if(this._isFallbackRoot(m)){if(!this._root)throw Error("unexpected error");var g=this._root.$i18n;m=g._translate(g._getMessages(),g.locale,g.fallbackLocale,h,i,r,o)}m=this._warnDefault(e,h,m,i,$n(o)?o:[o],r),this._modifiers.hasOwnProperty(d)?m=this._modifiers[d](m):Ti.hasOwnProperty(d)&&(m=Ti[d](m)),a.pop(),s=m?s.replace(u,m):s}return s},Pi.prototype._createMessageContext=function(e,t,n,i){var r=this,o=$n(e)?e:[],a=Bn(e)?e:{},s=this._getMessages(),l=this.locale;return{list:function(e){return o[e]},named:function(e){return a[e]},values:e,formatter:t,path:n,messages:s,locale:l,linked:function(e){return r._interpolate(l,s[l]||{},e,null,i,void 0,[e])}}},Pi.prototype._render=function(e,t,n,i){if(Wn(e))return e(this._createMessageContext(n,this._formatter||Ci,i,t));var r=this._formatter.interpolate(e,n,i);return r||(r=Ci.interpolate(e,n,i)),"string"!==t||Mn(r)?r:r.join("")},Pi.prototype._appendItemToChain=function(e,t,n){var i=!1;return Zn(e,t)||(i=!0,t&&(i="!"!==t[t.length-1],t=t.replace(/!/g,""),e.push(t),n&&n[t]&&(i=n[t]))),i},Pi.prototype._appendLocaleToChain=function(e,t,n){var i,r=t.split("-");do{var o=r.join("-");i=this._appendItemToChain(e,o,n),r.splice(-1,1)}while(r.length&&!0===i);return i},Pi.prototype._appendBlockToChain=function(e,t,n){for(var i=!0,r=0;r<t.length&&"boolean"==typeof i;r++){var o=t[r];Mn(o)&&(i=this._appendLocaleToChain(e,o,n))}return i},Pi.prototype._getLocaleChain=function(e,t){if(""===e)return[];this._localeChainCache||(this._localeChainCache={});var n=this._localeChainCache[e];if(!n){t||(t=this.fallbackLocale),n=[];for(var i,r=[e];$n(r);)r=this._appendBlockToChain(n,r,t);(r=Mn(i=$n(t)?t:Bn(t)?t.default?t.default:null:t)?[i]:i)&&this._appendBlockToChain(n,r,null),this._localeChainCache[e]=n}return n},Pi.prototype._translate=function(e,t,n,i,r,o,a){for(var s,l=this._getLocaleChain(t,n),c=0;c<l.length;c++){var u=l[c];if(!zn(s=this._interpolate(u,e[u],i,r,o,a,[i])))return s}return null},Pi.prototype._t=function(e,t,n,i){for(var r,o=[],a=arguments.length-4;a-- >0;)o[a]=arguments[a+4];if(!e)return"";var s=Un.apply(void 0,o);this._escapeParameterHtml&&(s.params=ei(s.params));var l=s.locale||t,c=this._translate(n,l,this.fallbackLocale,e,i,"string",s.params);if(this._isFallbackRoot(c)){if(!this._root)throw Error("unexpected error");return(r=this._root).$t.apply(r,[e].concat(o))}return c=this._warnDefault(l,e,c,i,o,"string"),this._postTranslation&&null!=c&&(c=this._postTranslation(c,e)),c},Pi.prototype.t=function(e){for(var t,n=[],i=arguments.length-1;i-- >0;)n[i]=arguments[i+1];return(t=this)._t.apply(t,[e,this.locale,this._getMessages(),null].concat(n))},Pi.prototype._i=function(e,t,n,i,r){var o=this._translate(n,t,this.fallbackLocale,e,i,"raw",r);if(this._isFallbackRoot(o)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.i(e,t,r)}return this._warnDefault(t,e,o,i,[r],"raw")},Pi.prototype.i=function(e,t,n){return e?(Mn(t)||(t=this.locale),this._i(e,t,this._getMessages(),null,n)):""},Pi.prototype._tc=function(e,t,n,i,r){for(var o,a=[],s=arguments.length-5;s-- >0;)a[s]=arguments[s+5];if(!e)return"";void 0===r&&(r=1);var l={count:r,n:r},c=Un.apply(void 0,a);return c.params=Object.assign(l,c.params),a=null===c.locale?[c.params]:[c.locale,c.params],this.fetchChoice((o=this)._t.apply(o,[e,t,n,i].concat(a)),r)},Pi.prototype.fetchChoice=function(e,t){if(!e||!Mn(e))return null;var n=e.split("|");return n[t=this.getChoiceIndex(t,n.length)]?n[t].trim():e},Pi.prototype.tc=function(e,t){for(var n,i=[],r=arguments.length-2;r-- >0;)i[r]=arguments[r+2];return(n=this)._tc.apply(n,[e,this.locale,this._getMessages(),null,t].concat(i))},Pi.prototype._te=function(e,t,n){for(var i=[],r=arguments.length-3;r-- >0;)i[r]=arguments[r+3];var o=Un.apply(void 0,i).locale||t;return this._exist(n[o],e)},Pi.prototype.te=function(e,t){return this._te(e,this.locale,this._getMessages(),t)},Pi.prototype.getLocaleMessage=function(e){return Hn(this._vm.messages[e]||{})},Pi.prototype.setLocaleMessage=function(e,t){"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||this._checkLocaleMessage(e,this._warnHtmlInMessage,t),this._vm.$set(this._vm.messages,e,t)},Pi.prototype.mergeLocaleMessage=function(e,t){"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||this._checkLocaleMessage(e,this._warnHtmlInMessage,t),this._vm.$set(this._vm.messages,e,Yn(void 0!==this._vm.messages[e]&&Object.keys(this._vm.messages[e]).length?Object.assign({},this._vm.messages[e]):{},t))},Pi.prototype.getDateTimeFormat=function(e){return Hn(this._vm.dateTimeFormats[e]||{})},Pi.prototype.setDateTimeFormat=function(e,t){this._vm.$set(this._vm.dateTimeFormats,e,t),this._clearDateTimeFormat(e,t)},Pi.prototype.mergeDateTimeFormat=function(e,t){this._vm.$set(this._vm.dateTimeFormats,e,Yn(this._vm.dateTimeFormats[e]||{},t)),this._clearDateTimeFormat(e,t)},Pi.prototype._clearDateTimeFormat=function(e,t){for(var n in t){var i=e+"__"+n;this._dateTimeFormatters.hasOwnProperty(i)&&delete this._dateTimeFormatters[i]}},Pi.prototype._localizeDateTime=function(e,t,n,i,r,o){for(var a=t,s=i[a],l=this._getLocaleChain(t,n),c=0;c<l.length;c++){var u=l[c];if(a=u,!zn(s=i[u])&&!zn(s[r]))break}if(zn(s)||zn(s[r]))return null;var p,f=s[r];if(o)p=new Intl.DateTimeFormat(a,Object.assign({},f,o));else{var d=a+"__"+r;(p=this._dateTimeFormatters[d])||(p=this._dateTimeFormatters[d]=new Intl.DateTimeFormat(a,f))}return p.format(e)},Pi.prototype._d=function(e,t,n,i){if(!n)return(i?new Intl.DateTimeFormat(t,i):new Intl.DateTimeFormat(t)).format(e);var r=this._localizeDateTime(e,t,this.fallbackLocale,this._getDateTimeFormats(),n,i);if(this._isFallbackRoot(r)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.d(e,n,t)}return r||""},Pi.prototype.d=function(e){for(var t=[],n=arguments.length-1;n-- >0;)t[n]=arguments[n+1];var i=this.locale,r=null,o=null;return 1===t.length?(Mn(t[0])?r=t[0]:Bn(t[0])&&(t[0].locale&&(i=t[0].locale),t[0].key&&(r=t[0].key)),o=Object.keys(t[0]).reduce((function(e,n){var i;return Zn(Rn,n)?Object.assign({},e,((i={})[n]=t[0][n],i)):e}),null)):2===t.length&&(Mn(t[0])&&(r=t[0]),Mn(t[1])&&(i=t[1])),this._d(e,i,r,o)},Pi.prototype.getNumberFormat=function(e){return Hn(this._vm.numberFormats[e]||{})},Pi.prototype.setNumberFormat=function(e,t){this._vm.$set(this._vm.numberFormats,e,t),this._clearNumberFormat(e,t)},Pi.prototype.mergeNumberFormat=function(e,t){this._vm.$set(this._vm.numberFormats,e,Yn(this._vm.numberFormats[e]||{},t)),this._clearNumberFormat(e,t)},Pi.prototype._clearNumberFormat=function(e,t){for(var n in t){var i=e+"__"+n;this._numberFormatters.hasOwnProperty(i)&&delete this._numberFormatters[i]}},Pi.prototype._getNumberFormatter=function(e,t,n,i,r,o){for(var a=t,s=i[a],l=this._getLocaleChain(t,n),c=0;c<l.length;c++){var u=l[c];if(a=u,!zn(s=i[u])&&!zn(s[r]))break}if(zn(s)||zn(s[r]))return null;var p,f=s[r];if(o)p=new Intl.NumberFormat(a,Object.assign({},f,o));else{var d=a+"__"+r;(p=this._numberFormatters[d])||(p=this._numberFormatters[d]=new Intl.NumberFormat(a,f))}return p},Pi.prototype._n=function(e,t,n,i){if(!Pi.availabilities.numberFormat)return"";if(!n)return(i?new Intl.NumberFormat(t,i):new Intl.NumberFormat(t)).format(e);var r=this._getNumberFormatter(e,t,this.fallbackLocale,this._getNumberFormats(),n,i),o=r&&r.format(e);if(this._isFallbackRoot(o)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.n(e,Object.assign({},{key:n,locale:t},i))}return o||""},Pi.prototype.n=function(e){for(var t=[],n=arguments.length-1;n-- >0;)t[n]=arguments[n+1];var i=this.locale,r=null,o=null;return 1===t.length?Mn(t[0])?r=t[0]:Bn(t[0])&&(t[0].locale&&(i=t[0].locale),t[0].key&&(r=t[0].key),o=Object.keys(t[0]).reduce((function(e,n){var i;return Zn(jn,n)?Object.assign({},e,((i={})[n]=t[0][n],i)):e}),null)):2===t.length&&(Mn(t[0])&&(r=t[0]),Mn(t[1])&&(i=t[1])),this._n(e,i,r,o)},Pi.prototype._ntp=function(e,t,n,i){if(!Pi.availabilities.numberFormat)return[];if(!n)return(i?new Intl.NumberFormat(t,i):new Intl.NumberFormat(t)).formatToParts(e);var r=this._getNumberFormatter(e,t,this.fallbackLocale,this._getNumberFormats(),n,i),o=r&&r.formatToParts(e);if(this._isFallbackRoot(o)){if(!this._root)throw Error("unexpected error");return this._root.$i18n._ntp(e,t,n,i)}return o||[]},Object.defineProperties(Pi.prototype,xi),Object.defineProperty(Pi,"availabilities",{get:function(){if(!_i){var e="undefined"!=typeof Intl;_i={dateTimeFormat:e&&void 0!==Intl.DateTimeFormat,numberFormat:e&&void 0!==Intl.NumberFormat}}return _i}}),Pi.install=di,Pi.version="8.28.2";var Oi=Pi;
/*!
 * vssue - A vue-powered issue-based comment plugin
 *
 * @version v1.4.8
 * @link https://vssue.js.org
 * @license MIT
 * @copyright 2018-2021 meteorlxy
 */
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */function Ai(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a}var Ei=i.b.extend({name:"Iconfont"});function Fi(e,t,n,i,r,o,a,s,l,c){"boolean"!=typeof a&&(l=s,s=a,a=!1);const u="function"==typeof n?n.options:n;let p;if(e&&e.render&&(u.render=e.render,u.staticRenderFns=e.staticRenderFns,u._compiled=!0,r&&(u.functional=!0)),i&&(u._scopeId=i),o?(p=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),t&&t.call(this,l(e)),e&&e._registeredComponents&&e._registeredComponents.add(o)},u._ssrRegister=p):t&&(p=a?function(e){t.call(this,c(e,this.$root.$options.shadowRoot))}:function(e){t.call(this,s(e))}),p)if(u.functional){const e=u.render;u.render=function(t,n){return p.call(n),e(t,n)}}else{const e=u.beforeCreate;u.beforeCreate=e?[].concat(e,p):[p]}return n}"undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());const Ni=Fi({render:function(e,t){var n=t._c;return n("svg",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}]},[n("symbol",{attrs:{id:"vssue-icon-bitbucket",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M579.5522464 489.45249493q4.8371808 38.38537173-30.81752427 61.55702827t-67.95459093 3.66689493q-23.79580907-10.37653333-32.6119616-35.34262826t-0.31207573-50.01020907 31.67573333-35.34262827q21.92335253-11.00068587 44.1587808-7.33379093t39.00952427 21.61127573 16.77409493 41.1160384zM647.19476053 476.65737173q-8.50407573-65.22392427-68.8908192-99.9424t-120.07131413-7.9579424q-38.38537173 17.08617173-61.24495253 53.9111616t-21.0651424 78.95527574q2.41859093 55.4715424 47.20152426 94.48106666t100.87862827 34.1723424q55.4715424-4.8371808 92.60860907-51.18049493t30.50544746-102.43900907zM792.93434133 146.32472427q-12.17097173-16.4620192-34.1723424-27.15062827t-35.34262826-13.41927573-43.30057174-7.64586667q-177.33729493-28.63299093-345.00022826 1.24830507-26.2144 4.29104747-40.25782827 7.33379093t-33.54819093 13.41927573-30.50544747 26.2144q18.2564576 17.08617173 46.34331413 27.6967616t44.78293334 13.41927574 53.36502826 7.02171413q138.95192427 17.71032427 273.06666667 0.62415253 38.38537173-4.8371808 54.53531413-7.33379093t44.1587808-13.1072 45.7191616-28.32091413zM827.65281813 777.10872427q-4.8371808 15.83786667-9.44030506 46.65539093t-8.50407574 51.18049493-17.39824746 42.6764192-35.34262827 34.4064q-52.4288 29.2571424-115.46819093 43.61264747t-123.1140576 13.41927573-122.8019808-11.3127616q-28.0088384-4.8371808-49.69813334-11.00068586t-46.65539093-16.4620192-44.4708576-26.52647574-31.67573333-37.4491424q-15.21371413-58.51428587-34.71847574-177.96144746l3.66689494-9.7523808 11.00068586-5.46133334q135.9091808 90.1900192 308.72137174 90.1900192t309.34552426-90.1900192q12.79512427 3.66689493 14.5895616 14.04342827t-3.0427424 27.46270507-4.8371808 22.54750506zM937.97175147 191.41973333q-15.83786667 101.8148576-67.64251414 399.22346667-3.0427424 18.2564576-16.4620192 34.1723424t-26.52647573 24.3419424-33.23611413 18.88060907q-153.61950507 76.7707424-371.8387808 53.67710506-151.12289493-16.4620192-240.14262827-84.72868586-9.12822827-7.33379093-15.52579093-16.1499424t-10.37653334-21.2992-5.46133333-20.75306667-3.66689493-24.10788587-3.3548192-21.2992q-5.46133333-30.50544747-16.1499424-91.43832426t-17.08617174-98.4600384-14.35550506-89.8779424-13.41927574-96.27550507q1.7944384-15.83786667 10.68860907-29.5692192t19.19268587-22.8595808 27.46270506-18.2564576 28.0088384-13.73135253 29.2571424-11.3127616q76.22460907-28.0088384 190.75657174-39.00952427 231.0144-22.54750507 412.01859093 30.50544747 94.48106667 28.0088384 131.072 74.35215253 9.7523808 12.17097173 10.0644576 31.0515808t-3.3548192 32.9240384z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-gitea",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M184.31868985 236.10860742C106.94832667 235.94086648 3.32655508 285.13080468 9.02973665 408.46209936c8.93218827 192.65010787 206.32096845 210.5144844 285.20099725 212.06608453 8.63864186 36.14810496 101.48307766 160.77938883 170.21479898 167.32127321h301.09442177c180.57278288-11.99345499 315.77172611-546.07960359 215.54670217-548.09249109-165.7696721 7.79993906-264.02374305 11.74184405-348.27147151 12.41280591v166.69224585l-26.25140843-11.61603761-0.16773997-154.99233728c-96.70246985-0.04193548-181.83083757-4.52899687-343.4069947-12.49667687-20.21274496-0.12580547-48.39316992-3.5644886-78.67035236-3.64835859z m10.94507577 68.14462849h9.22573371c10.98701124 98.75729283 28.85138778 156.50200291 64.99949274 244.73357185-92.25734394-10.90314029-170.75995634-37.69970509-185.18564974-137.75698809-7.46445813-51.78991757 17.69663558-105.84433456 110.96042329-107.01851827z m358.83913087 97.07988723c6.29027343 0.08386999 12.70635233 1.25805468 18.74501482 4.02577499l31.40943263 13.54505513-22.51917887 41.05451824a28.18042496 25.03528825 0 0 0-10.10637297 1.59353561 28.18042496 25.03528825 0 0 0-16.98373825 32.038459 28.18042496 25.03528825 0 0 0 4.69673781 7.29671718l-38.83195528 70.70267333a28.18042496 25.03528825 0 0 0-9.30960467 1.59353659 28.18042496 25.03528825 0 0 0-16.98373825 32.038459 28.18042496 25.03528825 0 0 0 36.06423497 15.09665623 28.18042496 25.03528825 0 0 0 16.94180276-32.08039449 28.18042496 25.03528825 0 0 0-6.62575434-9.22573468l37.82551056-68.85752581a28.18042496 25.03528825 0 0 0 12.28700044-1.25805469 28.18042496 25.03528825 0 0 0 8.93218826-4.69673783c14.59343435 6.12253248 26.54495386 11.11281671 35.14166122 15.34826717 12.91602778 6.37414341 17.48696012 10.60959485 18.87082027 15.30633169 1.38386015 4.61286685-0.12580547 13.50312062-7.42252263 29.10299872-5.45157063 11.61603859-14.46762889 28.09655497-25.11915823 47.51253164a28.18042496 25.03528825 0 0 0-10.52572486 1.59353659 28.18042496 25.03528825 0 0 0-16.98373826 32.038459 28.18042496 25.03528825 0 0 0 36.06423498 15.09665623 28.18042496 25.03528825 0 0 0 16.94180278-32.03845901 28.18042496 25.03528825 0 0 0-5.74511608-8.47090188c10.52572388-19.20630122 19.58371762-35.72875308 25.41270465-48.14155897 7.88380904-16.85793279 11.99345499-29.39654416 8.38703091-41.51580463-3.60642311-12.11926046-14.67730434-20.0030695-29.35460966-27.25785217-9.6450856-4.73867233-21.68047607-9.77089106-36.06423399-15.80955357a28.18042496 25.03528825 0 0 0-1.59353562-10.022502 28.18042496 25.03528825 0 0 0-6.08059796-8.7644483l22.14176246-40.38355541 122.61839638 52.96410227c22.14176247 9.6031511 31.2836262 33.12877372 20.54822685 52.8382968l-84.28966393 154.32137544c-10.77733482 19.66758857-37.23841869 27.80300855-59.38018118 18.24179293l-173.48574115-74.98005927c-22.14176247-9.5612156-31.32556167-33.12877372-20.54822687-52.83829679l84.28966395-154.27943995c7.38058716-13.54505513 22.22563246-21.59660511 37.951317-22.22563246h2.68384935z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-gitee",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M978.404275 409.561604H455.061338c-25.117645 0-45.499734 20.382089-45.499734 45.499734l-0.031997 113.781333c0 25.117645 20.350092 45.499734 45.499734 45.531731h318.594132c25.117645 0 45.499734 20.382089 45.499734 45.499735v22.749867a136.5312 136.5312 0 0 1-136.5312 136.5312H250.248539a45.499734 45.499734 0 0 1-45.499734-45.499734V341.343999a136.5312 136.5312 0 0 1 136.5312-136.5312L978.308284 204.780802c25.117645 0 45.499734-20.350092 45.499734-45.467738L1023.904009 45.531731h0.031997A45.499734 45.499734 0 0 0 978.468269 0h-0.031997L341.343999 0.031997C152.84967 0.031997 0.031997 152.84967 0.031997 341.343999v637.092273c0 25.117645 20.382089 45.499734 45.499734 45.499734h671.233072a307.171203 307.171203 0 0 0 307.171203-307.171203v-261.671468c0-25.117645-20.382089-45.499734-45.499734-45.499734z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-github",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M512 20.4425c-278.334 0-504 225.6345-504 504 0 222.6735 144.4275 411.6105 344.673 478.233 25.2 4.662 34.461-10.9305 34.461-24.255 0-12.0015-0.4725-51.723-0.693-93.8385-140.238 30.492-169.8165-59.472-169.8165-59.472-22.932-58.2435-55.944-73.7415-55.944-73.7415-45.738-31.2795 3.465-30.6495 3.465-30.6495 50.589 3.5595 77.238 51.9435 77.238 51.9435 44.9505 77.049 117.9045 54.7785 146.664 41.895 4.5045-32.571 17.577-54.81 32.004-67.41-111.951-12.726-229.635-55.9755-229.635-249.0705 0-55.0305 19.6875-99.981 51.9435-135.2925-5.229-12.6945-22.491-63.945 4.8825-133.371 0 0 42.336-13.545 138.6315 51.66 40.194-11.1825 83.3175-16.758 126.1575-16.9785 42.8085 0.189 85.9635 5.796 126.252 16.9785 96.201-65.205 138.4425-51.66 138.4425-51.66 27.4365 69.426 10.1745 120.6765 4.9455 133.371 32.319 35.28 51.8805 80.262 51.8805 135.2925 0 193.5675-117.9045 236.187-230.139 248.6925 18.081 15.6555 34.1775 46.305 34.1775 93.3345 0 67.4415-0.5985 121.716-0.5985 138.3165 0 13.419 9.072 29.1375 34.6185 24.192 200.151-66.717 344.3895-255.5595 344.3895-478.17 0-278.3655-225.666-504-504-504z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-gitlab",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M66.61375986 405.11600042L512.11376028 976.03999972 23.84576 621.65599958a39.312 39.312 0 0 1-14.07600042-43.30799944l56.8080007-173.26800028z m259.88400014 0h371.26800014L512.14975986 976.03999972zM215.11376 60.88400042l111.384 344.232H66.61375986l111.384-344.232a19.72800014 19.72800014 0 0 1 37.11600014 0z m742.49999972 344.232l56.8080007 173.2679993a39.23999986 39.23999986 0 0 1-14.07600042 43.30800042l-488.26800028 354.38400014 445.50000042-570.92400028z m0 0h-259.88400014l111.384-344.232a19.72800014 19.72800014 0 0 1 37.11600014 0z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-loading",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M843.307 742.24c0 3.217 2.607 5.824 5.824 5.824s5.824-2.607 5.824-5.824a5.823 5.823 0 0 0-5.824-5.824 5.823 5.823 0 0 0-5.824 5.824zM714.731 874.912c0 6.398 5.186 11.584 11.584 11.584s11.584-5.186 11.584-11.584-5.186-11.584-11.584-11.584-11.584 5.186-11.584 11.584zM541.419 943.2c0 9.614 7.794 17.408 17.408 17.408s17.408-7.794 17.408-17.408-7.794-17.408-17.408-17.408-17.408 7.794-17.408 17.408z m-186.56-9.152c0 12.795 10.373 23.168 23.168 23.168s23.168-10.373 23.168-23.168-10.373-23.168-23.168-23.168-23.168 10.373-23.168 23.168zM189.355 849.12c0 16.012 12.98 28.992 28.992 28.992s28.992-12.98 28.992-28.992-12.98-28.992-28.992-28.992-28.992 12.98-28.992 28.992zM74.731 704.736c0 19.228 15.588 34.816 34.816 34.816s34.816-15.588 34.816-34.816-15.588-34.816-34.816-34.816-34.816 15.588-34.816 34.816z m-43.008-177.28c0 22.41 18.166 40.576 40.576 40.576s40.576-18.166 40.576-40.576-18.166-40.576-40.576-40.576-40.576 18.166-40.576 40.576z m35.392-176.128c0 25.626 20.774 46.4 46.4 46.4s46.4-20.774 46.4-46.4c0-25.626-20.774-46.4-46.4-46.4-25.626 0-46.4 20.774-46.4 46.4z m106.176-142.016c0 28.843 23.381 52.224 52.224 52.224s52.224-23.381 52.224-52.224c0-28.843-23.381-52.224-52.224-52.224-28.843 0-52.224 23.381-52.224 52.224z m155.904-81.344c0 32.024 25.96 57.984 57.984 57.984s57.984-25.96 57.984-57.984-25.96-57.984-57.984-57.984-57.984 25.96-57.984 57.984z m175.104-5.056c0 35.24 28.568 63.808 63.808 63.808s63.808-28.568 63.808-63.808c0-35.24-28.568-63.808-63.808-63.808-35.24 0-63.808 28.568-63.808 63.808z m160.32 72.128c0 38.421 31.147 69.568 69.568 69.568s69.568-31.147 69.568-69.568-31.147-69.568-69.568-69.568-69.568 31.147-69.568 69.568z m113.92 135.488c0 41.638 33.754 75.392 75.392 75.392s75.392-33.754 75.392-75.392-33.754-75.392-75.392-75.392-75.392 33.754-75.392 75.392z m45.312 175.488c0 44.854 36.362 81.216 81.216 81.216s81.216-36.362 81.216-81.216c0-44.854-36.362-81.216-81.216-81.216-44.854 0-81.216 36.362-81.216 81.216z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-like",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M885.9 533.7c16.8-22.2 26.1-49.4 26.1-77.7 0-44.9-25.1-87.4-65.5-111.1a67.67 67.67 0 0 0-34.3-9.3H572.4l6-122.9c1.4-29.7-9.1-57.9-29.5-79.4-20.5-21.5-48.1-33.4-77.9-33.4-52 0-98 35-111.8 85.1l-85.9 311H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h601.3c9.2 0 18.2-1.8 26.5-5.4 47.6-20.3 78.3-66.8 78.3-118.4 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7-0.2-12.6-2-25.1-5.6-37.1zM184 852V568h81v284h-81z m636.4-353l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 22.4-13.2 42.6-33.6 51.8H329V564.8l99.5-360.5c5.2-18.9 22.5-32.2 42.2-32.3 7.6 0 15.1 2.2 21.1 6.7 9.9 7.4 15.2 18.6 14.6 30.5l-9.6 198.4h314.4C829 418.5 840 436.9 840 456c0 16.5-7.2 32.1-19.6 43z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-unlike",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M885.9 490.3c3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-51.6-30.7-98.1-78.3-118.4-8.3-3.6-17.2-5.4-26.5-5.4H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h129.3l85.8 310.8C372.9 889 418.9 924 470.9 924c29.7 0 57.4-11.8 77.9-33.4 20.5-21.5 31-49.7 29.5-79.4l-6-122.9h239.9c12.1 0 23.9-3.2 34.3-9.3 40.4-23.5 65.5-66.1 65.5-111 0-28.3-9.3-55.5-26.1-77.7zM184 456V172h81v284h-81z m627.2 160.4H496.8l9.6 198.4c0.6 11.9-4.7 23.1-14.6 30.5-6.1 4.5-13.6 6.8-21.1 6.7-19.6-0.1-36.9-13.4-42.2-32.3L329 459.2V172h415.4c20.4 9.2 33.6 29.4 33.6 51.8 0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 9.7-2.3 18.9-6.9 27.3l-14 25.5 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 19.1-11 37.5-28.8 48.4z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-heart",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M923 283.6c-13.4-31.1-32.6-58.9-56.9-82.8-24.3-23.8-52.5-42.4-84-55.5-32.5-13.5-66.9-20.3-102.4-20.3-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5-24.4 23.9-43.5 51.7-56.9 82.8-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3 0.1-35.3-7-69.6-20.9-101.9zM512 814.8S156 586.7 156 385.5C156 283.6 240.3 201 344.3 201c73.1 0 136.5 40.8 167.7 100.4C543.2 241.8 606.6 201 679.7 201c104 0 188.3 82.6 188.3 184.5 0 201.2-356 429.3-356 429.3z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-edit",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M723.2 917.76H286.72c-65.28 0-118.4-51.2-118.4-113.92V261.76C168.32 198.4 221.44 147.2 286.72 147.2h375.04c17.92 0 32 14.08 32 32s-14.08 32-32 32H286.72c-30.08 0-54.4 22.4-54.4 49.92v542.08c0 27.52 24.32 49.92 54.4 49.92H723.2c30.08 0 54.4-22.4 54.4-49.92V440.32c0-17.92 14.08-32 32-32s32 14.08 32 32v363.52c0 62.72-53.12 113.92-118.4 113.92z"}}),t._v(" "),n("path",{attrs:{d:"M499.84 602.24c-7.68 0-14.72-2.56-21.12-7.68-13.44-11.52-14.72-32-3.2-45.44L780.16 198.4c11.52-13.44 32-14.72 45.44-3.2s14.72 32 3.2 45.44L524.16 591.36c-6.4 7.04-15.36 10.88-24.32 10.88z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-delete",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M677.647059 256l0-90.352941c0-37.436235-23.461647-60.235294-61.771294-60.235294L408.094118 105.411765c-38.249412 0-61.741176 22.799059-61.741176 60.235294l0 90.352941-180.705882 0 0 60.235294 60.235294 0 0 512c0 54.272 33.972706 90.352941 90.352941 90.352941l391.529412 0c55.085176 0 90.352941-33.490824 90.352941-90.352941l0-512 60.235294 0 0-60.235294L677.647059 256zM406.588235 165.647059l210.823529 0-1.264941 90.352941L406.588235 256 406.588235 165.647059zM737.882353 858.352941l-451.764706 0 0-542.117647 451.764706 0L737.882353 858.352941zM466.823529 376.470588l-58.729412 0-1.505882 391.529412 60.235294 0L466.823529 376.470588zM617.411765 376.470588l-60.235294 0 0 391.529412 60.235294 0L617.411765 376.470588z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-reply",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M426.666667 384 426.666667 213.333333 128 512 426.666667 810.666667 426.666667 635.733333C640 635.733333 789.333333 704 896 853.333333 853.333333 640 725.333333 426.666667 426.666667 384Z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-error",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M512 720m-48 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0Z"}}),t._v(" "),n("path",{attrs:{d:"M480 416v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8z"}}),t._v(" "),n("path",{attrs:{d:"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48z m-783.5-27.9L512 239.9l339.8 588.2H172.2z"}})])])},staticRenderFns:[]},void 0,Ei,void 0,!0,void 0,!1,void 0,void 0,void 0);const Vi=Fi({},void 0,i.b.extend({name:"TransitionFade",functional:!0,props:{group:{type:Boolean,required:!1,default:!1},tag:{type:String,required:!1,default:"div"}},render:(e,{props:t,children:n})=>e(t.group?"TransitionGroup":"Transition",{props:{name:"fade",mode:"out-in",appear:!0,tag:t.tag}},n)}),void 0,void 0,void 0,!1,void 0,void 0,void 0);const ji=Fi({},void 0,i.b.extend({name:"VssueIcon",functional:!0,props:{name:{type:String,required:!0},title:{type:String,required:!1,default:null}},render:(e,{props:t,data:n})=>e("svg",Object.assign(Object.assign({},n),{class:["vssue-icon","vssue-icon-"+t.name],attrs:{"aria-hidden":"true"}}),[e("title",t.title),e("use",{attrs:{"xlink:href":"#vssue-icon-"+t.name}})])}),void 0,void 0,void 0,!1,void 0,void 0,void 0);let Ri=class extends i.b{constructor(){super(...arguments),this.editMode=!1,this.editContent=this.comment.contentRaw,this.creatingReactions=[],this.isPutingComment=!1,this.isDeletingComment=!1}get currentUser(){return this.vssue.user?this.vssue.user.username:null}get content(){return this.comment.content}get author(){return this.comment.author}get createdAt(){return Fn(this.comment.createdAt)}get updatedAt(){return Fn(this.comment.updatedAt)}get showReactions(){return Boolean(this.vssue.API&&this.vssue.API.platform.meta.reactable&&this.comment.reactions&&!this.editMode)}get reactionKeys(){return["heart","like","unlike"]}get editContentRows(){return this.editContent.split("\n").length-1}get editInputRows(){return this.editContentRows<3?5:this.editContentRows+2}async postReaction({reaction:e}){try{if(this.creatingReactions.includes(e))return;this.creatingReactions.push(e);await this.vssue.postCommentReaction({commentId:this.comment.id,reaction:e})||this.vssue.$emit("error",new Error(this.vssue.$t("reactionGiven",{reaction:this.vssue.$t(e)})));const t=await this.vssue.getCommentReactions({commentId:this.comment.id});t&&(this.comment.reactions=t)}finally{this.creatingReactions.splice(this.creatingReactions.findIndex(t=>t===e),1)}}enterEdit(){this.editMode=!0,this.$nextTick(()=>{this.$refs.input.focus()})}resetEdit(){this.editMode=!1,this.editContent=this.comment.contentRaw}async putComment(){try{if(this.vssue.isPending)return;if(this.editContent!==this.comment.contentRaw){this.isPutingComment=!0,this.vssue.isUpdatingComment=!0;const e=await this.vssue.putComment({commentId:this.comment.id,content:this.editContent});e&&this.vssue.comments.data.splice(this.vssue.comments.data.findIndex(e=>e.id===this.comment.id),1,e)}this.editMode=!1}finally{this.isPutingComment=!1,this.vssue.isUpdatingComment=!1}}async deleteComment(){try{if(this.vssue.isPending)return;if(!window.confirm(this.vssue.$t("deleteConfirm")))return;this.isDeletingComment=!0,this.vssue.isUpdatingComment=!0;await this.vssue.deleteComment({commentId:this.comment.id})?(this.vssue.comments.count-=1,this.vssue.comments.data.length>1&&this.vssue.comments.data.splice(this.vssue.comments.data.findIndex(e=>e.id===this.comment.id),1),this.vssue.query.page>1&&this.vssue.query.page>Math.ceil(this.vssue.comments.count/this.vssue.query.perPage)?this.vssue.query.page-=1:await this.vssue.getComments()):this.vssue.$emit("error",new Error(this.vssue.$t("deleteFailed")))}finally{this.isDeletingComment=!1,this.vssue.isUpdatingComment=!1}}};Ai([wn({type:Object,required:!0})],Ri.prototype,"comment",void 0),Ai([bn()],Ri.prototype,"vssue",void 0),Ri=Ai([Object(yn.b)({components:{VssueIcon:ji}})],Ri);const Qi=Fi({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"vssue-comment",class:{"vssue-comment-edit-mode":e.editMode,"vssue-comment-disabled":e.isDeletingComment||e.isPutingComment}},[n("div",{staticClass:"vssue-comment-avatar"},[n("a",{attrs:{href:e.author.homepage,title:e.author.username,target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:e.author.avatar,alt:e.author.username}})])]),e._v(" "),n("div",{staticClass:"vssue-comment-body"},[e._t("body",[n("div",{staticClass:"vssue-comment-header"},[n("span",{staticClass:"vssue-comment-author"},[n("a",{attrs:{href:e.author.homepage,title:e.author.username,target:"_blank",rel:"noopener noreferrer"}},[e._v("\n            "+e._s(e.author.username)+"\n          ")])]),e._v(" "),n("span",{staticClass:"vssue-comment-created-at"},[e._v("\n          "+e._s(e.createdAt)+"\n        ")])]),e._v(" "),n("div",{staticClass:"vssue-comment-main"},[e.editMode?n("textarea",{directives:[{name:"model",rawName:"v-model",value:e.editContent,expression:"editContent"}],ref:"input",staticClass:"vssue-edit-comment-input",attrs:{rows:e.editInputRows},domProps:{value:e.editContent},on:{keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:t.ctrlKey?e.putComment():null},input:function(t){t.target.composing||(e.editContent=t.target.value)}}}):n("article",{staticClass:"markdown-body",domProps:{innerHTML:e._s(e.content)}})]),e._v(" "),n("div",{staticClass:"vssue-comment-footer"},[e.editMode?n("span",{staticClass:"vssue-comment-hint"},[e._v("\n          "+e._s(e.vssue.$t("editMode"))+"\n        ")]):e._e(),e._v(" "),e.showReactions?n("span",{staticClass:"vssue-comment-reactions"},e._l(e.reactionKeys,(function(t){return n("span",{key:t,staticClass:"vssue-comment-reaction",attrs:{title:e.vssue.$t(e.creatingReactions.includes(t)?"loading":t)},on:{click:function(n){return e.postReaction({reaction:t})}}},[n("VssueIcon",{attrs:{name:e.creatingReactions.includes(t)?"loading":t,title:e.vssue.$t(e.creatingReactions.includes(t)?"loading":t)}}),e._v(" "),n("span",{staticClass:"vssue-comment-reaction-number"},[e._v("\n              "+e._s(e.comment.reactions[t])+"\n            ")])],1)})),0):e._e(),e._v(" "),n("span",{staticClass:"vssue-comment-operations"},[e.comment.author.username===e.currentUser&&e.editMode?n("span",{staticClass:"vssue-comment-operation",class:{"vssue-comment-operation-muted":e.isPutingComment},attrs:{title:e.vssue.$t(e.isPutingComment?"loading":"submit")},on:{click:function(t){return e.putComment()}}},[n("VssueIcon",{directives:[{name:"show",rawName:"v-show",value:e.isPutingComment,expression:"isPutingComment"}],attrs:{name:"loading",title:e.vssue.$t("loading")}}),e._v("\n\n            "+e._s(e.vssue.$t("submit"))+"\n          ")],1):e._e(),e._v(" "),e.comment.author.username===e.currentUser&&e.editMode?n("span",{staticClass:"vssue-comment-operation vssue-comment-operation-muted",attrs:{title:e.vssue.$t("cancel")},on:{click:function(t){return e.resetEdit()}}},[e._v("\n            "+e._s(e.vssue.$t("cancel"))+"\n          ")]):e._e(),e._v(" "),e.comment.author.username===e.currentUser?n("span",{directives:[{name:"show",rawName:"v-show",value:!e.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(t){return e.enterEdit()}}},[n("VssueIcon",{attrs:{name:"edit",title:e.vssue.$t("edit")}})],1):e._e(),e._v(" "),e.comment.author.username===e.currentUser||e.vssue.isAdmin?n("span",{directives:[{name:"show",rawName:"v-show",value:!e.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(t){return e.deleteComment()}}},[n("VssueIcon",{attrs:{name:e.isDeletingComment?"loading":"delete",title:e.vssue.$t(e.isDeletingComment?"loading":"delete")}})],1):e._e(),e._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:!e.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(t){return e.vssue.$emit("reply-comment",e.comment)}}},[n("VssueIcon",{attrs:{name:"reply",title:e.vssue.$t("reply")}})],1)])])])],2)])},staticRenderFns:[]},void 0,Ri,void 0,!1,void 0,!1,void 0,void 0,void 0);let $i=class extends i.b{get disabled(){return this.vssue.isPending}get pageCount(){const e=Math.ceil(this.vssue.comments.count/this.vssue.comments.perPage);return e>1?e:1}get perPageOptions(){const e=[5,10,20,50];return!e.includes(this.vssue.options.perPage)&&this.vssue.options.perPage<100&&e.push(this.vssue.options.perPage),e.sort((e,t)=>e-t)}get page(){return this.vssue.query.page>this.pageCount?this.pageCount:this.vssue.query.page}set page(e){e>0&&e<=this.pageCount&&(this.vssue.query.page=e)}get perPage(){return this.vssue.query.perPage}set perPage(e){this.perPageOptions.includes(e)&&(this.vssue.query.perPage=e)}};Ai([bn()],$i.prototype,"vssue",void 0),$i=Ai([Object(yn.b)({components:{VssueIcon:ji}})],$i);const Bi=Fi({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"vssue-pagination"},[n("div",{staticClass:"vssue-pagination-per-page"},[n("label",[n("select",{directives:[{name:"model",rawName:"v-model",value:e.perPage,expression:"perPage"}],staticClass:"vssue-pagination-select",attrs:{disabled:e.disabled},on:{change:function(t){var n=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){return"_value"in e?e._value:e.value}));e.perPage=t.target.multiple?n:n[0]}}},e._l(e.perPageOptions,(function(t){return n("option",{key:t,domProps:{value:t}},[e._v("\n          "+e._s(t)+"\n        ")])})),0),e._v(" "),n("span",[e._v("\n        "+e._s(e.vssue.$t("perPage"))+"\n      ")])]),e._v(" "),e.vssue.API.platform.meta.sortable?n("span",{class:{"vssue-pagination-link":!0,disabled:e.disabled},attrs:{title:e.vssue.$t("sort")},on:{click:function(t){e.vssue.query.sort="asc"===e.vssue.query.sort?"desc":"asc"}}},[e._v("\n      "+e._s("asc"===e.vssue.query.sort?"↑":"↓")+"\n    ")]):e._e()]),e._v(" "),n("div",{staticClass:"vssue-pagination-page"},[n("span",{class:{"vssue-pagination-link":!0,disabled:1===e.page||e.disabled},attrs:{title:e.vssue.$t("prev")},domProps:{textContent:e._s("<")},on:{click:function(t){e.page-=1}}}),e._v(" "),n("label",[n("span",[e._v("\n        "+e._s(e.vssue.$t("page"))+"\n      ")]),e._v(" "),n("select",{directives:[{name:"show",rawName:"v-show",value:e.pageCount>1,expression:"pageCount > 1"},{name:"model",rawName:"v-model",value:e.page,expression:"page"}],staticClass:"vssue-pagination-select",attrs:{disabled:e.disabled},on:{change:function(t){var n=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){return"_value"in e?e._value:e.value}));e.page=t.target.multiple?n:n[0]}}},e._l(e.pageCount,(function(t){return n("option",{key:t,domProps:{value:t}},[e._v("\n          "+e._s(t)+"\n        ")])})),0),e._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:e.pageCount<2,expression:"pageCount < 2"}],domProps:{textContent:e._s(e.page)}}),e._v(" "),n("span",{domProps:{textContent:e._s(" / "+e.pageCount+" ")}})]),e._v(" "),n("span",{class:{"vssue-pagination-link":!0,disabled:e.page===e.pageCount||e.disabled},attrs:{title:e.vssue.$t("next")},domProps:{textContent:e._s(">")},on:{click:function(t){e.page+=1}}})])])},staticRenderFns:[]},void 0,$i,void 0,!1,void 0,!1,void 0,void 0,void 0);let Mi=class extends i.b{};Ai([bn()],Mi.prototype,"vssue",void 0),Mi=Ai([Object(yn.b)({components:{TransitionFade:Vi,VssueComment:Qi,VssuePagination:Bi}})],Mi);const Gi=Fi({render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"vssue-comments"},[t("VssuePagination"),this._v(" "),t("TransitionFade",{attrs:{group:""}},this._l(this.vssue.comments.data,(function(e){return t("VssueComment",{key:e.id,attrs:{comment:e}})})),1),this._v(" "),t("VssuePagination",{directives:[{name:"show",rawName:"v-show",value:this.vssue.comments.data.length>5,expression:"vssue.comments.data.length > 5"}]})],1)},staticRenderFns:[]},void 0,Mi,void 0,!1,void 0,!1,void 0,void 0,void 0);const qi=Fi({},void 0,i.b.extend({name:"VssueIcon",functional:!0,props:{type:{type:String,required:!1,default:"default"}},render:(e,{props:t,data:n,children:i})=>e("button",Object.assign(Object.assign({},n),{class:["vssue-button","vssue-button-"+t.type]}),i)}),void 0,void 0,void 0,!1,void 0,void 0,void 0);let zi=class extends i.b{constructor(){super(...arguments),this.content=""}get user(){return this.vssue.user}get platform(){return this.vssue.API&&this.vssue.API.platform.name}get isInputDisabled(){return this.loading||null===this.user||null===this.vssue.issue}get isSubmitDisabled(){return""===this.content||this.vssue.isPending||null===this.vssue.issue}get loading(){return this.vssue.isCreatingComment}get contentRows(){return this.content.split("\n").length-1}get inputRows(){return this.contentRows<3?5:this.contentRows+2}created(){this.vssue.$on("reply-comment",e=>{const t=e.contentRaw.replace(/\n/g,"\n> "),n=`@${e.author.username}\n\n> ${t}\n\n`;this.content=this.content.concat(n),this.focus()})}beforeDestroy(){this.vssue.$off("reply-comment")}focus(){this.$refs.input.focus()}async submit(){this.isSubmitDisabled||(await this.vssue.postComment({content:this.content}),this.content="",await this.vssue.getComments())}};Ai([bn()],zi.prototype,"vssue",void 0),zi=Ai([Object(yn.b)({components:{VssueButton:qi,VssueIcon:ji}})],zi);const Wi=Fi({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"vssue-new-comment"},[n("div",{staticClass:"vssue-comment-avatar"},[e.user?n("a",{attrs:{href:e.user.homepage,title:e.user.username,target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:e.user.avatar,alt:e.user.username}})]):n("VssueIcon",{attrs:{name:e.platform.toLowerCase(),title:e.vssue.$t("loginToComment",{platform:e.platform})},on:{click:function(t){return e.vssue.login()}}})],1),e._v(" "),n("div",{staticClass:"vssue-new-comment-body"},[n("textarea",{directives:[{name:"model",rawName:"v-model",value:e.content,expression:"content"}],ref:"input",staticClass:"vssue-new-comment-input",attrs:{rows:e.inputRows,disabled:e.isInputDisabled,placeholder:e.vssue.$t(e.user?"placeholder":"noLoginPlaceHolder"),spellcheck:!1,"aria-label":"leave a comment"},domProps:{value:e.content},on:{keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:t.ctrlKey?e.submit():null},input:function(t){t.target.composing||(e.content=t.target.value)}}})]),e._v(" "),n("div",{staticClass:"vssue-new-comment-footer"},[e.user?n("span",{staticClass:"vssue-current-user"},[n("span",[e._v(e._s(e.vssue.$t("currentUser"))+" - "+e._s(e.user.username)+" - ")]),e._v(" "),n("a",{staticClass:"vssue-logout",on:{click:function(t){return e.vssue.logout()}}},[e._v("\n        "+e._s(e.vssue.$t("logout"))+"\n      ")])]):n("span",{staticClass:"vssue-current-user"},[e._v("\n      "+e._s(e.vssue.$t("loginToComment",{platform:e.platform}))+"\n    ")]),e._v(" "),n("div",{staticClass:"vssue-new-comment-operations"},[e.user?n("VssueButton",{staticClass:"vssue-button-submit-comment",attrs:{type:"primary",disabled:e.isSubmitDisabled},on:{click:function(t){return e.submit()}}},[n("VssueIcon",{directives:[{name:"show",rawName:"v-show",value:e.loading,expression:"loading"}],attrs:{name:"loading"}}),e._v("\n\n        "+e._s(e.vssue.$t(e.loading?"submitting":"submitComment"))+"\n      ")],1):n("VssueButton",{staticClass:"vssue-button-login",attrs:{type:"primary",title:e.vssue.$t("loginToComment",{platform:e.platform})},on:{click:function(t){return e.vssue.login()}}},[e._v("\n        "+e._s(e.vssue.$t("login",{platform:e.platform}))+"\n      ")])],1)])])},staticRenderFns:[]},void 0,zi,void 0,!1,void 0,!1,void 0,void 0,void 0);let Ui=class extends i.b{constructor(){super(...arguments),this.progress={show:!1,percent:0,timer:null,speed:200},this.alert={show:!1,message:null,timer:null}}onLoadingCommentsChange(e){this.vssue.comments&&(e?this.progressStart():this.progressDone())}created(){this.vssue.$on("error",e=>this.alertShow(e.message))}beforeDestroy(){this.vssue.$off("error"),null!==this.progress.timer&&window.clearTimeout(this.progress.timer),null!==this.alert.timer&&window.clearTimeout(this.alert.timer)}progressStart(){this.progress.show=!0,this.progress.percent=0,this.progress.timer=window.setInterval(()=>{this.progress.percent+=5,this.progress.percent>94&&null!==this.progress.timer&&window.clearInterval(this.progress.timer)},this.progress.speed)}progressDone(){this.progress.percent=100,null!==this.progress.timer&&window.clearTimeout(this.progress.timer),this.progress.timer=null,window.setTimeout(()=>{this.progress.show=!1},this.progress.speed)}alertShow(e){this.alert.show=!0,this.alert.message=e,null!==this.alert.timer&&window.clearTimeout(this.alert.timer),this.alert.timer=window.setTimeout(()=>{this.alertHide()},3e3)}alertHide(){this.alert.show=!1,null!==this.alert.timer&&window.clearTimeout(this.alert.timer),this.alert.timer=null}};Ai([bn()],Ui.prototype,"vssue",void 0),Ai([Tn("vssue.isLoadingComments")],Ui.prototype,"onLoadingCommentsChange",null),Ui=Ai([Object(yn.b)({components:{TransitionFade:Vi}})],Ui);const Hi=Fi({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"vssue-notice"},[n("div",{directives:[{name:"show",rawName:"v-show",value:e.progress.show,expression:"progress.show"}],staticClass:"vssue-progress",style:{width:e.progress.percent+"%",transition:"all "+e.progress.speed+"ms linear"}}),e._v(" "),n("TransitionFade",[n("div",{directives:[{name:"show",rawName:"v-show",value:e.alert.show,expression:"alert.show"}],staticClass:"vssue-alert",domProps:{textContent:e._s(e.alert.message)},on:{click:function(t){return e.alertHide()}}})])],1)},staticRenderFns:[]},void 0,Ui,void 0,!1,void 0,!1,void 0,void 0,void 0);let Zi=class extends i.b{get status(){return this.vssue.isFailed?"failed":this.vssue.isInitializing?"initializing":this.vssue.isIssueNotCreated&&!this.vssue.isCreatingIssue?this.vssue.isAdmin||!this.vssue.isLogined?"issueNotCreated":"failed":this.vssue.isLoginRequired?"loginRequired":!this.vssue.comments||this.vssue.isCreatingIssue?"loadingComments":0===this.vssue.comments.data.length?"noComments":null}handleClick(){"issueNotCreated"===this.status?this.vssue.postIssue():"loginRequired"===this.status&&this.vssue.login()}};Ai([bn()],Zi.prototype,"vssue",void 0),Zi=Ai([Object(yn.b)({components:{TransitionFade:Vi,VssueIcon:ji}})],Zi);const Ji=Fi({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("TransitionFade",[e.status?n("div",{key:e.status,staticClass:"vssue-status"},[["failed","loadingComments","initializing"].includes(e.status)?n("VssueIcon",{attrs:{name:"failed"===e.status?"error":"loading"}}):e._e(),e._v(" "),n("p",{staticClass:"vssue-status-info"},[n(["issueNotCreated","loginRequired"].includes(e.status)?"a":"span",{tag:"Component",on:{click:e.handleClick}},[e._v("\n        "+e._s(e.vssue.$t(e.status))+"\n      ")])],1)],1):e._e()])},staticRenderFns:[]},void 0,Zi,void 0,!1,void 0,!1,void 0,void 0,void 0);let Ki=class extends i.b{};Ai([bn()],Ki.prototype,"vssue",void 0),Ki=Ai([Object(yn.b)({components:{TransitionFade:Vi,VssueIcon:ji,VssueComments:Gi,VssueNewComment:Wi,VssueNotice:Hi,VssueStatus:Ji}})],Ki);const Yi=Fi({render:function(){var e=this.$createElement,t=this._self._c||e;return t("TransitionFade",[this.vssue.isInitializing?t("VssueStatus"):t("div",{staticClass:"vssue-body"},[this.vssue.API?t("VssueNewComment"):this._e(),this._v(" "),t("VssueNotice"),this._v(" "),t("TransitionFade",[this.vssue.comments&&this.vssue.comments.data.length>0?t("VssueComments"):t("VssueStatus")],1)],1)],1)},staticRenderFns:[]},void 0,Ki,void 0,!1,void 0,!1,void 0,void 0,void 0);let Xi=class extends i.b{};Ai([bn()],Xi.prototype,"vssue",void 0),Xi=Ai([yn.b],Xi);const er=Fi({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"vssue-header"},[n("a",{staticClass:"vssue-header-comments-count",attrs:{href:e.vssue.issue?e.vssue.issue.link:null,target:"_blank",rel:"noopener noreferrer"}},[n("span",[e._v("\n      "+e._s(e.vssue.comments?e.vssue.$tc("comments",e.vssue.comments.count,{count:e.vssue.comments.count}):e.vssue.$tc("comments",0))+"\n    ")])]),e._v(" "),n("span",{staticClass:"vssue-header-powered-by"},[n("span",[e._v("Powered by")]),e._v(" "),e.vssue.API?n("span",[n("a",{attrs:{href:e.vssue.API.platform.link,title:e.vssue.API.platform.name+" API "+e.vssue.API.platform.version,target:"_blank",rel:"noopener noreferrer"}},[e._v("\n        "+e._s(e.vssue.API.platform.name)+"\n      ")]),e._v(" "),n("span",[e._v("&")])]):e._e(),e._v(" "),n("a",{attrs:{href:"https://github.com/meteorlxy/vssue",title:"Vssue v"+e.vssue.version,target:"_blank",rel:"noopener noreferrer"}},[e._v("\n      Vssue\n    ")])])])},staticRenderFns:[]},void 0,Xi,void 0,!1,void 0,!1,void 0,void 0,void 0),tr={login:"Login with {platform}",logout:"Logout",currentUser:"Current User",loading:"Loading",submit:"Submit",submitting:"Submitting",submitComment:"Submit Comment",cancel:"Cancel",edit:"Edit",editMode:"Edit Mode",delete:"Delete",reply:"Reply",heart:"Heart",like:"Like",unlike:"Unlike",perPage:"Comments per page",sort:"Click to change the sort direction",page:"Page",prev:"Previous Page",next:"Next Page",comments:"Comments | {count} Comment | {count} Comments",loginToComment:"Login with {platform} account to leave a comment",placeholder:"Leave a comment. Styling with Markdown is supported. Ctrl + Enter to submit.",noLoginPlaceHolder:"Login to leave a comment. Styling with Markdown is supported. ",failed:"Failed to load comments",initializing:"Initializing...",issueNotCreated:"Click to create issue",loadingComments:"Loading comments...",loginRequired:"Login to view comments",noComments:"No comments yet. Leave the first comment !",reactionGiven:"Already given '{reaction}' reaction",deleteConfirm:"Confirm to delete this comment ?",deleteFailed:"Failed to delete comment"},nr={login:"使用 {platform} 登录",logout:"退出登录",currentUser:"当前用户",loading:"加载中",submit:"提交",submitting:"发表中",submitComment:"发表评论",cancel:"取消",edit:"编辑",editMode:"编辑模式",delete:"删除",reply:"回复",heart:"喜欢",like:"赞",unlike:"踩",perPage:"每页评论数",sort:"点击改变排序方式",page:"页数",prev:"上一页",next:"下一页",comments:"评论 | {count} 条评论 | {count} 条评论",loginToComment:"使用 {platform} 帐号登录后发表评论",placeholder:"留下你的评论丨支持 Markdown 语法丨Ctrl + Enter 发表评论",noLoginPlaceHolder:"登录后才能发表评论丨支持 Markdown 语法",failed:"评论加载失败",initializing:"正在初始化...",issueNotCreated:"点击创建 Issue",loadingComments:"正在加载评论...",loginRequired:"登录后查看评论",noComments:"还没有评论，来发表第一条评论吧！",reactionGiven:"已经添加过 '{reaction}' 了",deleteConfirm:"确认要删除该评论吗？",deleteFailed:"评论删除失败"},ir={login:"Entrar com {platform}",logout:"Sair",currentUser:"Usuário Atual",loading:"Carregando",submit:"Enviar",submitting:"Enviando",submitComment:"Enviar Comentário",cancel:"Cancelar",edit:"Editar",editMode:"Modo de Edição",delete:"Apagar",reply:"Responder",heart:"Heart",like:"Like",unlike:"Unlike",perPage:"Comentários por página",sort:"Clique para alterar a ordenação",page:"Página",prev:"Página Anterior",next:"Próxima Página",comments:"Comentários | {count} Comentário | {count} Comentários",loginToComment:"Entre com uma conta {platform} para deixar um comentário",placeholder:"Deixe um comentário. Estilos com Markdown suportados. Ctrl + Enter para enviar.",noLoginPlaceHolder:"Entre para deixar um comentário. Estilos com Markdown suportados. ",failed:"Falha ao carregar comentários",initializing:"Inicializando...",issueNotCreated:"Click to create issue",loadingComments:"Carregando comentários...",loginRequired:"Entrar para visualizar comentários",noComments:"Nenhum comentário. Deixe o primeiro comentário!",reactionGiven:"Já reagiu com '{reaction}'",deleteConfirm:"Apagar este comentário?",deleteFailed:"Falha ao apagar comentário"},rr={login:"{platform} でログイン",logout:"ログアウト",currentUser:"現在のユーザー",loading:"読み込み中",submit:"送信",submitting:"送信中",submitComment:"コメントを送信",cancel:"キャンセル",edit:"編集",editMode:"編集モード",delete:"削除",reply:"返信",heart:"ハート",like:"高評価",unlike:"低評価",perPage:"コメント/ページ",sort:"並び順を変更するにはクリックしてください",page:"ページ",prev:"前のページ",next:"次のページ",comments:"コメント | {count} コメント | {count} コメント",loginToComment:"コメントを残すには {platform} アカウントでログインしてください。",placeholder:"コメントを残してください。Markdown 記法をサポートしています。 Ctrl + Enter で送信できます。",noLoginPlaceHolder:"コメントを残すにはログインしてください。マークダウン記法をサポートしています。",failed:"コメントの読み込みに失敗しました",initializing:"初期化中...",issueNotCreated:"Click to create issue",loadingComments:"コメントの読み込み中...",loginRequired:"コメントを見るにはログインしてください",noComments:"まだコメントがありません。最初のコメントを残しましょう！",reactionGiven:"既に '{reaction}' のリアクションをしています",deleteConfirm:"本当にコメントを削除してもいいですか？",deleteFailed:"コメントの削除に失敗しました"},or={login:"התחברו עם {platform}",logout:"התנתקו",currentUser:"משתמש/ת נוכחי/ת",loading:"טוען",submit:"שליחה",submitting:"שולח",submitComment:"שליחת תגובה",cancel:"ביטל",edit:"עריכה",editMode:"מצב עריכה",delete:"מחיקה",reply:"תשובה",heart:"לב",like:"לייק",unlike:"אנלייק",perPage:"תגובות לדף",sort:"לחצו כדי לשנות את כיוון המיון",page:"דף",prev:"הדף הקודם",next:"הדף הבא",comments:"תגובות | {count} תגובה | {count} תגובות",loginToComment:"התחברו עם חשבון {platform} כדי להשאיר תגובה",placeholder:"השאירו תגובה. יש תמיכה בעיצוב בעזרת Markdown. Ctrl + Enter כדי לשלוח.",noLoginPlaceHolder:"התחברו כדי להשאיר תגובה. יש תמיכה בעיצוב בעזרת Markdown. ",failed:"כשלון בטעינת התגובות",initializing:"מאתחל...",issueNotCreated:"לחצו ליצירת issue",loadingComments:"טוען תגובות...",loginRequired:"התחברו כדי לצפות בתגובות",noComments:"עדיין אין תגובות. השאירו תגובה ראשונה !",reactionGiven:"כבר ניתן חיווי '{reaction}'",deleteConfirm:"בטוחים במחיקת התגובה ?",deleteFailed:"כשלון במחיקת התגובה"};Object.prototype.hasOwnProperty.call(i.b,"$i18n")||i.b.use(Oi);const ar=new Oi({locale:"en",fallbackLocale:"en",messages:{en:tr,"en-US":tr,zh:nr,"zh-CN":nr,pt:ir,"pt-BR":ir,ja:rr,"ja-JP":rr,he:or,"he-IL":or}});let sr=class extends i.b{constructor(){super(...arguments),this.title=e=>`${e.prefix}${document.title}`,this.issueId=null,this.options=null,this.API=null,this.accessToken=null,this.user=null,this.issue=null,this.comments=null,this.query={page:1,perPage:10,sort:"desc"},this.isInitializing=!0,this.isIssueNotCreated=!1,this.isLoginRequired=!1,this.isFailed=!1,this.isCreatingIssue=!1,this.isLoadingComments=!1,this.isCreatingComment=!1,this.isUpdatingComment=!1}get version(){return"1.4.8"}get issueTitle(){return null===this.options?"":"function"==typeof this.title?this.title(this.options):`${this.options.prefix}${this.title}`}get isPending(){return this.isLoadingComments||this.isCreatingComment||this.isUpdatingComment}get isLogined(){return null!==this.accessToken&&null!==this.user}get isAdmin(){return null!==this.options&&null!==this.accessToken&&null!==this.user&&(this.user.username===this.options.owner||this.options.admins.includes(this.user.username))}get accessTokenKey(){return this.API?`Vssue.${this.API.platform.name.toLowerCase()}.access_token`:""}onQueryPerPageChange(){this.query.page=1,this.getComments()}onQueryChange(){this.getComments()}setOptions(e){this.options=Object.assign({labels:["Vssue"],state:"Vssue",prefix:"[Vssue]",admins:[],perPage:10,proxy:e=>"https://cors-anywhere.azm.workers.dev/"+e,issueContent:({url:e})=>e,autoCreateIssue:!1},e);const t=["api","owner","repo","clientId"];for(const e of t)this.options[e]||console.warn(`[Vssue] the option '${e}' is required`);if(this.options.locale)this.$i18n.locale=this.options.locale;else{const e=Object.keys(this.$i18n.messages),t=window.navigator.languages;this.$i18n.locale=t.filter(t=>e.includes(t)).shift()||"en"}}async init(){try{await this.initStore(),await this.initComments()}catch(e){e.response&&[401,403].includes(e.response.status)?this.isLoginRequired=!0:this.isFailed=!0,console.error(e)}}async initStore(){try{if(!this.options)throw new Error("Options are required to initialize Vssue");this.API=null,this.accessToken=null,this.user=null,this.issue=null,this.comments=null,this.query={page:1,perPage:this.options.perPage,sort:"desc"},this.isInitializing=!0,this.isIssueNotCreated=!1,this.isLoginRequired=!1,this.isFailed=!1,this.isCreatingIssue=!1,this.isLoadingComments=!1,this.isCreatingComment=!1,this.isUpdatingComment=!1;const e=this.options.api;this.API=new e({baseURL:this.options.baseURL,labels:this.options.labels,state:this.options.state,owner:this.options.owner,repo:this.options.repo,clientId:this.options.clientId,clientSecret:this.options.clientSecret,proxy:this.options.proxy}),await this.handleAuth()}finally{this.isInitializing=!1}}async initComments(){if(this.API&&this.options)if(this.issueId){const[e,t]=await Promise.all([this.API.getIssue({accessToken:this.accessToken,issueId:this.issueId}),this.API.getComments({accessToken:this.accessToken,issueId:this.issueId,query:this.query})]);this.issue=e,this.comments=t}else this.issue=await this.API.getIssue({accessToken:this.accessToken,issueTitle:this.issueTitle}),null===this.issue?(this.isIssueNotCreated=!0,this.options.autoCreateIssue&&await this.postIssue()):await this.getComments()}async postIssue(){if(this.API&&this.options&&!this.issue&&!this.issueId&&(this.isLogined||this.login(),this.isAdmin))try{this.isCreatingIssue=!0;const e=await this.API.postIssue({title:this.issueTitle,content:await this.options.issueContent({options:this.options,url:Nn(window.location.href)}),accessToken:this.accessToken});this.issue=e,this.isIssueNotCreated=!1,await this.getComments()}catch(e){this.isFailed=!0}finally{this.isCreatingIssue=!1}}async getComments(){try{if(!this.API||!this.issue||this.isLoadingComments)return;this.isLoadingComments=!0;const e=await this.API.getComments({accessToken:this.accessToken,issueId:this.issue.id,query:this.query});return this.comments=e,this.query.page!==e.page&&(this.query.page=e.page),this.query.perPage!==e.perPage&&(this.query.perPage=e.perPage),e}catch(e){if(!e.response||![401,403].includes(e.response.status)||this.isLogined)throw this.$emit("error",e),e;this.isLoginRequired=!0}finally{this.isLoadingComments=!1}}async postComment({content:e}){try{if(!this.API||!this.issue||this.isCreatingComment)return;this.isCreatingComment=!0;return await this.API.postComment({accessToken:this.accessToken,content:e,issueId:this.issue.id})}catch(e){throw this.$emit("error",e),e}finally{this.isCreatingComment=!1}}async putComment({commentId:e,content:t}){try{if(!this.API||!this.issue)return;return await this.API.putComment({accessToken:this.accessToken,issueId:this.issue.id,commentId:e,content:t})}catch(e){throw this.$emit("error",e),e}}async deleteComment({commentId:e}){try{if(!this.API||!this.issue)return;return await this.API.deleteComment({accessToken:this.accessToken,issueId:this.issue.id,commentId:e})}catch(e){throw this.$emit("error",e),e}}async getCommentReactions({commentId:e}){try{if(!this.API||!this.issue)return;return await this.API.getCommentReactions({accessToken:this.accessToken,issueId:this.issue.id,commentId:e})}catch(e){throw this.$emit("error",e),e}}async postCommentReaction({commentId:e,reaction:t}){try{if(!this.API||!this.issue)return!1;return await this.API.postCommentReaction({accessToken:this.accessToken,issueId:this.issue.id,commentId:e,reaction:t})}catch(e){throw this.$emit("error",e),e}}login(){this.API&&this.API.redirectAuth()}logout(){this.setAccessToken(null),this.user=null}async handleAuth(){if(!this.API)return;const e=await this.API.handleAuth();e?(this.setAccessToken(e),this.user=await this.API.getUser({accessToken:e})):this.getAccessToken()?this.user=await this.API.getUser({accessToken:this.accessToken}):(this.setAccessToken(null),this.user=null)}getAccessToken(){return this.accessToken=window.localStorage.getItem(this.accessTokenKey),this.accessToken}setAccessToken(e){null===e?window.localStorage.removeItem(this.accessTokenKey):window.localStorage.setItem(this.accessTokenKey,e),this.accessToken=e}};Ai([Tn("query.perPage")],sr.prototype,"onQueryPerPageChange",null),Ai([Tn("query.page"),Tn("query.sort")],sr.prototype,"onQueryChange",null),sr=Ai([Object(yn.b)({i18n:ar})],sr);var lr=sr;let cr=class extends i.b{constructor(){super(...arguments),this.vssue=new lr}onOptionsChange(e){this.vssue.setOptions(e)}mounted(){null!==this.title&&(this.vssue.title=this.title),null!==this.issueId&&(this.vssue.issueId=this.issueId),this.vssue.setOptions(this.options),this.vssue.init()}};var ur;Ai([wn({type:[String,Function],required:!1,default:null})],cr.prototype,"title",void 0),Ai([wn({type:[String,Number],required:!1,default:null})],cr.prototype,"issueId",void 0),Ai([wn({type:Object,required:!1,default:()=>({})})],cr.prototype,"options",void 0),Ai([(ur="vssue",Object(yn.a)((function(e,t){var n=e.provide;Dn(e),In(n)&&(n=e.provide=Sn(n)),n.managed[t]=ur||t})))],cr.prototype,"vssue",void 0),Ai([Tn("options",{deep:!0})],cr.prototype,"onOptionsChange",null),cr=Ai([Object(yn.b)({components:{Iconfont:Ni,VssueBody:Yi,VssueHeader:er}})],cr);const pr=Fi({render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"vssue"},[t("Iconfont"),this._v(" "),t("VssueHeader"),this._v(" "),t("VssueBody")],1)},staticRenderFns:[]},void 0,cr,void 0,!1,void 0,!1,void 0,void 0,void 0);var fr=n(9),dr=n.n(fr);function hr(e){return{username:e.login,avatar:e.avatar_url,homepage:e.html_url}}function mr(e){return{id:e.number,title:e.title,content:e.body,link:e.html_url}}function gr(e){return{like:e["+1"],unlike:e[-1],heart:e.heart}}function vr(e){return{id:e.id,content:e.body_html,contentRaw:e.body,author:hr(e.user),createdAt:e.created_at,updatedAt:e.updated_at,reactions:gr(e.reactions)}}function yr(e){return"like"===e?"+1":"unlike"===e?"-1":e}class br{constructor({baseURL:e="https://github.com",owner:t,repo:n,labels:i,clientId:r,clientSecret:o,state:a,proxy:s}){if(void 0===o||void 0===s)throw new Error("clientSecret and proxy is required for GitHub V3");this.baseURL=e,this.owner=t,this.repo=n,this.labels=i,this.clientId=r,this.clientSecret=o,this.state=a,this.proxy=s,this.$http=dr.a.create({baseURL:"https://github.com"===e?"https://api.github.com":On(e,"api/v3"),headers:{Accept:"application/vnd.github.v3+json"}}),this.$http.interceptors.response.use(e=>e.data&&e.data.error?Promise.reject(new Error(e.data.error_description)):e,e=>(void 0===e.response&&"Network Error"===e.message&&(e.response={status:403}),Promise.reject(e)))}get platform(){return{name:"GitHub",link:this.baseURL,version:"v3",meta:{reactable:!0,sortable:!1}}}redirectAuth(){window.location.href=xn(On(this.baseURL,"login/oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"public_repo",state:this.state})}async handleAuth(){const e=Vn(window.location.search);if(e.code){if(e.state!==this.state)return null;const t=e.code;delete e.code,delete e.state;const n=xn(Nn(window.location.href),e)+window.location.hash;window.history.replaceState(null,"",n);return await this.getAccessToken({code:t})}return null}async getAccessToken({code:e}){const t=On(this.baseURL,"login/oauth/access_token"),n="function"==typeof this.proxy?this.proxy(t):this.proxy,{data:i}=await this.$http.post(n,{client_id:this.clientId,client_secret:this.clientSecret,code:e},{headers:{Accept:"application/json"}});return i.access_token}async getUser({accessToken:e}){const{data:t}=await this.$http.get("user",{headers:{Authorization:"token "+e}});return hr(t)}async getIssue({accessToken:e,issueId:t,issueTitle:n}){const i={};if(e&&(i.headers={Authorization:"token "+e}),!t){i.params={q:[`"${n}"`,"is:issue","in:title",`repo:${this.owner}/${this.repo}`,"is:public",...this.labels.map(e=>"label:"+e)].join(" "),timestamp:Date.now()};const{data:e}=await this.$http.get("search/issues",i);return e.items.map(mr).find(e=>e.title===n)||null}try{i.params={timestamp:Date.now()};const{data:e}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${t}`,i);return mr(e)}catch(e){if(e.response&&404===e.response.status)return null;throw e}}async postIssue({accessToken:e,title:t,content:n}){const{data:i}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues`,{title:t,body:n,labels:this.labels},{headers:{Authorization:"token "+e}});return mr(i)}async getComments({accessToken:e,issueId:t,query:{page:n=1,perPage:i=10}={}}){const r={params:{timestamp:Date.now()}},o={params:{page:n,per_page:i,timestamp:Date.now()},headers:{Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}};e&&(r.headers={Authorization:"token "+e},o.headers.Authorization="token "+e);const[a,s]=await Promise.all([this.$http.get(`repos/${this.owner}/${this.repo}/issues/${t}`,r),this.$http.get(`repos/${this.owner}/${this.repo}/issues/${t}/comments`,o)]),l=s.headers.link||null,c=/rel="next"/.test(l)?Number(l.replace(/^.*[^_]page=(\d*).*rel="next".*$/,"$1"))-1:/rel="prev"/.test(l)?Number(l.replace(/^.*[^_]page=(\d*).*rel="prev".*$/,"$1"))+1:1,u=l?Number(l.replace(/^.*per_page=(\d*).*$/,"$1")):i;return{count:Number(a.data.comments),page:c,perPage:u,data:s.data.map(vr)}}async postComment({accessToken:e,issueId:t,content:n}){const{data:i}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/${t}/comments`,{body:n},{headers:{Authorization:"token "+e,Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}});return vr(i)}async putComment({accessToken:e,commentId:t,content:n}){const{data:i}=await this.$http.patch(`repos/${this.owner}/${this.repo}/issues/comments/${t}`,{body:n},{headers:{Authorization:"token "+e,Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}});return vr(i)}async deleteComment({accessToken:e,commentId:t}){const{status:n}=await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${t}`,{headers:{Authorization:"token "+e}});return 204===n}async getCommentReactions({accessToken:e,commentId:t}){const{data:n}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/comments/${t}`,{params:{timestamp:Date.now()},headers:{Authorization:"token "+e,Accept:"application/vnd.github.squirrel-girl-preview"}});return gr(n.reactions)}async postCommentReaction({accessToken:e,commentId:t,reaction:n}){const i=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/comments/${t}/reactions`,{content:yr(n)},{headers:{Authorization:"token "+e,Accept:"application/vnd.github.squirrel-girl-preview"}});return 200===i.status?this.deleteCommentReaction({accessToken:e,commentId:t,reactionId:i.data.id}):201===i.status}async deleteCommentReaction({accessToken:e,commentId:t,reactionId:n}){return 204===(await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${t}/reactions/${n}`,{headers:{Authorization:"token "+e,Accept:"application/vnd.github.squirrel-girl-preview"}})).status}}function Ir(e){return null===e?{username:"ghost",avatar:"https://avatars3.githubusercontent.com/u/10137?v=4",homepage:"https://github.com/ghost"}:{username:e.login,avatar:e.avatarUrl,homepage:e.url}}function Sr(e){return{id:e.number,title:e.title,content:e.body,link:e.url}}function _r(e){return{like:e.find(e=>"THUMBS_UP"===e.content).users.totalCount,unlike:e.find(e=>"THUMBS_DOWN"===e.content).users.totalCount,heart:e.find(e=>"HEART"===e.content).users.totalCount}}function Dr(e){return{id:e.id,content:e.bodyHTML,contentRaw:e.body,author:Ir(e.author),createdAt:e.createdAt,updatedAt:e.updatedAt,reactions:_r(e.reactionGroups)}}function Lr(e){return"like"===e?"THUMBS_UP":"unlike"===e?"THUMBS_DOWN":"heart"===e?"HEART":e}class kr{constructor({baseURL:e="https://github.com",owner:t,repo:n,labels:i,clientId:r,clientSecret:o,state:a,proxy:s}){if(void 0===o||void 0===s)throw new Error("clientSecret and proxy is required for GitHub V4");this.baseURL=e,this.owner=t,this.repo=n,this.labels=i,this.clientId=r,this.clientSecret=o,this.state=a,this.proxy=s,this._pageInfo={page:1,startCursor:null,endCursor:null,sort:null,perPage:null},this._issueNodeId=null,this.$http=dr.a.create({baseURL:"https://github.com"===e?"https://api.github.com":On(e,"api"),headers:{Accept:"application/vnd.github.v3+json"}}),this.$http.interceptors.response.use(e=>e.data.error?Promise.reject(e.data.error_description):e.data.errors?Promise.reject(e.data.errors[0].message):e)}get platform(){return{name:"GitHub",link:this.baseURL,version:"v4",meta:{reactable:!0,sortable:!0}}}redirectAuth(){window.location.href=xn(On(this.baseURL,"login/oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"public_repo",state:this.state})}async handleAuth(){const e=Vn(window.location.search);if(e.code){if(e.state!==this.state)return null;const t=e.code;delete e.code,delete e.state;const n=xn(Nn(window.location.href),e)+window.location.hash;window.history.replaceState(null,"",n);return await this.getAccessToken({code:t})}return null}async getAccessToken({code:e}){const t=On(this.baseURL,"login/oauth/access_token"),n="function"==typeof this.proxy?this.proxy(t):this.proxy,{data:i}=await this.$http.post(n,{client_id:this.clientId,client_secret:this.clientSecret,code:e},{headers:{Accept:"application/json"}});return i.access_token}async getUser({accessToken:e}){const{data:t}=await this.$http.post("graphql",{query:"query getUser {\n  viewer {\n    login\n    avatarUrl\n    url\n  }\n}"},{headers:{Authorization:"token "+e}});return Ir(t.data.viewer)}async getIssue({accessToken:e,issueId:t,issueTitle:n}){const i={};if(e&&(i.headers={Authorization:"token "+e}),!t){const e=[`"${n}"`,"in:title",`repo:${this.owner}/${this.repo}`,"is:public",...this.labels.map(e=>"label:"+e)].join(" "),{data:t}=await this.$http.post("graphql",{variables:{query:e},query:"query getIssueByTitle(\n  $query: String!\n) {\n  search(\n    query: $query\n    type: ISSUE\n    first: 20\n    ) {\n      nodes {\n      ... on Issue {\n        id\n        number\n        title\n        body\n        url\n      }\n    }\n  }\n}"},i),r=t.data.search.nodes.find(e=>e.title===n);return r?(this._issueNodeId=r.id,Sr(r)):null}try{const{data:e}=await this.$http.post("graphql",{query:`query getIssueById {\n  repository(owner: "${this.owner}", name: "${this.repo}") {\n    issue (number: ${t}) {\n      id\n      number\n      title\n      body\n      url\n    }\n  }\n}`},i);return this._issueNodeId=e.data.repository.issue.id,Sr(e.data.repository.issue)}catch(e){if(e.response&&404===e.response.status)return null;throw e}}async postIssue({accessToken:e,title:t,content:n}){const{data:i}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues`,{title:t,body:n,labels:this.labels},{headers:{Authorization:"token "+e}});return i.url=i.html_url,this._issueNodeId=i.node_id,Sr(i)}async getComments({accessToken:e,issueId:t,query:{page:n=1,perPage:i=10,sort:r="desc"}={}}){const o={};e&&(o.headers={Authorization:"token "+e}),null!==this._pageInfo.sort&&r!==this._pageInfo.sort&&(n=1);const{firstOrLast:a,afterOrBefore:s,cursor:l}=this._getQueryParams({page:n,sort:r}),{data:c}=await this.$http.post("graphql",{variables:{owner:this.owner,repo:this.repo,issueId:t,perPage:i},query:`query getComments(\n  $owner: String!\n  $repo: String!\n  $issueId: Int!\n  $perPage: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $issueId) {\n      comments(\n        ${a}: $perPage\n        ${null===s?"":`${s}: "${l}"`}\n      ) {\n        totalCount\n        pageInfo {\n          endCursor\n          startCursor\n        }\n        nodes {\n          id\n          body\n          bodyHTML\n          createdAt\n          updatedAt\n          author {\n            avatarUrl\n            login\n            url\n          }\n          reactionGroups {\n            users (first: 0) {\n              totalCount\n            }\n            content\n          }\n        }\n      }\n    }\n  }\n}`},o),u=c.data.repository.issue.comments;return"desc"===r&&u.nodes.reverse(),this._pageInfo={page:n,startCursor:u.pageInfo.startCursor,endCursor:u.pageInfo.endCursor,sort:r,perPage:i},{count:u.totalCount,page:n,perPage:i,data:u.nodes.map(Dr)}}async postComment({accessToken:e,content:t}){const{data:n}=await this.$http.post("graphql",{variables:{issueNodeId:this._issueNodeId,content:t},query:"mutation postComment(\n  $issueNodeId: ID!\n  $content: String!\n) {\n  addComment(\n    input: {\n      subjectId: $issueNodeId\n      body: $content\n    }\n  ) {\n    commentEdge {\n      node {\n        id\n        body\n        bodyHTML\n        createdAt\n        updatedAt\n        author {\n          avatarUrl\n          login\n          url\n        }\n        reactionGroups {\n          users (first: 0) {\n            totalCount\n          }\n          content\n        }\n      }\n    }\n  }\n}"},{headers:{Authorization:"token "+e}});return Dr(n.data.addComment.commentEdge.node)}async putComment({accessToken:e,commentId:t,content:n}){const{data:i}=await this.$http.post("graphql",{variables:{commentId:t,content:n},query:"mutation putComment(\n  $commentId: ID!,\n  $content: String!,\n) {\n  updateIssueComment(input: {\n    id: $commentId\n    body: $content\n  }) {\n    issueComment {\n      id\n      body\n      bodyHTML\n      createdAt\n      updatedAt\n      author {\n        avatarUrl\n        login\n        url\n      }\n      reactionGroups {\n        users (first: 0) {\n          totalCount\n        }\n        content\n      }\n    }\n  }\n}"},{headers:{Authorization:"token "+e}});return Dr(i.data.updateIssueComment.issueComment)}async deleteComment({accessToken:e,commentId:t}){return await this.$http.post("graphql",{variables:{commentId:t},query:"mutation deleteComment(\n  $commentId: ID!,\n) {\n  deleteIssueComment(input: {\n    id: $commentId\n  }) {\n    clientMutationId\n  }\n}"},{headers:{Authorization:"token "+e}}),!0}async getCommentReactions({accessToken:e,issueId:t,commentId:n}){const{firstOrLast:i,afterOrBefore:r,cursor:o}=this._getQueryParams(),{data:a}=await this.$http.post("graphql",{variables:{owner:this.owner,repo:this.repo,issueId:t,perPage:this._pageInfo.perPage},query:`query getComments(\n  $owner: String!\n  $repo: String!\n  $issueId: Int!\n  $perPage: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $issueId) {\n      comments(\n        ${i}: $perPage\n        ${null===r?"":`${r}: "${o}"`}\n      ) {\n        nodes {\n          id\n          reactionGroups {\n            users (first: 0) {\n              totalCount\n            }\n            content\n          }\n        }\n      }\n    }\n  }\n}`},{headers:{Authorization:"token "+e}});return _r(a.data.repository.issue.comments.nodes.find(e=>e.id===n).reactionGroups)}async postCommentReaction({accessToken:e,commentId:t,reaction:n}){return await this.$http.post("graphql",{variables:{commentId:t,content:Lr(n)},query:"mutation postCommentReaction(\n  $commentId: ID!,\n  $content: ReactionContent!,\n) {\n  addReaction(input: {\n    subjectId: $commentId\n    content: $content\n  }) {\n    reaction {\n      databaseId\n    }\n  }\n}"},{headers:{Authorization:"token "+e}}),!0}_getQueryParams({page:e=this._pageInfo.page,sort:t=this._pageInfo.sort}={}){let n,i,r;return 1===e?(n="asc"===t?"first":"last",i=null,r=null):"asc"===t?e>this._pageInfo.page?(n="first",i="after",r=this._pageInfo.endCursor):(n="last",i="before",r=this._pageInfo.startCursor):e>this._pageInfo.page?(n="last",i="before",r=this._pageInfo.startCursor):(n="first",i="after",r=this._pageInfo.endCursor),{firstOrLast:n,afterOrBefore:i,cursor:r}}}function wr(e){return{username:e.username,avatar:e.avatar_url,homepage:e.web_url}}function Tr(e){return{id:e.iid,title:e.title,content:e.description,link:e.web_url}}function Cr(e){return{id:e.id,content:e.body_html||"",contentRaw:e.body,author:wr(e.author),createdAt:e.created_at,updatedAt:e.updated_at,reactions:e.reactions}}function Pr(e){return{like:e.filter(e=>"thumbsup"===e.name).length,unlike:e.filter(e=>"thumbsdown"===e.name).length,heart:e.filter(e=>"heart"===e.name).length}}function xr(e){return"like"===e?"thumbsup":"unlike"===e?"thumbsdown":e}class Or{constructor({baseURL:e="https://gitlab.com",owner:t,repo:n,labels:i,clientId:r,state:o}){this.baseURL=e,this.owner=t,this.repo=n,this.labels=i,this.clientId=r,this.state=o,this._encodedRepo=encodeURIComponent(`${this.owner}/${this.repo}`),this.$http=dr.a.create({baseURL:On(e,"api/v4"),headers:{Accept:"application/json"}})}get platform(){return{name:"GitLab",link:this.baseURL,version:"v4",meta:{reactable:!0,sortable:!0}}}redirectAuth(){window.location.href=xn(On(this.baseURL,"oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,response_type:"token",state:this.state})}async handleAuth(){const e=Vn(window.location.hash.slice(1));if(!e.access_token||e.state!==this.state)return null;const t=e.access_token;delete e.access_token,delete e.token_type,delete e.expires_in,delete e.state;const n=Pn(e),i=n?"#"+n:"",r=`${Nn(window.location.href)}${window.location.search}${i}`;return window.history.replaceState(null,"",r),t}async getUser({accessToken:e}){const{data:t}=await this.$http.get("user",{headers:{Authorization:"Bearer "+e}});return wr(t)}async getIssue({accessToken:e,issueId:t,issueTitle:n}){const i={};if(e&&(i.headers={Authorization:"Bearer "+e}),!t){i.params={labels:this.labels.join(","),order_by:"created_at",sort:"asc",search:n};const{data:e}=await this.$http.get(`projects/${this._encodedRepo}/issues`,i);return e.map(Tr).find(e=>e.title===n)||null}try{const{data:e}=await this.$http.get(`projects/${this._encodedRepo}/issues/${t}`,i);return Tr(e)}catch(e){if(e.response&&404===e.response.status)return null;throw e}}async postIssue({accessToken:e,title:t,content:n}){const{data:i}=await this.$http.post(`projects/${this._encodedRepo}/issues`,{title:t,description:n,labels:this.labels.join(",")},{headers:{Authorization:"Bearer "+e}});return Tr(i)}async getComments({accessToken:e,issueId:t,query:{page:n=1,perPage:i=10,sort:r="desc"}={}}){const o={params:{page:n,per_page:i,order_by:"created_at",sort:r}};e&&(o.headers={Authorization:"Bearer "+e});const a=await this.$http.get(`projects/${this._encodedRepo}/issues/${t}/notes`,o),s=a.data,l=[];for(const n of s)l.push((async()=>{n.body_html=await this.getMarkdownContent({accessToken:e,contentRaw:n.body})})()),l.push((async()=>{n.reactions=await this.getCommentReactions({accessToken:e,issueId:t,commentId:n.id})})());return await Promise.all(l),{count:Number(a.headers["x-total"]),page:Number(a.headers["x-page"]),perPage:Number(a.headers["x-per-page"]),data:s.map(Cr)}}async postComment({accessToken:e,issueId:t,content:n}){const{data:i}=await this.$http.post(`projects/${this._encodedRepo}/issues/${t}/notes`,{body:n},{headers:{Authorization:"Bearer "+e}});return Cr(i)}async putComment({accessToken:e,issueId:t,commentId:n,content:i}){const{data:r}=await this.$http.put(`projects/${this._encodedRepo}/issues/${t}/notes/${n}`,{body:i},{headers:{Authorization:"Bearer "+e}}),[o,a]=await Promise.all([this.getMarkdownContent({accessToken:e,contentRaw:r.body}),this.getCommentReactions({accessToken:e,issueId:t,commentId:r.id})]);return r.body_html=o,r.reactions=a,Cr(r)}async deleteComment({accessToken:e,issueId:t,commentId:n}){const{status:i}=await this.$http.delete(`projects/${this._encodedRepo}/issues/${t}/notes/${n}`,{headers:{Authorization:"Bearer "+e}});return 204===i}async getCommentReactions({accessToken:e,issueId:t,commentId:n}){const{data:i}=await this.$http.get(`projects/${this._encodedRepo}/issues/${t}/notes/${n}/award_emoji`,{headers:{Authorization:"Bearer "+e}});return Pr(i)}async postCommentReaction({issueId:e,commentId:t,reaction:n,accessToken:i}){try{return 201===(await this.$http.post(`projects/${this._encodedRepo}/issues/${e}/notes/${t}/award_emoji`,{name:xr(n)},{headers:{Authorization:"Bearer "+i}})).status}catch(e){if(e.response&&404===e.response.status)return!1;throw e}}async getMarkdownContent({accessToken:e,contentRaw:t}){const n={};e&&(n.headers={Authorization:"Bearer "+e});const{data:i}=await this.$http.post("markdown",{text:t,gfm:!0},n);return i.html}}function Ar(e){return{username:e.nickname,avatar:e.links.avatar.href,homepage:e.links.html.href}}function Er(e){return{id:e.id,title:e.title,content:e.content.raw,link:e.links.html.href}}function Fr(e){return{id:e.id,content:e.content.html,contentRaw:e.content.raw,author:Ar(e.user),createdAt:e.created_on,updatedAt:e.updated_on,reactions:null}}class Nr{constructor({baseURL:e="https://bitbucket.org",owner:t,repo:n,clientId:i,state:r}){this.baseURL=e,this.owner=t,this.repo=n,this.clientId=i,this.state=r,this.$http=dr.a.create({baseURL:"https://api.bitbucket.org/2.0",headers:{Accept:"application/json"}})}get platform(){return{name:"Bitbucket",link:this.baseURL,version:"v2",meta:{reactable:!1,sortable:!0}}}redirectAuth(){window.location.href=xn(On(this.baseURL,"site/oauth2/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,response_type:"token",state:this.state})}async handleAuth(){const e=Vn(window.location.hash.slice(1));if(!e.access_token||e.state!==this.state)return null;const t=e.access_token;delete e.access_token,delete e.token_type,delete e.expires_in,delete e.state,delete e.scopes;const n=Pn(e),i=n?"#"+n:"",r=`${Nn(window.location.href)}${window.location.search}${i}`;return window.history.replaceState(null,"",r),t}async getUser({accessToken:e}){const{data:t}=await this.$http.get("user",{headers:{Authorization:"Bearer "+e}});return Ar(t)}async getIssue({accessToken:e,issueId:t,issueTitle:n}){const i={};if(e&&(i.headers={Authorization:"Bearer "+e}),!t){i.params={sort:"created_on",q:`title="${n}"`,timestamp:Date.now()};const{data:e}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues`,i);return e.size>0?Er(e.values[0]):null}try{i.params={timestamp:Date.now()};const{data:e}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues/${t}`,i);return Er(e)}catch(e){if(e.response&&404===e.response.status)return null;throw e}}async postIssue({accessToken:e,title:t,content:n}){const{data:i}=await this.$http.post(`repositories/${this.owner}/${this.repo}/issues`,{title:t,content:{raw:n},priority:"trivial",kind:"task"},{headers:{Authorization:"Bearer "+e}});return i.links.html={href:On(this.baseURL,`${this.owner}/${this.repo}/issues/${i.id}`)},Er(i)}async getComments({accessToken:e,issueId:t,query:{page:n=1,perPage:i=10,sort:r="desc"}={}}){const o={params:{page:n,pagelen:i,sort:"desc"===r?"-created_on":"created_on",timestamp:Date.now()}};e&&(o.headers={Authorization:"Bearer "+e});const{data:a}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues/${t}/comments`,o);return{count:a.size,page:a.page,perPage:a.pagelen,data:a.values.filter(e=>null!==e.content.raw).map(Fr)}}async postComment({accessToken:e,issueId:t,content:n}){const{data:i}=await this.$http.post(`repositories/${this.owner}/${this.repo}/issues/${t}/comments`,{content:{raw:n}},{headers:{Authorization:"Bearer "+e}});return Fr(i)}async putComment({accessToken:e,issueId:t,commentId:n,content:i}){const{data:r}=await this.$http.put(`repositories/${this.owner}/${this.repo}/issues/${t}/comments/${n}`,{content:{raw:i}},{headers:{Authorization:"Bearer "+e}});return Fr(r)}async deleteComment({accessToken:e,issueId:t,commentId:n}){const{status:i}=await this.$http.delete(`repositories/${this.owner}/${this.repo}/issues/${t}/comments/${n}`,{headers:{Authorization:"Bearer "+e}});return 204===i}async getCommentReactions(e){throw new Error("501 Not Implemented")}async postCommentReaction(e){throw new Error("501 Not Implemented")}}function Vr(e){return{username:e.login,avatar:e.avatar_url,homepage:e.html_url}}function jr(e){return{id:e.number,title:e.title,content:e.body,link:e.html_url}}function Rr(e){return{id:e.id,content:e.body_html||"",contentRaw:e.body,author:Vr(e.user),createdAt:e.created_at,updatedAt:e.updated_at||"",reactions:null}}class Qr{constructor({baseURL:e="https://gitee.com",owner:t,repo:n,labels:i,clientId:r,clientSecret:o,state:a,proxy:s}){if(void 0===o||void 0===s)throw new Error("clientSecret and proxy is required for Gitee V5");this.baseURL=e,this.owner=t,this.repo=n,this.labels=i,this.clientId=r,this.clientSecret=o,this.state=a,this.proxy=s,this.$http=dr.a.create({baseURL:On(e,"api/v5")}),this.$http.interceptors.response.use(e=>e,e=>(e.response.data&&e.response.data.message&&(e.message=e.response.data.message),Promise.reject(e)))}get platform(){return{name:"Gitee",link:this.baseURL,version:"v5",meta:{reactable:!1,sortable:!1}}}redirectAuth(){window.location.href=xn(On(this.baseURL,"oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"user_info issues notes",response_type:"code",state:this.state})}async handleAuth(){const e=Vn(window.location.search);if(e.code){if(e.state!==this.state)return null;const t=e.code;delete e.code,delete e.state;const n=xn(Nn(window.location.href),e)+window.location.hash;window.history.replaceState(null,"",n);return await this.getAccessToken({code:t})}return null}async getAccessToken({code:e}){const t=On(this.baseURL,"oauth/token"),n="function"==typeof this.proxy?this.proxy(t):this.proxy,{data:i}=await this.$http.post(n,{client_id:this.clientId,client_secret:this.clientSecret,code:e,grant_type:"authorization_code",redirect_uri:window.location.href});return i.access_token}async getUser({accessToken:e}){const{data:t}=await this.$http.get("user",{params:{access_token:e}});return Vr(t)}async getIssue({accessToken:e,issueId:t,issueTitle:n}){const i={params:{timestamp:Date.now()}};if(e&&(i.params.access_token=e),!t){Object.assign(i.params,{q:n,repo:`${this.owner}/${this.repo}`,per_page:1});const{data:e}=await this.$http.get("search/issues",i);return e.map(jr).find(e=>e.title===n)||null}try{const{data:e}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${t}`,i);return jr(e)}catch(e){if(e.response&&404===e.response.status)return null;throw e}}async postIssue({accessToken:e,title:t,content:n}){const{data:i}=await this.$http.post(`repos/${this.owner}/issues`,{access_token:e,repo:this.repo,title:t,body:n,labels:this.labels.join(",")});return jr(i)}async getComments({accessToken:e,issueId:t,query:{page:n=1,perPage:i=10}={}}){const r={params:{page:n,per_page:i,timestamp:Date.now()},headers:{Accept:["application/vnd.gitee.html+json"]}};e&&(r.params.access_token=e);const o=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${t}/comments`,r);return{count:Number(o.headers.total_count),page:n,perPage:i,data:o.data.map(Rr)}}async postComment({accessToken:e,issueId:t,content:n}){const{data:i}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/${t}/comments`,{body:n,access_token:e},{headers:{Accept:["application/vnd.gitee.html+json"]}});return Rr(i)}async putComment({accessToken:e,commentId:t,content:n}){const{data:i}=await this.$http.patch(`repos/${this.owner}/${this.repo}/issues/comments/${t}`,{body:n,access_token:e},{headers:{Accept:["application/vnd.gitee.html+json"]}});return Rr(i)}async deleteComment({accessToken:e,commentId:t}){const{status:n}=await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${t}`,{params:{access_token:e}});return 204===n}async getCommentReactions(e){throw new Error("501 Not Implemented")}async postCommentReaction(e){throw new Error("501 Not Implemented")}}n(337);var $r={name:"Vssue",components:{VssueComponent:pr},props:{options:{type:Object,default:()=>({})}},data:()=>({key:"key",platformOptions:{github:br,"github-v4":kr,gitlab:Or,bitbucket:Nr,gitee:Qr}}),computed:{vssueOptions(){const{platformOptions:e,options:t}=this,n=e[t.platform];return{...t,api:n}}},watch:{$route(e,t){e.path!==t.path&&setTimeout(()=>{this.key="reco-"+(new Date).getTime()},300)}}},Br=(n(338),{components:{Valine:vn,Vssue:Object($t.a)($r,(function(){return(0,this._self._c)("VssueComponent",{key:this.key,staticClass:"vssue-wrapper",attrs:{options:this.vssueOptions}})}),[],!1,null,null,null).exports},props:{isShowComments:{type:Boolean,default:!0}},data:()=>({commentsOptions:{}}),computed:{solution(){const{commentsOptions:{solution:e},$themeConfig:{valineConfig:t,vssueConfig:n},$themeLocaleConfig:{valineConfig:i,vssueConfig:r}}=this;let o="";return void 0!==e?o=e:void 0!==i||void 0!==t?o="valine":void 0===r&&void 0===n||(o="vssue"),o},options(){const{commentsOptions:{options:e},$themeConfig:{valineConfig:t,vssueConfig:n},$themeLocaleConfig:{valineConfig:i,vssueConfig:r}}=this;return void 0!==e?e:void 0!==i||void 0!==t?i||t:void 0!==r||void 0!==n?r||n:null},componentName(){const e=this.solution;return"valine"===e?"Valine":"vssue"===e?"Vssue":""}},mounted(){this.$themeConfig.commentsSolution=this.solution}}),Mr=Object($t.a)(Br,(function(){var e=this._self._c;return e("div",{directives:[{name:"show",rawName:"v-show",value:this.isShowComments,expression:"isShowComments"}],staticClass:"comments-wrapper"},[e("ClientOnly",[e(this.componentName,{tag:"component",attrs:{options:this.options}})],1)],1)}),[],!1,null,null,null).exports,Gr={props:{idVal:String,numStyle:Object,flagTitle:{type:String,default:"Your Article Title"}},methods:{getIdVal(e){const t=this.$site.base;return t.slice(0,t.length-1)+e}}},qr=Object($t.a)(Gr,(function(){var e=this._self._c;return e("span",{staticClass:"leancloud-visitors",attrs:{id:this.getIdVal(this.idVal),"data-flag-title":this.flagTitle}},[e("a",{staticClass:"leancloud-visitors-count",style:this.numStyle})])}),[],!1,null,null,null).exports,zr=(n(339),{tags:{},categories:{},timeline:{}});class Wr{constructor(e,t){this._metaMap=Object.assign({},e),Object.keys(this._metaMap).forEach(e=>{const{pageKeys:n}=this._metaMap[e];this._metaMap[e].pages=n.map(e=>function(e,t){for(let n=0;n<e.length;n++){const i=e[n];if(i.key===t)return i}return{path:"",frontmatter:{}}}(t,e))})}get length(){return Object.keys(this._metaMap).length}get map(){return this._metaMap}get pages(){return this.list}get list(){return this.toArray()}toArray(){const e=[];return Object.keys(this._metaMap).forEach(t=>{const{pages:n,path:i}=this._metaMap[t];e.push({name:t,pages:n,path:i})}),e}getItemByName(e){return this._metaMap[e]}}var Ur=n(133);const Hr=n.n(Ur)()("plugin-blog:pagination");class Zr{constructor(e,t,n){Hr("pagination",e);const{pages:i,prevText:r,nextText:o}=e,{path:a}=n;this._prevText=r,this._nextText=o;for(let e=0,t=i.length;e<t;e++){if(i[e].path===a){this.paginationIndex=e;break}}this.paginationIndex||(this.paginationIndex=0),this._paginationPages=i,this._currentPage=i[this.paginationIndex],this._matchedPages=t.filter(t=>e.filter(t,e.id,e.pid)).sort(e.sorter)}setIndexPage(e){this._indexPage=e}get length(){return this._paginationPages.length}get pages(){const[e,t]=this._currentPage.interval;return this._matchedPages.slice(e,t+1)}get hasPrev(){return 0!==this.paginationIndex}get prevLink(){return this.hasPrev?this.paginationIndex-1==0&&this._indexPage?this._indexPage:this._paginationPages[this.paginationIndex-1].path:null}get hasNext(){return this.paginationIndex!==this.length-1}get nextLink(){return this.hasNext?this._paginationPages[this.paginationIndex+1].path:null}get prevText(){return this._prevText}get nextText(){return this._nextText}getSpecificPageLink(e){return this._paginationPages[e].path}}const Jr=new class{constructor(e){this.paginations=e}get pages(){return i.b.$vuepress.$get("siteData").pages}getPagination(e,t,n){Hr("id",t),Hr("pid",e);const i=this.paginations.filter(n=>n.id===t&&n.pid===e)[0];return new Zr(i,this.pages,n)}}([]);var Kr={comment:{enabled:!1,service:""},email:{enabled:!1},feed:{rss:!1,atom:!1,json:!1}};n(342);function Yr(e){const t=document.documentElement.getBoundingClientRect(),n=e.getBoundingClientRect();return{x:n.left-t.left,y:n.top-t.top}}var Xr=[({Vue:e,siteData:t,isServer:n,router:i})=>{e.mixin(Jt),e.mixin(on),Object(an.c)(i),Object(an.a)(i)},{},({Vue:e})=>{e.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},({Vue:e})=>{e.component("BackToTop",ln)},({Vue:e})=>{e.component("Pagation",mn)},({Vue:e})=>{e.mixin({computed:{$perPage:()=>10}})},({Vue:e})=>{e.component("Comments",Mr),e.component("AccessNumber",qr)},{},({Vue:e})=>{const t=Object.keys(zr).map(e=>{const t=zr[e],n="$"+e;return{[n](){const{pages:e}=this.$site;return new Wr(t,e)},["$current"+(e.charAt(0).toUpperCase()+e.slice(1))](){const e=this.$route.meta.id;return this[n].getItemByName(e)}}}).reduce((e,t)=>(Object.assign(e,t),e),{});t.$frontmatterKey=function(){const e=this["$"+this.$route.meta.id];return e||null},e.mixin({computed:t})},({Vue:e})=>{e.mixin({computed:{$pagination(){return this.$route.meta.pid&&this.$route.meta.id?this.$getPagination(this.$route.meta.pid,this.$route.meta.id):null}},methods:{$getPagination(e,t){return t=t||e,Jr.getPagination(e,t,this.$route)}}})},({Vue:e})=>{const t={$service:()=>Kr};e.mixin({computed:t})},({Vue:e,router:t})=>{t.options.scrollBehavior=(t,n,i)=>{if(i)return window.scrollTo({top:i.y,behavior:"smooth"});if(t.hash){if(e.$vuepress.$get("disableScrollBehavior"))return!1;const n=document.querySelector(t.hash);return!!n&&window.scrollTo({top:Yr(n).y,behavior:"smooth"})}return window.scrollTo({top:0,behavior:"smooth"})}},({Vue:e})=>{e.component("CodeCopy",Bt)}],eo=["BackToTop"];class to extends class{constructor(){this.store=new i.b({data:{state:{}}})}$get(e){return this.store.state[e]}$set(e,t){i.b.set(this.store.state,e,t)}$emit(...e){this.store.$emit(...e)}$on(...e){this.store.$on(...e)}}{}Object.assign(to.prototype,{getPageAsyncComponent:lt,getLayoutAsyncComponent:ct,getAsyncComponent:ut,getVueComponent:pt});var no={install(e){const t=new to;e.$vuepress=t,e.prototype.$vuepress=t}};function io(e,t){const n=t.toLowerCase();return e.options.routes.some(e=>e.path.toLowerCase()===n)}var ro={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(e){const t=this.pageKey||this.$parent.$page.key;return dt("pageKey",t),i.b.component(t)||i.b.component(t,lt(t)),i.b.component(t)?e(t):e("")}},oo={functional:!0,props:{slotKey:String,required:!0},render:(e,{props:t,slots:n})=>e("div",{class:["content__"+t.slotKey]},n()[t.slotKey])},ao={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},so=(n(343),n(344),Object($t.a)(ao,(function(){var e=this._self._c;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),lo={functional:!0,render(e,{parent:t,children:n}){if(t._isMounted)return n;t.$once("hook:mounted",()=>{t.$forceUpdate()})}};i.b.config.productionTip=!1,i.b.use(We),i.b.use(no),i.b.mixin(function(e,t,n=i.b){!function(e){e.locales&&Object.keys(e.locales).forEach(t=>{e.locales[t].path=t});Object.freeze(e)}(t),n.$vuepress.$set("siteData",t);const r=new(e(n.$vuepress.$get("siteData"))),o=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(r)),a={};return Object.keys(o).reduce((e,t)=>(t.startsWith("$")&&(e[t]=o[t].get),e),a),{computed:a}}(e=>class{setPage(e){this.__page=e}get $site(){return e}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:e={}}=this.$site;let t,n;for(const i in e)"/"===i?n=e[i]:0===this.$page.path.indexOf(i)&&(t=e[i]);return t||n||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:e}=this.$page.frontmatter;return"string"==typeof e&&e}get $title(){const e=this.$page,{metaTitle:t}=this.$page.frontmatter;if("string"==typeof t)return t;const n=this.$siteTitle,i=e.frontmatter.home?null:e.frontmatter.title||e.title;return n?i?i+" | "+n:n:i||"VuePress"}get $description(){const e=function(e){if(e){const t=e.filter(e=>"description"===e.name)[0];if(t)return t.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(e,t){for(let n=0;n<e.length;n++){const i=e[n];if(i.path.toLowerCase()===t.toLowerCase())return i}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},Ht)),i.b.component("Content",ro),i.b.component("ContentSlotsDistributor",oo),i.b.component("OutboundLink",so),i.b.component("ClientOnly",lo),i.b.component("Layout",ct("Layout")),i.b.component("NotFound",ct("NotFound")),i.b.prototype.$withBase=function(e){const t=this.$site.base;return"/"===e.charAt(0)?t+e.slice(1):e},window.__VUEPRESS__={version:"1.9.10",hash:"60eabe1"},async function(e){const t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Ht.routerBase||Ht.base,n=new We({base:t,mode:"history",fallback:!1,routes:Ut,scrollBehavior:(e,t,n)=>n||(e.hash?!i.b.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})});!function(e){e.beforeEach((t,n,i)=>{if(io(e,t.path))i();else if(/(\/|\.html)$/.test(t.path))if(/\/$/.test(t.path)){const n=t.path.replace(/\/$/,"")+".html";io(e,n)?i(n):i()}else i();else{const n=t.path+"/",r=t.path+".html";io(e,r)?i(r):io(e,n)?i(n):i()}})}(n);const r={};try{await Promise.all(Xr.filter(e=>"function"==typeof e).map(t=>t({Vue:i.b,options:r,router:n,siteData:Ht,isServer:e})))}catch(e){console.error(e)}return{app:new i.b(Object.assign(r,{router:n,render:e=>e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},eo.map(t=>e(t)))])})),router:n}}(!1).then(({app:e,router:t})=>{t.onReady(()=>{e.$mount("#app")})})}]);